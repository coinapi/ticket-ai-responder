,fname,text
0,i.io naas api#network,"i.io naas api#network.   NaaS API | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumNaaS APIOn this pageNaaS APIIntroduction​The NaaS API is a software product that provides a set of tools for developers to interact with the blockchain.It make it easier to interface with blockchains, allowing developers to concentrate on creating apps rather than maintaining the supporting infrastructure. Technical design​We provide public nodes that act as gateways to popular blockchains, including Bitcoin, Ethereum and more. These nodes are accessible through a range of HTTP API endpoints, allowing developers and applications to interact with blockchain data effortlessly.For a full list of available endpoints click here.Essentials​Node serves as both a server and software component responsible for exposing an API to interact with the blockchain.Chain or Blockchain, is a distributed and immutable ledger that records all transactions across a decentralized network.Network refers to the entire ecosystem of blockchain participants, including nodes, users, and miners, connected via a specific blockchain protocol.Endpoints​The list of endpoints is available in the documentation for each exchange.Getting started​To begin using the NaaS API, you'll need:CoinAPI key (obtainable by signing up on our website).Access an operational Node via any of our endpoints Familiarity with HTTP & JSON-RPCFamiliarity with the methods exposed by the blockchain you want to interact with such as Bitcoin, Ethereum or any other of your choiceGeneral information​NaaS API is dedicated to developers who wish to integrate their applications with the various blockchains and their ecosystems. The NaaS API facilitates interaction with nodes connected to different blockchains, allowing access to on-chain data and enabling the transmission of transactions onto the network. JSON-RPC Standard​The NaaS API operates on the JSON-RPC protocol. JSON-RPC is a lightweight and stateless remote procedure call (RPC) protocol widely used in communicating with blockchain nodes. All queries and responses in this API are formatted in JSON.Authentication & Security​Depending on your preference, you can either utilize an API key or enhance security by combining an API key with JWT token.For more details go to our Authentication section.Best PracticesNever expose your API key in a client-side application or a public code repository. Always keep it securely on your server.Always communicate with the CoinAPI NaaS API over HTTPS (SSL/TLS) to encrypt data transmitted between your application and CoinAPI's serversWhen possible, avoid sending personally identifiable information (PII)Monitor for updates as our API can evolve, regularly check for updates to ensure compatibilitydangerOnce your API key falls into the wrong hands, it can be used to make requests within your subscription.infoIf your key has been compromised, you have the option to delete it at any time and generate a new oneLimits​Your Subscription might have rate limits in place. Ensure you're making requests within the allowed limits to avoid being interruption in access.Http Status Codes​When the status code is not 200, it indicates a lack of response from the node.Even if a 200 status code is received, there may still be a JSON-RPC error at the node level.A status code different from 200 implies that the response is not a JSON-RPC response.Successful JSON-RPC Responses​200 OK, valid response:{ ""jsonrpc"": ""2.0"", ""id"": ""tracking-id-001"", ""result"": ""0x11baedc""}JSON-RPC Error Responses​200 OK, includes error code from the node:{ ""jsonrpc"": ""2.0"", ""id"": ""tracking-id-001"", ""error"": {  ""code"": -32602,  ""message"": ""too many arguments, want at most 0"" }}Non-JSON-RPC Error Responses (other than 200)​401, unauthorized:{ ""error"": ""Invalid API key""}Possible HTTP status codes and their meaning are listed below:Status CodeMeaning200Your request has been successfully processed by the server. However, it's essential to examine the response data as there might be JSON-RPC errors within the node's response.400Your request is malformed or contains incorrect parameters. There is an issue with the request itself.401Your request lacks proper authentication. It is typically due to an incorrect API key.403Your API key lacks the necessary permissions to access the requested resource.429Your request has exceeded the rate limits associated with your API key.550Server cannot provide the requested data at the moment. This may occur when requesting specific single items that are temporarily unavailable.Making API Calls​Json-RPC provides a structured and straightforward approach to sending and receiving data, making it accessible for developers using a wide range of programming languages and tools.curlYou can use the curl command-line tool to make requests. Here's an example of how to make a POST request to the Ethereum JSON-RPC API using curl:curl -X POST \ ""https://ethereum-mainnet-geth-archive.node.coinapi.io?apiKey=YOUR_API_KEY"" \ -H ""Content-Type: application/json"" \ -d '{ ""jsonrpc"": ""2.0"", ""method"": ""eth_getTransactionReceipt"", ""params"": [""0x2444a649cd7fcd50ccb8c52c4159515fdf311eeb5dc02cf1b2c397b833fde012""], ""id"": 1 }'web3.jsIf you prefer to use JavaScript and the web3.js library to interact with NaaS API, you can make request like this:const axios = require('axios');const url = 'https://ethereum-mainnet-geth-archive.node.coinapi.io?apiKey=YOUR_API_KEY';const data = { jsonrpc: '2.0', method: 'eth_getTransactionReceipt', params: ['0x2444a649cd7fcd50ccb8c52c4159515fdf311eeb5dc02cf1b2c397b833fde012'], id: 1,};axios.post(url, data, { headers: { 'Content-Type': 'application/json', },}) .then(response => { console.log(response.data); }) .catch(error => { console.error(error); });PythonYou can also use Python to make HTTP POST requests to the NaaS API using the requests library. Here's an example:import requestsurl = 'https://ethereum-mainnet-geth-archive.node.coinapi.io?apiKey=YOUR_API_KEY'data = { 'jsonrpc': '2.0', 'method': 'eth_getTransactionReceipt', 'params': ['0x2444a649cd7fcd50ccb8c52c4159515fdf311eeb5dc02cf1b2c397b833fde012'], 'id': 1,}headers = {'Content-Type': 'application/json'}response = requests.post(url, json=data, headers=headers)if response.status_code == 200: result = response.json() print(result)else: print(f""Request failed with status code {response.status_code}"")Batch requests | Multi-Call​Multiple requests can be sent simultaneously in an array when using the NaaS API, allowing for efficient handling of multiple operations. In such a scenario, each request within the array is processed before all the requests are returned.When requests are sent in a batch, they will only be returned after every request has been processed. This behavior is particularly useful when you need to perform multiple operations and want to wait for all of them to complete before proceeding.Example of a Batch Request[ {""jsonrpc"": ""2.0"", ""id"": ""tracking-id-001"", ""method"": ""eth_blockNumber"", ""params"": []}, {""jsonrpc"": ""2.0"", ""id"": ""tracking-id-002"", ""method"": ""eth_chainId"", ""params"": []}]In this batch request, we have two distinct JSON-RPC requests bundled togethe:The first request, identified by tracking-id-001 invokes the eth_blockNumber, aiming to retrieve the current block number.The second request, with the identifier tracking-id-002 calls the eth_chainId to fetch the current chain ID.Response to the Batch Request[ {  ""jsonrpc"": ""2.0"",  ""id"": ""tracking-id-001"",  ""result"": ""0x11bb158"" }, {  ""jsonrpc"": ""2.0"",  ""id"": ""tracking-id-002"",  ""result"": ""0x1"" }]Data Streaming​TODOSupport​If you encounter any issues or have further questions regarding the Ethereum API, please contact our support team at [email protected].Summary​With the NaaS API, you can fully leverage the potential of the different blockchains in your applications. This documentation covers all the necessary information to start utilizing this API and creating innovative blockchain-based solutions. Was this section helpful?12345NextAuthenticationIntroductionTechnical designEssentialsEndpointsGetting startedGeneral informationJSON-RPC StandardAuthentication & SecurityLimitsHttp Status CodesMaking API CallsBatch requests | Multi-CallData StreamingSupportSummaryCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api#network)"
1,i.io cdn cgi l email protection#82f1f7f2f2edf0f6c2e1edebece3f2ebacebed,"i.io cdn cgi l email protection#82f1f7f2f2edf0f6c2e1edebece3f2ebacebed.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 8aad289ca9dc4137 •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#82f1f7f2f2edf0f6c2e1edebece3f2ebacebed)"
2,i.io general faq general Can I participate in the CoinAPI GitHub repository,"i.io general faq general Can I participate in the CoinAPI GitHub repository.   Can I participate in the CoinAPI GitHub repository? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralCan I participate in the CoinAPI GitHub repository?Can I participate in the CoinAPI GitHub repository?Yes, please do!Sign in on the GitHubFork our main GitHub repository: https://github.com/coinapi/coinapi-sdkWork on the changes and push them into your forked repositoryWhen you are ready to share the changes with us. Create ""Pull Request” to our main repository with a short description of the changes.Was this section helpful?12345PreviousCan I have multiple subscriptions?NextCan I use the API commercially to show prices on my website?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/Can-I-participate-in-the-CoinAPI-GitHub-repository)"
3,i.io general faq api documenting connectivity issues,"i.io general faq api documenting connectivity issues.   Documenting Connectivity issues | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer EMS Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What is the rate limit for EMS Trading API?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQAPIDocumenting Connectivity issuesDocumenting Connectivity issuesIf you are having any connection issues, please execute the steps below:Make sure there is no ongoing incident related to the problem on our Status Page[2].If your endpoint is not an IP address then, check if your DNS resolving the domain name to which you are connecting, e.g., using the dig command:dig [domain name here]The correct response will look like this:; <<>> DiG 9.16.1-Ubuntu <<>> fix.coinapi.io;; global options: +cmd;; Got answer:;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 57297;; flags: qr rd ra; QUERY: 1, ANSWER: 5, AUTHORITY: 0, ADDITIONAL: 1;; OPT PSEUDOSECTION:; EDNS: version: 0, flags:; udp: 65494;; QUESTION SECTION:;fix.coinapi.io. IN A;; ANSWER SECTION:fix.coinapi.io. 21599 IN CNAME api.coinapi.io.api.coinapi.io. 7199 IN CNAME api.coinapi.net.api.coinapi.net. 3 IN CNAME hdc1-enc-02.coinapi.net.hdc1-enc-02.coinapi.net. 3 IN CNAME hdc1-enc-02-bay-08.coinapi.net.hdc1-enc-02-bay-08.coinapi.net. 3598 IN A 185.204.225.28;; Query time: 76 msec;; SERVER: 127.0.0.53#53(127.0.0.53);; WHEN: Mon Jun 14 14:21:40 UTC 2021;; MSG SIZE rcvd: 165The common incorrect response will not include the ANSWER SECTION that implicates a problem on the DNS side.If this step fails, then analyze DNS issues on our side, and if your team determines that the problem is on our side, please go to the last step directly.Try to establish a TCP connection to the domain name or IP Address: nc -v [IP address or hostname] -p [port number]The correct response will look like this: terminal:~#nc -v fix.coinapi.io 3302 Connection to fix.coinapi.io 3302 port [tcp/*] succeeded!The incorrect response will display why your client could not initiate the connection.If this step fails, then analyze TCP connection issues on our side, and if your team determines that the problem is on our side, please go to the last step directly.Switch to the API endpoint without encryption, if possible, and check if the problem still exists. If the problem exists only for encrypted/unencrypted connection type, this is valuable information from the analysis perspective and must be included in the final case submission.Capture raw traffic data that includes a problem in the PCAP file format, use one of the commands below based on the protocol:REST API: tcpdump -i [your interface name] port 80 or port 443 -w dump.date +""%Y%m%dT%H%M%S"".cap WebSocket API: tcpdump -i [your interface name] port 80 or port 443 -w dump.date +""%Y%m%dT%H%M%S"".cap FIX API: tcpdump -i [your interface name] port 3302 or port 3303 -w dump.date +""%Y%m%dT%H%M%S"".cap Analyze the PCAP file with your team and make sure that all the conditions below are satisfied:The problem is on the CoinAPI side.The problem it's caused by your client misbehaving, acting not according to our product documentation or best industry practices.CoinAPI is on the other side of the connection. We are not accepting the dumps where our device is not directly on the other side of the connection by looking at the transport layer. The engineer must capture the dump from behind any DNAT gateways or internal proxy servers.Use the ""API issues"" ticket form from our Support Portal[1], make sure that:The problem is described accurately.All the timestamps are in the UTC timezone.The output of the DNS check is included if performed.The output of the TCP check (nc command) is included if performed.The output of your internal analysis is included in the case, along with the PCAP dump file.Set the appropriate priority, reflecting the current impact of this specific problem on the company:I. Urgent (Production system down)II. High (Production system impaired)III. Normal (System impaired) IV. Low (General guidance) References:[1] https://support.coinapi.io/[2] https://status.coinapi.io/Was this section helpful?12345PreviousWhy do some symbols have additional prefix?NextBilling and SubscriptionsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/api/documenting-connectivity-issues)"
4,i.io naas api ethereum Methods trace filter,"i.io naas api ethereum Methods trace filter.   trace_filter | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodstrace_filterOn this pagetrace_filterOverview​The 'trace_filter' method allows users to retrieve internal Ethereum transaction traces based on a set of filter conditions. This is particularly useful for developers and analysts who need to inspect the internal operations of Ethereum transactions.Request​{ ""fromBlock"": ""0x1"", ""toBlock"": ""0x2"", ""fromAddress"": [""0x...""], ""toAddress"": [""0x...""], ""after"": 1, ""count"": 10}Request Parameters​fromBlock (string): The starting block number.toBlock (string): The ending block number.fromAddress (array of strings): Addresses that the transactions are sent from.toAddress (array of strings): Addresses that the transactions are sent to.after (integer): The offset number.count (integer): The maximum number of results to return.Response​[ { ""type"": ""call"", ""action"": {  ""from"": ""0x..."",  ""to"": ""0x..."",  ""value"": ""0x..."",  ""gas"": ""0x..."",  ""input"": ""0x..."",  ""callType"": ""call"" }, ""result"": {  ""gasUsed"": ""0x..."",  ""output"": ""0x..."" }, ""traceAddress"": [""0x...""], ""subtraces"": 0, ""transactionHash"": ""0x..."", ""transactionPosition"": 0, ""blockNumber"": ""0x..."", ""blockHash"": ""0x..."" }]Errors​Invalid Request: This error is returned if the request format is incorrect.Internal Error: This error is returned if there's a server-side issue processing the request.Rate Limits​Please note that there are rate limits applied to the API to ensure fair usage. Free-tier users are limited to 100 requests per day, while premium users can make up to 1000 or more requests per day.Support​If you encounter any issues or have further questions regarding the eth_getBlockByHash method, please contact our support team at [email protected].Was this section helpful?12345Previoustrace_callManyNexttrace_rawTransactionOverviewRequestRequest ParametersResponseErrorsRate LimitsSupportCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/trace_filter)"
5,i.io naas api ethereum Methods eth getUncleCountByBlockNumber,"i.io naas api ethereum Methods eth getUncleCountByBlockNumber.   eth_getUncleCountByBlockNumber | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_getUncleCountByBlockNumberOn this pageeth_getUncleCountByBlockNumberOverview​The 'eth_getUncleCountByBlockNumber' method returns the number of uncles in a block from a block matching the given block number.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json'  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \{ ""id"": 1, ""jsonrpc"": ""2.0"", ""params"": [ ""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8"", ""latest"" ], ""method"": ""eth_getUncleCountByBlockNumber""}'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"",CURLOPT_RETURNTRANSFER => true,CURLOPT_ENCODING => """",CURLOPT_MAXREDIRS => 10,CURLOPT_TIMEOUT => 30,CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,CURLOPT_CUSTOMREQUEST => ""POST"",CURLOPT_HTTPHEADER => [""accept: application/json"",""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY""],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) {echo ""cURL Error #:"" . $err;} else {echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""headers = {""accept"": ""application/json"",""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, headers=headers)print(response.text)const options = {method: 'POST', headers: {accept: 'application/json'}};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" req, _ := http.NewRequest(""POST"", url, nil) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(null) .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​'Block Parameter' [ Required ]: A hexadecimal block number, or the string latest, earliest or pending. See the default block parameter.Response​Block Uncle Count: A hexadecimal equivalent of the integer representing the number of uncles in the block.Was this section helpful?12345Previouseth_getUncleCountByBlockHashNexteth_getWorkOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_getUncleCountByBlockNumber)"
6,i.io naas api ethereum Methods eth getUncleCountByBlockHash,"i.io naas api ethereum Methods eth getUncleCountByBlockHash.   eth_getUncleCountByBlockHash | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_getUncleCountByBlockHashOn this pageeth_getUncleCountByBlockHashOverview​The method 'eth_getUncleCountByBlockHash' returns the number of uncles in a block from a block matching the given block hash.Request​curlpythonrubycurl https://ethereum-mainnet-quicknode.node.coinapi.io/apikey-XXX/ \ -X POST \ -H ""Content-Type: application/json"" \ --data '{""method"":""eth_getUncleCountByBlockHash"",""params"":[""0x829df9bb801fc0494abf2f443423a49ffa32964554db71b098d332d87b70a48b""],""id"":1,""jsonrpc"":""2.0""}'import requestsimport jsonurl = ""curl https://ethereum-mainnet-quicknode.node.coinapi.io/apikey-XXX/""payload = json.dumps({ ""method"": ""eth_getUncleCountByBlockHash"", ""params"": [ ""0x829df9bb801fc0494abf2f443423a49ffa32964554db71b098d332d87b70a48b"" ], ""id"": 1, ""jsonrpc"": ""2.0""})headers = { 'Content-Type': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)require ""uri""require ""json""require ""net/http""url = URI(""https://ethereum-mainnet-quicknode.node.coinapi.io/apikey-XXX/"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request.body = JSON.dump({ ""method"": ""eth_getUncleCountByBlockHash"", ""params"": [ ""0x829df9bb801fc0494abf2f443423a49ffa32964554db71b098d332d87b70a48b"" ], ""id"": 1, ""jsonrpc"": ""2.0""})response = https.request(request)puts response.read_bodyRequest Parameters​block hash: [ Required ] A string representing the hash (32 bytes) of a block.Response​{ ""jsonrpc"":""2.0"", ""id"":1, ""result"":""0x0""}block uncle count: A hexadecimal equivalent of the integer representing the number of uncles in the block.Was this section helpful?12345Previouseth_getUncleByBlockNumberAndIndexNexteth_getUncleCountByBlockNumberOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_getUncleCountByBlockHash)"
7,i.io general faq api What are the restrictions on usage of real time protocols,"i.io general faq api What are the restrictions on usage of real time protocols.   What are the restrictions on usage of real-time protocols? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer EMS Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What is the rate limit for EMS Trading API?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQAPIWhat are the restrictions on usage of real-time protocols?What are the restrictions on usage of real-time protocols?Real-time streaming protocols (WebSocket and FIX) are restricted by the data types available and the maximum number of connections/sessions that can be established concurrently. More information about the specific limits on each plan you can find on our Pricing page [1] and API Documentation [2].What are the risks of having multiple concurrent connections for Websocket?  Currently, subscriptions have a soft limit of a single concurrent connection for Websocket. If you are using multiple concurrent connections, the risk is in the fact that the credentials are shared between environments, and this could lead to misuse of the key or leakage affecting the production environment. If the key is misused, it could trigger some of the hard limits regarding concurrency that could affect the production.References:[1] https://www.coinapi.io/Pricing [2] https://docs.coinapi.io/market-data/websocket/general#limitsWas this section helpful?12345PreviousI received a reconnect message from WebsocketNextWhat are the time periods I can use for Exchange Rates and OHLCV?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/api/What-are-the-restrictions-on-usage-of-real-time-protocols)"
8,i.io market data how to guides import data to google sheets excel,"i.io market data how to guides import data to google sheets excel.   Import data to Google Sheets/Excel | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesAcquire exchange rates with different programming languagesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPIBuilding a cryptocurrency exchange comparison tool using Market Data APICreating a historical crypto price chart using CoinAPI and D3.jsFetching market data with KNIMEGet Historical OHLCV Data Using CoinAPIGet symbol funding rate metric data using CoinAPIImport API into PostmanImport data to Google Sheets/ExcelReal-time data visualization with javascriptReal-time trades stream using WebSocket with different languagesRetrieve and analyze crypto order book data using a cryptocurrency APITrading Essentials: QuickstartPerformance Testing GuideHow-to guidesImport data to Google Sheets/ExcelOn this pageImport data to Google Sheets/ExcelIntroduction​There are various methods to access market data, including utilizing programming languages or tools that enable REST API requests. In this guide, we will specifically concentrate on extracting data in CSV (comma-separated-values) format using a simple approach that involves accessing data directly through a web browser. CSV is widely used due to its simplicity and compatibility with various spreadsheet applications like Microsoft Excel and Google Sheets.Getting started​Before diving into the tutorial, ensure you have:Web browser installed: google chrome, firefox, microsoft edge, or any otherA CoinAPI key (obtainable by signing up on the CoinAPI website)A spreadsheet application like Microsoft Excel or Google SheetsRetrieve BTC Exchange Rates in .csv format via web browser​It is possible to control the format of data by using output_format variable in query string parameters. To get BTC exchange rates in csv format, copy and paste the below URL to the address bar of your web browser:https://rest.coinapi.io/v1/exchangerate/BTC?apikey=YOUR_API_KEY-ed802af4-e855-4505-AEA&output_format=csvNote: Don't forget to replace YOUR-API-KEY with your actual API key.Simple then press ctrl+a or command+a to select exchange rates, then press ctrl + c to copy data. After obtaining the data, you can seamlessly paste it directly into any text editor.Then, select the Save As option, and don't forget to include the .csv file extension.CSV import: Microsoft Excel​To import the .csv file into the MS Excel application, navigate to the Data tab, and choose the From Text/CSV option.Select your .csv file which includes BTC exchange rate data in csv format.Verify the output of import in the preview window.With these simple steps, you can now efficiently work with and analyze the market data in a familiar spreadsheet environment, empowering you to make informed decisions based on the exchange rate information. CSV import: Google Sheets​To import the .csv file into the Google Sheets application, navigate to the File menu.Within that menu, select the Import option.Upload your .csv file which includes BTC exchange rate data.Make sure to set the correct Import location and Separator type, then press Import data.Here's the final result:With these simple steps, you can now efficiently work with and analyze the market data in a familiar spreadsheet environment, empowering you to make informed decisions based on the exchange rate information. Summary​We have explored a simple approach to accessing market data in CSV format directly through a web browser. By utilizing this method, you can easily extract the data you need for analysis and integrate it with various spreadsheet applications like Microsoft Excel or Google Sheets.While the simple approach through a web browser provides easy access to market data in CSV format, there is cryptotick specialized platform that offers a wide range of market data types in the csv format, including quotes, trades, limit order book, OHLCV, and others.Happy data exploration!Was this section helpful?12345PreviousImport API into PostmanNextReal-time data visualization with javascriptIntroductionGetting startedRetrieve BTC Exchange Rates in .csv format via web browserCSV import: Microsoft ExcelCSV import: Google SheetsSummaryCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/how-to-guides/import-data-to-google-sheets-excel)"
9,i.io market data rest api metadata#list all symbols get,i.io market data rest api metadata#list all symbols get.   Metadata | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataList all asset iconsList all assets by asset IDList all assetsList all exchanges by exchange_idList all exchangesList all symbolsList of icons for the exchangesList of symbols for the exchangeList symbol mapping for the exchangeMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIMetadataMetadata📄️ List all asset iconsGets the list of icons (of the given size) for all the assets.📄️ List all assets by asset IDList all assets by asset ID📄️ List all assetsRetrieves all assets.📄️ List all exchanges by exchange_idList all exchanges by exchange_id📄️ List all exchangesGet a detailed list of exchanges provided by the system.📄️ List all symbolsRetrieves all symbols with optional filtering.📄️ List of icons for the exchangesList of icons for the exchanges📄️ List of symbols for the exchangeList of symbols for the exchange📄️ List symbol mapping for the exchangeList symbol mapping for the exchangeWas this section helpful?12345PreviousTimeseries Index ValueNextList all asset iconsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/metadata#list-all-symbols-get)
10,i.io naas api Bitcoin Ethereum,i.io naas api Bitcoin Ethereum.   Page Not Found | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyPage Not FoundWe could not find what you were looking for.Please contact the owner of the site that linked you to the original URL and let them know their link is broken.Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/Bitcoin/Ethereum)
11,i.io faq api I received a reconnect message from using Websocket,"i.io faq api I received a reconnect message from using Websocket.   I received a reconnect message from Websocket | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQAPII received a reconnect message from WebsocketI received a reconnect message from WebsocketReconnect message is sent by the server to all connected clients when the server will be restarted or shut down at the defined exact time included in the message content. After the period specified in message passes, the client must expect that the underlying WebSocket connection will be closed from the server-side. A new connection will automatically be established to a different server.The correct way of handling this event depends on the specific requirements of the integration, but we can define standard ways how to handle it:Wait for the connection to be closed and reconnectReconnect immediately after receiving the messageUpon receiving the message, establish a second connection, and subscribe to the same scope of data. When the first connection is disconnected, do not reconnect it and instead transparently switch the data streams between connections. This method requires more implementation as a transparent switch of the data stream must not break the sequence for streams published using the initial snapshot and update messages. To make sure the sequence is correct, the client must: (a) maintain a state by applying updates to snapshot or (b) buffer the data from the second connection and processing it at the transparent connection switch.Example JSON reconnect message is structured like this:{ ""type"":""reconnect"" ""within_seconds"": 10, ""before_time"":""2020-08-06T19:19:09.7035429Z"", }Was this section helpful?12345PreviousHow to use CoinAPI from Matlab?NextWhat are the restrictions on usage of real-time protocols?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/api/I-received-a-reconnect-message-from-using-Websocket)"
12,i.io general faq general Can I get exchange wallet deposit and withdrawal status,"i.io general faq general Can I get exchange wallet deposit and withdrawal status.   Can I get exchange wallet deposit and withdrawal status? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralCan I get exchange wallet deposit and withdrawal status?Can I get exchange wallet deposit and withdrawal status?We currently don't have this feature. The majority of exchanges don't provide that information and because of that we can't make viable aggregation, but we are monitoring this opportunity.Was this section helpful?12345PreviousAuthorizing CoinAPI Access to Your AWS S3 BucketNextCan I get the XML or CSV instead of the JSON output format?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/Can-I-get-exchange-wallet-deposit-and-withdrawal-status)"
13,i.io general faq general How do I enable overage,"i.io general faq general How do I enable overage.   How do I enable overage? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralHow do I enable overage?How do I enable overage?If you are finding that you are always requiring more daily requests, one way to circumvent this is by enabling overage, wherein you can go above the limit of requests per day.You may enable overage through the Customer Portal [https://customerportal.coinapi.io/login]. After login in, navigate to Subscriptions> APIKEYS > DETAILS, then enable REST API Request Credits Overage.Was this section helpful?12345PreviousHow can I set custom timezone in the data?NextHow does SOR determine the best exchange for order execution?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/How-do-I-enable-overage)"
14,i.io market data rest api quotes quotes latest quote updates for a specific symbol,"i.io market data rest api quotes quotes latest quote updates for a specific symbol.   Latest quote updates for a specific symbol | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcvOrder BookOrder Book L3Quotes Current data Current quotes for a specific symbol Historical data Latest data Latest quote updates for a specific symbolTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIQuotes Latest quote updates for a specific symbol Latest quote updates for a specific symbolGET /v1/quotes/:symbol_id/latest Latest quote updates for a specific symbolPath Parameterssymbol_id string requiredSymbol identifier of requested timeseries (from the Metadata -> Symbols)Query Parameterslimit int32Default value: 100Amount of items to return (optional, mininum is 1, maximum is 100000, default value is 100, if the parameter is used then every 100 output items are counted as one request)Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the quote.time_coinapi date-timeThe CoinAPI time when the quote was received.ask_price double nullableThe best asking price.ask_size double nullableThe volume resting on the best ask. If the value is equal to zero, then the size is unknown.bid_price double nullableThe best bidding price.bid_size double nullableThe volume resting on the best bid. If the value is equal to zero, then the size is unknown.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.274Z"", ""time_coinapi"": ""2024-07-16T12:55:05.274Z"", ""ask_price"": 0, ""ask_size"": 0, ""bid_price"": 0, ""bid_size"": 0 }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124 }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124 }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the quote.time_coinapi date-timeThe CoinAPI time when the quote was received.ask_price double nullableThe best asking price.ask_size double nullableThe volume resting on the best ask. If the value is equal to zero, then the size is unknown.bid_price double nullableThe best bidding price.bid_size double nullableThe volume resting on the best bid. If the value is equal to zero, then the size is unknown.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.274Z"", ""time_coinapi"": ""2024-07-16T12:55:05.274Z"", ""ask_price"": 0, ""ask_size"": 0, ""bid_price"": 0, ""bid_size"": 0 }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124 }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124 }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the quote.time_coinapi date-timeThe CoinAPI time when the quote was received.ask_price double nullableThe best asking price.ask_size double nullableThe volume resting on the best ask. If the value is equal to zero, then the size is unknown.bid_price double nullableThe best bidding price.bid_size double nullableThe volume resting on the best bid. If the value is equal to zero, then the size is unknown.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.274Z"", ""time_coinapi"": ""2024-07-16T12:55:05.274Z"", ""ask_price"": 0, ""ask_size"": 0, ""bid_price"": 0, ""bid_size"": 0 }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124 }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124 }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the quote.time_coinapi date-timeThe CoinAPI time when the quote was received.ask_price double nullableThe best asking price.ask_size double nullableThe volume resting on the best ask. If the value is equal to zero, then the size is unknown.bid_price double nullableThe best bidding price.bid_size double nullableThe volume resting on the best bid. If the value is equal to zero, then the size is unknown.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.274Z"", ""time_coinapi"": ""2024-07-16T12:55:05.274Z"", ""ask_price"": 0, ""ask_size"": 0, ""bid_price"": 0, ""bid_size"": 0 }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124 }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124 }]Loading...Was this section helpful?12345Previous Latest dataNextTradesCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/quotes/quotes-latest-quote-updates-for-a-specific-symbol)"
15,i.io ,"i.io .   Welcome | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyOn this pageWelcomeWelcome to the CoinAPI documentation section. This is the perfect destination to explore CoinAPI's API collection, which includes tutorials, an overview, features, use cases we cover, and much more. You've come to the perfect place whether you have questions or simply want to learn more. Our documentation area serves as a valuable resource for understanding our API and how to make the most of its features.What is CoinAPI?​CoinAPI is a collection of cryptocurrency APIs that allows users to get the most out of cryptocurrency data. CoinAPI creates the most accessible and developer-friendly APIs for the world's software developers, analysts, and fintech-driven companies. CoinAPI streamlines crypto operations, trading, and data access on a large scale. It is the most popular option on the market due to its extensive documentation, minimal latency, simple integration, developer assistance, and SDK in a variety of languages. CoinAPI was created to make the crypto experience simpler for crypto developers, traders, and any other individuals invested in the crypto space. Customers choose CoinAPI because of our 5 years of proven experience, reliable and verified platform, service functions, and the highest frequency and aggregated data.Our mission​CoinAPI's goal is to provide all necessary APIs in one place. It eliminates the need to choose between various market vendors, making it easier for crypto users to access the data and tools they need for their use cases. Furthermore, CoinAPI helps users save time and resources, giving them more opportunities to use crypto APIs effectively. By providing a one-stop shop for all cryptocurrency needs, CoinAPI is making it easier than ever to unlock the full potential of digital currencies.CoinAPI product portfolio​CoinAPI's product portfolio includes Market data API, EMS trading API, and CryptoTick, a pay-per-service platform that is handy for researchers who are not very familiar with APIs. Market data API - CoinAPI is collecting an extensive amount of market data points, enabling users to gain useful insights. Our crypto raw data can be accessed by both individuals and businesses, allowing them to create innovative services. Thanks to CoinAPI, customers can access a wide variety of cryptocurrency historical and real-time data with ease. Many customers have expressed their appreciation for our services, calling it ""never easier to organize and analyze the data."" We guarantee reliable access to all sorts of cryptocurrency data.EMS Trading API - EMS Trading API makes it possible for clients to access multiple cryptocurrency exchanges from a single account, providing the most advantageous prices available, enabling trading operations, and recording the history of those operations. The API connects to exchanges and executes orders, either through REST or WebSocket API. CryptoTick - CryptoTick offers a ""pay as you go"" service, where customers pay for the exact usage of the service rather than a subscription. Customers can pre-purchase a certain amount of units and can use the service until their balance runs out, after which they can top up again. CryptoTick does not have an application programming interface (API), which allows applications to integrate. Instead, customers can go directly to the site to get the requested information; they just need to specify what they require, and the data will then be provided to them in the CSV format. This format ensures efficient storage and easy accessibility of the data. Therefore, CryptoTick is an ideal solution for customers needing historical data, as it is a user interface and not an application.Why choose CoinAPI?​CoinAPI provides a complete toolkit for your cryptocurrency assets:API access to real-time and historical market data. CoinAPI gives access to both historical and current market information. It supplies customers with the most current quotes and trades and presents them in real time, allowing them to incorporate the data into crypto projects. Low latency & quick response rate - our system is designed to process and deliver data with sub-millisecond accuracy, ensuring that you receive the most up-to-date information as quickly as possible. We have a fully managed and secure network connection with high-speed connectivity. This is specifically designed for price discovery and ensures that data is transferred quickly and efficiently.High quality & superior accuracy - we support non-standard items, including unusual order types of exchanges, along with all their functionality. This means that we can provide you with a wide range of data, ensuring that you have all the information you need to make informed decisions. Moreover, in CoinAPI, you obtain data from different exchanges in a standardized form, so you can compare them easily. Last but not least, we ensure accurate information by having human experts double-check all stock symbols and asset codes. This means that the data you receive from us is not only fast but also reliable and accurate.Every interface you need. We deliver three different protocols: REST, FIX, and WebSocket, so you don’t need to worry about what interface each exchange has, and what it supports. CoinAPI boasts a wide-reaching integration with 350 exchanges (and growing), enabling users to access comprehensive data such as order books, transactions, quotes, and metadata. Furthermore, our platform aggregates this information to generate metrics and metadata from different exchanges and interprets the data to create an understanding of it across exchanges. Additionally, we archive all the data to provide our users with access to historical figures and numbers.Redundancy. It's important to consider redundancy when selecting a dependable API partner, to make sure they provide server redundancy. This means that customers can access their nearest region by default, and in the case of any issues, a fallback region is automatically and immediately availableDeveloper-friendly interfaces. SDK in 40 languages. CoinAPI has you covered with multi-language SDKs and great documentation tailored to every endpoint. Our Software Development Kit (SDK) is available on GitHub at https://github.com/coinapi/coinapi-sdkCreate multiple API Keys for the subscription to create a virtual space used to safely test, train, and experiment with changes or configurations to a system. It allows users to replicate their production environment and make modifications without the risk of disrupting their current operations. This is an invaluable tool for exploring new features and troubleshooting potential issues.Data standardization. By standardizing data collection via CoinAPI, you are one step closer to having a complete and clean crypto data view that you can use.Order books of the highest quality. We offer detailed, real-time data on cryptocurrency buy and sell orders, including price levels, order counts, types, and timestamps, sourced from multiple exchanges for a broad market view. Such data helps you make informed trading decisions.OHLCV data. With CoinAPI you can retrieve Open, High, Low, Close, and Volume (OHLCV) data, historical quotes, and historical trades. You can easily specify the type of data you want to retrieve using query parameters. Companies can gain a range of advantages from CoinAPI, such as gaining essential information, straightforward integration, and automation. Clients can get all of their crypto APIs in one place, which makes it easier to manage large-scale crypto operations, trading, and data access.Still uncertain about how CoinAPI can help your business? Try out your use case and find out if CoinAPI meets your requirements. You can get your free API key here. Support​If you have any questions or need assistance, you can visit our support page and read the FAQ. Furthermore, you can contact our team if you require additional help. Systems Status​Keep informed of the operational status of CoinAPI and any reports of interruptions.CoinAPI Blog​Stay informed and keep up-to-date with the most recent news from CoinAPI by checking our blog.Was this section helpful?12345What is CoinAPI?Our missionCoinAPI product portfolioWhy choose CoinAPI?SupportSystems StatusCoinAPI BlogCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/)"
16,i.io naas api ethereum Methods trace block,"i.io naas api ethereum Methods trace block.   trace_block | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodstrace_blockOn this pagetrace_blockOverview​The ""trace_block"" gets trace information about all the transactions in a given block. This can be useful for debugging purposes or for analyzing the behavior of a blockchainRequest​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \ --url https://ethereum-mainnet-geth-archive.node.coinapi.io \ --header 'accept: application/json' \ --header 'content-type: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --data ' { ""jsonrpc"": ""2.0"", ""method"": ""trace_block"", ""stop"": [], ""id"":1, ""params"": [""0x6""] } 'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""trace_block\""}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [ CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"", CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => """", CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 30, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => ""POST"", CURLOPT_POSTFIELDS => json_encode([ 'id' => 1, 'jsonrpc' => '2.0', 'method' => 'trace_block' ]), CURLOPT_HTTPHEADER => [ ""accept: application/json"", ""content-type: application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" ],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) { echo ""cURL Error #:"" . $err;} else { echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""trace_block""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text)const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({id: 1, jsonrpc: '2.0', method: 'trace_block'})};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""trace_block\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""trace_block\""}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""trace_block\""}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​Response​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": [  {   ""action"": {    ""author"": ""0x0193d941b50d91be6567c7ee1c0fe7af498b4137"",    ""rewardType"": ""block"",    ""value"": ""0x4563918244f40000""   },   ""blockHash"": ""0x1f1aed8e3694a067496c248e61879cda99b0709a1dfbacd0b693750df06b326e"",   ""blockNumber"": 6,   ""result"": null,   ""subtraces"": 0,   ""traceAddress"": [],   ""type"": ""reward""  } ]}Errors​Invalid Request: This error is returned if the request format is incorrect.Internal Error: This error is returned if there's a server-side issue processing the request.Rate Limits​Please note that there are rate limits applied to the API to ensure fair usage. Free-tier users are limited to 100 requests per day, while premium users can make up to 1000 or more requests per day.Support​If you encounter any issues or have further questions regarding the trace_block method, please contact our support team at [email protected].Was this section helpful?12345Previousnet_versionNexttrace_callOverviewRequestRequest ParametersResponseErrorsRate LimitsSupportCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/trace_block)"
17,i.io faq general REST API empty array collection response and 550 error explained,"i.io faq general REST API empty array collection response and 550 error explained.   REST API empty array/collection response and 550 error explained. | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralREST API empty array/collection response and 550 error explained.On this pageREST API empty array/collection response and 550 error explained.Question:​Requesting OHLCV via REST API, why do I get an empty JSON array as a response instead of a 550 error? When the request is failed with a 550 error and when the empty response (empty JSON array, XML, or CSV) is delivered?Answer:​In the, for example, REST OHLCV data, you are requesting the data in the time range and receiving the collection (JSON Array) in response, which could contain 0 or multiple objects. When we don't have the object, then it will be not visible in the array, and if there are no objects in the range, then the collection will be empty. It's a correct response, and it's a better solution than responding with a 550 error as the response is correct from the data structure perspective.The 550 error code is related to the specific object requested (JSON object) like the current exchange rate between BTC/USD. In this type of request, we need to respond with a single object, and when we do not have it, then the whole request will be failed with a 550 HTTP response code.The OHLCV periods are not generated when there are no trades in the period as min, max, first, last (low, high, open, close) are undefined. We have the parameter include_empty_items which you can use to display those items, but only time_period_start, time_period_end will be visible. More information is available in the relevant sections of the documentation: https://docs.coinapi.io/market-data/rest-api/ohlcv https://docs.coinapi.io/market-data/rest-api#http-requestsWas this section helpful?12345PreviousOHLCV Aggregation using the REST APINextShould we file a ticket every time?Question:Answer:Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/REST-API-empty-array-collection-response-and-550-error-explained)"
18,i.io general glossary Network Blockchain,"i.io general glossary Network Blockchain.   Network | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGlossaryBlockchain Address and OutputBlockchain NodeChain (Blockchain)EndpointJSONNetworkSatoshiTransactionWalletBlockchain BlockChangelogGlossaryNetworkOn this pageNetworkNetwork​A Network refers to the entire ecosystem of blockchain participants, including nodes, users, and miners, connected via a specific blockchain protocol. Different networks, like Bitcoin or Ethereum, operate independently with their own rules and consensus mechanisms.Components of a Blockchain Network​Nodes: Computers that participate in the blockchain network by validating and propagating transactions and blocks. They can be full nodes, light nodes, or mining nodes.Users: Individuals or entities that use the blockchain network to perform transactions or interact with decentralized applications (DApps).Miners: Participants who validate and add new transactions to the blockchain by solving complex cryptographic puzzles (in Proof of Work systems) or by staking their cryptocurrency (in Proof of Stake systems).Functions of a Blockchain Network​Transaction Validation: Ensures that all transactions are verified according to the network's consensus rules before being added to the blockchain.Consensus Mechanism: A method by which the network reaches an agreement on the state of the blockchain. Common mechanisms include Proof of Work (PoW) and Proof of Stake (PoS).Propagation: The process by which nodes communicate and distribute transaction and block information throughout the network.Security: Utilizes cryptographic techniques and decentralized consensus to protect the network from attacks and ensure the integrity of data.Differences Between Blockchain Networks​Bitcoin Network: The first and most well-known blockchain network, designed primarily for transferring and storing value. It uses the Proof of Work (PoW) consensus mechanism.Ethereum Network: A more versatile blockchain network that supports smart contracts and decentralized applications (DApps). Initially using PoW, Ethereum has transitioned to a Proof of Stake (PoS) consensus mechanism with Ethereum 2.0.Importance of Blockchain Networks​Decentralization: Eliminates the need for a central authority, distributing control and ensuring that no single entity can dictate the rules or alter the data.Transparency: Provides a transparent record of all transactions, enhancing trust among participants.Security: Protects data through cryptographic techniques and consensus mechanisms, making it extremely difficult for malicious actors to compromise the network.Interoperability: Some blockchain networks are designed to interact with each other, allowing for the transfer of assets and information across different chains.Understanding blockchain networks is crucial for grasping how blockchain technology functions as a whole. Each network operates independently with its own set of rules, consensus mechanisms, and purposes, yet all share the common goal of providing a secure, transparent, and decentralized platform for recording and managing transactions.Was this section helpful?12345PreviousJSONNextSatoshiNetworkCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/glossary/Network_Blockchain)"
19,i.io naas api bitcoin Methods generatetodescriptor,"i.io naas api bitcoin Methods generatetodescriptor.   generatetodescriptor | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgeneratetodescriptorOn this pagegeneratetodescriptorOverview​The 'generatetodescriptor' method method allows you to mine blocks immediately to a specified descriptor before the RPC call returns. This method is a crucial tool for developers looking to integrate Bitcoin transactions and operations into their applications through the CoinAPI platform.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""Generatetodescriptor"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""generatetodescriptor\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""generatetodescriptor"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""2.0"", ""method"": ""generatetodescriptor"", ""params"": [], ""id"": 1})headers = { 'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type': 'application/json', 'accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""generatetodescriptor"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""generatetodescriptor"",""params"": [],""id"":1}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"")req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({""jsonrpc"": ""2.0"",""method"": ""generatetodescriptor"",""params"": [],""id"": 1})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder().build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""2.0\"",\r \""id\"": \""1\"",\r \""method\"": \""generatetodescriptor\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​num_blocks (numeric, required): The number of blocks to be generated immediately.descriptor (string, required): The descriptor where the newly generated bitcoins will be sent to.maxtries (numeric, optional, default=1000000): The number of iterations to try during the block generation process.Response​{ ""result"": null, ""error"": { ""code"": -1, ""message"": ""generatetodescriptor num_blocks \""descriptor\"" ( maxtries ) Mine to a specified descriptor and return the block hashes. Arguments: 1. num_blocks (numeric, required) How many blocks are generated. 2. descriptor (string, required) The descriptor to send the newly generated bitcoin to. 3. maxtries  (numeric, optional, default=1000000) How many iterations to try. Result: [   (json array) hashes of blocks generated \""hex\"", (string) blockhash ... ] Examples: Generate 11 blocks to mydesc > bitcoin-cli generatetodescriptor 11 \""mydesc\"" "" }, ""id"": 1}Was this section helpful?12345PreviousgeneratetoaddressNextgetaddressesbylabelOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/generatetodescriptor)"
20,i.io naas api bitcoin Methods importmulti,"i.io naas api bitcoin Methods importmulti.   importmulti | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsimportmultiOn this pageimportmultiOverview​The 'importmulti' method allows you to import addresses/scripts (with private or public keys, redeem script (P2SH)), optionally rescanning the blockchain from the earliest creation time of the imported scripts. Requires a new wallet backup.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""importmulti"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""importmulti\"",\""params\"": [ ]}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""importmulti"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection(""mainnet-bitcoin.node.coinapi.io"")payload = json.dumps({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""importmulti"",""params"": []})headers = {'Content-Type': 'application/json','accept': 'application/json','X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}conn.request(""POST"", ""/"", payload, headers)res = conn.getresponse()data = res.read()print(data.decode(""utf-8""))var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""importmulti"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""id"":1,""method"":""importmulti"",""params"": [ ]}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""importmulti"",""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""importmulti\"",\""params\"": [ ]}"");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​desc: Descriptor to import. If using descriptor, do not also provide address/scriptPubKey, scripts, or pubkeysscriptPubKey: Type of scriptPubKey (string for script, json for address). Should not be provided if using a descriptortimestamp: Creation time of the key expressed in UNIX epoch time, or the string ""now"" to substitute the current synced blockchain time.redeemscript: Allowed only if the scriptPubKey is a P2SH or P2SH-P2WSH address/scriptPubKeywitnessscript: Allowed only if the scriptPubKey is a P2SH-P2WSH or P2WSH address/scriptPubKeypubkeys: Array of strings giving pubkeys to import. They must occur in P2PKH or P2WPKH scripts. They are not required when the private key is also provided (see the ""keys"" argument).keys: Array of strings giving private keys to import. The corresponding public keys must occur in the output or redeemscript.Response​{ // Response structure here}Was this section helpful?12345Previousimport_descriptorsNextimportprivkeyOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/importmulti)"
21,i.io faq security and privacy What information do I need to provide in order to subscribe,"i.io faq security and privacy What information do I need to provide in order to subscribe.   What information do I need to provide in order to subscribe? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIBilling and SubscriptionsSecurity and PrivacyWhat CDN does the API use?What information do I need to provide in order to subscribe?What security mechanisms does CoinAPI use to protect my data?What should I do if my API key was compromised?Customer PortalChangelogFAQSecurity and PrivacyWhat information do I need to provide in order to subscribe?What information do I need to provide in order to subscribe?To use our API product, you will need to provide us:Your email address. We use this to deliver an API key.Payment information, if you are subscribing to a paid plan.You may subscribe to our plans via the pricing page here: https://www.coinapi.io/market-data-api/pricingWas this section helpful?12345PreviousWhat CDN does the API use?NextWhat security mechanisms does CoinAPI use to protect my data?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/security-and-privacy/What-information-do-I-need-to-provide-in-order to-subscribe)"
22,i.io faq general Can I have multiple subscriptions,"i.io faq general Can I have multiple subscriptions.   Can I have multiple subscriptions? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralCan I have multiple subscriptions?Can I have multiple subscriptions?Yes, you may have multiple subscriptions.Multiple subscriptions are commonly used when:The software is shipped to multiple third-party's by the customer (eg. self-hosted software)To separate environments inside the company (development, testing, staging, production)To separate multiple independent production sites (EUROPE, ASIA, etc)To separate multiple teams inside the company working on different features or productsWas this section helpful?12345PreviousCan I have multiple API keys in one account?NextCan I participate in the CoinAPI GitHub repository?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/Can-I-have-multiple-subscriptions)"
23,i.io general customer portal traces view,"i.io general customer portal traces view.   Traces view explained | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalMetrics tab explainedTraces view explainedFAQGlossaryChangelogCustomer PortalTraces view explainedOn this pageTraces view explainedHow to Use the Traces View in the Customer Portal​As a Market Data API provider, our Traces view in the Customer Portal offers a detailed overview of API call traces. This guide will walk you through using the Traces view to inspect and analyze API requests and responses.Navigating to the Traces View​Login to the Customer Portal: Ensure you are logged in to the CoinAPI.io Customer Portal.Access Traces: From the main menu on the left side, locate and click on ""Traces"" under the ""API Keys"" section.Filtering Traces​The Traces view allows you to filter the API call traces based on time and HTTP status.Time Filter​Select the desired time range for viewing the traces:Last 5 minutesLast 15 minutesLast 1 hourLast 4 hoursLast 24 hoursHTTP Status Filter​Choose the HTTP status to filter the traces:AllSuccessClient ErrorServer ErrorViewing TracesThe Traces List displays the details of each API call trace. Each trace entry includes the following information:Timestamp (UTC): The exact time when the API call was made.Method: The API method used (e.g., v1/ohlcv/{symbol_id}/latest).Product: The specific API product used (e.g., MarketDataAPI/REST).HTTP Status: The HTTP response status code (e.g., 200).Response Time: The time taken to get a response for the API call.To view detailed information about a specific trace:Click on the arrow next to the trace entry. A detailed JSON view of the trace will expand, displaying the following fields:http.target: The target endpoint of the API call.http.url: The full URL of the API request.http.flavor: The HTTP version used.The API key used for the request:http.status_code: The HTTP status code of the response.net.host.name: The hostname of the API server.http.method: The HTTP method used (GET, POST, etc.).http.scheme: The scheme used for the request (http, https).http.route: The route pattern of the API endpoint.Example​Below is an example of a trace entry in the expanded view:{ ""http.target"": ""/v1/ohlcv/exchanges/KUCOIN/history"", ""http.url"": ""http://rest.coinapi.io/v1/ohlcv/exchanges/KUCOIN/history?period_id=1MTH&time_start=2024-05-22T08:49:00&time_end=2024-05-22T08:50:00&limit=100000"", ""http.flavor"": ""1.1"", ""APIKey"": ""bd5fa425-ed28-453b-a34d-29dc8d57d0f0"", ""http.status_code"": 200, ""net.host.name"": ""rest.coinapi.io"", ""http.method"": ""GET"", ""http.scheme"": ""http"", ""http.route"": ""/v1/ohlcv/exchanges/{exchange_id}/history""}This information helps in debugging and understanding the behavior of the API calls, providing insights into any issues or performance metrics.Conclusion​The Traces view in the Customer Portal is a powerful tool for monitoring and analyzing API calls. By using the filters and detailed trace information, you can efficiently troubleshoot and optimize your API usage.Was this section helpful?12345PreviousMetrics tab explainedNextFAQHow to Use the Traces View in the Customer PortalNavigating to the Traces ViewFiltering TracesTime FilterHTTP Status FilterExampleConclusionCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/customer-portal/traces-view)"
24,i.io cdn cgi l email protection#6c191f091e2c14420f0301,"i.io cdn cgi l email protection#6c191f091e2c14420f0301.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 86784d87ae2f3566 •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#6c191f091e2c14420f0301)"
25,i.io general faq general Which assets or currencies are listed,"i.io general faq general Which assets or currencies are listed.   Which assets or currencies are listed? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralWhich assets or currencies are listed?Which assets or currencies are listed?Listing of the assets integrated can be seen by using the assets endpoint: https://rest.coinapi.io/v1/assets/Was this section helpful?12345PreviousWhere is CoinAPI infrastructure located?NextWhy am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/Which-assets-or-currencies-are-listed)"
26,i.io naas api bitcoin Methods listaddressgroupings,"i.io naas api bitcoin Methods listaddressgroupings.   listaddressgroupings | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodslistaddressgroupingsOn this pagelistaddressgroupingsOverview​The 'listaddressgroupings RPC Method' method Fills the keypool.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""listaddressgroupings"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""listaddressgroupings\"",\""params\"": [ ]}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""listaddressgroupings"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection(""mainnet-bitcoin.node.coinapi.io"")payload = json.dumps({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""listaddressgroupings"",""params"": []})headers = {'Content-Type': 'application/json','accept': 'application/json','X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}conn.request(""POST"", ""/"", payload, headers)res = conn.getresponse()data = res.read()print(data.decode(""utf-8""))var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""listaddressgroupings"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""id"":1,""method"":""listaddressgroupings"",""params"": [ ]}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""listaddressgroupings"",""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""listaddressgroupings\"",\""params\"": [ ]}"");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​str: TThe bitcoin addressResponse​{ // Response structure here}Was this section helpful?12345PreviouslistReceivedByAddressNextlistbannedOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/listaddressgroupings)"
27,i.io flat files api data types link to ohlcv doc,i.io flat files api data types link to ohlcv doc.   Page Not Found | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyPage Not FoundWe could not find what you were looking for.Please contact the owner of the site that linked you to the original URL and let them know their link is broken.Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/flat-files-api/data-types/link-to-ohlcv-doc)
28,i.io naas api bitcoin Methods gettransaction,"i.io naas api bitcoin Methods gettransaction.   gettransaction | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgettransactionOn this pagegettransactionOverview​The 'gettransaction' method allows you to retrieve detailed information about a specific transaction on the Bitcoin network. This method returns a JSON object containing various details about the transaction, including the amount, fee, confirmations, and more.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""gettransaction"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""gettransaction\"",\""params\"": [ ]}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""gettransaction"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection(""mainnet-bitcoin.node.coinapi.io"")payload = json.dumps({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""gettransaction"",""params"": []})headers = {'Content-Type': 'application/json','accept': 'application/json','X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}conn.request(""POST"", ""/"", payload, headers)res = conn.getresponse()data = res.read()print(data.decode(""utf-8""))var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""gettransaction"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""id"":1,""method"":""gettransaction"",""params"": [ ]}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""gettransaction"", ""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""gettransaction\"",\""params\"": [ ]}"");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​transaction_id (string): The ID of the transaction you want to retrieve information about.verbose (boolean): Optional. If set to true, the method will return a decoded version of the transaction, similar to the output of the decoderawtransaction or getrawtransaction method when verbose is passed.Response​{ ""amount"": ""n"", ""fee"": ""n"", ""confirmations"": ""n"", ""blockhash"": ""hex"", ""blockheight"": ""n"", ""blockindex"": ""n"", ""blocktime"": ""xxx"", ""txid"": ""hex"", ""walletconflicts"": [""hex""], ""time"": ""xxx"", ""timereceived"": ""xxx"", ""details"": [ {  ""address"": ""str"",  ""category"": ""str"",  ""amount"": ""n"",  ""vout"": ""n"",  ""fee"": ""n"",  ""abandoned"": ""true|false"" } ], ""hex"": ""hex"", ""decoded"": { // Decoded transaction details (only present when `verbose` is passed) }}Was this section helpful?12345PreviousgetrpcinfoNextgettxoutOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/gettransaction)"
29,i.io general faq account how do I get an additional API key,"i.io general faq account how do I get an additional API key.   How do I get an additional API key? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountHow I can update my credit card / billing information?How can I change my CoinAPI account's email address?How can I get an invoice or receipt?How do I make an account?I want to change my account's name?Managing Team MembersCan I add other users to my account?How do I get an additional API key?APIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQCustomer AccountHow do I get an additional API key?How do I get an additional API key?You may obtain an additional API key through our Pricing Page [1] and in the Subscriptions tab of the Customer Portal [2]. For context, the existence of each additional API Key for a subscription (enabled or disabled) above the plan quota is charged 1 USD per day, with a minimum of one day.​​Multiple subscriptions are commonly used when:The software is shipped to multiple third-party's by the customer (eg. self-hosted software)To separate environments inside the company (development, testing, staging, production)To separate multiple independent production sites (EUROPE, ASIA, etc)To separate multiple teams inside the company working on different features or productsReferences: [1] https://www.coinapi.io/Pricing [2] https://customerportal.coinapi.io/subscriptionsWas this section helpful?12345PreviousCan I add other users to my account?NextAPICopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/account/how-do-I-get-an-additional-API-key)"
30,i.io naas api bitcoin Methods getblockstats,"i.io naas api bitcoin Methods getblockstats.   getblockstats | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetblockstatsOn this pagegetblockstatsOverview​The 'getblockstats' RPC method allows you to calculate statistics for a specified block within a given window.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --body-data '{ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""getblockstats"", ""params"": []}' \'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""getblockstats\"",\r \""params\"": []\r }\r "", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""getblockstats"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({""jsonrpc"": ""1.0"",""id"": ""1"",""method"": ""getblockstats"",""params"": []})headers = {'Content-Type': 'application/json','accept': 'application/json','X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""getblockstats"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{`+""""+` ""jsonrpc"": ""1.0"",`+""""+` ""id"": ""1"",`+""""+` ""method"": ""getblockstats"",`+""""+` ""params"": []`+""""+`}`+""""+``)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""getblockstats"", ""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""getblockstats\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​'hash_or_height'Type: string/numericRequirement: MandatoryDescription: The hash or height of the block you wish to target.'stats'Type: JSON ArrayRequirement: OptionalDescription: A JSON array that contains the values to be filtered from the statistics.Response​{ ""avgfee"": 0.00012345, ""avgfeerate"": 12.34, ""avgtxsize"": 250, ""blockhash"": ""00000000000000000007d0f98d9ec3b757a2774e667e9b0d6437a1a9d70c1303"", ""feerate_percentiles"": [5.67, 8.9, 12.34, 15.67, 19.01], ""height"": 680255, ""ins"": 1234, ""maxfee"": 0.00123456, ""maxfeerate"": 45.67, ""maxtxsize"": 800, ""medianfee"": 0.00009876, ""mediantime"": 1678391234, ""mediantxsize"": 225, ""minfee"": 0.00001234, ""minfeerate"": 4.56, ""mintxsize"": 150, ""outs"": 5678, ""subsidy"": 6.25, ""swtotal_size"": 1234567, ""swtotal_weight"": 12345678, ""swtxs"": 123, ""time"": 1678391234, ""total_out"": 123.45678901, ""total_size"": 1234567, ""total_weight"": 12345678, ""totalfee"": 0.01234567, ""txs"": 234, ""utxo_increase"": 123, ""utxo_size_inc"": 12345}The method returns a JSON object with the following properties:avgfee: The average fee present in the block.avgfeerate: The average fee rate in the block.avgtxsize: The average transaction size in the block.blockhash: The hash identifier of the block.feerate_percentiles: A JSON array that contains the fee rates at the 10th, 25th, 50th, 75th, and 90th percentile weight units.height: The height of the block in the blockchain.ins: The total number of inputs in the block.maxfee: The maximum fee found in the block.maxfeerate: The maximum fee rate in the block.maxtxsize: The maximum transaction size found in the block.medianfee: The truncated median fee in the block.mediantime: The median time past of the block.mediantxsize: The truncated median transaction size in the block.minfee: The minimum fee found in the block.minfeerate: The minimum fee rate in the block.mintxsize: The minimum transaction size in the block.outs: The total number of outputs in the block.subsidy: The subsidy of the block.swtotal_size: The total size of all SegWit transactions in the block.swtotal_weight: The total weight of all SegWit transactions in the block.swtxs: The total number of SegWit transactions in the block.time: The timestamp of the block.total_out: The total amount in all outputs, excluding the coinbase and thus the reward (i.e., subsidy + total fee).total_size: The total size of all non-coinbase transactions in the block.total_weight: The total weight of all non-coinbase transactions in the block.totalfee: The total fee accumulated in the block.txs: The total number of transactions in the block.utxo_increase: The increase or decrease in the number of unspent outputs.utxo_size_inc: The increase or decrease in the size of the UTXO index.Was this section helpful?12345PreviousgetblockheaderNextgetblocktemplateOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getblockstats)"
31,i.io cdn cgi l email protection#0e7d7b7e7e617c7a4e6d6167606f7e67206761,"i.io cdn cgi l email protection#0e7d7b7e7e617c7a4e6d6167606f7e67206761.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 8aad27014ffb6e99 •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#0e7d7b7e7e617c7a4e6d6167606f7e67206761)"
32,i.io naas api bitcoin Methods getblock,"i.io naas api bitcoin Methods getblock.   getblock | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetblockOn this pagegetblockOverview​The 'getblock ' RPC Method retrieve detailed information about a specific block in the blockchainRequest​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""getblock"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""getblock\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""getblock"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""2.0"", ""method"": ""getblock"", ""params"": [], ""id"": 1})headers = { 'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type': 'application/json', 'accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""getblock"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""getblock"",""params"": [],""id"":1}`) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"") req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""method"": ""getblock"", ""params"": [], ""id"": 1})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder().build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""2.0\"",\r \""id\"": \""1\"",\r \""method\"": \""getblock\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​blockhash (string, required): The unique identifier of the block you want to retrieve information about. verbosity (numeric, optional, default = 1): Defines the level of detail in the response. It can be set to 0 for hex-encoded data, 1 for a JSON object, and 2 for a JSON object inclusive of transaction data.Response​{ ""result"": null, ""error"": {  ""code"": -1,  ""message"": ""getblock \""blockhash\"" ( verbosity ) If verbosity is 0, returns a string that is serialized, hex-encoded data for block 'hash'. If verbosity is 1, returns an Object with information about block <hash>. If verbosity is 2, returns an Object with information about block <hash> and information about each transaction. If verbosity is 3, returns an Object with information about block <hash> and information about each transaction, including prevout information for inputs (only for unpruned blocks in the current best chain). Arguments: 1. blockhash (string, required) The block hash 2. verbosity (numeric, optional, default=1) 0 for hex-encoded data, 1 for a JSON object, 2 for JSON object with transaction data, and 3 for JSON object with transaction data including prevout information for inputs Result (for verbosity = 0): \""hex\"" (string) A string that is serialized, hex-encoded data for block 'hash' Result (for verbosity = 1): {         (json object) \""hash\"" : \""hex\"",     (string) the block hash (same as provided) \""confirmations\"" : n,   (numeric) The number of confirmations, or -1 if the block is not on the main chain \""size\"" : n,      (numeric) The block size \""strippedsize\"" : n,    (numeric) The block size excluding witness data \""weight\"" : n,     (numeric) The block weight as defined in BIP 141 \""height\"" : n,     (numeric) The block height or index \""version\"" : n,     (numeric) The block version \""versionHex\"" : \""hex\"",   (string) The block version formatted in hexadecimal \""merkleroot\"" : \""hex\"",   (string) The merkle root \""tx\"" : [      (json array) The transaction ids  \""hex\"",      (string) The transaction id  ... ], \""time\"" : xxx,     (numeric) The block time expressed in UNIX epoch time \""mediantime\"" : xxx,    (numeric) The median block time expressed in UNIX epoch time \""nonce\"" : n,     (numeric) The nonce \""bits\"" : \""hex\"",     (string) The bits \""difficulty\"" : n,    (numeric) The difficulty \""chainwork\"" : \""hex\"",   (string) Expected number of hashes required to produce the chain up to this block (in hex) \""nTx\"" : n,      (numeric) The number of transactions in the block \""previousblockhash\"" : \""hex\"", (string, optional) The hash of the previous block (if available) \""nextblockhash\"" : \""hex\""   (string, optional) The hash of the next block (if available) } Result (for verbosity = 2): {     (json object) ...,    Same output as verbosity = 1 \""tx\"" : [   (json array)  {    (json object)  ...,   The transactions in the format of the getrawtransaction RPC. Different from verbosity = 1 \""tx\"" result  \""fee\"" : n  (numeric) The transaction fee in BTC, omitted if block undo data is not available  },  ... ] } Result (for verbosity = 3): {          (json object) ...,         Same output as verbosity = 2 \""tx\"" : [        (json array)  {         (json object)  \""vin\"" : [       (json array)   {        (json object)   ...,       The same output as verbosity = 2   \""prevout\"" : {     (json object) (Only if undo information is available)    \""generated\"" : true|false, (boolean) Coinbase or not    \""height\"" : n,    (numeric) The height of the prevout    \""value\"" : n,     (numeric) The value in BTC    \""scriptPubKey\"" : {   (json object)    \""asm\"" : \""str\"",    (string) The asm    \""hex\"" : \""str\"",    (string) The hex    \""address\"" : \""str\"",   (string, optional) The Bitcoin address (only if a well-defined address exists)    \""type\"" : \""str\""    (string) The type (one of: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_scripthash, witness_v0_keyhash, witness_v1_taproot, witness_unknown)    }   }   },   ...  ]  },  ... ] } Examples: > bitcoin-cli getblock \""00000000c937983704a73af28acdec37b049d214adbda81d7e2a3dd146f6ed09\"" > curl --user myusername --data-binary '{\""jsonrpc\"": \""1.0\"", \""id\"": \""curltest\"", \""method\"": \""getblock\"", \""params\"": [\""00000000c937983704a73af28acdec37b049d214adbda81d7e2a3dd146f6ed09\""]}' -H 'content-type: text/plain;' http://127.0.0.1:8332/ "" }, ""id"": 1}For verbosity = 0hex: A string representing the serialized, hex-encoded data for the block hash.For verbosity = 1hex: The block hash.confirmations: The number of confirmations the block has, or -1 if the block is not part of the main chain.size: The size of the block in bytes.strippedsize: The size of the block excluding witness data.weight: The block weight as defined in BIP 141.height: The block's position or index in the blockchain.version: The version of the block.versionHex: The block version formatted as a hexadecimal string.merkleroot: The merkle root of the block.tx: An array containing the transaction IDs present in the block.hex: The transaction ID.time: The time the block was created, expressed in UNIX epoch time.mediantime: The median time of the block, expressed in UNIX epoch time.nonce: The number of transactions made by the sender prior to this one, encoded as a hexadecimal string.bits: The value of the nBits field in the block header.difficulty: The estimated computational work required to find this block compared to the work required to find block 0.chainwork: The expected number of hashes required to produce the current chain.nTx: The number of transactions included in the block.previousblockhash: The hash of the block that precedes this one in the blockchain.nextblockhash: The hash of the block that follows this one in the blockchain.error: Any error messages that occurred during the request, if applicable.For verbosity = 2Returns the same data as verbosity level 1, but also includes detailed information about each transaction in the 'tx' array.Was this section helpful?12345PreviousgetbestblockhashNextgetblockchaininfoOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getblock)"
33,i.io general faq general how to setup vpc peering,"i.io general faq general how to setup vpc peering.   How to setup AWS VPC peering? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralHow to setup AWS VPC peering?How to setup AWS VPC peering?The process to establish a VPC Peering Connection involves several steps. Here's a concise guide:Acquire Subscription Addon: Ensure you have the necessary subscription addon to proceed with the VPC peering setup. AWS VPC Peering is a subscription add on that can be purchased in the Customer Portal [1]Create a Support Case: Open a support case with us and your location details (eg. us-east-1). We can set this up anywhere.Get the Details from Support: Await a response from the support team with the necessary details for the next steps.Request the Connection via AWS Console (VPC [2] Peering connections [3] > Create peering connection) Connection Acceptance: Our team will accept the connection request on our side.Customer Confirmation: Finally, the customer needs to confirm that the link works as expected.References: [1] https://customerportal.coinapi.io/login[2] https://signin.aws.amazon.com/signin?redirect_uri=https%3A%2F%2Fus-east-1.console.aws.amazon.com%2Fvpcconsole%2Fhome%3FhashArgs%3D%2523Home%253A%26isauthcode%3Dtrue%26region%3Dus-east-1%26state%3DhashArgsFromTB_us-east-1_63b5776172bfe03b&client_id=arn%3Aaws%3Asignin%3A%3A%3Aconsole%2Fvpcconsole&forceMobileApp=0&code_challenge=5rX4JjH16WCD3EDWd9iiy3Q3VbWrXtG8nJYmaAIn7kQ&code_challenge_method=SHA-256[3] https://signin.aws.amazon.com/signin?redirect_uri=https%3A%2F%2Fus-east-1.console.aws.amazon.com%2Fvpcconsole%2Fhome%3FhashArgs%3D%2523PeeringConnections%253A%26isauthcode%3Dtrue%26region%3Dus-east-1%26state%3DhashArgsFromTB_us-east-1_f81674e9a06969b8&client_id=arn%3Aaws%3Asignin%3A%3A%3Aconsole%2Fvpcconsole&forceMobileApp=0&code_challenge=rp8hvhvZlShWUlQWiGrZbzjYVpqR6xANeB8z8DFo_xw&code_challenge_method=SHA-256Was this section helpful?12345PreviousWill I get an access to Market Data API if I purchase EMS Trading API?NextCustomer AccountCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/how-to-setup-vpc-peering)"
34,i.io how to guides retrieve and analyze crypto order book data using a cryptocurrency API,"i.io how to guides retrieve and analyze crypto order book data using a cryptocurrency API.   Retrieve and analyze crypto order book data using a cryptocurrency API | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesAcquire exchange rates with different programming languagesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPICreating a historical crypto price chart using CoinAPI and D3.jsFetching market data with KNIMEGet Historical OHLCV Data Using CoinAPIGet symbol funding rate metric data using CoinAPIImport API into PostmanImport data to Google Sheets/ExcelReal-time data visualization with javascriptReal-time trades stream using WebSocket with different languagesRetrieve and analyze crypto order book data using a cryptocurrency APITrading Essentials: QuickstartMarket Data APIEMS APIFAQCustomer PortalChangelogHow-to guidesRetrieve and analyze crypto order book data using a cryptocurrency APIOn this pageRetrieve and analyze crypto order book data using a cryptocurrency APIIn this tutorial, we will delve into the process of fetching and analyzing cryptocurrency order books using the Python programming language and CoinAPI.Agenda🔥:​Crypto order book basics: Understanding cryptocurrency trading order books.Fetching data: Using CoinAPI and Python to retrieve real-time crypto order book data.Analysis: Interpreting cryptocurrency API data for insights.Visualization: Displaying order book data with Python’s Matplotlib.Metrics calculation: Computing key metrics from cryptocurrency API data.CoinAPI: The ultimate cryptocurrency API for all your crypto data needs 🚀​Before diving into our guide, let’s take a moment to introduce CoinAPI. CoinAPI offers easy access to a wide range of financial information, encompassing both live and historical data from various exchanges. Whether you’re looking for detailed trading data, OHLCV (Open, High, Low, Close, Volume), or specific event information, CoinAPI delivers. CoinAPI provides crypto order book data, making it one of the best crypto APIs available. Additionally, our support for multiple data delivery methods, including REST and WebSocket makes it highly versatile for developers creating trading algorithms or crypto market data visualizations.Let's Begin 🚀​Harnessing the capabilities of CoinAPI, a robust cryptocurrency API, alongside Python, known for its versatility in data analysis and statistical computing, we can delve deeply into the nuances of the cryptocurrency market.We’ll walk you through the steps to fetch and analyze crypto order book data in real time, leveraging the comprehensive data provided by the cryptocurrency API.Setting Up the API Request​To fetch real-time order book data, you'll first need an API key from CoinAPI website. Once you have it, you can proceed to retrieve the data using Python.Fetching the dataimport requestsimport jsonAPI_KEY = ""YOUR_API_KEY_HERE""url = f""https://rest.coinapi.io/v1/orderbooks/current?symbol=KRAKEN_SPOT_BTC_USD&apikey={API_KEY}""response = requests.get(url)if response.status_code == 200: # The request was successful data = response.json()  # Save the data to a file with open(""order-books-kraken-spot-btc-usd.json"", ""w"") as file:  json.dump(data, file, indent=4) print(""Data saved to order-books-kraken-spot-btc-usd.json"")else: # Handle error cases print(f""Error: Status code {response.status_code}"") print(response.text)Response{ ""symbol_id"": ""KRAKEN_SPOT_BTC_USD"", ""time_exchange"": ""2023-11-24T08:26:46.6928657Z"", ""time_coinapi"": ""2023-11-24T08:26:46.6928657Z"", ""asks"": [  {   ""price"": 37549.1,   ""size"": 19.23618731  },  {   ""price"": 37549.9,   ""size"": 0.08242079  },  /// other entries omitted for brevity ], ""bids"": [  {   ""price"": 37549.0,   ""size"": 0.136004  },  {   ""price"": 37545.1,  }  /// other entries omitted for brevity ]}Data Analysis and Metrics​Upon data retrieval, the next step involves data analysis using Python. The obtained data typically represents a snapshot of buy and sell orders in the market at a specific moment. This data consists of two key components: bids and asks. Bids signify the price levels at which buyers are willing to acquire an asset, while asks represent the price levels at which sellers are willing to sell it. The difference between the highest bid and the lowest ask is referred to as the spread.Here is a comprehensive list of common metrics and analytical procedures:Order Book Depth - visualize the liquidity available at various price levels.Order Imbalance - analyze the disparity between bids and asks to gain insights into market sentiment.Price Levels - identify significant price levels characterized by substantial volumes of bids or asks.Market Spread - compute the current bid-ask spread as an indicator of market liquidity.Order Book Depth Visualization​In this Python code, we demonstrate how to visualize the order book depth of a cryptocurrency trading pair using Matplotlib.import jsonimport matplotlib.pyplot as plt# Function to read order book data from a JSONdef read_order_book_data(file_path): with open(file_path, 'r') as file:  order_book_data = json.load(file) return order_book_datafile_path = 'order-books-kraken-spot-btc-usd.json'# Read order book data from the file we've obtained in the previous steporder_book_data = read_order_book_data(file_path)# Function to visualize order book depth chartdef visualize_order_book_depth(order_book_data): bids = order_book_data[""bids""] asks = order_book_data[""asks""]  bid_prices = [entry[""price""] for entry in bids] bid_sizes = [entry[""size""] for entry in bids]  ask_prices = [entry[""price""] for entry in asks] ask_sizes = [entry[""size""] for entry in asks]  plt.figure(figsize=(10, 6)) plt.plot(bid_prices, bid_sizes, label=""Bids (buyers)"", color=""green"") plt.plot(ask_prices, ask_sizes, label=""Asks (sellers)"", color=""red"") plt.xlabel(""Price"") plt.ylabel(""Size"") plt.title(""Order Book Depth"") plt.legend() plt.show()# Visualize the order book depthvisualize_order_book_depth(order_book_data)The following visualization is the result of the Python script demonstrated above.Order Book Depth Visualization:is a measure of the quantity of buy and sell orders available for a particular financial assetit provides insight into market liquidity and the willingness of traders to buy or sell at different pricesmay be used for trading decisions, as it reveals potential price trendsOrder Imbalance, Price Levels, Market Spread​In this Python code, we explore order imbalance, significant bids & asks, market spread metrics for a BTC/USD trading pair.import json# Function to read order book data from a JSONdef read_order_book_data(file_path): with open(file_path, 'r') as file:  order_book_data = json.load(file) return order_book_datafile_path = 'order-books-kraken-spot-btc-usd.json'# Read order book data from the file we've obtained in the previous steporder_book_data = read_order_book_data(file_path)# Function to calculate order imbalancedef calculate_order_imbalance(order_book_data): bids = sum(entry[""size""] for entry in order_book_data[""bids""]) asks = sum(entry[""size""] for entry in order_book_data[""asks""]) order_imbalance = (bids - asks) / (bids + asks) return order_imbalance# Function to identify significant price levelsdef identify_significant_price_levels(order_book_data, threshold=50): bids = order_book_data[""bids""] asks = order_book_data[""asks""]  significant_bids = [entry for entry in bids if entry[""size""] > threshold] significant_asks = [entry for entry in asks if entry[""size""] > threshold] return significant_bids, significant_asks# Function to calculate market spreaddef calculate_market_spread(order_book_data): best_bid = order_book_data[""bids""][0][""price""] best_ask = order_book_data[""asks""][0][""price""]  spread = best_ask - best_bid return spread# Common metrics calculationorder_imbalance = calculate_order_imbalance(order_book_data)significant_price_threshold = 20significant_bids, significant_asks = identify_significant_price_levels(order_book_data, significant_price_threshold)spread = calculate_market_spread(order_book_data)print(""******************************"")print(""Order Imbalance:"", order_imbalance)print(""***************************"")print(""Significant Bids:"", significant_bids)print(""***************************"")print(""Significant Asks:"", significant_asks)print(""***************************"")print(""Market Spread:"", spread)print(""***************************"")Result> ******************************> Order Imbalance: -0.012400502029283922> ***************************> Significant Bids: [{'price': 37440.7, 'size': 24.73909889}, {'price': 36451.0, 'size': 25.0}]> ***************************> Significant Asks: [{'price': 37749.0, 'size': 25.0}, {'price': 37840.0, 'size': 24.08119208}, {'price': 38000.0, 'size': 29.60579175}, {'price': 39000.0, 'size': 21.75395535}, {'price': 40000.0, 'size': 58.28620718}]> ***************************> Market Spread: 0.09999999999854481> ***************************Calculated metrics:order_imbalance - it measures the difference between the total volume of buy orders and sell orders. It provides insights into the overall market sentiment by indicating whether there is an excess of buying or selling interest.significant_price_threshold is a predetermined value (set to 20 in this case) used to identify price levels in the order book that are considered significant. It helps traders focus on specific price points that may have a more substantial impact on the market.significant_bids and significant_asks are lists of price levels derived from the order book data that meet or exceed the significant_price_threshold. These levels are typically associated with higher trading activity and may be seen as key support and resistance levels.spread is a metric that calculates the difference between the best bid and best ask prices. It represents the cost of executing a market order and is a fundamental factor for traders to consider when entering or exiting positions.Summary​This tutorial has equipped you with the knowledge and tools necessary to fetch and analyze cryptocurrency order book data using CoinAPI and Python. You've learned how to access real-time order book information, visualize order book depth, and calculate important metrics. Armed with this understanding, you are now better prepared to explore and navigate the cryptocurrency markets, enabling you to make more informed trading decisions and develop data-driven trading strategies. Remember that the cryptocurrency market is highly dynamic, so continuous monitoring and analysis are essential for staying ahead in this exciting and rapidly evolving space. Happy trading! 🚀📈💰Was this section helpful?12345PreviousReal-time trades stream using WebSocket with different languagesNextTrading Essentials: QuickstartAgenda🔥:CoinAPI: The ultimate cryptocurrency API for all your crypto data needs 🚀Let's Begin 🚀Setting Up the API RequestData Analysis and MetricsOrder Book Depth VisualizationOrder Imbalance, Price Levels, Market SpreadSummaryCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/how-to-guides/retrieve-and-analyze-crypto-order-book-data-using-a-cryptocurrency-API)"
35,i.io general faq general How granular is your data,"i.io general faq general How granular is your data.   How granular is your data? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralHow granular is your data?How granular is your data?We have a distinction between aggregated data types and raw data types. OHLCV and Exchange Rates are aggregated, so we need to have some time period in which aggregation is happening. All aggregated data types we have start from 1 SEC interval. If the data type/data stream is not aggregated then we are operating in real-time, disseminating all updates and providing data access in the historical API and flat files (aka tick by tick) through our other website, Cryptotick.com.To see the time periods you can use for Exchange Rates and OHLCV data, please see here: https://docs.coinapi.io/faq/api/What-are-the-time-periods-I-can-use-for-Exchange-Rates-and-OHLCVWas this section helpful?12345PreviousHow does the full orderbook stream work?NextHow is trade volume calculated?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/How-granular-is-your-data)"
36,i.io faq account How can I get an invoice or receipt,"i.io faq account How can I get an invoice or receipt.   How can I get an invoice or receipt? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountHow I can update my credit card / billing information?How can I change my CoinAPI account's email address?How can I get an invoice or receipt?How do I make an account?I want to change my account's name?Managing Team MembersCan I add other users to my account?How do I get an additional API key?APIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQCustomer AccountHow can I get an invoice or receipt?How can I get an invoice or receipt?You can download past invoices or receipts using our Customer Portal Invoices section. Before downloading your documents, make sure all company details are correct and up to date in the Billing Information section as they will appear on the PDFs.Invoices and other billing-related documents or notifications are delivered automatically to all Billing Contacts defined in the Billing Information section of the Customer Portal.To access the Invoices, you need the first login on our website (https://customerportal.coinapi.io/login) using the email associated with your subscription, then simply navigate to Invoices. Only emails related to active or canceled paid subscriptions can log into the Customer Portal, unless the Product Support Team created the Account.Was this section helpful?12345PreviousHow can I change my CoinAPI account's email address?NextHow do I make an account?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/account/How-can-I-get-an-invoice-or-receipt)"
37,i.io general faq api What happens if I exceed my plan REST API daily request limit,"i.io general faq api What happens if I exceed my plan REST API daily request limit.   What happens if I exceed my plan’s REST API daily request limit? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer EMS Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What is the rate limit for EMS Trading API?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQAPIWhat happens if I exceed my plan’s REST API daily request limit?What happens if I exceed my plan’s REST API daily request limit?If your plan is subject to the hard limit on REST API, then you will get an HTTP 429 [1] response status code along with an error message if you exceed your daily limit. For the soft-limited agreements if you exceed your limit on a regular basis, then we will contact you and kindly ask you to upgrade.You may check our Subscription Management API for proper tracking of your usage. [2]References:[1] https://docs.coinapi.io/market-data/rest-api#http-errors [2] https://docs.coinapi.io/management/subscriptionsWas this section helpful?12345PreviousWhat are the time periods I can use for Exchange Rates and OHLCV?NextWhat is the rate limit for EMS Trading API?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/api/What-happens-if-I-exceed-my-plan-REST-API-daily-request-limit)"
38,i.io faq account How do I make an account,"i.io faq account How do I make an account.   How do I make an account? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountHow I can update my credit card / billing information?How can I change my CoinAPI account's email address?How can I get an invoice or receipt?How do I make an account?I want to change my account's name?Managing Team MembersCan I add other users to my account?How do I get an additional API key?APIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQCustomer AccountHow do I make an account?How do I make an account?Only emails related to active or canceled paid subscriptions can log into the Customer Portal, unless the Product Support Team created the Account. Your new account will be set up automatically with your first login if you are our paid customer.Was this section helpful?12345PreviousHow can I get an invoice or receipt?NextI want to change my account's name?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/account/How-do-I-make-an-account)"
39,i.io faq general Is there an SLA agreement available,"i.io faq general Is there an SLA agreement available.   Is there an SLA agreement available? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralIs there an SLA agreement available?Is there an SLA agreement available?Yes, we are providing standard SLA Agreement for all of our paid Plan customers. If you however need a custom SLA agreement, this can be catered to our Enterprise PlanIf you have such requirements, kindly submit a request here: https://share.hsforms.com/1cY_sFZHRT_mjnq3KxoItuQbm7f2Was this section helpful?12345PreviousIs latency higher for the exchanges which are providing only REST API?NextOHLCV Aggregation using the REST APICopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/Is-there-an-SLA-agreement-available)"
40,i.io market data rest api quotes,"i.io market data rest api quotes.   Quotes | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcvOrder BookOrder Book L3Quotes Current data Current quotes for a specific symbol Historical data Latest data Latest quote updates for a specific symbolTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIQuotesQuotesController for retrieving quotes data, also known as quotes or passive level 1 data.📄️ Current dataGet current quotes for all symbols or for a specific symbol.📄️ Current quotes for a specific symbol Current quotes for a specific symbol📄️ Historical dataGet historical quote updates within requested time range, returned in time ascending order.📄️ Latest dataGet latest updates of the quotes up to 1 minute ago. Latest data is always returned in time descending order.📄️ Latest quote updates for a specific symbol Latest quote updates for a specific symbolWas this section helpful?12345Previous Current order booksNext Current dataCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/quotes)"
41,i.io general faq general Can I have multiple subscriptions,"i.io general faq general Can I have multiple subscriptions.   Can I have multiple subscriptions? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralCan I have multiple subscriptions?Can I have multiple subscriptions?Yes, you may have multiple subscriptions.Multiple subscriptions are commonly used when:The software is shipped to multiple third-party's by the customer (eg. self-hosted software)To separate environments inside the company (development, testing, staging, production)To separate multiple independent production sites (EUROPE, ASIA, etc)To separate multiple teams inside the company working on different features or productsWas this section helpful?12345PreviousCan I have multiple API keys in one account?NextCan I participate in the CoinAPI GitHub repository?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/Can-I-have-multiple-subscriptions)"
42,i.io cdn cgi l email protection#91e2e4e1e1fee3e5d1f2fef8fff0e1f8bff8fe,"i.io cdn cgi l email protection#91e2e4e1e1fee3e5d1f2fef8fff0e1f8bff8fe.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 8aad2699dc864125 •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#91e2e4e1e1fee3e5d1f2fef8fff0e1f8bff8fe)"
43,i.io market data rest api quotes quotes current data,"i.io market data rest api quotes quotes current data.   Current data | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcvOrder BookOrder Book L3Quotes Current data Current quotes for a specific symbol Historical data Latest data Latest quote updates for a specific symbolTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIQuotes Current data Current dataGET /v1/quotes/currentGet current quotes for all symbols or for a specific symbol.infoWhen requesting current data for a specific symbol, output is not encapsulated into JSON array as only one item is returned.Query Parametersfilter_symbol_id stringComma or semicolon delimited parts of symbol identifier used to filter response. (optional)Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the quote trade.time_coinapi date-timeThe CoinAPI time when the quote trade was received.ask_price double nullableThe best asking price.ask_size double nullableThe volume resting on the best ask. If the value is equal to zero, then the size is unknown.bid_price double nullableThe best bidding price.bid_size double nullableThe volume resting on the best bid. If the value is equal to zero, then the size is unknown.last_trade objectRepresents the last executed transaction.time_exchange date-timeThe exchange time of the last trade.time_coinapi date-timeThe CoinAPI time when the last trade was received.uuid uuidThe UUID of the last trade.price doubleThe price of the last trade.size doubleThe size of the last trade.taker_side string nullableThe taker side of the last trade.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.270Z"", ""time_coinapi"": ""2024-07-16T12:55:05.270Z"", ""ask_price"": 0, ""ask_size"": 0, ""bid_price"": 0, ""bid_size"": 0, ""last_trade"": {  ""time_exchange"": ""2024-07-16T12:55:05.270Z"",  ""time_coinapi"": ""2024-07-16T12:55:05.270Z"",  ""uuid"": ""3fa85f64-5717-4562-b3fc-2c963f66afa6"",  ""price"": 0,  ""size"": 0,  ""taker_side"": ""string"" } }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124, ""last_trade"": {  ""time_exchange"": ""2017-03-18T22:42:21.3763342Z"",  ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"",  ""uuid"": ""1ea8adc5-6459-47ca-adbf-0c3f8c729bb2"",  ""price"": 770,  ""size"": 0.05,  ""taker_side"": ""SELL"" } }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124, ""last_trade"": {  ""time_exchange"": ""2017-03-18T22:42:21.3763342Z"",  ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"",  ""uuid"": ""1ea8adc5-6459-47ca-adbf-0c3f8c729bb2"",  ""price"": 770,  ""size"": 0.05,  ""taker_side"": ""SELL"" } }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the quote trade.time_coinapi date-timeThe CoinAPI time when the quote trade was received.ask_price double nullableThe best asking price.ask_size double nullableThe volume resting on the best ask. If the value is equal to zero, then the size is unknown.bid_price double nullableThe best bidding price.bid_size double nullableThe volume resting on the best bid. If the value is equal to zero, then the size is unknown.last_trade objectRepresents the last executed transaction.time_exchange date-timeThe exchange time of the last trade.time_coinapi date-timeThe CoinAPI time when the last trade was received.uuid uuidThe UUID of the last trade.price doubleThe price of the last trade.size doubleThe size of the last trade.taker_side string nullableThe taker side of the last trade.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.270Z"", ""time_coinapi"": ""2024-07-16T12:55:05.270Z"", ""ask_price"": 0, ""ask_size"": 0, ""bid_price"": 0, ""bid_size"": 0, ""last_trade"": {  ""time_exchange"": ""2024-07-16T12:55:05.270Z"",  ""time_coinapi"": ""2024-07-16T12:55:05.270Z"",  ""uuid"": ""3fa85f64-5717-4562-b3fc-2c963f66afa6"",  ""price"": 0,  ""size"": 0,  ""taker_side"": ""string"" } }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124, ""last_trade"": {  ""time_exchange"": ""2017-03-18T22:42:21.3763342Z"",  ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"",  ""uuid"": ""1ea8adc5-6459-47ca-adbf-0c3f8c729bb2"",  ""price"": 770,  ""size"": 0.05,  ""taker_side"": ""SELL"" } }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124, ""last_trade"": {  ""time_exchange"": ""2017-03-18T22:42:21.3763342Z"",  ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"",  ""uuid"": ""1ea8adc5-6459-47ca-adbf-0c3f8c729bb2"",  ""price"": 770,  ""size"": 0.05,  ""taker_side"": ""SELL"" } }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the quote trade.time_coinapi date-timeThe CoinAPI time when the quote trade was received.ask_price double nullableThe best asking price.ask_size double nullableThe volume resting on the best ask. If the value is equal to zero, then the size is unknown.bid_price double nullableThe best bidding price.bid_size double nullableThe volume resting on the best bid. If the value is equal to zero, then the size is unknown.last_trade objectRepresents the last executed transaction.time_exchange date-timeThe exchange time of the last trade.time_coinapi date-timeThe CoinAPI time when the last trade was received.uuid uuidThe UUID of the last trade.price doubleThe price of the last trade.size doubleThe size of the last trade.taker_side string nullableThe taker side of the last trade.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.271Z"", ""time_coinapi"": ""2024-07-16T12:55:05.271Z"", ""ask_price"": 0, ""ask_size"": 0, ""bid_price"": 0, ""bid_size"": 0, ""last_trade"": {  ""time_exchange"": ""2024-07-16T12:55:05.271Z"",  ""time_coinapi"": ""2024-07-16T12:55:05.271Z"",  ""uuid"": ""3fa85f64-5717-4562-b3fc-2c963f66afa6"",  ""price"": 0,  ""size"": 0,  ""taker_side"": ""string"" } }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124, ""last_trade"": {  ""time_exchange"": ""2017-03-18T22:42:21.3763342Z"",  ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"",  ""uuid"": ""1ea8adc5-6459-47ca-adbf-0c3f8c729bb2"",  ""price"": 770,  ""size"": 0.05,  ""taker_side"": ""SELL"" } }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124, ""last_trade"": {  ""time_exchange"": ""2017-03-18T22:42:21.3763342Z"",  ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"",  ""uuid"": ""1ea8adc5-6459-47ca-adbf-0c3f8c729bb2"",  ""price"": 770,  ""size"": 0.05,  ""taker_side"": ""SELL"" } }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the quote trade.time_coinapi date-timeThe CoinAPI time when the quote trade was received.ask_price double nullableThe best asking price.ask_size double nullableThe volume resting on the best ask. If the value is equal to zero, then the size is unknown.bid_price double nullableThe best bidding price.bid_size double nullableThe volume resting on the best bid. If the value is equal to zero, then the size is unknown.last_trade objectRepresents the last executed transaction.time_exchange date-timeThe exchange time of the last trade.time_coinapi date-timeThe CoinAPI time when the last trade was received.uuid uuidThe UUID of the last trade.price doubleThe price of the last trade.size doubleThe size of the last trade.taker_side string nullableThe taker side of the last trade.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.271Z"", ""time_coinapi"": ""2024-07-16T12:55:05.271Z"", ""ask_price"": 0, ""ask_size"": 0, ""bid_price"": 0, ""bid_size"": 0, ""last_trade"": {  ""time_exchange"": ""2024-07-16T12:55:05.271Z"",  ""time_coinapi"": ""2024-07-16T12:55:05.271Z"",  ""uuid"": ""3fa85f64-5717-4562-b3fc-2c963f66afa6"",  ""price"": 0,  ""size"": 0,  ""taker_side"": ""string"" } }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124, ""last_trade"": {  ""time_exchange"": ""2017-03-18T22:42:21.3763342Z"",  ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"",  ""uuid"": ""1ea8adc5-6459-47ca-adbf-0c3f8c729bb2"",  ""price"": 770,  ""size"": 0.05,  ""taker_side"": ""SELL"" } }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124, ""last_trade"": {  ""time_exchange"": ""2017-03-18T22:42:21.3763342Z"",  ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"",  ""uuid"": ""1ea8adc5-6459-47ca-adbf-0c3f8c729bb2"",  ""price"": 770,  ""size"": 0.05,  ""taker_side"": ""SELL"" } }]Loading...Was this section helpful?12345PreviousQuotesNext Current quotes for a specific symbolCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/quotes/quotes-current-data)"
44,i.io market data how to guides get historical ohlcv data using coinapi,"i.io market data how to guides get historical ohlcv data using coinapi.   Get Historical OHLCV Data Using CoinAPI | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesAcquire exchange rates with different programming languagesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPIBuilding a cryptocurrency exchange comparison tool using Market Data APICreating a historical crypto price chart using CoinAPI and D3.jsFetching market data with KNIMEGet Historical OHLCV Data Using CoinAPIGet symbol funding rate metric data using CoinAPIImport API into PostmanImport data to Google Sheets/ExcelReal-time data visualization with javascriptReal-time trades stream using WebSocket with different languagesRetrieve and analyze crypto order book data using a cryptocurrency APITrading Essentials: QuickstartPerformance Testing GuideHow-to guidesGet Historical OHLCV Data Using CoinAPIOn this pageGet Historical OHLCV Data Using CoinAPIIntroduction​This tutorial guides you through getting historical OHLCV data using CoinAPI. CoinAPI offers extensive historical data across multiple cryptocurrency markets, which is critical for backtesting trading strategies, performing quantitative research, or even creating visualizations. We will cover how to interact with our historical data endpoints using Python, JavaScript, and Java.Understanding CoinAPI Endpoints​CoinAPI provides several endpoints for accessing historical data, including:ohlcv/period_id/history: Provides historical OHLCV (Open, High, Low, Close, Volume) data for specified periods.trades/symbol_id/history: Returns historical trades.quotes/symbol_id/history: Provides historical quotes.Remember, you need to replace period_Id and symbol_id with your desired period and symbol respectively.Python Example​Using Python, we can use the requests library to interact with CoinAPI. If you don't have the requests library installed, you can add it using pip:pip install requestsHere's an example:import requestsdef fetch_ohlcv(): url = ""https://rest.coinapi.io/v1/ohlcv/BINANCE_SPOT_ETH_BTC/history?period_id=1MTH&time_start=2023-03-01T00:00:00"" headers = { ""X-CoinAPI-Key"": ""YOUR_API_KEY"" } # Replace with your API key response = requests.get(url, headers=headers) # Check if the response is successful if response.status_code == 200:  if response.content:   return response.json()  else:   print(""Response is empty."")   return None else:  # Handle other HTTP status codes  print(f""Failed to fetch data. Status code: {response.status_code}"")  return None print(fetch_ohlcv())This script fetches the monthly OHLCV data for the ETH/BTC trading pair from the BINANCE exchange. Here, BINANCE serves as the exchange platform, with ETH being the base asset and BTC as the quote asset.Note: Don't forget to replace YOUR-API-KEY with your actual API key.JavaScript Example​Make sure to install the nodejs runtime environment before. In JavaScript, we can use the fetch API for sending requests to CoinAPI:First, add package.json with node-fetch dependency:{ ""type"": ""module"", ""dependencies"": { ""node-fetch"": ""^3.3.1"" }}Add the following code and run npm install to install dependencies.import fetch from 'node-fetch';fetch('https://rest.coinapi.io/v1/ohlcv/BINANCE_SPOT_ETH_BTC/history?period_id=1MTH&time_start=2023-03-01T00:00:00', { headers: { ""X-CoinAPI-Key"": ""YOUR_API_KEY"" // Replace with your API key }}).then(response => response.json()).then(data => console.log(data)).catch(error => console.error('Error:', error));This script fetches the monthly OHLCV data for the ETH/BTC trading pair from the BINANCE exchange. Here, BINANCE serves as the exchange platform, with ETH being the base asset and BTC as the quote asset.Note: Don't forget to replace YOUR-API-KEY with your actual API key.Java Example​In Java, we can use the HttpURLConnection class to send HTTP requests:import java.net.HttpURLConnection;import java.net.URL;import java.io.BufferedReader;import java.io.InputStreamReader;public class Main { private static final String API_KEY = ""YOUR-API-KEY""; // Replace with your API key public static void main(String[] args) throws Exception {  URL url = new URL(""https://rest.coinapi.io/v1/ohlcv/BINANCE_SPOT_ETH_BTC/history?period_id=1MTH&time_start=2023-03-01T00:00:00"");  HttpURLConnection conn = (HttpURLConnection) url.openConnection();  conn.setRequestProperty(""X-CoinAPI-Key"", API_KEY);  BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()));  String inputLine;  StringBuffer content = new StringBuffer();  while ((inputLine = in.readLine()) != null) {   content.append(inputLine);  }  in.close();  conn.disconnect();  System.out.println(content.toString()); }}This script fetches the monthly OHLCV data for the ETH/BTC trading pair from the BINANCE exchange. Here, BINANCE serves as the exchange platform, with ETH being the base asset and BTC as the quote asset.Note: Don't forget to replace YOUR-API-KEY with your actual API key.Best Practices​Store API keys securely: never hard-code API keys. Instead, store them in secure configuration files or environment variables.Handle rate limiting: be aware of CoinAPI's rate limits and handle 429 HTTP status codes gracefully in your application.Efficient data fetching: use query parameters like time_start and limit effectively to get the data you need without excess.Troubleshooting​In case you face any issues, ensure the following:Your API key is correct and has the necessary permissions.You are not exceeding the rate limit for your account type.You are using the correct endpoint with proper request headers.The symbol and period IDs you are using are valid and in the correct format.You have the correct libraries or dependencies installed, and you're using a supported version of the language.For more information, you can check REST API OHLVC docsWas this section helpful?12345PreviousFetching market data with KNIMENextGet symbol funding rate metric data using CoinAPIIntroductionUnderstanding CoinAPI EndpointsPython ExampleJavaScript ExampleJava ExampleCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/how-to-guides/get-historical-ohlcv-data-using-coinapi)"
45,i.io general faq general I forgot my paid subscription API key,"i.io general faq general I forgot my paid subscription API key.   I forgot my paid subscription API key | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralI forgot my paid subscription API keyI forgot my paid subscription API keyYou should also be able to see your API key in the Customer Support portal when logged in.1. Log in to the Customer Portal using the email address you used for your subscription.2. Go to the Metrics section.3. You will be able to see your key under Filters > API keys.Reference: [1] https://customerportal.coinapi.io/metricsWas this section helpful?12345PreviousI didn't receive an emailNextI hardly use the REST API, why is my usage so high?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/I-forgot-my-paid-subscription-API-key)"
46,i.io general faq general Are subscription payments executed automatically,"i.io general faq general Are subscription payments executed automatically.   Are subscription payments executed automatically? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralAre subscription payments executed automatically?Are subscription payments executed automatically?Yes, subscription payments are executed automatically on your primary payment method when the subscription remains active.Was this section helpful?12345PreviousAPI Usage LimitsNextAre you planning to add an order exchange fee feature?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/Are-subscription-payments-executed-automatically)"
47,i.io faq general Can I participate in the CoinAPI GitHub repository,"i.io faq general Can I participate in the CoinAPI GitHub repository.   Can I participate in the CoinAPI GitHub repository? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralCan I participate in the CoinAPI GitHub repository?Can I participate in the CoinAPI GitHub repository?Yes, please do!Sign in on the GitHubFork our main GitHub repository: https://github.com/coinapi/coinapi-sdkWork on the changes and push them into your forked repositoryWhen you are ready to share the changes with us. Create ""Pull Request” to our main repository with a short description of the changes.Was this section helpful?12345PreviousCan I have multiple subscriptions?NextCan I use the API commercially to show prices on my website?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/Can-I-participate-in-the-CoinAPI-GitHub-repository)"
48,i.io market data rest api trades trades latest data,"i.io market data rest api trades trades latest data.   Latest data | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcvOrder BookOrder Book L3QuotesTrades Historical data Latest data by symbol_id Latest dataWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APITrades Latest data Latest dataGET /v1/trades/latestGet latest trades executed up to 1 minute ago. Latest data is always returned in time descending order.Query Parametersfilter_symbol_id stringComma or semicolon delimited parts of symbol identifier used to filter response. (optional)include_id booleanInformation that additional exchange trade identifier should be included in the id_trade parameter of the trade if exchange providing identifiers.limit int32Default value: 100Amount of items to return (optional, mininum is 1, maximum is 100000, default value is 100, if the parameter is used then every 100 output items are counted as one request)Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe time of trade reported by the exchange.time_coinapi date-timeThe time when the trade was received by CoinAPI.uuid uuidThe unique identifier for the trade.price doubleThe price of the transaction.size doubleThe base asset amount traded in the transaction.taker_side string nullableThe aggressor side of the transaction (BUY/SELL/BUY_ESTIMATED/SELL_ESTIMATED/UNKNOWN).id_trade string nullableThe trade identifier.id_order_maker string nullableThe order maker identifier.id_order_taker string nullableThe order taker identifier.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.291Z"", ""time_coinapi"": ""2024-07-16T12:55:05.291Z"", ""uuid"": ""3fa85f64-5717-4562-b3fc-2c963f66afa6"", ""price"": 0, ""size"": 0, ""taker_side"": ""string"", ""id_trade"": ""string"", ""id_order_maker"": ""string"", ""id_order_taker"": ""string"" }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""uuid"": ""770c7a3b-7258-4441-8182-83740f3e2457"", ""price"": 770, ""size"": 0.05, ""taker_side"": ""BUY"" }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T23:12:59.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""uuid"": ""1ea8adc5-6459-47ca-adbf-0c3f8c729bb2"", ""price"": 770, ""size"": 0.05, ""taker_side"": ""SELL"" }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe time of trade reported by the exchange.time_coinapi date-timeThe time when the trade was received by CoinAPI.uuid uuidThe unique identifier for the trade.price doubleThe price of the transaction.size doubleThe base asset amount traded in the transaction.taker_side string nullableThe aggressor side of the transaction (BUY/SELL/BUY_ESTIMATED/SELL_ESTIMATED/UNKNOWN).id_trade string nullableThe trade identifier.id_order_maker string nullableThe order maker identifier.id_order_taker string nullableThe order taker identifier.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.291Z"", ""time_coinapi"": ""2024-07-16T12:55:05.291Z"", ""uuid"": ""3fa85f64-5717-4562-b3fc-2c963f66afa6"", ""price"": 0, ""size"": 0, ""taker_side"": ""string"", ""id_trade"": ""string"", ""id_order_maker"": ""string"", ""id_order_taker"": ""string"" }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""uuid"": ""770c7a3b-7258-4441-8182-83740f3e2457"", ""price"": 770, ""size"": 0.05, ""taker_side"": ""BUY"" }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T23:12:59.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""uuid"": ""1ea8adc5-6459-47ca-adbf-0c3f8c729bb2"", ""price"": 770, ""size"": 0.05, ""taker_side"": ""SELL"" }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe time of trade reported by the exchange.time_coinapi date-timeThe time when the trade was received by CoinAPI.uuid uuidThe unique identifier for the trade.price doubleThe price of the transaction.size doubleThe base asset amount traded in the transaction.taker_side string nullableThe aggressor side of the transaction (BUY/SELL/BUY_ESTIMATED/SELL_ESTIMATED/UNKNOWN).id_trade string nullableThe trade identifier.id_order_maker string nullableThe order maker identifier.id_order_taker string nullableThe order taker identifier.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.291Z"", ""time_coinapi"": ""2024-07-16T12:55:05.291Z"", ""uuid"": ""3fa85f64-5717-4562-b3fc-2c963f66afa6"", ""price"": 0, ""size"": 0, ""taker_side"": ""string"", ""id_trade"": ""string"", ""id_order_maker"": ""string"", ""id_order_taker"": ""string"" }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""uuid"": ""770c7a3b-7258-4441-8182-83740f3e2457"", ""price"": 770, ""size"": 0.05, ""taker_side"": ""BUY"" }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T23:12:59.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""uuid"": ""1ea8adc5-6459-47ca-adbf-0c3f8c729bb2"", ""price"": 770, ""size"": 0.05, ""taker_side"": ""SELL"" }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe time of trade reported by the exchange.time_coinapi date-timeThe time when the trade was received by CoinAPI.uuid uuidThe unique identifier for the trade.price doubleThe price of the transaction.size doubleThe base asset amount traded in the transaction.taker_side string nullableThe aggressor side of the transaction (BUY/SELL/BUY_ESTIMATED/SELL_ESTIMATED/UNKNOWN).id_trade string nullableThe trade identifier.id_order_maker string nullableThe order maker identifier.id_order_taker string nullableThe order taker identifier.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.291Z"", ""time_coinapi"": ""2024-07-16T12:55:05.291Z"", ""uuid"": ""3fa85f64-5717-4562-b3fc-2c963f66afa6"", ""price"": 0, ""size"": 0, ""taker_side"": ""string"", ""id_trade"": ""string"", ""id_order_maker"": ""string"", ""id_order_taker"": ""string"" }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""uuid"": ""770c7a3b-7258-4441-8182-83740f3e2457"", ""price"": 770, ""size"": 0.05, ""taker_side"": ""BUY"" }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T23:12:59.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""uuid"": ""1ea8adc5-6459-47ca-adbf-0c3f8c729bb2"", ""price"": 770, ""size"": 0.05, ""taker_side"": ""SELL"" }]Loading...Was this section helpful?12345Previous Latest data by symbol_idNextWebSocket API V1Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/trades/trades-latest-data)"
49,i.io faq general How long does it take to integrate CoinAPI,"i.io faq general How long does it take to integrate CoinAPI.   How long does it take to integrate CoinAPI? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralHow long does it take to integrate CoinAPI?How long does it take to integrate CoinAPI?We will deliver an API key to your email address within a minute after you subscribe. With this key, you can use our API right away. The integration component is up to you: it can take just five minutes for simple projects or several days for most complicated ones.Was this section helpful?12345PreviousHow is trade volume calculated?NextHow to avoid losing the messages or delay on the WebSocket?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/How-long-does-it-take-to-integrate-CoinAPI)"
50,i.io cdn cgi l email protection#d2a1a7a2a2bda0a692b1bdbbbcb3a2bbfcbbbd,"i.io cdn cgi l email protection#d2a1a7a2a2bda0a692b1bdbbbcb3a2bbfcbbbd.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 86784d411d753bbd •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#d2a1a7a2a2bda0a692b1bdbbbcb3a2bbfcbbbd)"
51,i.io naas api ethereum Methods getBeaconBlocksAttestations,"i.io naas api ethereum Methods getBeaconBlocksAttestations.   getBeaconBlocksAttestations | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodsgetBeaconBlocksAttestationsOn this pagegetBeaconBlocksAttestationsOverview​The 'getBeaconBlocksAttestations' method retrieves attestations for a specified beacon block in the Ethereum blockchain.Request​{ ""block_id"": ""YOUR_BLOCK_ID""}Request Parameters​'block_id': The unique identifier for the beacon block for which you want to retrieve attestations.Response​{ ""block_id"": ""YOUR_BLOCK_ID"", ""attestations"": [ {  ""aggregation_bits"": ""DATA"",  ""data"": {  ""slot"": ""DATA"",  ""index"": ""DATA"",  ""beacon_block_root"": ""DATA"",  ""source"": ""DATA"",  ""target"": ""DATA""  },  ""signature"": ""DATA"" } // ... more attestations ]}Was this section helpful?12345Previouseth_unsubscribeNextgetBlockByRootOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/getBeaconBlocksAttestations)"
52,i.io faq billing and subscriptions How to reactivate my canceled subscription,"i.io faq billing and subscriptions How to reactivate my canceled subscription.   How to reactivate my canceled subscription? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIBilling and SubscriptionsCan I cancel my subscription anytime?Can I still use my API key if I cancel my subscription?How to reactivate my canceled subscription?How to subscribe to the API?How to upgrade/downgrade my subscription?Security and PrivacyCustomer PortalChangelogFAQBilling and SubscriptionsHow to reactivate my canceled subscription?How to reactivate my canceled subscription?If your subscription was marked for cancelation using the customer portal and your billing period date has not passed, then you can still reactivate it by logging into the Customer Portal (https://customerportal.coinapi.io/login) and navigating to Subscriptions > Manage Subscriptions, you will be able to resume the subscription here. If you also selected to pause your subscription, you may also resume it again here.If your subscription was marked for cancelation and your current billing period date has already passed, then you must acquire a new subscription from our Pricing page (https://www.coinapi.io/market-data-api/pricing) or contact support.Was this section helpful?12345PreviousCan I still use my API key if I cancel my subscription?NextHow to subscribe to the API?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/billing-and-subscriptions/How-to-reactivate-my-canceled-subscription)"
53,i.io cdn cgi l email protection#2f5c5a5f5f405d5b6f4c4046414e5f46014640,"i.io cdn cgi l email protection#2f5c5a5f5f405d5b6f4c4046414e5f46014640.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 8aad27d11fb2b36b •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#2f5c5a5f5f405d5b6f4c4046414e5f46014640)"
54,i.io market data rest api trades trades latest data by symbol id,"i.io market data rest api trades trades latest data by symbol id.   Latest data by symbol_id | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcvOrder BookOrder Book L3QuotesTrades Historical data Latest data by symbol_id Latest dataWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APITrades Latest data by symbol_id Latest data by symbol_idGET /v1/trades/:symbol_id/latestGet latest trades executed up to 1 minute ago. Latest data is always returned in time descending order.Path Parameterssymbol_id string requiredSymbol identifier for requested timeseries (from the Metadata -> Symbols)Query Parameterslimit int32Default value: 100Amount of items to return (optional, mininum is 1, maximum is 100000, default value is 100, if the parameter is used then every 100 output items are counted as one request)include_id booleanInformation that additional exchange trade identifier should be included in the id_trade parameter of the trade if exchange providing identifiers.Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe time of trade reported by the exchange.time_coinapi date-timeThe time when the trade was received by CoinAPI.uuid uuidThe unique identifier for the trade.price doubleThe price of the transaction.size doubleThe base asset amount traded in the transaction.taker_side string nullableThe aggressor side of the transaction (BUY/SELL/BUY_ESTIMATED/SELL_ESTIMATED/UNKNOWN).id_trade string nullableThe trade identifier.id_order_maker string nullableThe order maker identifier.id_order_taker string nullableThe order taker identifier.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.290Z"", ""time_coinapi"": ""2024-07-16T12:55:05.290Z"", ""uuid"": ""3fa85f64-5717-4562-b3fc-2c963f66afa6"", ""price"": 0, ""size"": 0, ""taker_side"": ""string"", ""id_trade"": ""string"", ""id_order_maker"": ""string"", ""id_order_taker"": ""string"" }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""uuid"": ""770c7a3b-7258-4441-8182-83740f3e2457"", ""price"": 770, ""size"": 0.05, ""taker_side"": ""BUY"" }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T23:12:59.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""uuid"": ""1ea8adc5-6459-47ca-adbf-0c3f8c729bb2"", ""price"": 770, ""size"": 0.05, ""taker_side"": ""SELL"" }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe time of trade reported by the exchange.time_coinapi date-timeThe time when the trade was received by CoinAPI.uuid uuidThe unique identifier for the trade.price doubleThe price of the transaction.size doubleThe base asset amount traded in the transaction.taker_side string nullableThe aggressor side of the transaction (BUY/SELL/BUY_ESTIMATED/SELL_ESTIMATED/UNKNOWN).id_trade string nullableThe trade identifier.id_order_maker string nullableThe order maker identifier.id_order_taker string nullableThe order taker identifier.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.290Z"", ""time_coinapi"": ""2024-07-16T12:55:05.290Z"", ""uuid"": ""3fa85f64-5717-4562-b3fc-2c963f66afa6"", ""price"": 0, ""size"": 0, ""taker_side"": ""string"", ""id_trade"": ""string"", ""id_order_maker"": ""string"", ""id_order_taker"": ""string"" }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""uuid"": ""770c7a3b-7258-4441-8182-83740f3e2457"", ""price"": 770, ""size"": 0.05, ""taker_side"": ""BUY"" }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T23:12:59.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""uuid"": ""1ea8adc5-6459-47ca-adbf-0c3f8c729bb2"", ""price"": 770, ""size"": 0.05, ""taker_side"": ""SELL"" }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe time of trade reported by the exchange.time_coinapi date-timeThe time when the trade was received by CoinAPI.uuid uuidThe unique identifier for the trade.price doubleThe price of the transaction.size doubleThe base asset amount traded in the transaction.taker_side string nullableThe aggressor side of the transaction (BUY/SELL/BUY_ESTIMATED/SELL_ESTIMATED/UNKNOWN).id_trade string nullableThe trade identifier.id_order_maker string nullableThe order maker identifier.id_order_taker string nullableThe order taker identifier.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.290Z"", ""time_coinapi"": ""2024-07-16T12:55:05.290Z"", ""uuid"": ""3fa85f64-5717-4562-b3fc-2c963f66afa6"", ""price"": 0, ""size"": 0, ""taker_side"": ""string"", ""id_trade"": ""string"", ""id_order_maker"": ""string"", ""id_order_taker"": ""string"" }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""uuid"": ""770c7a3b-7258-4441-8182-83740f3e2457"", ""price"": 770, ""size"": 0.05, ""taker_side"": ""BUY"" }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T23:12:59.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""uuid"": ""1ea8adc5-6459-47ca-adbf-0c3f8c729bb2"", ""price"": 770, ""size"": 0.05, ""taker_side"": ""SELL"" }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe time of trade reported by the exchange.time_coinapi date-timeThe time when the trade was received by CoinAPI.uuid uuidThe unique identifier for the trade.price doubleThe price of the transaction.size doubleThe base asset amount traded in the transaction.taker_side string nullableThe aggressor side of the transaction (BUY/SELL/BUY_ESTIMATED/SELL_ESTIMATED/UNKNOWN).id_trade string nullableThe trade identifier.id_order_maker string nullableThe order maker identifier.id_order_taker string nullableThe order taker identifier.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.290Z"", ""time_coinapi"": ""2024-07-16T12:55:05.290Z"", ""uuid"": ""3fa85f64-5717-4562-b3fc-2c963f66afa6"", ""price"": 0, ""size"": 0, ""taker_side"": ""string"", ""id_trade"": ""string"", ""id_order_maker"": ""string"", ""id_order_taker"": ""string"" }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""uuid"": ""770c7a3b-7258-4441-8182-83740f3e2457"", ""price"": 770, ""size"": 0.05, ""taker_side"": ""BUY"" }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T23:12:59.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""uuid"": ""1ea8adc5-6459-47ca-adbf-0c3f8c729bb2"", ""price"": 770, ""size"": 0.05, ""taker_side"": ""SELL"" }]Loading...Was this section helpful?12345Previous Historical dataNext Latest dataCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/trades/trades-latest-data-by-symbol-id)"
55,i.io ems api managed cloud rest api endpoints,i.io ems api managed cloud rest api endpoints.   Endpoints | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIAccountCertificateEndpointsGet API endpointsExchangeLocationREST APIWebSocket APIFIX APISelf Hosted GuideManaged Cloud REST APIEndpointsEndpointsIn the endpoint section we provide information about the EMS API endpoints to the server sites used in the EMS API deployment for your API Key.📄️ Get API endpointsGet all API endpoints that the EMS API expose for your subscription.Was this section helpful?12345PreviousGet authentication certificateNextGet API endpointsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/managed-cloud-rest-api/endpoints)
56,i.io general faq general What exchanges are supported,"i.io general faq general What exchanges are supported.   What exchanges are supported? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralWhat exchanges are supported?On this pageWhat exchanges are supported?Market Data API​You may query https://rest.coinapi.io/v1/exchanges via our API to get the list of supported exchanges.EMS API​Here is a list of the supported exchanges for the EMS API:BINANCEBINANCEFTSBINANCEFTSCBINANCEFTSCUAT BINANCEFTSUAT BINANCEOPTVBINANCEOPTVUAT BINANCEUATBINANCEUSBITFINEXBITMEXBITMEXUAT BITSTAMPBLOCKCHAINEXCHANGECOINBASEDERIBITDERIBITUATGEMINIHITBTCKRAKENKRAKENFTSLMAXDIGITALLMAXDIGITALUATPOLONIEXIf you want to learn more about the EMS API, please refer to our documentation: https://docs.coinapi.io/ems-apiWas this section helpful?12345PreviousWhat data is delivered using the local sites?NextWhat is CoinAPI?Market Data APIEMS APICopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/What-exchanges-are-supported)"
57,i.io market data rest api exchange rates exchange rates timeseries periods,"i.io market data rest api exchange rates exchange rates timeseries periods.   Timeseries periods | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange Rates Get all current rates Timeseries data Timeseries periods Get specific rateIndexesMetadataMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIExchange Rates Timeseries periods Timeseries periodsGET /v1/exchangerate/history/periodsYou can also obtain historical exchange rates of any asset pair, grouped into time periods. Get full list of supported time periods available for requesting exchange rates historical timeseries data.Timeseries periods​Time unitPeriod identifiersSecond1SEC, 2SEC, 3SEC, 4SEC, 5SEC, 6SEC, 10SEC, 15SEC, 20SEC, 30SECMinute1MIN, 2MIN, 3MIN, 4MIN, 5MIN, 6MIN, 10MIN, 15MIN, 20MIN, 30MINHour1HRS, 2HRS, 3HRS, 4HRS, 6HRS, 8HRS, 12HRSDay1DAY, 2DAY, 3DAY, 5DAY, 7DAY, 10DAYResponses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [period_id string nullableThe period ID.length_seconds int32The length of the period in seconds.length_months int32The length of the period in months.unit_count int32 nullableThe unit count.unit_name string nullableThe unit name.display_name string nullableThe display name of the timeseries period.][ { ""period_id"": ""string"", ""length_seconds"": 0, ""length_months"": 0, ""unit_count"": 0, ""unit_name"": ""string"", ""display_name"": ""string"" }][ { ""period_id"": ""1SEC"", ""length_seconds"": 1, ""length_months"": 0, ""unit_count"": 1, ""unit_name"": ""second"", ""display_name"": ""1 Second"" }, { ""period_id"": ""30MIN"", ""length_seconds"": 1800, ""length_months"": 0, ""unit_count"": 30, ""unit_name"": ""minute"", ""display_name"": ""30 Minutes"" }, { ""period_id"": ""10DAY"", ""length_seconds"": 864000, ""length_months"": 0, ""unit_count"": 10, ""unit_name"": ""day"", ""display_name"": ""10 Days"" }]SchemaExample (from schema)Example responseSchemaArray [period_id string nullableThe period ID.length_seconds int32The length of the period in seconds.length_months int32The length of the period in months.unit_count int32 nullableThe unit count.unit_name string nullableThe unit name.display_name string nullableThe display name of the timeseries period.][ { ""period_id"": ""string"", ""length_seconds"": 0, ""length_months"": 0, ""unit_count"": 0, ""unit_name"": ""string"", ""display_name"": ""string"" }][ { ""period_id"": ""1SEC"", ""length_seconds"": 1, ""length_months"": 0, ""unit_count"": 1, ""unit_name"": ""second"", ""display_name"": ""1 Second"" }, { ""period_id"": ""30MIN"", ""length_seconds"": 1800, ""length_months"": 0, ""unit_count"": 30, ""unit_name"": ""minute"", ""display_name"": ""30 Minutes"" }, { ""period_id"": ""10DAY"", ""length_seconds"": 864000, ""length_months"": 0, ""unit_count"": 10, ""unit_name"": ""day"", ""display_name"": ""10 Days"" }]SchemaExample (from schema)Example responseSchemaArray [period_id string nullableThe period ID.length_seconds int32The length of the period in seconds.length_months int32The length of the period in months.unit_count int32 nullableThe unit count.unit_name string nullableThe unit name.display_name string nullableThe display name of the timeseries period.][ { ""period_id"": ""string"", ""length_seconds"": 0, ""length_months"": 0, ""unit_count"": 0, ""unit_name"": ""string"", ""display_name"": ""string"" }][ { ""period_id"": ""1SEC"", ""length_seconds"": 1, ""length_months"": 0, ""unit_count"": 1, ""unit_name"": ""second"", ""display_name"": ""1 Second"" }, { ""period_id"": ""30MIN"", ""length_seconds"": 1800, ""length_months"": 0, ""unit_count"": 30, ""unit_name"": ""minute"", ""display_name"": ""30 Minutes"" }, { ""period_id"": ""10DAY"", ""length_seconds"": 864000, ""length_months"": 0, ""unit_count"": 10, ""unit_name"": ""day"", ""display_name"": ""10 Days"" }]SchemaExample (from schema)Example responseSchemaArray [period_id string nullableThe period ID.length_seconds int32The length of the period in seconds.length_months int32The length of the period in months.unit_count int32 nullableThe unit count.unit_name string nullableThe unit name.display_name string nullableThe display name of the timeseries period.][ { ""period_id"": ""string"", ""length_seconds"": 0, ""length_months"": 0, ""unit_count"": 0, ""unit_name"": ""string"", ""display_name"": ""string"" }][ { ""period_id"": ""1SEC"", ""length_seconds"": 1, ""length_months"": 0, ""unit_count"": 1, ""unit_name"": ""second"", ""display_name"": ""1 Second"" }, { ""period_id"": ""30MIN"", ""length_seconds"": 1800, ""length_months"": 0, ""unit_count"": 30, ""unit_name"": ""minute"", ""display_name"": ""30 Minutes"" }, { ""period_id"": ""10DAY"", ""length_seconds"": 864000, ""length_months"": 0, ""unit_count"": 10, ""unit_name"": ""day"", ""display_name"": ""10 Days"" }]Loading...Was this section helpful?12345Previous Timeseries dataNext Get specific rateCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/exchange-rates/exchange-rates-timeseries-periods)"
58,i.io naas api bitcoin Methods keypoolrefill,"i.io naas api bitcoin Methods keypoolrefill.   keypoolrefill | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodskeypoolrefillOn this pagekeypoolrefillOverview​The 'keypoolrefill' method Fills the keypool.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""keypoolrefill"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""keypoolrefill\"",\""params\"": [ ]}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""keypoolrefill"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection(""mainnet-bitcoin.node.coinapi.io"")payload = json.dumps({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""keypoolrefill"",""params"": []})headers = {'Content-Type': 'application/json','accept': 'application/json','X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}conn.request(""POST"", ""/"", payload, headers)res = conn.getresponse()data = res.read()print(data.decode(""utf-8""))var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""keypoolrefill"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""id"":1,""method"":""keypoolrefill"",""params"": [ ]}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""keypoolrefill"", ""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""keypoolrefill\"",\""params\"": [ ]}"");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​newsize: The new keypool sizeResponse​{ // Response structure here}Was this section helpful?12345PreviousimportwalletNextlistReceivedByAddressOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/keypoolrefill)"
59,i.io market data rest api metadata list symbol mapping for the exchange,"i.io market data rest api metadata list symbol mapping for the exchange.   List symbol mapping for the exchange | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataList all asset iconsList all assets by asset IDList all assetsList all exchanges by exchange_idList all exchangesList all symbolsList of icons for the exchangesList of symbols for the exchangeList symbol mapping for the exchangeMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIMetadataList symbol mapping for the exchangeList symbol mapping for the exchangeGET /v1/symbols/map/:exchange_idList symbol mapping for the exchangePath Parametersexchange_id string requiredThe ID of the exchange (from the Metadata -> Exchanges)Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)SchemaArray [symbol_id string nullableThe symbol ID.symbol_id_exchange string nullableThe exchange-specific symbol ID.asset_id_base_exchange string nullableThe exchange-specific base asset ID.asset_id_quote_exchange string nullableThe exchange-specific quote asset ID.asset_id_base string nullableThe base asset ID.asset_id_quote string nullableThe quote asset ID.price_precision double nullableThe price precision.size_precision double nullableThe size precision.][ { ""symbol_id"": ""string"", ""symbol_id_exchange"": ""string"", ""asset_id_base_exchange"": ""string"", ""asset_id_quote_exchange"": ""string"", ""asset_id_base"": ""string"", ""asset_id_quote"": ""string"", ""price_precision"": 0, ""size_precision"": 0 }]SchemaExample (from schema)SchemaArray [symbol_id string nullableThe symbol ID.symbol_id_exchange string nullableThe exchange-specific symbol ID.asset_id_base_exchange string nullableThe exchange-specific base asset ID.asset_id_quote_exchange string nullableThe exchange-specific quote asset ID.asset_id_base string nullableThe base asset ID.asset_id_quote string nullableThe quote asset ID.price_precision double nullableThe price precision.size_precision double nullableThe size precision.][ { ""symbol_id"": ""string"", ""symbol_id_exchange"": ""string"", ""asset_id_base_exchange"": ""string"", ""asset_id_quote_exchange"": ""string"", ""asset_id_base"": ""string"", ""asset_id_quote"": ""string"", ""price_precision"": 0, ""size_precision"": 0 }]SchemaExample (from schema)SchemaArray [symbol_id string nullableThe symbol ID.symbol_id_exchange string nullableThe exchange-specific symbol ID.asset_id_base_exchange string nullableThe exchange-specific base asset ID.asset_id_quote_exchange string nullableThe exchange-specific quote asset ID.asset_id_base string nullableThe base asset ID.asset_id_quote string nullableThe quote asset ID.price_precision double nullableThe price precision.size_precision double nullableThe size precision.][ { ""symbol_id"": ""string"", ""symbol_id_exchange"": ""string"", ""asset_id_base_exchange"": ""string"", ""asset_id_quote_exchange"": ""string"", ""asset_id_base"": ""string"", ""asset_id_quote"": ""string"", ""price_precision"": 0, ""size_precision"": 0 }]SchemaExample (from schema)SchemaArray [symbol_id string nullableThe symbol ID.symbol_id_exchange string nullableThe exchange-specific symbol ID.asset_id_base_exchange string nullableThe exchange-specific base asset ID.asset_id_quote_exchange string nullableThe exchange-specific quote asset ID.asset_id_base string nullableThe base asset ID.asset_id_quote string nullableThe quote asset ID.price_precision double nullableThe price precision.size_precision double nullableThe size precision.][ { ""symbol_id"": ""string"", ""symbol_id_exchange"": ""string"", ""asset_id_base_exchange"": ""string"", ""asset_id_quote_exchange"": ""string"", ""asset_id_base"": ""string"", ""asset_id_quote"": ""string"", ""price_precision"": 0, ""size_precision"": 0 }]Loading...Was this section helpful?12345PreviousList of symbols for the exchangeNextMetricsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/metadata/list-symbol-mapping-for-the-exchange)"
60,i.io market data rest api metrics current metrics for given symbol,"i.io market data rest api metrics current metrics for given symbol.   Current metrics for given symbol | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsCurrent metrics for given assetCurrent metrics for given exchangeCurrent metrics for given symbolHistorical metrics for assetHistorical metrics for symbolHistorical metrics for the exchangeListing of all supported metrics by CoinAPIListing of all supported exchange metricsListing of all supported metrics for assetListing of all supported metrics for symbolOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIMetricsCurrent metrics for given symbolCurrent metrics for given symbolGET /v1/metrics/symbol/currentGet current symbol metrics.Query Parametersmetric_id stringMetric identifier (from the Metrics -> Listing)symbol_id stringSymbol identifier (from the Metadata -> Symbols)exchange_id stringExchange id (from the Metadata -> Exchanges)Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [entry_time date-timeGets or sets the entry time for the data point.recv_time date-timeGets or sets the received time for the data point.exchange_id string nullableGets or sets the identifier for the exchange.asset_id string nullableGets or sets the identifier for the asset.symbol_id string nullableGets or sets the identifier for the symbol.metric_id string nullableGets or sets the identifier for the metric.value_decimal double nullableGets or sets the decimal value for the metric.value_text string nullableGets or sets the textual representation of the value for the metric.value_time date-time nullableGets or sets the timestamp value for the metric.][ { ""entry_time"": ""2024-07-16T12:55:05.258Z"", ""recv_time"": ""2024-07-16T12:55:05.258Z"", ""exchange_id"": ""string"", ""asset_id"": ""string"", ""symbol_id"": ""string"", ""metric_id"": ""string"", ""value_decimal"": 0, ""value_text"": ""string"", ""value_time"": ""2024-07-16T12:55:05.258Z"" }][ { ""entry_time"": ""2023-06-23T12:38:48.2782698Z"", ""recv_time"": ""2023-06-23T12:38:48.0140000Z"", ""exchange_id"": ""DERIBITUAT"", ""symbol_id"": ""DERIBIT_OPT_BTC_USD_240329_80000_P"", ""metric_id"": ""GREEKS_RHO"", ""value_decimal"": -594.10357 }, { ""entry_time"": ""2023-06-23T12:38:48.2782698Z"", ""recv_time"": ""2023-06-23T12:38:48.0140000Z"", ""exchange_id"": ""DERIBIT"", ""symbol_id"": ""DERIBIT_OPT_BTC_USD_240329_80000_P"", ""metric_id"": ""GREEKS_VEGA"", ""value_decimal"": 49.31013 }, { ""entry_time"": ""2023-06-23T12:38:48.2782698Z"", ""recv_time"": ""2023-06-23T12:38:48.0140000Z"", ""exchange_id"": ""DERIBIT"", ""symbol_id"": ""DERIBIT_OPT_BTC_USD_240329_80000_P"", ""metric_id"": ""GREEKS_THETA"", ""value_decimal"": -6.14104 }, { ""entry_time"": ""2023-06-23T12:38:48.2782698Z"", ""recv_time"": ""2023-06-23T12:38:48.0140000Z"", ""exchange_id"": ""DERIBIT"", ""symbol_id"": ""DERIBIT_OPT_BTC_USD_240329_80000_P"", ""metric_id"": ""DERIVATIVES_INDEX_PRICE"", ""value_decimal"": 30027.74 }]SchemaExample (from schema)Example responseSchemaArray [entry_time date-timeGets or sets the entry time for the data point.recv_time date-timeGets or sets the received time for the data point.exchange_id string nullableGets or sets the identifier for the exchange.asset_id string nullableGets or sets the identifier for the asset.symbol_id string nullableGets or sets the identifier for the symbol.metric_id string nullableGets or sets the identifier for the metric.value_decimal double nullableGets or sets the decimal value for the metric.value_text string nullableGets or sets the textual representation of the value for the metric.value_time date-time nullableGets or sets the timestamp value for the metric.][ { ""entry_time"": ""2024-07-16T12:55:05.258Z"", ""recv_time"": ""2024-07-16T12:55:05.258Z"", ""exchange_id"": ""string"", ""asset_id"": ""string"", ""symbol_id"": ""string"", ""metric_id"": ""string"", ""value_decimal"": 0, ""value_text"": ""string"", ""value_time"": ""2024-07-16T12:55:05.258Z"" }][ { ""entry_time"": ""2023-06-23T12:38:48.2782698Z"", ""recv_time"": ""2023-06-23T12:38:48.0140000Z"", ""exchange_id"": ""DERIBITUAT"", ""symbol_id"": ""DERIBIT_OPT_BTC_USD_240329_80000_P"", ""metric_id"": ""GREEKS_RHO"", ""value_decimal"": -594.10357 }, { ""entry_time"": ""2023-06-23T12:38:48.2782698Z"", ""recv_time"": ""2023-06-23T12:38:48.0140000Z"", ""exchange_id"": ""DERIBIT"", ""symbol_id"": ""DERIBIT_OPT_BTC_USD_240329_80000_P"", ""metric_id"": ""GREEKS_VEGA"", ""value_decimal"": 49.31013 }, { ""entry_time"": ""2023-06-23T12:38:48.2782698Z"", ""recv_time"": ""2023-06-23T12:38:48.0140000Z"", ""exchange_id"": ""DERIBIT"", ""symbol_id"": ""DERIBIT_OPT_BTC_USD_240329_80000_P"", ""metric_id"": ""GREEKS_THETA"", ""value_decimal"": -6.14104 }, { ""entry_time"": ""2023-06-23T12:38:48.2782698Z"", ""recv_time"": ""2023-06-23T12:38:48.0140000Z"", ""exchange_id"": ""DERIBIT"", ""symbol_id"": ""DERIBIT_OPT_BTC_USD_240329_80000_P"", ""metric_id"": ""DERIVATIVES_INDEX_PRICE"", ""value_decimal"": 30027.74 }]SchemaExample (from schema)Example responseSchemaArray [entry_time date-timeGets or sets the entry time for the data point.recv_time date-timeGets or sets the received time for the data point.exchange_id string nullableGets or sets the identifier for the exchange.asset_id string nullableGets or sets the identifier for the asset.symbol_id string nullableGets or sets the identifier for the symbol.metric_id string nullableGets or sets the identifier for the metric.value_decimal double nullableGets or sets the decimal value for the metric.value_text string nullableGets or sets the textual representation of the value for the metric.value_time date-time nullableGets or sets the timestamp value for the metric.][ { ""entry_time"": ""2024-07-16T12:55:05.258Z"", ""recv_time"": ""2024-07-16T12:55:05.258Z"", ""exchange_id"": ""string"", ""asset_id"": ""string"", ""symbol_id"": ""string"", ""metric_id"": ""string"", ""value_decimal"": 0, ""value_text"": ""string"", ""value_time"": ""2024-07-16T12:55:05.258Z"" }][ { ""entry_time"": ""2023-06-23T12:38:48.2782698Z"", ""recv_time"": ""2023-06-23T12:38:48.0140000Z"", ""exchange_id"": ""DERIBITUAT"", ""symbol_id"": ""DERIBIT_OPT_BTC_USD_240329_80000_P"", ""metric_id"": ""GREEKS_RHO"", ""value_decimal"": -594.10357 }, { ""entry_time"": ""2023-06-23T12:38:48.2782698Z"", ""recv_time"": ""2023-06-23T12:38:48.0140000Z"", ""exchange_id"": ""DERIBIT"", ""symbol_id"": ""DERIBIT_OPT_BTC_USD_240329_80000_P"", ""metric_id"": ""GREEKS_VEGA"", ""value_decimal"": 49.31013 }, { ""entry_time"": ""2023-06-23T12:38:48.2782698Z"", ""recv_time"": ""2023-06-23T12:38:48.0140000Z"", ""exchange_id"": ""DERIBIT"", ""symbol_id"": ""DERIBIT_OPT_BTC_USD_240329_80000_P"", ""metric_id"": ""GREEKS_THETA"", ""value_decimal"": -6.14104 }, { ""entry_time"": ""2023-06-23T12:38:48.2782698Z"", ""recv_time"": ""2023-06-23T12:38:48.0140000Z"", ""exchange_id"": ""DERIBIT"", ""symbol_id"": ""DERIBIT_OPT_BTC_USD_240329_80000_P"", ""metric_id"": ""DERIVATIVES_INDEX_PRICE"", ""value_decimal"": 30027.74 }]SchemaExample (from schema)Example responseSchemaArray [entry_time date-timeGets or sets the entry time for the data point.recv_time date-timeGets or sets the received time for the data point.exchange_id string nullableGets or sets the identifier for the exchange.asset_id string nullableGets or sets the identifier for the asset.symbol_id string nullableGets or sets the identifier for the symbol.metric_id string nullableGets or sets the identifier for the metric.value_decimal double nullableGets or sets the decimal value for the metric.value_text string nullableGets or sets the textual representation of the value for the metric.value_time date-time nullableGets or sets the timestamp value for the metric.][ { ""entry_time"": ""2024-07-16T12:55:05.259Z"", ""recv_time"": ""2024-07-16T12:55:05.259Z"", ""exchange_id"": ""string"", ""asset_id"": ""string"", ""symbol_id"": ""string"", ""metric_id"": ""string"", ""value_decimal"": 0, ""value_text"": ""string"", ""value_time"": ""2024-07-16T12:55:05.259Z"" }][ { ""entry_time"": ""2023-06-23T12:38:48.2782698Z"", ""recv_time"": ""2023-06-23T12:38:48.0140000Z"", ""exchange_id"": ""DERIBITUAT"", ""symbol_id"": ""DERIBIT_OPT_BTC_USD_240329_80000_P"", ""metric_id"": ""GREEKS_RHO"", ""value_decimal"": -594.10357 }, { ""entry_time"": ""2023-06-23T12:38:48.2782698Z"", ""recv_time"": ""2023-06-23T12:38:48.0140000Z"", ""exchange_id"": ""DERIBIT"", ""symbol_id"": ""DERIBIT_OPT_BTC_USD_240329_80000_P"", ""metric_id"": ""GREEKS_VEGA"", ""value_decimal"": 49.31013 }, { ""entry_time"": ""2023-06-23T12:38:48.2782698Z"", ""recv_time"": ""2023-06-23T12:38:48.0140000Z"", ""exchange_id"": ""DERIBIT"", ""symbol_id"": ""DERIBIT_OPT_BTC_USD_240329_80000_P"", ""metric_id"": ""GREEKS_THETA"", ""value_decimal"": -6.14104 }, { ""entry_time"": ""2023-06-23T12:38:48.2782698Z"", ""recv_time"": ""2023-06-23T12:38:48.0140000Z"", ""exchange_id"": ""DERIBIT"", ""symbol_id"": ""DERIBIT_OPT_BTC_USD_240329_80000_P"", ""metric_id"": ""DERIVATIVES_INDEX_PRICE"", ""value_decimal"": 30027.74 }]Loading...Was this section helpful?12345PreviousCurrent metrics for given exchangeNextHistorical metrics for assetCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/metrics/current-metrics-for-given-symbol)"
61,i.io faq general How to get more than 100 items in response,"i.io faq general How to get more than 100 items in response.   How to get more than 100 items in response? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralHow to get more than 100 items in response?How to get more than 100 items in response?The number of items in the response is limited to the value of the limit parameter. The default value of this parameter is 100. The maximum is 100,000, if the parameter is used then every 100 output items are counted as one request.Was this section helpful?12345PreviousHow to check historical API usage?NextHow to handle order book flat files can go back in time?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/How-to-get-more-than-100-items-in-response)"
62,i.io flat files api rest api metadata list of symbols for the exchange,"i.io flat files api rest api metadata list of symbols for the exchange.   List of symbols for the exchange | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyFlat FilesBilling and UsageData & StructureS3 APIPush APIMetadataList all exchanges by exchange_idList all exchangesList of symbols for the exchangePush APIMetadataList of symbols for the exchangeList of symbols for the exchangeGET /api/metadata/symbols/:exchange_idList of symbols for the exchangePath Parametersexchange_id string requiredThe ID of the exchange (from the Metadata -> Exchanges)Query Parametersfilter_symbol_id stringThe filter for symbol ID.filter_asset_id stringThe filter for asset ID.Responses200successful operationtext/plainapplication/jsontext/jsonSchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableGets or sets the symbol identifier.exchange_id string nullableGets or sets the exchange identifier.symbol_type string nullableGets or sets the symbol type.asset_id_base string nullableGets or sets the base asset identifier.asset_id_quote string nullableGets or sets the quote asset identifier.asset_id_unit string nullableGets or sets the unit asset identifier.future_contract_unit double nullableGets or sets the contract unit for futures.future_contract_unit_asset string nullableGets or sets the asset used as the unit for futures contract.future_delivery_time date-time nullableGets or sets the future delivery time for futures contract.option_type_is_call boolean nullableGets or sets a value indicating whether the option type is a call.option_strike_price double nullableGets or sets the strike price for options.option_contract_unit double nullableGets or sets the contract unit for options.option_exercise_style string nullableGets or sets the exercise style for options.option_expiration_time date-time nullableGets or sets the expiration time for options.contract_delivery_time date-time nullableGets or sets the delivery time for contracts.contract_unit double nullableGets or sets the contract unit for contracts.contract_unit_asset string nullableGets or sets the asset used as the unit for contracts.contract_id string nullableGets or sets the contract identifier.contract_display_name string nullableGets or sets the display name of the contract.contract_display_description string nullableGets or sets the display description of the contract.data_start string nullableGets the start date of the data in string format (""yyyy-MM-dd"").data_end string nullableGets the end date of the data in string format (""yyyy-MM-dd"").data_quote_start date-time nullableGets or sets the start date of quote data.data_quote_end date-time nullableGets or sets the end date of quote data.data_orderbook_start date-time nullableGets or sets the start date of order book data.data_orderbook_end date-time nullableGets or sets the end date of order book data.data_trade_start date-time nullableGets or sets the start date of trade data.data_trade_end date-time nullableGets or sets the end date of trade data.index_id string nullableGets or sets the index identifier.index_display_name string nullableGets or sets the display name of the index.index_display_description string nullableGets or sets the display description of the index.symbol_id_exchange string nullableGets or sets the symbol identifier in the exchange.asset_id_base_exchange string nullableGets or sets the base asset identifier in the exchange.asset_id_quote_exchange string nullableGets or sets the quote asset identifier in the exchange.price_precision double nullableGets or sets the price precision.size_precision double nullableGets or sets the size precision.][ { ""symbol_id"": ""string"", ""exchange_id"": ""string"", ""symbol_type"": ""string"", ""asset_id_base"": ""string"", ""asset_id_quote"": ""string"", ""asset_id_unit"": ""string"", ""future_contract_unit"": 0, ""future_contract_unit_asset"": ""string"", ""future_delivery_time"": ""2024-07-16T12:55:05.017Z"", ""option_type_is_call"": true, ""option_strike_price"": 0, ""option_contract_unit"": 0, ""option_exercise_style"": ""string"", ""option_expiration_time"": ""2024-07-16T12:55:05.017Z"", ""contract_delivery_time"": ""2024-07-16T12:55:05.017Z"", ""contract_unit"": 0, ""contract_unit_asset"": ""string"", ""contract_id"": ""string"", ""contract_display_name"": ""string"", ""contract_display_description"": ""string"", ""data_start"": ""string"", ""data_end"": ""string"", ""data_quote_start"": ""2024-07-16T12:55:05.018Z"", ""data_quote_end"": ""2024-07-16T12:55:05.018Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.018Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.018Z"", ""data_trade_start"": ""2024-07-16T12:55:05.018Z"", ""data_trade_end"": ""2024-07-16T12:55:05.018Z"", ""index_id"": ""string"", ""index_display_name"": ""string"", ""index_display_description"": ""string"", ""symbol_id_exchange"": ""string"", ""asset_id_base_exchange"": ""string"", ""asset_id_quote_exchange"": ""string"", ""price_precision"": 0, ""size_precision"": 0 }][ { ""symbol_id"": ""KRAKENFTS_PERP_BTC_USD"", ""exchange_id"": ""KRAKENFTS"", ""symbol_type"": ""PERPETUAL"", ""asset_id_base"": ""BTC"", ""asset_id_quote"": ""USD"", ""asset_id_unit"": ""USD"", ""future_contract_unit"": 1, ""future_contract_unit_asset"": ""USD"", ""data_start"": ""2019-10-30"", ""data_end"": ""2021-03-03"", ""data_quote_start"": ""2019-10-30T16:53:10.3262317+00:00"", ""data_quote_end"": ""2021-03-03T13:51:45.697+00:00"", ""data_orderbook_start"": ""2019-10-30T16:53:10.3262317+00:00"", ""data_orderbook_end"": ""2020-08-05T14:37:32.008+00:00"", ""data_trade_start"": ""2019-10-30T16:38:52.162+00:00"", ""data_trade_end"": ""2021-03-03T13:46:25.781+00:00"", ""symbol_id_exchange"": ""pi_xbtusd"", ""asset_id_base_exchange"": ""XBT"", ""asset_id_quote_exchange"": ""USD"", ""price_precision"": 0.1, ""size_precision"": 1 }, { ""symbol_id"": ""POLONIEX_SPOT_LTC_USDC"", ""exchange_id"": ""POLONIEX"", ""symbol_type"": ""SPOT"", ""asset_id_base"": ""LTC"", ""asset_id_quote"": ""USDC"", ""data_start"": ""2018-11-20"", ""data_end"": ""2021-03-01"", ""data_quote_start"": ""2018-11-20T15:24:58.4128803+00:00"", ""data_quote_end"": ""2021-03-01T16:07:09.3475456+00:00"", ""data_orderbook_start"": ""2018-11-20T15:24:58.4128803+00:00"", ""data_orderbook_end"": ""2020-08-05T14:37:20.269578+00:00"", ""data_trade_start"": ""2018-11-20T15:25:38+00:00"", ""data_trade_end"": ""2021-03-01T16:03:18+00:00"", ""symbol_id_exchange"": ""USDC_LTC"", ""asset_id_base_exchange"": ""LTC"", ""asset_id_quote_exchange"": ""USDC"", ""price_precision"": 1e-8, ""size_precision"": 1e-8 }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableGets or sets the symbol identifier.exchange_id string nullableGets or sets the exchange identifier.symbol_type string nullableGets or sets the symbol type.asset_id_base string nullableGets or sets the base asset identifier.asset_id_quote string nullableGets or sets the quote asset identifier.asset_id_unit string nullableGets or sets the unit asset identifier.future_contract_unit double nullableGets or sets the contract unit for futures.future_contract_unit_asset string nullableGets or sets the asset used as the unit for futures contract.future_delivery_time date-time nullableGets or sets the future delivery time for futures contract.option_type_is_call boolean nullableGets or sets a value indicating whether the option type is a call.option_strike_price double nullableGets or sets the strike price for options.option_contract_unit double nullableGets or sets the contract unit for options.option_exercise_style string nullableGets or sets the exercise style for options.option_expiration_time date-time nullableGets or sets the expiration time for options.contract_delivery_time date-time nullableGets or sets the delivery time for contracts.contract_unit double nullableGets or sets the contract unit for contracts.contract_unit_asset string nullableGets or sets the asset used as the unit for contracts.contract_id string nullableGets or sets the contract identifier.contract_display_name string nullableGets or sets the display name of the contract.contract_display_description string nullableGets or sets the display description of the contract.data_start string nullableGets the start date of the data in string format (""yyyy-MM-dd"").data_end string nullableGets the end date of the data in string format (""yyyy-MM-dd"").data_quote_start date-time nullableGets or sets the start date of quote data.data_quote_end date-time nullableGets or sets the end date of quote data.data_orderbook_start date-time nullableGets or sets the start date of order book data.data_orderbook_end date-time nullableGets or sets the end date of order book data.data_trade_start date-time nullableGets or sets the start date of trade data.data_trade_end date-time nullableGets or sets the end date of trade data.index_id string nullableGets or sets the index identifier.index_display_name string nullableGets or sets the display name of the index.index_display_description string nullableGets or sets the display description of the index.symbol_id_exchange string nullableGets or sets the symbol identifier in the exchange.asset_id_base_exchange string nullableGets or sets the base asset identifier in the exchange.asset_id_quote_exchange string nullableGets or sets the quote asset identifier in the exchange.price_precision double nullableGets or sets the price precision.size_precision double nullableGets or sets the size precision.][ { ""symbol_id"": ""string"", ""exchange_id"": ""string"", ""symbol_type"": ""string"", ""asset_id_base"": ""string"", ""asset_id_quote"": ""string"", ""asset_id_unit"": ""string"", ""future_contract_unit"": 0, ""future_contract_unit_asset"": ""string"", ""future_delivery_time"": ""2024-07-16T12:55:05.018Z"", ""option_type_is_call"": true, ""option_strike_price"": 0, ""option_contract_unit"": 0, ""option_exercise_style"": ""string"", ""option_expiration_time"": ""2024-07-16T12:55:05.018Z"", ""contract_delivery_time"": ""2024-07-16T12:55:05.018Z"", ""contract_unit"": 0, ""contract_unit_asset"": ""string"", ""contract_id"": ""string"", ""contract_display_name"": ""string"", ""contract_display_description"": ""string"", ""data_start"": ""string"", ""data_end"": ""string"", ""data_quote_start"": ""2024-07-16T12:55:05.018Z"", ""data_quote_end"": ""2024-07-16T12:55:05.018Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.018Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.018Z"", ""data_trade_start"": ""2024-07-16T12:55:05.018Z"", ""data_trade_end"": ""2024-07-16T12:55:05.018Z"", ""index_id"": ""string"", ""index_display_name"": ""string"", ""index_display_description"": ""string"", ""symbol_id_exchange"": ""string"", ""asset_id_base_exchange"": ""string"", ""asset_id_quote_exchange"": ""string"", ""price_precision"": 0, ""size_precision"": 0 }][ { ""symbol_id"": ""KRAKENFTS_PERP_BTC_USD"", ""exchange_id"": ""KRAKENFTS"", ""symbol_type"": ""PERPETUAL"", ""asset_id_base"": ""BTC"", ""asset_id_quote"": ""USD"", ""asset_id_unit"": ""USD"", ""future_contract_unit"": 1, ""future_contract_unit_asset"": ""USD"", ""data_start"": ""2019-10-30"", ""data_end"": ""2021-03-03"", ""data_quote_start"": ""2019-10-30T16:53:10.3262317+00:00"", ""data_quote_end"": ""2021-03-03T13:51:45.697+00:00"", ""data_orderbook_start"": ""2019-10-30T16:53:10.3262317+00:00"", ""data_orderbook_end"": ""2020-08-05T14:37:32.008+00:00"", ""data_trade_start"": ""2019-10-30T16:38:52.162+00:00"", ""data_trade_end"": ""2021-03-03T13:46:25.781+00:00"", ""symbol_id_exchange"": ""pi_xbtusd"", ""asset_id_base_exchange"": ""XBT"", ""asset_id_quote_exchange"": ""USD"", ""price_precision"": 0.1, ""size_precision"": 1 }, { ""symbol_id"": ""POLONIEX_SPOT_LTC_USDC"", ""exchange_id"": ""POLONIEX"", ""symbol_type"": ""SPOT"", ""asset_id_base"": ""LTC"", ""asset_id_quote"": ""USDC"", ""data_start"": ""2018-11-20"", ""data_end"": ""2021-03-01"", ""data_quote_start"": ""2018-11-20T15:24:58.4128803+00:00"", ""data_quote_end"": ""2021-03-01T16:07:09.3475456+00:00"", ""data_orderbook_start"": ""2018-11-20T15:24:58.4128803+00:00"", ""data_orderbook_end"": ""2020-08-05T14:37:20.269578+00:00"", ""data_trade_start"": ""2018-11-20T15:25:38+00:00"", ""data_trade_end"": ""2021-03-01T16:03:18+00:00"", ""symbol_id_exchange"": ""USDC_LTC"", ""asset_id_base_exchange"": ""LTC"", ""asset_id_quote_exchange"": ""USDC"", ""price_precision"": 1e-8, ""size_precision"": 1e-8 }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableGets or sets the symbol identifier.exchange_id string nullableGets or sets the exchange identifier.symbol_type string nullableGets or sets the symbol type.asset_id_base string nullableGets or sets the base asset identifier.asset_id_quote string nullableGets or sets the quote asset identifier.asset_id_unit string nullableGets or sets the unit asset identifier.future_contract_unit double nullableGets or sets the contract unit for futures.future_contract_unit_asset string nullableGets or sets the asset used as the unit for futures contract.future_delivery_time date-time nullableGets or sets the future delivery time for futures contract.option_type_is_call boolean nullableGets or sets a value indicating whether the option type is a call.option_strike_price double nullableGets or sets the strike price for options.option_contract_unit double nullableGets or sets the contract unit for options.option_exercise_style string nullableGets or sets the exercise style for options.option_expiration_time date-time nullableGets or sets the expiration time for options.contract_delivery_time date-time nullableGets or sets the delivery time for contracts.contract_unit double nullableGets or sets the contract unit for contracts.contract_unit_asset string nullableGets or sets the asset used as the unit for contracts.contract_id string nullableGets or sets the contract identifier.contract_display_name string nullableGets or sets the display name of the contract.contract_display_description string nullableGets or sets the display description of the contract.data_start string nullableGets the start date of the data in string format (""yyyy-MM-dd"").data_end string nullableGets the end date of the data in string format (""yyyy-MM-dd"").data_quote_start date-time nullableGets or sets the start date of quote data.data_quote_end date-time nullableGets or sets the end date of quote data.data_orderbook_start date-time nullableGets or sets the start date of order book data.data_orderbook_end date-time nullableGets or sets the end date of order book data.data_trade_start date-time nullableGets or sets the start date of trade data.data_trade_end date-time nullableGets or sets the end date of trade data.index_id string nullableGets or sets the index identifier.index_display_name string nullableGets or sets the display name of the index.index_display_description string nullableGets or sets the display description of the index.symbol_id_exchange string nullableGets or sets the symbol identifier in the exchange.asset_id_base_exchange string nullableGets or sets the base asset identifier in the exchange.asset_id_quote_exchange string nullableGets or sets the quote asset identifier in the exchange.price_precision double nullableGets or sets the price precision.size_precision double nullableGets or sets the size precision.][ { ""symbol_id"": ""string"", ""exchange_id"": ""string"", ""symbol_type"": ""string"", ""asset_id_base"": ""string"", ""asset_id_quote"": ""string"", ""asset_id_unit"": ""string"", ""future_contract_unit"": 0, ""future_contract_unit_asset"": ""string"", ""future_delivery_time"": ""2024-07-16T12:55:05.019Z"", ""option_type_is_call"": true, ""option_strike_price"": 0, ""option_contract_unit"": 0, ""option_exercise_style"": ""string"", ""option_expiration_time"": ""2024-07-16T12:55:05.019Z"", ""contract_delivery_time"": ""2024-07-16T12:55:05.019Z"", ""contract_unit"": 0, ""contract_unit_asset"": ""string"", ""contract_id"": ""string"", ""contract_display_name"": ""string"", ""contract_display_description"": ""string"", ""data_start"": ""string"", ""data_end"": ""string"", ""data_quote_start"": ""2024-07-16T12:55:05.019Z"", ""data_quote_end"": ""2024-07-16T12:55:05.019Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.019Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.019Z"", ""data_trade_start"": ""2024-07-16T12:55:05.019Z"", ""data_trade_end"": ""2024-07-16T12:55:05.019Z"", ""index_id"": ""string"", ""index_display_name"": ""string"", ""index_display_description"": ""string"", ""symbol_id_exchange"": ""string"", ""asset_id_base_exchange"": ""string"", ""asset_id_quote_exchange"": ""string"", ""price_precision"": 0, ""size_precision"": 0 }][ { ""symbol_id"": ""KRAKENFTS_PERP_BTC_USD"", ""exchange_id"": ""KRAKENFTS"", ""symbol_type"": ""PERPETUAL"", ""asset_id_base"": ""BTC"", ""asset_id_quote"": ""USD"", ""asset_id_unit"": ""USD"", ""future_contract_unit"": 1, ""future_contract_unit_asset"": ""USD"", ""data_start"": ""2019-10-30"", ""data_end"": ""2021-03-03"", ""data_quote_start"": ""2019-10-30T16:53:10.3262317+00:00"", ""data_quote_end"": ""2021-03-03T13:51:45.697+00:00"", ""data_orderbook_start"": ""2019-10-30T16:53:10.3262317+00:00"", ""data_orderbook_end"": ""2020-08-05T14:37:32.008+00:00"", ""data_trade_start"": ""2019-10-30T16:38:52.162+00:00"", ""data_trade_end"": ""2021-03-03T13:46:25.781+00:00"", ""symbol_id_exchange"": ""pi_xbtusd"", ""asset_id_base_exchange"": ""XBT"", ""asset_id_quote_exchange"": ""USD"", ""price_precision"": 0.1, ""size_precision"": 1 }, { ""symbol_id"": ""POLONIEX_SPOT_LTC_USDC"", ""exchange_id"": ""POLONIEX"", ""symbol_type"": ""SPOT"", ""asset_id_base"": ""LTC"", ""asset_id_quote"": ""USDC"", ""data_start"": ""2018-11-20"", ""data_end"": ""2021-03-01"", ""data_quote_start"": ""2018-11-20T15:24:58.4128803+00:00"", ""data_quote_end"": ""2021-03-01T16:07:09.3475456+00:00"", ""data_orderbook_start"": ""2018-11-20T15:24:58.4128803+00:00"", ""data_orderbook_end"": ""2020-08-05T14:37:20.269578+00:00"", ""data_trade_start"": ""2018-11-20T15:25:38+00:00"", ""data_trade_end"": ""2021-03-01T16:03:18+00:00"", ""symbol_id_exchange"": ""USDC_LTC"", ""asset_id_base_exchange"": ""LTC"", ""asset_id_quote_exchange"": ""USDC"", ""price_precision"": 1e-8, ""size_precision"": 1e-8 }]Loading...Was this section helpful?12345PreviousList all exchangesCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/flat-files-api/rest-api/metadata/list-of-symbols-for-the-exchange)"
63,i.io faq general How to avoid losing the messages or delay on the WebSocket,"i.io faq general How to avoid losing the messages or delay on the WebSocket.   How to avoid losing the messages or delay on the WebSocket? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralHow to avoid losing the messages or delay on the WebSocket?How to avoid losing the messages or delay on the WebSocket?The problem of lost messages in the WebSocket stream can be identified:1. directly on the stream by the gaps in the sequence numberPossible causes are limited and are related to the:1. Bandwidth bottleneck2. Lack of the separation between the receiving thread and parsing, processing operations3. No CPU affinity on the receiving thread4. CPU bottleneck on the receiving thread5. Infrequent collection of the data from the TCP stack6. Heap allocation per message and Garbage Collector pressureIf your client is unable to receive messages fast enough because of the issues listed above then these things will happen:1. Your client TCP stack will be full, and TCP window will be closed to inform us that you can't receive more data and we should not send to you2. Our TCP stack queue will be full because we couldn't send you more data3. We will internally create a limited queue of the messages to deliver when the channel is available again (this could cause the delay on the real-time data before the gaps will appear)4. We will start dropping the messagesMore information is available by googling ""TCP Flow Control"".Was this section helpful?12345PreviousHow long does it take to integrate CoinAPI?NextHow to be notified about the issues/incidents?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/How-to-avoid-losing-the-messages-or-delay-on-the-WebSocket)"
64,i.io market data rest api order book order book current depth of the order book,"i.io market data rest api order book order book current depth of the order book.   Current depth of the order book | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcvOrder BookGet current order book Current depth of the order book Historical data Latest dataOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIOrder Book Current depth of the order book Current depth of the order bookGET /v1/orderbooks/:symbol_id/depth/currentRetrieves the current depth of the order book for the specified symbol.Path Parameterssymbol_id string requiredThe symbol ID (from the Metadata -> Symbols)Query Parameterslimit_levels int32The maximum number of levels to include in the response.Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Schemasymbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the order book.time_coinapi date-timeThe CoinAPI time when the order book was received.ask_levels int64The number of ask levels in the order book.bid_levels int64The number of bid levels in the order book.ask_depth doubleThe depth of the ask side of the order book.bid_depth doubleThe depth of the bid side of the order book.{ ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.263Z"", ""time_coinapi"": ""2024-07-16T12:55:05.263Z"", ""ask_levels"": 0, ""bid_levels"": 0, ""ask_depth"": 0, ""bid_depth"": 0}SchemaExample (from schema)Schemasymbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the order book.time_coinapi date-timeThe CoinAPI time when the order book was received.ask_levels int64The number of ask levels in the order book.bid_levels int64The number of bid levels in the order book.ask_depth doubleThe depth of the ask side of the order book.bid_depth doubleThe depth of the bid side of the order book.{ ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.263Z"", ""time_coinapi"": ""2024-07-16T12:55:05.263Z"", ""ask_levels"": 0, ""bid_levels"": 0, ""ask_depth"": 0, ""bid_depth"": 0}SchemaExample (from schema)Schemasymbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the order book.time_coinapi date-timeThe CoinAPI time when the order book was received.ask_levels int64The number of ask levels in the order book.bid_levels int64The number of bid levels in the order book.ask_depth doubleThe depth of the ask side of the order book.bid_depth doubleThe depth of the bid side of the order book.{ ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.263Z"", ""time_coinapi"": ""2024-07-16T12:55:05.263Z"", ""ask_levels"": 0, ""bid_levels"": 0, ""ask_depth"": 0, ""bid_depth"": 0}SchemaExample (from schema)Schemasymbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the order book.time_coinapi date-timeThe CoinAPI time when the order book was received.ask_levels int64The number of ask levels in the order book.bid_levels int64The number of bid levels in the order book.ask_depth doubleThe depth of the ask side of the order book.bid_depth doubleThe depth of the bid side of the order book.{ ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.264Z"", ""time_coinapi"": ""2024-07-16T12:55:05.264Z"", ""ask_levels"": 0, ""bid_levels"": 0, ""ask_depth"": 0, ""bid_depth"": 0}Loading...Was this section helpful?12345PreviousGet current order bookNext Historical dataCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/order-book/order-book-current-depth-of-the-order-book)"
65,i.io general faq security and privacy What should I do if my API key was compromised,"i.io general faq security and privacy What should I do if my API key was compromised.   What should I do if my API key was compromised? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIBilling and SubscriptionsSecurity and PrivacyWhat CDN does the API use?What information do I need to provide in order to subscribe?What security mechanisms does CoinAPI use to protect my data?What should I do if my API key was compromised?GlossaryChangelogFAQSecurity and PrivacyWhat should I do if my API key was compromised?What should I do if my API key was compromised?Please contact support immediately, and we will generate the new key for you. If your old key is still in production use, we will give you time to migrate to the new one.Submit a request here: https://support.coinapi.io/hc/en-us/requests/newWas this section helpful?12345PreviousWhat security mechanisms does CoinAPI use to protect my data?NextGlossaryCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/security-and-privacy/What-should-I-do-if-my-API-key-was-compromised)"
66,i.io faq general API Usage Limits,"i.io faq general API Usage Limits.   API Usage Limits | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralAPI Usage LimitsAPI Usage LimitsInformation about the request calculation algorithm for the REST API is available here[1], along with the details of how you can measure requests remaining or used after every request.You may accurately check the remaining credits for your API Key through the response headers. Have in mind that the Metrics tab [2] should be used only for visualization, analytics, and reporting. You should not use it to decide if you are approaching the limit in real-time as the data in this report is aggregated daily, and the request credits in real-time are calculated from the last 24-hour using a sliding time window. You can find more information about real-time limits here[1].[1] https://docs.coinapi.io/market-data/rest-api#limits  [2] https://customerportal.coinapi.io/#rest-usage-getWas this section helpful?12345PreviousGeneralNextAre subscription payments executed automatically?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/API-Usage-Limits)"
67,i.io general faq api How can I unsubscribe from Websocket,"i.io general faq api How can I unsubscribe from Websocket.   How can I unsubscribe from Websocket? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer EMS Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What is the rate limit for EMS Trading API?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQAPIHow can I unsubscribe from Websocket?How can I unsubscribe from Websocket?You may use a new Hello message, which will cause subscription scope override without interruption of your WebSocket connection. A new Hello message will override previous Hello messages, and effectively can add to the subscription scope or unsubscribe streams.Please refer to our documentation to learn more about Websocket: https://docs.coinapi.io/market-data/websocketWas this section helpful?12345PreviousHow can I see a list of symbols related to a specific exchange, market, or asset?NextHow to solve certificate validation error?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/api/How-can-I-unsubscribe-from-Websocket)"
68,i.io market data rest api metadata list all assets by asset id,"i.io market data rest api metadata list all assets by asset id.   List all assets by asset ID | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataList all asset iconsList all assets by asset IDList all assetsList all exchanges by exchange_idList all exchangesList all symbolsList of icons for the exchangesList of symbols for the exchangeList symbol mapping for the exchangeMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIMetadataList all assets by asset IDList all assets by asset IDGET /v1/assets/:asset_idList all assets by asset IDPath Parametersasset_id string requiredThe asset ID.Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [asset_id string nullableGets or sets the asset ID.name string nullableGets or sets the name of the asset.type_is_crypto int32Gets or sets a value indicating whether the asset is a cryptocurrency.data_quote_start date-time nullableGets or sets the start date of quote data.data_quote_end date-time nullableGets or sets the end date of quote data.data_orderbook_start date-time nullableGets or sets the start date of order book data.data_orderbook_end date-time nullableGets or sets the end date of order book data.data_trade_start date-time nullableGets or sets the start date of trade data.data_trade_end date-time nullableGets or sets the end date of trade data.data_symbols_count int64 nullableGets or sets the number of symbols.volume_1hrs_usd double nullableGets or sets the USD volume in the last 1 hour.volume_1day_usd double nullableGets or sets the USD volume in the last 1 day.volume_1mth_usd double nullableGets or sets the USD volume in the last 1 month.price_usd double nullableGets or sets the USD price of the asset.id_icon uuid nullableGets or sets the ID of the icon for the asset.supply_current double nullableGets or sets the current supply of the asset.supply_total double nullableGets or sets the total supply of the asset.supply_max double nullableGets or sets the maximum supply of the asset.chain_addresses object[] nullableArray [chain_id string nullableGets or sets chain idnetwork_id string nullableGets or sets network idaddress string nullableGets or sets chain address]data_start string nullabledata_end string nullable][ { ""asset_id"": ""string"", ""name"": ""string"", ""type_is_crypto"": 0, ""data_quote_start"": ""2024-07-16T12:55:05.235Z"", ""data_quote_end"": ""2024-07-16T12:55:05.235Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.235Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.235Z"", ""data_trade_start"": ""2024-07-16T12:55:05.235Z"", ""data_trade_end"": ""2024-07-16T12:55:05.235Z"", ""data_symbols_count"": 0, ""volume_1hrs_usd"": 0, ""volume_1day_usd"": 0, ""volume_1mth_usd"": 0, ""price_usd"": 0, ""id_icon"": ""3fa85f64-5717-4562-b3fc-2c963f66afa6"", ""supply_current"": 0, ""supply_total"": 0, ""supply_max"": 0, ""chain_addresses"": [  {  ""chain_id"": ""string"",  ""network_id"": ""string"",  ""address"": ""string""  } ], ""data_start"": ""string"", ""data_end"": ""string"" }][ { ""asset_id"": ""BTC"", ""name"": ""Bitcoin"", ""type_is_crypto"": 1, ""data_quote_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_quote_end"": ""2019-11-03T17:55:07.6724523Z"", ""data_orderbook_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_orderbook_end"": ""2019-11-03T17:55:17.8592413Z"", ""data_trade_start"": ""2010-07-17T23:09:17.0000000Z"", ""data_trade_end"": ""2019-11-03T17:55:11.8220000Z"", ""data_symbols_count"": 22711, ""volume_1hrs_usd"": 102894431436.49, ""volume_1day_usd"": 2086392323256.16, ""volume_1mth_usd"": 57929168359984.54, ""price_usd"": 9166.207274778093, ""chain_addresses"": [  {  ""chain_id"": ""ARBITRUM"",  ""network_id"": ""MAINNET"",  ""address"": ""0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f""  },  {  ""chain_id"": ""ETHEREUM"",  ""network_id"": ""MAINNET"",  ""address"": ""0x2260fac5e5542a773aa44fbcfedf7c193bc2c599""  } ], ""data_start"": ""2010-07-17"", ""data_end"": ""2019-11-03"" }, { ""asset_id"": ""USD"", ""name"": ""US Dollar"", ""type_is_crypto"": 0, ""data_quote_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_quote_end"": ""2019-11-03T17:54:49.3807706Z"", ""data_orderbook_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_orderbook_end"": ""2019-11-03T17:55:13.1863931Z"", ""data_trade_start"": ""2010-07-17T23:09:17.0000000Z"", ""data_trade_end"": ""2019-11-03T17:55:07.7870000Z"", ""data_symbols_count"": 10728, ""volume_1hrs_usd"": 9466454016.52, ""volume_1day_usd"": 221580758173.49, ""volume_1mth_usd"": 11816685174661.7, ""price_usd"": 1, ""chain_addresses"": [  {  ""chain_id"": ""ETHEREUM"",  ""network_id"": ""MAINNET"",  ""address"": ""0xd233d1f6fd11640081abb8db125f722b5dc729dc""  } ], ""data_start"": ""2010-07-17"", ""data_end"": ""2019-11-03"" }]SchemaExample (from schema)Example responseSchemaArray [asset_id string nullableGets or sets the asset ID.name string nullableGets or sets the name of the asset.type_is_crypto int32Gets or sets a value indicating whether the asset is a cryptocurrency.data_quote_start date-time nullableGets or sets the start date of quote data.data_quote_end date-time nullableGets or sets the end date of quote data.data_orderbook_start date-time nullableGets or sets the start date of order book data.data_orderbook_end date-time nullableGets or sets the end date of order book data.data_trade_start date-time nullableGets or sets the start date of trade data.data_trade_end date-time nullableGets or sets the end date of trade data.data_symbols_count int64 nullableGets or sets the number of symbols.volume_1hrs_usd double nullableGets or sets the USD volume in the last 1 hour.volume_1day_usd double nullableGets or sets the USD volume in the last 1 day.volume_1mth_usd double nullableGets or sets the USD volume in the last 1 month.price_usd double nullableGets or sets the USD price of the asset.id_icon uuid nullableGets or sets the ID of the icon for the asset.supply_current double nullableGets or sets the current supply of the asset.supply_total double nullableGets or sets the total supply of the asset.supply_max double nullableGets or sets the maximum supply of the asset.chain_addresses object[] nullableArray [chain_id string nullableGets or sets chain idnetwork_id string nullableGets or sets network idaddress string nullableGets or sets chain address]data_start string nullabledata_end string nullable][ { ""asset_id"": ""string"", ""name"": ""string"", ""type_is_crypto"": 0, ""data_quote_start"": ""2024-07-16T12:55:05.237Z"", ""data_quote_end"": ""2024-07-16T12:55:05.237Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.237Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.237Z"", ""data_trade_start"": ""2024-07-16T12:55:05.237Z"", ""data_trade_end"": ""2024-07-16T12:55:05.237Z"", ""data_symbols_count"": 0, ""volume_1hrs_usd"": 0, ""volume_1day_usd"": 0, ""volume_1mth_usd"": 0, ""price_usd"": 0, ""id_icon"": ""3fa85f64-5717-4562-b3fc-2c963f66afa6"", ""supply_current"": 0, ""supply_total"": 0, ""supply_max"": 0, ""chain_addresses"": [  {  ""chain_id"": ""string"",  ""network_id"": ""string"",  ""address"": ""string""  } ], ""data_start"": ""string"", ""data_end"": ""string"" }][ { ""asset_id"": ""BTC"", ""name"": ""Bitcoin"", ""type_is_crypto"": 1, ""data_quote_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_quote_end"": ""2019-11-03T17:55:07.6724523Z"", ""data_orderbook_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_orderbook_end"": ""2019-11-03T17:55:17.8592413Z"", ""data_trade_start"": ""2010-07-17T23:09:17.0000000Z"", ""data_trade_end"": ""2019-11-03T17:55:11.8220000Z"", ""data_symbols_count"": 22711, ""volume_1hrs_usd"": 102894431436.49, ""volume_1day_usd"": 2086392323256.16, ""volume_1mth_usd"": 57929168359984.54, ""price_usd"": 9166.207274778093, ""chain_addresses"": [  {  ""chain_id"": ""ARBITRUM"",  ""network_id"": ""MAINNET"",  ""address"": ""0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f""  },  {  ""chain_id"": ""ETHEREUM"",  ""network_id"": ""MAINNET"",  ""address"": ""0x2260fac5e5542a773aa44fbcfedf7c193bc2c599""  } ], ""data_start"": ""2010-07-17"", ""data_end"": ""2019-11-03"" }, { ""asset_id"": ""USD"", ""name"": ""US Dollar"", ""type_is_crypto"": 0, ""data_quote_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_quote_end"": ""2019-11-03T17:54:49.3807706Z"", ""data_orderbook_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_orderbook_end"": ""2019-11-03T17:55:13.1863931Z"", ""data_trade_start"": ""2010-07-17T23:09:17.0000000Z"", ""data_trade_end"": ""2019-11-03T17:55:07.7870000Z"", ""data_symbols_count"": 10728, ""volume_1hrs_usd"": 9466454016.52, ""volume_1day_usd"": 221580758173.49, ""volume_1mth_usd"": 11816685174661.7, ""price_usd"": 1, ""chain_addresses"": [  {  ""chain_id"": ""ETHEREUM"",  ""network_id"": ""MAINNET"",  ""address"": ""0xd233d1f6fd11640081abb8db125f722b5dc729dc""  } ], ""data_start"": ""2010-07-17"", ""data_end"": ""2019-11-03"" }]SchemaExample (from schema)Example responseSchemaArray [asset_id string nullableGets or sets the asset ID.name string nullableGets or sets the name of the asset.type_is_crypto int32Gets or sets a value indicating whether the asset is a cryptocurrency.data_quote_start date-time nullableGets or sets the start date of quote data.data_quote_end date-time nullableGets or sets the end date of quote data.data_orderbook_start date-time nullableGets or sets the start date of order book data.data_orderbook_end date-time nullableGets or sets the end date of order book data.data_trade_start date-time nullableGets or sets the start date of trade data.data_trade_end date-time nullableGets or sets the end date of trade data.data_symbols_count int64 nullableGets or sets the number of symbols.volume_1hrs_usd double nullableGets or sets the USD volume in the last 1 hour.volume_1day_usd double nullableGets or sets the USD volume in the last 1 day.volume_1mth_usd double nullableGets or sets the USD volume in the last 1 month.price_usd double nullableGets or sets the USD price of the asset.id_icon uuid nullableGets or sets the ID of the icon for the asset.supply_current double nullableGets or sets the current supply of the asset.supply_total double nullableGets or sets the total supply of the asset.supply_max double nullableGets or sets the maximum supply of the asset.chain_addresses object[] nullableArray [chain_id string nullableGets or sets chain idnetwork_id string nullableGets or sets network idaddress string nullableGets or sets chain address]data_start string nullabledata_end string nullable][ { ""asset_id"": ""string"", ""name"": ""string"", ""type_is_crypto"": 0, ""data_quote_start"": ""2024-07-16T12:55:05.237Z"", ""data_quote_end"": ""2024-07-16T12:55:05.237Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.237Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.237Z"", ""data_trade_start"": ""2024-07-16T12:55:05.237Z"", ""data_trade_end"": ""2024-07-16T12:55:05.237Z"", ""data_symbols_count"": 0, ""volume_1hrs_usd"": 0, ""volume_1day_usd"": 0, ""volume_1mth_usd"": 0, ""price_usd"": 0, ""id_icon"": ""3fa85f64-5717-4562-b3fc-2c963f66afa6"", ""supply_current"": 0, ""supply_total"": 0, ""supply_max"": 0, ""chain_addresses"": [  {  ""chain_id"": ""string"",  ""network_id"": ""string"",  ""address"": ""string""  } ], ""data_start"": ""string"", ""data_end"": ""string"" }][ { ""asset_id"": ""BTC"", ""name"": ""Bitcoin"", ""type_is_crypto"": 1, ""data_quote_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_quote_end"": ""2019-11-03T17:55:07.6724523Z"", ""data_orderbook_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_orderbook_end"": ""2019-11-03T17:55:17.8592413Z"", ""data_trade_start"": ""2010-07-17T23:09:17.0000000Z"", ""data_trade_end"": ""2019-11-03T17:55:11.8220000Z"", ""data_symbols_count"": 22711, ""volume_1hrs_usd"": 102894431436.49, ""volume_1day_usd"": 2086392323256.16, ""volume_1mth_usd"": 57929168359984.54, ""price_usd"": 9166.207274778093, ""chain_addresses"": [  {  ""chain_id"": ""ARBITRUM"",  ""network_id"": ""MAINNET"",  ""address"": ""0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f""  },  {  ""chain_id"": ""ETHEREUM"",  ""network_id"": ""MAINNET"",  ""address"": ""0x2260fac5e5542a773aa44fbcfedf7c193bc2c599""  } ], ""data_start"": ""2010-07-17"", ""data_end"": ""2019-11-03"" }, { ""asset_id"": ""USD"", ""name"": ""US Dollar"", ""type_is_crypto"": 0, ""data_quote_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_quote_end"": ""2019-11-03T17:54:49.3807706Z"", ""data_orderbook_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_orderbook_end"": ""2019-11-03T17:55:13.1863931Z"", ""data_trade_start"": ""2010-07-17T23:09:17.0000000Z"", ""data_trade_end"": ""2019-11-03T17:55:07.7870000Z"", ""data_symbols_count"": 10728, ""volume_1hrs_usd"": 9466454016.52, ""volume_1day_usd"": 221580758173.49, ""volume_1mth_usd"": 11816685174661.7, ""price_usd"": 1, ""chain_addresses"": [  {  ""chain_id"": ""ETHEREUM"",  ""network_id"": ""MAINNET"",  ""address"": ""0xd233d1f6fd11640081abb8db125f722b5dc729dc""  } ], ""data_start"": ""2010-07-17"", ""data_end"": ""2019-11-03"" }]SchemaExample (from schema)Example responseSchemaArray [asset_id string nullableGets or sets the asset ID.name string nullableGets or sets the name of the asset.type_is_crypto int32Gets or sets a value indicating whether the asset is a cryptocurrency.data_quote_start date-time nullableGets or sets the start date of quote data.data_quote_end date-time nullableGets or sets the end date of quote data.data_orderbook_start date-time nullableGets or sets the start date of order book data.data_orderbook_end date-time nullableGets or sets the end date of order book data.data_trade_start date-time nullableGets or sets the start date of trade data.data_trade_end date-time nullableGets or sets the end date of trade data.data_symbols_count int64 nullableGets or sets the number of symbols.volume_1hrs_usd double nullableGets or sets the USD volume in the last 1 hour.volume_1day_usd double nullableGets or sets the USD volume in the last 1 day.volume_1mth_usd double nullableGets or sets the USD volume in the last 1 month.price_usd double nullableGets or sets the USD price of the asset.id_icon uuid nullableGets or sets the ID of the icon for the asset.supply_current double nullableGets or sets the current supply of the asset.supply_total double nullableGets or sets the total supply of the asset.supply_max double nullableGets or sets the maximum supply of the asset.chain_addresses object[] nullableArray [chain_id string nullableGets or sets chain idnetwork_id string nullableGets or sets network idaddress string nullableGets or sets chain address]data_start string nullabledata_end string nullable][ { ""asset_id"": ""string"", ""name"": ""string"", ""type_is_crypto"": 0, ""data_quote_start"": ""2024-07-16T12:55:05.238Z"", ""data_quote_end"": ""2024-07-16T12:55:05.238Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.238Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.238Z"", ""data_trade_start"": ""2024-07-16T12:55:05.238Z"", ""data_trade_end"": ""2024-07-16T12:55:05.238Z"", ""data_symbols_count"": 0, ""volume_1hrs_usd"": 0, ""volume_1day_usd"": 0, ""volume_1mth_usd"": 0, ""price_usd"": 0, ""id_icon"": ""3fa85f64-5717-4562-b3fc-2c963f66afa6"", ""supply_current"": 0, ""supply_total"": 0, ""supply_max"": 0, ""chain_addresses"": [  {  ""chain_id"": ""string"",  ""network_id"": ""string"",  ""address"": ""string""  } ], ""data_start"": ""string"", ""data_end"": ""string"" }][ { ""asset_id"": ""BTC"", ""name"": ""Bitcoin"", ""type_is_crypto"": 1, ""data_quote_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_quote_end"": ""2019-11-03T17:55:07.6724523Z"", ""data_orderbook_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_orderbook_end"": ""2019-11-03T17:55:17.8592413Z"", ""data_trade_start"": ""2010-07-17T23:09:17.0000000Z"", ""data_trade_end"": ""2019-11-03T17:55:11.8220000Z"", ""data_symbols_count"": 22711, ""volume_1hrs_usd"": 102894431436.49, ""volume_1day_usd"": 2086392323256.16, ""volume_1mth_usd"": 57929168359984.54, ""price_usd"": 9166.207274778093, ""chain_addresses"": [  {  ""chain_id"": ""ARBITRUM"",  ""network_id"": ""MAINNET"",  ""address"": ""0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f""  },  {  ""chain_id"": ""ETHEREUM"",  ""network_id"": ""MAINNET"",  ""address"": ""0x2260fac5e5542a773aa44fbcfedf7c193bc2c599""  } ], ""data_start"": ""2010-07-17"", ""data_end"": ""2019-11-03"" }, { ""asset_id"": ""USD"", ""name"": ""US Dollar"", ""type_is_crypto"": 0, ""data_quote_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_quote_end"": ""2019-11-03T17:54:49.3807706Z"", ""data_orderbook_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_orderbook_end"": ""2019-11-03T17:55:13.1863931Z"", ""data_trade_start"": ""2010-07-17T23:09:17.0000000Z"", ""data_trade_end"": ""2019-11-03T17:55:07.7870000Z"", ""data_symbols_count"": 10728, ""volume_1hrs_usd"": 9466454016.52, ""volume_1day_usd"": 221580758173.49, ""volume_1mth_usd"": 11816685174661.7, ""price_usd"": 1, ""chain_addresses"": [  {  ""chain_id"": ""ETHEREUM"",  ""network_id"": ""MAINNET"",  ""address"": ""0xd233d1f6fd11640081abb8db125f722b5dc729dc""  } ], ""data_start"": ""2010-07-17"", ""data_end"": ""2019-11-03"" }]Loading...Was this section helpful?12345PreviousList all asset iconsNextList all assetsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/metadata/list-all-assets-by-asset-id)"
69,i.io ems api rest api positions,i.io ems api rest api positions.   Positions | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIREST APIBalancesOrdersPositionsGet open positionsWebSocket APIFIX APISelf Hosted GuideREST APIPositionsPositions📄️ Get open positionsGet current open positions across all or single exchange.Was this section helpful?12345PreviousSend new orderNextGet open positionsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/rest-api/positions)
70,i.io faq general Exchange chart is different OHLCV,"i.io faq general Exchange chart is different OHLCV.   Exchange chart is different OHLCV | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralExchange chart is different OHLCVExchange chart is different OHLCVWe do not have visibility as to how the data source is creating the OHLCV as there are multiple ways this could be done. Internally we do not try to match the data source chart. A quick summary to give light as to why our data is different: Every exchange can aggregate differentlyWe aggregate from real-time streamWe aggregate sometimes on time of reception Because of that, the data could be different. We do not try to match that. We are performing the same aggregation across all data sources to have unification across them.Was this section helpful?12345PreviousDoes CoinAPI provide asset icons/images of the cryptocurrencies?NextHow can I set custom timezone in the data?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/Exchange-chart-is-different-OHLCV)"
71,i.io how to guides trading essentials quickstart#kraken,"i.io how to guides trading essentials quickstart#kraken.   Trading Essentials: Quickstart | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesAcquire exchange rates with different programming languagesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPICreating a historical crypto price chart using CoinAPI and D3.jsFetching market data with KNIMEGet Historical OHLCV Data Using CoinAPIGet symbol funding rate metric data using CoinAPIImport API into PostmanImport data to Google Sheets/ExcelReal-time data visualization with javascriptReal-time trades stream using WebSocket with different languagesRetrieve and analyze crypto order book data using a cryptocurrency APITrading Essentials: QuickstartMarket Data APIEMS APIFAQCustomer PortalChangelogHow-to guidesTrading Essentials: QuickstartOn this pageTrading Essentials: QuickstartIntroduction​In this tutorial, you'll learn how to leverage our crypto trading API to automate and streamline your trading across multiple exchanges. Discover how to connect your accounts, execute trades, and efficiently manage your portfolio with just a few clicks.With our solution, you gain the power to control trades on various exchanges using just one API. Background​The EMS Trading API lets you manage multiple trading accounts on different exchanges all in one place, making trading easier with combined and consistent data. It gives you up-to-date market info, past data, and options to use it through the cloud or on your systems. Perfect for traders, big companies, and experts like developers and analysts, this API is fast, efficient, and reliable, providing a complete trading solution with easy access to unique insights and information.On the Agenda​Obtain a Free API Key: Secure your gateway to multi-exchange trading with a free API key from our site.Check available exchanges: Verify the list of supported exchanges via EMS APIConnect your Exchanges: Quickly integrate your accounts with exchanges like BITMEX and KRAKEN.Execute BUY on KRAKEN: Check your balance, initiate the BUY order, and confirm the status of the orderExecute SELL on KRAKEN: Initiate SELL order and check the order status reportGetting started​To execute the EMS Trading API, you'll need a Free API Key from our website.Check available exchanges​To access a list of supported exchanges that can be connected via the EMS API, execute the following:import requestsurl = ""https://ems-mgmt.coinapi.io/v1/exchanges""payload={}headers = { 'Accept': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-COINAPI-KEY'}response = requests.request(""GET"", url, headers=headers, data=payload)print(response.text)Here's a snippet extracted from the server's reply:[ {  ""exchange_id"": ""BITMEX"",  ""location_id"": ""aws-eu-west-1-prd"",  ""required_parameters"": [   ""PrivateApiKey"",   ""PublicApiKey""  ] }, {  ""exchange_id"": ""COINBASE"",  ""location_id"": ""aws-us-east-1-prd"",  ""required_parameters"": [   ""PassPhrase"",   ""PrivateApiKey"",   ""PublicApiKey""  ] },  {  ""exchange_id"": ""GEMINI"",  ""location_id"": ""aws-us-east-1-prd"",  ""required_parameters"": [   ""PrivateApiKey"",   ""PublicApiKey""  ] }, {  ""exchange_id"": ""KRAKEN"",  ""location_id"": ""aws-us-west-2-prd"",  ""required_parameters"": [   ""PrivateApiKey"",   ""PublicApiKey""  ] }]// other exchanges and their parameters...infoTo access the full list of supported exchanges, you can execute the endpoint https://ems-mgmt.coinapi.io/v1/exchanges. Above, we only showcase a partial list as an example.Connect your Exchanges​To begin trading on cryptocurrency exchanges, you'll need to connect your accounts. Below are examples of integrating with two popular exchanges:BITMEX exampleKRAKEN exampleinfoWhile the examples in this quickstart provided are focused on integrating with BITMEX and KRAKEN, the process is quite similar for various exchanges.BITMEX​BITMEX stands as a premier cryptocurrency exchange, offering a robust platform for traders and investors worldwide.Obtain Public key​To begin trading on BITMEX, you'll need to obtain your public and private keys from BITMEX.Connect your account​After acquiring keys, the initial step includes sharing your exchange keys through the account creation process for the designated exchange.import requestsimport jsonurl = ""https://ems-mgmt.coinapi.io/v1/accounts""payload = { ""exchange_id"": ""BITMEX/JOHN"", ""parameters"": [  {   ""key"": ""PublicApiKey"",   ""value"": ""73034021-THIS-IS-SAMPLE-PUBLIC-KEY-FROM-BITMEX""  },    {   ""key"": ""PrivateApiKey"",   ""value"": ""73034021-THIS-IS-SAMPLE-PRIVATE-KEY-FROM-BITMEX""  } ]}headers = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Convert payload to JSON stringjson_payload = json.dumps(payload)# Make the requestresponse = requests.post(url, data=json_payload, headers=headers)# Print the responseprint(""Response Code:"", response.status_code)Once the update is successful, you'll receive an HTTP status code of 200.KRAKEN​Obtain Public key​To begin trading on KRAKEN, you'll need to obtain your public and private keys from KRAKEN.Connect your account​After acquiring keys, the initial step includes sharing your exchange keys through the account creation process for the designated exchange.import requestsimport jsonurl = ""https://ems-mgmt.coinapi.io/v1/accounts""payload = { ""exchange_id"": ""KRAKEN/JOHN"", ""parameters"": [  {   ""key"": ""PublicApiKey"",   ""value"": ""73034021-THIS-IS-SAMPLE-PUBLIC-KEY-FROM-KRAKEN""  },    {   ""key"": ""PrivateApiKey"",   ""value"": ""73034021-THIS-IS-SAMPLE-PRIVATE-KEY-FROM-KRAKEN""  } ]}headers = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Convert payload to JSON stringjson_payload = json.dumps(payload)# Make the requestresponse = requests.post(url, data=json_payload, headers=headers)# Print the responseprint(""Response Code:"", response.status_code)Get the list of Connected Exchanges​To check which accounts have been created on our side, execute the following code:import requestsimport jsonurl = ""https://ems-mgmt.coinapi.io/v1/accounts""headers = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY""}# Make the requestresponse = requests.get(url, headers=headers)if response.status_code == 200: accounts_json = response.json() print(json.dumps(accounts_json, indent=4))else: print(""Error:"", response.status_code)Here's an example response, listing all accounts created with your API KEY:[ {  ""exchange_id"": ""BITMEX/JOHN"",  ""parameters"": [   {    ""key"": ""PublicApiKey"",    ""value"": ""73034021-THIS-IS-SAMPLE-PUBLIC-KEY-FROM-BITMEX""   },   {    ""key"": ""PrivateApiKey"",    ""value"": ""73034021-THIS-IS-SAMPLE-PRIVATE-KEY-FROM-BITMEX""   }  ] }, {  ""exchange_id"": ""KRAKEN/JOHN"",  ""parameters"": [   {    ""key"": ""PublicApiKey"",    ""value"": ""73034021-THIS-IS-SAMPLE-PUBLIC-KEY-FROM-KRAKEN""     },   {    ""key"": ""PrivateApiKey"",    ""value"": ""73034021-THIS-IS-SAMPLE-PRIVATE-KEY-FROM-KRAKEN""   }  ] }]Trades execution​Placing an order on an exchange involves providing instructions for executing a trade at a designated price and quantity.Check balance (Optional)​Before diving into trading, it's a good idea to check the balance on your account(s). Here's an example of checking the account balance for all of the exchanges associated with the account.import requestsimport jsonurl = ""https://global.ems.coinapi.net/v1/balances""payload={}headers = { 'Accept': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-COINAPI-KEY'}# Make the requestresponse = requests.get(url, headers=headers)if response.status_code == 200: accounts_json = response.json() print(json.dumps(accounts_json, indent=4))else: print(""Error:"", response.status_code)The response may be as follows (for BITMEX/JOHN and KRAKEN/JOHN accounts):[ {  ""type"": ""BALANCE_SNAPSHOT"",  ""exchange_id"": ""BITMEX/JOHN"",  ""data"": [   {    ""id"": ""XBT"",    ""asset_id_exchange"": ""XBT"",    ""asset_id_coinapi"": ""BTC"",    ""balance"": 0.02164794,    ""available"": 0.02164794,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",      ""rate_usd"": 52357.18111158658     },   {    ""id"": ""BMEx"",    ""asset_id_exchange"": ""BMEx"",    ""asset_id_coinapi"": ""BMEX"",    ""balance"": 300000.0,    ""available"": 300000.0,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",      ""rate_usd"": 0.2521371329127946     }  ] }, {  ""type"": ""BALANCE_SNAPSHOT"",  ""exchange_id"": ""KRAKEN/JOHN"",  ""data"": [   {    ""id"": ""ETHW"",    ""asset_id_exchange"": ""ETHW"",    ""asset_id_coinapi"": ""ETHW"",    ""balance"": 1.73e-05,    ""available"": 1.73e-05,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 2.9136466899640077   },   {    ""id"": ""BCH"",    ""asset_id_exchange"": ""BCH"",    ""asset_id_coinapi"": ""BCH"",    ""balance"": 2.9e-09,    ""available"": 2.9e-09,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 265.7082181877394   },   {    ""id"": ""ZCAD"",    ""asset_id_exchange"": ""ZCAD"",    ""asset_id_coinapi"": ""CAD"",    ""balance"": 0.7905,    ""available"": 0.7905,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 0.7405719177575096   },   {    ""id"": ""ZEUR"",    ""asset_id_exchange"": ""ZEUR"",    ""asset_id_coinapi"": ""EUR"",    ""balance"": 0.0098,    ""available"": 0.0098,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 1.0809450373867444   },   {    ""id"": ""ADA"",    ""asset_id_exchange"": ""ADA"",    ""asset_id_coinapi"": ""ADA"",    ""balance"": 2e-08,    ""available"": 2e-08,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 0.6244338769954291   },   {    ""id"": ""ZUSD"",    ""asset_id_exchange"": ""ZUSD"",    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": null   },   {    ""id"": ""XXBT"",    ""asset_id_exchange"": ""XXBT"",    ""asset_id_coinapi"": ""BTC"",    ""balance"": 8.58e-08,    ""available"": 8.58e-08,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 52320.9229657045   }  ] }]Submit Order (SELL)​Here's an example of submitting a SELL order on the KRAKEN exchange with the following details: Desired amount of USD to sell: 10Expected price to be executed at: 150Initial balance of USD: 77.3669Save down somewhere the YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001 identifier to track the status of the orderimport requestsimport jsonfrom datetime import datetime, timedeltaurl = ""https://global.ems.coinapi.net/v1/orders""payload = json.dumps({ ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_USD_JPY"", ""amount_order"": 10, ""price"": 150, ""side"": ""SELL"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""exec_inst"": [ ""MAKER_OR_CANCEL"" ]})# Headersheaders = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Make the requesttry: response = requests.post(url, data=payload, headers=headers) # Check status code if response.status_code == 200:  print(""Response JSON:"", response.json()) else:  print(""Response Code:"", response.status_code) except Exception as e: print(""An error occurred:"", e)Examples of Possible Responses:Successful RoutingInvalid Volume ErrorInsufficient Funds ErrorThe order has been sent to the exchange:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""client_order_id_format_exchange"": ""74733759"", ""exchange_order_id"": ""OX6EKO-67KDQ-KGNYFI"", ""amount_open"": 10.0, ""amount_filled"": 0.0, ""status"": ""ROUTED"", ""status_history"": [ [""RECEIVED"", ""2024-02-22T23:55:31.5424443Z""], [""ROUTING"", ""2024-02-22T23:55:31.5439512Z""], [""ROUTED"", ""2024-02-22T23:55:31.8127436Z""] ], ""error_message"": null, ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""symbol_id_exchange"": ""USDJPY"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_USD_JPY"", ""amount_order"": 10.0, ""price"": 150.0, ""avg_px"": 0.0, ""side"": ""SELL"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}If you encounter a volume error due to a mismatch with the minimum order size:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""client_order_id_format_exchange"": ""74733759"", ""exchange_order_id"": null, ""amount_open"": 5e-15, ""amount_filled"": 0.0, ""status"": ""REJECTED"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T00:04:36.8301287Z""], [""ROUTING"", ""2024-02-23T00:04:36.8315182Z""], [""REJECTED"", ""2024-02-23T00:04:36.9940661Z""] ], ""error_message"": ""EGeneral:Invalid arguments:volume"", ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""symbol_id_exchange"": ""USDJPY"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_USD_JPY"", ""amount_order"": 5e-15, ""price"": 150.0, ""avg_px"": 0.0, ""side"": ""SELL"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}If you encounter an insufficient funds error due to insufficient balance in your account:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""client_order_id_format_exchange"": ""74733759"", ""exchange_order_id"": null, ""amount_open"": 555555555555555.0, ""amount_filled"": 0.0, ""status"": ""REJECTED"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T00:05:34.6909879Z""], [""ROUTING"", ""2024-02-23T00:05:34.6918765Z""], [""REJECTED"", ""2024-02-23T00:05:34.8518753Z""] ], ""error_message"": ""EGeneral:Invalid arguments:volume"", ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""symbol_id_exchange"": ""USDJPY"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_USD_JPY"", ""amount_order"": 555555555555555.0, ""price"": 150.0, ""avg_px"": 0.0, ""side"": ""SELL"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}infoHere you can check the comprehensive list of execution instructions for the exec_inst parameterYou can find available values for the time_in_force parameter hereEMS exclusively supports the LIMIT order_type.The supported values for symbol_id_coinapi can be found by executing the endpoint provided here.The meaning of the order status in the response (ROUTED, REJECTED, etc.) can be found hereTo view the possible values for the order lifecycle, click hereInstead of utilizing CoinAPI's symbol_id_coinapi, you can opt for the symbol provided by the exchange through symbol_id_exchangeHere are some of the most common codes that may be returned for order creation:Http Status CodeDescription200 (ok)Order accepted400 (bad request)Incorrect input parameters.490 (unreachable)Exchange cannot be reached.504 (timeout)Exchange didn't respond in the defined timeout.Verify order status​Ensure that you've saved the client_order_id parameter associated with your specific order. This identifier will be necessary to check its status.import requestsimport jsonfrom datetime import datetime, timedeltaurl = ""https://global.ems.coinapi.net/v1/orders/status/YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001""# Headersheaders = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Make the requesttry: response = requests.get(url, headers=headers) # Check status code if response.status_code == 200:  print(""Response JSON:"", response.json()) else:  print(""Response Code:"", response.status_code)   for header, value in response.headers.items():  print(header + ': ' + value) except Exception as e: print(""An error occurred:"", e)An example order status report that was executed with YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001 identifier and which was CANCELED.{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""client_order_id_format_exchange"": ""1945919824"", ""exchange_order_id"": ""OUQMAY-ODBWL-AXG4ZE"", ""amount_open"": 10.0, ""amount_filled"": 0.0, ""status"": ""CANCELED"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T00:16:20.2139293Z""], [""ROUTING"", ""2024-02-23T00:16:20.2389572Z""], [""ROUTED"", ""2024-02-23T00:16:20.4016779Z""], [""NEW"", ""2024-02-23T00:16:20.4021975Z""], [""CANCELED"", ""2024-02-23T00:16:20.4026337Z""] ], ""error_message"": null, ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""symbol_id_exchange"": ""USDJPY"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_USD_JPY"", ""amount_order"": 10.0, ""price"": 150.0, ""avg_px"": 0.0, ""side"": ""SELL"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}Check all open orders​You can also check all of the open orders.import requestsimport jsonfrom datetime import datetime, timedeltaurl = "" https://global.ems.coinapi.net/v1/orders""# Headersheaders = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Make the requesttry: response = requests.get(url, headers=headers) # Check status code if response.status_code == 200:  print(""Response JSON:"", response.json()) else:  print(""Response Code:"", response.status_code)   for header, value in response.headers.items():  print(header + ': ' + value) except Exception as e: print(""An error occurred:"", e)infoAfter an order is closed/finalized, it will no longer be visible through the endpoint mentioned above.Submit Order (BUY)​Here's an example of submitting a BUY order on the KRAKEN exchange with the following details: Desired amount of OXT to buy: 100Expected price to be executed at: 0.11Save down somewhere the YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007 identifier to track the status of the orderimport requestsimport jsonfrom datetime import datetime, timedeltaurl = ""https://global.ems.coinapi.net/v1/orders""payload = json.dumps({ ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_OXT_USD"", ""amount_order"": 100, ""price"": 0.11, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""exec_inst"": [ ""MAKER_OR_CANCEL"" ]})# Headersheaders = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Make the requesttry: response = requests.post(url, data=payload, headers=headers) # Check status code if response.status_code == 200:  print(""Response JSON:"", response.json()) else:  print(""Response Code:"", response.status_code)   for header, value in response.headers.items():  print(header + ': ' + value) except Exception as e: print(""An error occurred:"", e)Successfully routed order Response:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""client_order_id_format_exchange"": ""1946142760"", ""exchange_order_id"": ""OJCPEO-PO7WD-VTPUF2"", ""amount_open"": 100.0, ""amount_filled"": 0.0, ""status"": ""ROUTED"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T01:13:15.6096269Z""], [""ROUTING"", ""2024-02-23T01:13:15.6102840Z""], [""ROUTED"", ""2024-02-23T01:13:15.7772494Z""] ], ""error_message"": null, ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""symbol_id_exchange"": ""OXTUSD"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_OXT_USD"", ""amount_order"": 100.0, ""price"": 0.11, ""avg_px"": 0.0, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}Below is the order status report response for a BUY operation with the client_order_id set as YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""client_order_id_format_exchange"": ""1946142760"", ""exchange_order_id"": ""OJCPEO-PO7WD-VTPUF2"", ""amount_open"": 100.0, ""amount_filled"": 0.0, ""status"": ""NEW"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T01:13:15.6096269Z""], [""ROUTING"", ""2024-02-23T01:13:15.6102840Z""], [""ROUTED"", ""2024-02-23T01:13:15.7772494Z""], [""NEW"", ""2024-02-23T01:13:15.8077026Z""] ], ""error_message"": null, ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""symbol_id_exchange"": ""OXTUSD"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_OXT_USD"", ""amount_order"": 100.0, ""price"": 0.11, ""avg_px"": 0.0, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}Cancelling all open orders​To cancel all open orders associated with the KRAKEN/JOHN:import requestsimport jsonfrom datetime import datetime, timedeltaurl = ""https://global.ems.coinapi.net/v1/orders/cancel/all""payload = json.dumps({""exchange_id "": ""KRAKEN/JOHN""})# Headersheaders = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Make the requesttry: response = requests.post(url, data=payload, headers=headers) # Check status code if response.status_code == 200:  print(""Response JSON:"", response.json()) else:  print(""Response Code:"", response.status_code)   for header, value in response.headers.items():  print(header + ': ' + value) except Exception as e: print(""An error occurred:"", e)Here's a sample order report for a canceled BUY order via the EMS API:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""client_order_id_format_exchange"": ""1946142760"", ""exchange_order_id"": ""OJCPEO-PO7WD-VTPUF2"", ""amount_open"": 100.0, ""amount_filled"": 0.0, ""status"": ""CANCELED"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T01:13:15.6096269Z""], [""ROUTING"", ""2024-02-23T01:13:15.6102840Z""], [""ROUTED"", ""2024-02-23T01:13:15.7772494Z""], [""NEW"", ""2024-02-23T01:13:15.8077026Z""], [""PENDING_CANCEL"", ""2024-02-23T01:18:49.2279836Z""], [""CANCELED"", ""2024-02-23T01:18:49.4245926Z""] ], ""error_message"": null, ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""symbol_id_exchange"": ""OXTUSD"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_OXT_USD"", ""amount_order"": 100.0, ""price"": 0.11, ""avg_px"": 0.0, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}The explanations and practical code examples provided should let you have a better understanding of how to leverage the EMS API for cryptocurrency trading across multiple exchanges.Was this section helpful?12345PreviousRetrieve and analyze crypto order book data using a cryptocurrency APINextMarket Data APIIntroductionBackgroundOn the AgendaGetting startedCheck available exchangesConnect your ExchangesBITMEXObtain Public keyConnect your accountKRAKENObtain Public keyConnect your accountGet the list of Connected ExchangesTrades executionCheck balance (Optional)Submit Order (SELL)Verify order statusCheck all open ordersSubmit Order (BUY)Cancelling all open ordersCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/how-to-guides/trading-essentials-quickstart#kraken)"
72,i.io general faq security and privacy What CDN does the API use,i.io general faq security and privacy What CDN does the API use.   What CDN does the API use? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIBilling and SubscriptionsSecurity and PrivacyWhat CDN does the API use?What information do I need to provide in order to subscribe?What security mechanisms does CoinAPI use to protect my data?What should I do if my API key was compromised?GlossaryChangelogFAQSecurity and PrivacyWhat CDN does the API use?What CDN does the API use?We build our own CDN network with nodes directly distributing data between each other via the fastest routes. Any existing CDN solutions are targeted on the caching which is not applicable to financial data.Was this section helpful?12345PreviousSecurity and PrivacyNextWhat information do I need to provide in order to subscribe?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/security-and-privacy/What-CDN-does-the-API-use)
73,i.io naas api bitcoin Methods listsinceblock,"i.io naas api bitcoin Methods listsinceblock.   listsinceblock | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodslistsinceblockOn this pagelistsinceblockOverview​The 'listsinceblock' method allows you to retrieve all transactions that have occurred since a specified block, identified by its blockhash. This method returns details about each transaction, including the involved addresses, transaction category, amount, fee, confirmations, and other relevant data.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""listsinceblock"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""listsinceblock\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""listsinceblock"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""2.0"", ""method"": ""listsinceblock"", ""params"": [], ""id"": 1})headers = { 'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type': 'application/json', 'accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""listsinceblock"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""listsinceblock"",""params"": [],""id"":1}`) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"") req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""method"": ""listsinceblock"", ""params"": [], ""id"": 1})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""listsinceblock\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​blockhash (string): The hash of the block from which to list transactions. If not provided, it will list transactions from the genesis block.target_confirmations (numeric): The number of confirmations a transaction needs to have to be listed. Default is 6.include_watchonly (boolean): Whether to include transactions to watch-only addresses. Default is true.include_removed (boolean): Whether to include removed transactions. Default is true.Response​{ ""result"": null, ""error"": { ""code"": -18, ""message"": ""No wallet is loaded. Load a wallet using loadwallet or create a new one with createwallet. (Note: A default wallet is no longer automatically created)"" }, ""id"": 1}Was this section helpful?12345PreviouslistlockunspentNextlisttransactionsOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/listsinceblock)"
74,i.io general faq api Geographic locations and the Latency,"i.io general faq api Geographic locations and the Latency.   Geographic locations and the Latency | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer EMS Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What is the rate limit for EMS Trading API?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQAPIGeographic locations and the LatencyGeographic locations and the LatencyWe continuously expand our data centers, but currently, the API endpoints are located in: - AWS us-east-1  - AWS eu-central-1  - AWS eu-west-1  - USA Chicago (AS7922, AS812, AS10796)  - USA New York (AS7922, AS812, AS10796)  - UK London (AS2856, AS13285, AS5089)  - Poland Warsaw (AS174)  - Asia Tokyo (AS17676, AS2516, AS4713)Historical data delivered using the REST API (all /history and several /latest endpoints) and the flat files are generated in the separate process where we replay all the markets (seen from different locations) and create a single data feed prone to issues related to specific geographic areas like network issues etc.Real-time data delivered using the REST (all /current and several /latest endpoints), WebSocket, and the FIX API originates from the specific site where the customer was connected. On the Enterprise Plan, it's possible to have direct access to the sites or set up AWS VPC Peering in that case latency between our infrastructure and the customer is below one millisecond. If the connection was established to the public endpoint, then it's routed using the GeoDNS to the closest site; latency then depends on the distance between the customer and the site where the connection was routed [~20ms].Was this section helpful?12345PreviousFIX API Logon TroubleshootingNextHow are exchange rates calculated?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/api/Geographic-locations-and-the-Latency)"
75,i.io market data fix,"i.io market data fix.   FIX API | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1WebSocket API DSJSON RPCFIX APIMessagesHow-to guidesPerformance Testing GuideFIX APIOn this pageFIX APIMarket Data - FIX APIFinancial Information eXchange (FIX) protocol is an electronic communications protocol initiated in 1992 for international real-time exchange of information related to the securities transactions and markets. You can use it to receive real-time market data from us and it's an alternative to WebSocket protocol.infoIf you don't have experience with FIX protocol, consider using a much simpler to implement REST or WebSocket API.Implemented Standards:FIX4.4Endpoints​FIX client configuration file for encrypted connection:[DEFAULT]ConnectionType=initiatorReconnectInterval=2FileStorePath=storeFileLogPath=logStartTime=00:00:00EndTime=00:00:00NonStopSession=YUseDataDictionary=YValidateFieldsOutOfOrder=NDataDictionary=FIX44.xmlSocketConnectHost=fix.coinapi.ioSocketConnectPort=3303SSLEnable=YSSLServerName=fix.coinapi.ioSSLValidateCertificates=YSSLCheckCertificateRevocation=YLogoutTimeout=5ResetOnLogon=YResetOnLogout=YResetOnDisconnect=Y[SESSION]BeginString=FIX.4.4SenderCompID=YOUR_API_KEYTargetCompID=COINAPI_V2HeartBtInt=10FIX client configuration file for unencrypted connection:[DEFAULT]ConnectionType=initiatorReconnectInterval=2FileStorePath=storeFileLogPath=logStartTime=00:00:00EndTime=00:00:00NonStopSession=YUseDataDictionary=YValidateFieldsOutOfOrder=NDataDictionary=FIX44.xmlSocketConnectHost=fix.coinapi.ioSocketConnectPort=3302SSLEnable=NLogoutTimeout=5ResetOnLogon=YResetOnLogout=YResetOnDisconnect=Y[SESSION]BeginString=FIX.4.4SenderCompID=YOUR_API_KEYTargetCompID=COINAPI_V2HeartBtInt=10Our production endpoint configuration parameters:ParameterValueHostnamefix.coinapi.ioPort Unecnrypted3302Port TLS/SSL3303Protocol versionFIX.4.4 (XML FIX Specification can be downloaded here: FIX44.xml)Gateway timezoneUTCWe recommend using our SDK or listed client libraries depending on your language requirements:LanguageLibrariesC++https://github.com/quickfix/quickfixC#https://github.com/coinapi/coinapi-sdk/tree/master/csharp-fixhttps://github.com/connamara/quickfixnJavahttps://github.com/quickfix-j/quickfixjPythonhttps://github.com/quickfix/quickfix/tree/master/src/pythonRubyhttps://github.com/quickfix/quickfix/tree/master/src/rubyGohttps://github.com/quickfixgo/quickfix/Security​Stunnel configuation:[COINAPI]client = yesaccept = 3302connect = fix.coinapi.io:3303verify = 2Communication with our FIX gateway is secured by TLS protocol if you are using the encrypted port. If your FIX protocol implementation does not support establishing a connection over a secure channel, you must use a proxy between your client and our FIX gateway to unbundle encryption or use the unencrypted port. We recommend stunnel as a proxy if a secure connection can't be established directly from your client and you can't allow unencrypted traffic.tipYou should assume that we are always providing certificates signed by the Trusted Certification Authority.oneZero Hub​Our FIX Connector is passing oneZero Conformance Test. If you need to establish a session using the FIX with your company oneZero Hub, please contact our support at CoinAPI Support.Was this section helpful?12345PreviousJSON RPCNextMessagesEndpointsSecurityoneZero HubCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/fix)"
76,i.io naas api ethereum Methods eth protocolVersion,"i.io naas api ethereum Methods eth protocolVersion.   eth_protocolVersion | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_protocolVersionOn this pageeth_protocolVersionOverview​The 'eth_protocolVersion' method returns the current Ethereum protocol version.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \ --url https://ethereum-mainnet-geth-archive.node.coinapi.io \ --header 'accept: application/json' \ --header 'content-type: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --data '{ ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_protocolVersion""}'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_protocolVersion\""}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"",CURLOPT_RETURNTRANSFER => true,CURLOPT_ENCODING => """",CURLOPT_MAXREDIRS => 10,CURLOPT_TIMEOUT => 30,CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,CURLOPT_CUSTOMREQUEST => ""POST"",CURLOPT_POSTFIELDS => json_encode(['id' => 1,'jsonrpc' => '2.0','method' => 'eth_protocolVersion']),CURLOPT_HTTPHEADER => [""accept: application/json"",""content-type: application/json"",""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY""],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) {echo ""cURL Error #:"" . $err;} else {echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_protocolVersion""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text)const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({id: 1, jsonrpc: '2.0', method: 'eth_protocolVersion'})};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_protocolVersion\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_protocolVersion\""}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_protocolVersion\""}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​NoneResponse​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": ""0x3bbc64139084e1e915dca87e990d708f""}protocol version: A hexadecimal indicating the current Ethereum protocol version.Was this section helpful?12345Previouseth_newPendingTransactionFilterNexteth_sendRawTransactionOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_protocolVersion)"
77,i.io ems api rest api orders send new order,"i.io ems api rest api orders send new order.   Send new order | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIREST APIBalancesOrdersCancel all orders requestCancel order requestGet open ordersGet order execution reportHistory of order changesSend new orderPositionsWebSocket APIFIX APISelf Hosted GuideREST APIOrdersSend new orderSend new orderPOST /v1/ordersThis request creating new order for the specific exchange.application/jsonRequest Body requiredOrderNewSingleRequest object.exchange_id string requiredExchange identifier used to identify the routing destination.client_order_id string requiredThe unique identifier of the order assigned by the client.symbol_id_exchange stringExchange symbol. One of the properties (symbol_id_exchange, symbol_id_coinapi) is required to identify the market for the new order.symbol_id_coinapi stringCoinAPI symbol. One of the properties (symbol_id_exchange, symbol_id_coinapi) is required to identify the market for the new order.amount_order number requiredOrder quantity.price number requiredOrder price.side OrdSide requiredPossible values: [BUY, SELL]Side of order.order_type OrdType requiredPossible values: [LIMIT]Order types are documented in the separate section: EMS / Starter Guide / Order parameters / Order typetime_in_force TimeInForce requiredPossible values: [GOOD_TILL_CANCEL, GOOD_TILL_TIME_EXCHANGE, GOOD_TILL_TIME_OMS, FILL_OR_KILL, IMMEDIATE_OR_CANCEL]Order time in force options are documented in the separate section: EMS / Starter Guide / Order parameters / Time in forceexpire_time dateExpiration time. Conditionaly required for orders with time_in_force = GOOD_TILL_TIME_EXCHANGE or GOOD_TILL_TIME_OEML.exec_inst string[]Possible values: [MAKER_OR_CANCEL, AUCTION_ONLY, INDICATION_OF_INTEREST]Order execution instructions are documented in the separate section: EMS / Starter Guide / Order parameters / Execution instructionsResponses200400490504Createdapplication/jsonSchemaExample (from schema)Schemaexchange_id string requiredExchange identifier used to identify the routing destination.client_order_id string requiredThe unique identifier of the order assigned by the client.symbol_id_exchange stringExchange symbol. One of the properties (symbol_id_exchange, symbol_id_coinapi) is required to identify the market for the new order.symbol_id_coinapi stringCoinAPI symbol. One of the properties (symbol_id_exchange, symbol_id_coinapi) is required to identify the market for the new order.amount_order number requiredOrder quantity.price number requiredOrder price.side OrdSide requiredPossible values: [BUY, SELL]Side of order.order_type OrdType requiredPossible values: [LIMIT]Order types are documented in the separate section: EMS / Starter Guide / Order parameters / Order typetime_in_force TimeInForce requiredPossible values: [GOOD_TILL_CANCEL, GOOD_TILL_TIME_EXCHANGE, GOOD_TILL_TIME_OMS, FILL_OR_KILL, IMMEDIATE_OR_CANCEL]Order time in force options are documented in the separate section: EMS / Starter Guide / Order parameters / Time in forceexpire_time dateExpiration time. Conditionaly required for orders with time_in_force = GOOD_TILL_TIME_EXCHANGE or GOOD_TILL_TIME_OEML.exec_inst string[]Possible values: [MAKER_OR_CANCEL, AUCTION_ONLY, INDICATION_OF_INTEREST]Order execution instructions are documented in the separate section: EMS / Starter Guide / Order parameters / Execution instructionsclient_order_id_format_exchange string requiredThe unique identifier of the order assigned by the client converted to the exchange order tag format for the purpose of tracking it.exchange_order_id stringUnique identifier of the order assigned by the exchange or executing system.amount_open number requiredQuantity open for further execution. amount_open = amount_order - amount_filledamount_filled number requiredTotal quantity filled.avg_px numberCalculated average price of all fills on this order.status OrdStatus requiredPossible values: [RECEIVED, ROUTING, ROUTED, NEW, PENDING_CANCEL, PARTIALLY_FILLED, FILLED, CANCELED, REJECTED]Order statuses and the lifecycle are documented in the separate section: EMS / Starter Guide / Order Lifecyclestatus_history array[]Timestamped history of order status changes.error_message stringError message.fills object[]Relay fill information on working orders.Array [time dateExecution time.price numberExecution price.amount numberExecuted quantity.]{ ""exchange_id"": ""KRAKEN"", ""client_order_id"": ""6ab36bc1-344d-432e-ac6d-0bf44ee64c2b"", ""symbol_id_exchange"": ""XBT/USDT"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_BTC_USDT"", ""amount_order"": 0.045, ""price"": 0.0783, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": ""2020-01-01T10:45:20.1677709Z"", ""exec_inst"": [ ""MAKER_OR_CANCEL"" ], ""client_order_id_format_exchange"": ""f81211e2-27c4-b86a-8143-01088ba9222c"", ""exchange_order_id"": 3456456754, ""amount_open"": 0.22, ""amount_filled"": 0, ""avg_px"": 0.0783, ""status"": ""RECEIVED"", ""status_history"": [ [  [  [   ""RECEIVED"",   ""2020-05-27T11:16:20.1677709Z""  ],  [   ""REJECTED"",   ""2020-05-27T11:16:20.1677710Z""  ]  ] ] ], ""error_message"": ""{\""result\"":\""error\"",\""reason\"":\""InsufficientFunds\"",\""message\"":\""Failed to place buy order on symbol 'BTCUSD' for price $7,000.00 and quantity 0.22 BTC due to insufficient funds\""}"", ""fills"": [ {  ""time"": ""2020-01-01T10:45:20.1677709Z"",  ""price"": 10799.2,  ""amount"": 0.002 } ]}Input model validation errors.application/jsonSchemaExample (from schema)Schematype stringtitle stringstatus numbertraceId stringerrors string{ ""type"": ""https://tools.ietf.org/html/rfc7231#section-6.5.1"", ""title"": ""One or more validation errors occurred."", ""status"": 400, ""traceId"": ""d200e8b5-4271a5461ce5342f"", ""errors"": ""string""}Exchange is unreachable.appliction/jsonSchemaExample (from schema)Schematype stringMessage type, constant.reject_reason RejectReasonPossible values: [OTHER, EXCHANGE_UNREACHABLE, EXCHANGE_RESPONSE_TIMEOUT, ORDER_ID_NOT_FOUND, INVALID_TYPE, METHOD_NOT_SUPPORTED, JSON_ERROR]Cause of rejection.exchange_id stringIf the message related to exchange, then the identifier of the exchange will be provided.message stringMessage text.rejected_message stringValue of rejected request, if available.{ ""type"": ""MESSAGE_REJECT"", ""reject_reason"": ""ORDER_ID_NOT_FOUND"", ""exchange_id"": ""BINANCE"", ""message"": ""Order with ID: BINANCE-7d8a-4888 not found"", ""rejected_message"": ""{\""client_order_id\"":\""BINANCE-7d8a-4888\"",\""exchange_id\"":\""BINANCE\"",\""type\"":\""ORDER_CANCEL_SINGLE_REQUEST\""}""}Exchange didn't responded in the defined timeout.appliction/jsonSchemaExample (from schema)Schematype stringMessage type, constant.reject_reason RejectReasonPossible values: [OTHER, EXCHANGE_UNREACHABLE, EXCHANGE_RESPONSE_TIMEOUT, ORDER_ID_NOT_FOUND, INVALID_TYPE, METHOD_NOT_SUPPORTED, JSON_ERROR]Cause of rejection.exchange_id stringIf the message related to exchange, then the identifier of the exchange will be provided.message stringMessage text.rejected_message stringValue of rejected request, if available.{ ""type"": ""MESSAGE_REJECT"", ""reject_reason"": ""ORDER_ID_NOT_FOUND"", ""exchange_id"": ""BINANCE"", ""message"": ""Order with ID: BINANCE-7d8a-4888 not found"", ""rejected_message"": ""{\""client_order_id\"":\""BINANCE-7d8a-4888\"",\""exchange_id\"":\""BINANCE\"",\""type\"":\""ORDER_CANCEL_SINGLE_REQUEST\""}""}Loading...Was this section helpful?12345PreviousHistory of order changesNextPositionsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/rest-api/orders/send-new-order)"
78,i.io general faq general What order types does SOR support,"i.io general faq general What order types does SOR support.   What order types does SOR support? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralWhat order types does SOR support?What order types does SOR support?It supports various algorithmic orders like Iceberg, vwap, twap, volume participations.Was this section helpful?12345PreviousWhat market symbol types are supported by CoinAPI?NextWhat types of data does CoinAPI provide?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/What-order-types-does-SOR-support)"
79,i.io faq api Where can I find examples and SDK source codes for API,"i.io faq api Where can I find examples and SDK source codes for API.   Where can I find examples and SDK source codes for API? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQAPIWhere can I find examples and SDK source codes for API?Where can I find examples and SDK source codes for API?Take a look at our GitHub repository at https://github.com/coinapi/coinapi-sdkWas this section helpful?12345PreviousWhat timezone is used for date/time values?NextWhy are limit headers not always showing on a request?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/api/Where-can-I-find-examples-and-SDK-source-codes-for-API)"
80,i.io market data rest api metadata list all assets,"i.io market data rest api metadata list all assets.   List all assets | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataList all asset iconsList all assets by asset IDList all assetsList all exchanges by exchange_idList all exchangesList all symbolsList of icons for the exchangesList of symbols for the exchangeList symbol mapping for the exchangeMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIMetadataList all assetsList all assetsGET /v1/assetsRetrieves all assets.infoOur asset identifiers are aligned with the ISO 4217 currency codes standard only for fiat money (government or law regulated currency).infoProperties of the output are providing aggregated information from across all symbols related to the specific asset. If you need to calculate your aggregation (e.g., limiting only the particular type of symbols), you should use /v1/symbols endpoint as a data source.Query Parametersfilter_asset_id stringComma or semicolon delimited asset identifiers used to filter response. (optional, eg. BTC;ETH).Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [asset_id string nullableGets or sets the asset ID.name string nullableGets or sets the name of the asset.type_is_crypto int32Gets or sets a value indicating whether the asset is a cryptocurrency.data_quote_start date-time nullableGets or sets the start date of quote data.data_quote_end date-time nullableGets or sets the end date of quote data.data_orderbook_start date-time nullableGets or sets the start date of order book data.data_orderbook_end date-time nullableGets or sets the end date of order book data.data_trade_start date-time nullableGets or sets the start date of trade data.data_trade_end date-time nullableGets or sets the end date of trade data.data_symbols_count int64 nullableGets or sets the number of symbols.volume_1hrs_usd double nullableGets or sets the USD volume in the last 1 hour.volume_1day_usd double nullableGets or sets the USD volume in the last 1 day.volume_1mth_usd double nullableGets or sets the USD volume in the last 1 month.price_usd double nullableGets or sets the USD price of the asset.id_icon uuid nullableGets or sets the ID of the icon for the asset.supply_current double nullableGets or sets the current supply of the asset.supply_total double nullableGets or sets the total supply of the asset.supply_max double nullableGets or sets the maximum supply of the asset.chain_addresses object[] nullableArray [chain_id string nullableGets or sets chain idnetwork_id string nullableGets or sets network idaddress string nullableGets or sets chain address]data_start string nullabledata_end string nullable][ { ""asset_id"": ""string"", ""name"": ""string"", ""type_is_crypto"": 0, ""data_quote_start"": ""2024-07-16T12:55:05.232Z"", ""data_quote_end"": ""2024-07-16T12:55:05.232Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.232Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.232Z"", ""data_trade_start"": ""2024-07-16T12:55:05.232Z"", ""data_trade_end"": ""2024-07-16T12:55:05.232Z"", ""data_symbols_count"": 0, ""volume_1hrs_usd"": 0, ""volume_1day_usd"": 0, ""volume_1mth_usd"": 0, ""price_usd"": 0, ""id_icon"": ""3fa85f64-5717-4562-b3fc-2c963f66afa6"", ""supply_current"": 0, ""supply_total"": 0, ""supply_max"": 0, ""chain_addresses"": [  {  ""chain_id"": ""string"",  ""network_id"": ""string"",  ""address"": ""string""  } ], ""data_start"": ""string"", ""data_end"": ""string"" }][ { ""asset_id"": ""BTC"", ""name"": ""Bitcoin"", ""type_is_crypto"": 1, ""data_quote_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_quote_end"": ""2019-11-03T17:55:07.6724523Z"", ""data_orderbook_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_orderbook_end"": ""2019-11-03T17:55:17.8592413Z"", ""data_trade_start"": ""2010-07-17T23:09:17.0000000Z"", ""data_trade_end"": ""2019-11-03T17:55:11.8220000Z"", ""data_symbols_count"": 22711, ""volume_1hrs_usd"": 102894431436.49, ""volume_1day_usd"": 2086392323256.16, ""volume_1mth_usd"": 57929168359984.54, ""price_usd"": 9166.207274778093, ""chain_addresses"": [  {  ""chain_id"": ""ARBITRUM"",  ""network_id"": ""MAINNET"",  ""address"": ""0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f""  },  {  ""chain_id"": ""ETHEREUM"",  ""network_id"": ""MAINNET"",  ""address"": ""0x2260fac5e5542a773aa44fbcfedf7c193bc2c599""  } ], ""data_start"": ""2010-07-17"", ""data_end"": ""2019-11-03"" }, { ""asset_id"": ""USD"", ""name"": ""US Dollar"", ""type_is_crypto"": 0, ""data_quote_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_quote_end"": ""2019-11-03T17:54:49.3807706Z"", ""data_orderbook_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_orderbook_end"": ""2019-11-03T17:55:13.1863931Z"", ""data_trade_start"": ""2010-07-17T23:09:17.0000000Z"", ""data_trade_end"": ""2019-11-03T17:55:07.7870000Z"", ""data_symbols_count"": 10728, ""volume_1hrs_usd"": 9466454016.52, ""volume_1day_usd"": 221580758173.49, ""volume_1mth_usd"": 11816685174661.7, ""price_usd"": 1, ""chain_addresses"": [  {  ""chain_id"": ""ETHEREUM"",  ""network_id"": ""MAINNET"",  ""address"": ""0xd233d1f6fd11640081abb8db125f722b5dc729dc""  } ], ""data_start"": ""2010-07-17"", ""data_end"": ""2019-11-03"" }]SchemaExample (from schema)Example responseSchemaArray [asset_id string nullableGets or sets the asset ID.name string nullableGets or sets the name of the asset.type_is_crypto int32Gets or sets a value indicating whether the asset is a cryptocurrency.data_quote_start date-time nullableGets or sets the start date of quote data.data_quote_end date-time nullableGets or sets the end date of quote data.data_orderbook_start date-time nullableGets or sets the start date of order book data.data_orderbook_end date-time nullableGets or sets the end date of order book data.data_trade_start date-time nullableGets or sets the start date of trade data.data_trade_end date-time nullableGets or sets the end date of trade data.data_symbols_count int64 nullableGets or sets the number of symbols.volume_1hrs_usd double nullableGets or sets the USD volume in the last 1 hour.volume_1day_usd double nullableGets or sets the USD volume in the last 1 day.volume_1mth_usd double nullableGets or sets the USD volume in the last 1 month.price_usd double nullableGets or sets the USD price of the asset.id_icon uuid nullableGets or sets the ID of the icon for the asset.supply_current double nullableGets or sets the current supply of the asset.supply_total double nullableGets or sets the total supply of the asset.supply_max double nullableGets or sets the maximum supply of the asset.chain_addresses object[] nullableArray [chain_id string nullableGets or sets chain idnetwork_id string nullableGets or sets network idaddress string nullableGets or sets chain address]data_start string nullabledata_end string nullable][ { ""asset_id"": ""string"", ""name"": ""string"", ""type_is_crypto"": 0, ""data_quote_start"": ""2024-07-16T12:55:05.233Z"", ""data_quote_end"": ""2024-07-16T12:55:05.233Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.233Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.233Z"", ""data_trade_start"": ""2024-07-16T12:55:05.233Z"", ""data_trade_end"": ""2024-07-16T12:55:05.233Z"", ""data_symbols_count"": 0, ""volume_1hrs_usd"": 0, ""volume_1day_usd"": 0, ""volume_1mth_usd"": 0, ""price_usd"": 0, ""id_icon"": ""3fa85f64-5717-4562-b3fc-2c963f66afa6"", ""supply_current"": 0, ""supply_total"": 0, ""supply_max"": 0, ""chain_addresses"": [  {  ""chain_id"": ""string"",  ""network_id"": ""string"",  ""address"": ""string""  } ], ""data_start"": ""string"", ""data_end"": ""string"" }][ { ""asset_id"": ""BTC"", ""name"": ""Bitcoin"", ""type_is_crypto"": 1, ""data_quote_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_quote_end"": ""2019-11-03T17:55:07.6724523Z"", ""data_orderbook_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_orderbook_end"": ""2019-11-03T17:55:17.8592413Z"", ""data_trade_start"": ""2010-07-17T23:09:17.0000000Z"", ""data_trade_end"": ""2019-11-03T17:55:11.8220000Z"", ""data_symbols_count"": 22711, ""volume_1hrs_usd"": 102894431436.49, ""volume_1day_usd"": 2086392323256.16, ""volume_1mth_usd"": 57929168359984.54, ""price_usd"": 9166.207274778093, ""chain_addresses"": [  {  ""chain_id"": ""ARBITRUM"",  ""network_id"": ""MAINNET"",  ""address"": ""0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f""  },  {  ""chain_id"": ""ETHEREUM"",  ""network_id"": ""MAINNET"",  ""address"": ""0x2260fac5e5542a773aa44fbcfedf7c193bc2c599""  } ], ""data_start"": ""2010-07-17"", ""data_end"": ""2019-11-03"" }, { ""asset_id"": ""USD"", ""name"": ""US Dollar"", ""type_is_crypto"": 0, ""data_quote_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_quote_end"": ""2019-11-03T17:54:49.3807706Z"", ""data_orderbook_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_orderbook_end"": ""2019-11-03T17:55:13.1863931Z"", ""data_trade_start"": ""2010-07-17T23:09:17.0000000Z"", ""data_trade_end"": ""2019-11-03T17:55:07.7870000Z"", ""data_symbols_count"": 10728, ""volume_1hrs_usd"": 9466454016.52, ""volume_1day_usd"": 221580758173.49, ""volume_1mth_usd"": 11816685174661.7, ""price_usd"": 1, ""chain_addresses"": [  {  ""chain_id"": ""ETHEREUM"",  ""network_id"": ""MAINNET"",  ""address"": ""0xd233d1f6fd11640081abb8db125f722b5dc729dc""  } ], ""data_start"": ""2010-07-17"", ""data_end"": ""2019-11-03"" }]SchemaExample (from schema)Example responseSchemaArray [asset_id string nullableGets or sets the asset ID.name string nullableGets or sets the name of the asset.type_is_crypto int32Gets or sets a value indicating whether the asset is a cryptocurrency.data_quote_start date-time nullableGets or sets the start date of quote data.data_quote_end date-time nullableGets or sets the end date of quote data.data_orderbook_start date-time nullableGets or sets the start date of order book data.data_orderbook_end date-time nullableGets or sets the end date of order book data.data_trade_start date-time nullableGets or sets the start date of trade data.data_trade_end date-time nullableGets or sets the end date of trade data.data_symbols_count int64 nullableGets or sets the number of symbols.volume_1hrs_usd double nullableGets or sets the USD volume in the last 1 hour.volume_1day_usd double nullableGets or sets the USD volume in the last 1 day.volume_1mth_usd double nullableGets or sets the USD volume in the last 1 month.price_usd double nullableGets or sets the USD price of the asset.id_icon uuid nullableGets or sets the ID of the icon for the asset.supply_current double nullableGets or sets the current supply of the asset.supply_total double nullableGets or sets the total supply of the asset.supply_max double nullableGets or sets the maximum supply of the asset.chain_addresses object[] nullableArray [chain_id string nullableGets or sets chain idnetwork_id string nullableGets or sets network idaddress string nullableGets or sets chain address]data_start string nullabledata_end string nullable][ { ""asset_id"": ""string"", ""name"": ""string"", ""type_is_crypto"": 0, ""data_quote_start"": ""2024-07-16T12:55:05.233Z"", ""data_quote_end"": ""2024-07-16T12:55:05.233Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.233Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.233Z"", ""data_trade_start"": ""2024-07-16T12:55:05.233Z"", ""data_trade_end"": ""2024-07-16T12:55:05.233Z"", ""data_symbols_count"": 0, ""volume_1hrs_usd"": 0, ""volume_1day_usd"": 0, ""volume_1mth_usd"": 0, ""price_usd"": 0, ""id_icon"": ""3fa85f64-5717-4562-b3fc-2c963f66afa6"", ""supply_current"": 0, ""supply_total"": 0, ""supply_max"": 0, ""chain_addresses"": [  {  ""chain_id"": ""string"",  ""network_id"": ""string"",  ""address"": ""string""  } ], ""data_start"": ""string"", ""data_end"": ""string"" }][ { ""asset_id"": ""BTC"", ""name"": ""Bitcoin"", ""type_is_crypto"": 1, ""data_quote_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_quote_end"": ""2019-11-03T17:55:07.6724523Z"", ""data_orderbook_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_orderbook_end"": ""2019-11-03T17:55:17.8592413Z"", ""data_trade_start"": ""2010-07-17T23:09:17.0000000Z"", ""data_trade_end"": ""2019-11-03T17:55:11.8220000Z"", ""data_symbols_count"": 22711, ""volume_1hrs_usd"": 102894431436.49, ""volume_1day_usd"": 2086392323256.16, ""volume_1mth_usd"": 57929168359984.54, ""price_usd"": 9166.207274778093, ""chain_addresses"": [  {  ""chain_id"": ""ARBITRUM"",  ""network_id"": ""MAINNET"",  ""address"": ""0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f""  },  {  ""chain_id"": ""ETHEREUM"",  ""network_id"": ""MAINNET"",  ""address"": ""0x2260fac5e5542a773aa44fbcfedf7c193bc2c599""  } ], ""data_start"": ""2010-07-17"", ""data_end"": ""2019-11-03"" }, { ""asset_id"": ""USD"", ""name"": ""US Dollar"", ""type_is_crypto"": 0, ""data_quote_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_quote_end"": ""2019-11-03T17:54:49.3807706Z"", ""data_orderbook_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_orderbook_end"": ""2019-11-03T17:55:13.1863931Z"", ""data_trade_start"": ""2010-07-17T23:09:17.0000000Z"", ""data_trade_end"": ""2019-11-03T17:55:07.7870000Z"", ""data_symbols_count"": 10728, ""volume_1hrs_usd"": 9466454016.52, ""volume_1day_usd"": 221580758173.49, ""volume_1mth_usd"": 11816685174661.7, ""price_usd"": 1, ""chain_addresses"": [  {  ""chain_id"": ""ETHEREUM"",  ""network_id"": ""MAINNET"",  ""address"": ""0xd233d1f6fd11640081abb8db125f722b5dc729dc""  } ], ""data_start"": ""2010-07-17"", ""data_end"": ""2019-11-03"" }]SchemaExample (from schema)Example responseSchemaArray [asset_id string nullableGets or sets the asset ID.name string nullableGets or sets the name of the asset.type_is_crypto int32Gets or sets a value indicating whether the asset is a cryptocurrency.data_quote_start date-time nullableGets or sets the start date of quote data.data_quote_end date-time nullableGets or sets the end date of quote data.data_orderbook_start date-time nullableGets or sets the start date of order book data.data_orderbook_end date-time nullableGets or sets the end date of order book data.data_trade_start date-time nullableGets or sets the start date of trade data.data_trade_end date-time nullableGets or sets the end date of trade data.data_symbols_count int64 nullableGets or sets the number of symbols.volume_1hrs_usd double nullableGets or sets the USD volume in the last 1 hour.volume_1day_usd double nullableGets or sets the USD volume in the last 1 day.volume_1mth_usd double nullableGets or sets the USD volume in the last 1 month.price_usd double nullableGets or sets the USD price of the asset.id_icon uuid nullableGets or sets the ID of the icon for the asset.supply_current double nullableGets or sets the current supply of the asset.supply_total double nullableGets or sets the total supply of the asset.supply_max double nullableGets or sets the maximum supply of the asset.chain_addresses object[] nullableArray [chain_id string nullableGets or sets chain idnetwork_id string nullableGets or sets network idaddress string nullableGets or sets chain address]data_start string nullabledata_end string nullable][ { ""asset_id"": ""string"", ""name"": ""string"", ""type_is_crypto"": 0, ""data_quote_start"": ""2024-07-16T12:55:05.234Z"", ""data_quote_end"": ""2024-07-16T12:55:05.234Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.234Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.234Z"", ""data_trade_start"": ""2024-07-16T12:55:05.234Z"", ""data_trade_end"": ""2024-07-16T12:55:05.234Z"", ""data_symbols_count"": 0, ""volume_1hrs_usd"": 0, ""volume_1day_usd"": 0, ""volume_1mth_usd"": 0, ""price_usd"": 0, ""id_icon"": ""3fa85f64-5717-4562-b3fc-2c963f66afa6"", ""supply_current"": 0, ""supply_total"": 0, ""supply_max"": 0, ""chain_addresses"": [  {  ""chain_id"": ""string"",  ""network_id"": ""string"",  ""address"": ""string""  } ], ""data_start"": ""string"", ""data_end"": ""string"" }][ { ""asset_id"": ""BTC"", ""name"": ""Bitcoin"", ""type_is_crypto"": 1, ""data_quote_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_quote_end"": ""2019-11-03T17:55:07.6724523Z"", ""data_orderbook_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_orderbook_end"": ""2019-11-03T17:55:17.8592413Z"", ""data_trade_start"": ""2010-07-17T23:09:17.0000000Z"", ""data_trade_end"": ""2019-11-03T17:55:11.8220000Z"", ""data_symbols_count"": 22711, ""volume_1hrs_usd"": 102894431436.49, ""volume_1day_usd"": 2086392323256.16, ""volume_1mth_usd"": 57929168359984.54, ""price_usd"": 9166.207274778093, ""chain_addresses"": [  {  ""chain_id"": ""ARBITRUM"",  ""network_id"": ""MAINNET"",  ""address"": ""0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f""  },  {  ""chain_id"": ""ETHEREUM"",  ""network_id"": ""MAINNET"",  ""address"": ""0x2260fac5e5542a773aa44fbcfedf7c193bc2c599""  } ], ""data_start"": ""2010-07-17"", ""data_end"": ""2019-11-03"" }, { ""asset_id"": ""USD"", ""name"": ""US Dollar"", ""type_is_crypto"": 0, ""data_quote_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_quote_end"": ""2019-11-03T17:54:49.3807706Z"", ""data_orderbook_start"": ""2014-02-24T17:43:05.0000000Z"", ""data_orderbook_end"": ""2019-11-03T17:55:13.1863931Z"", ""data_trade_start"": ""2010-07-17T23:09:17.0000000Z"", ""data_trade_end"": ""2019-11-03T17:55:07.7870000Z"", ""data_symbols_count"": 10728, ""volume_1hrs_usd"": 9466454016.52, ""volume_1day_usd"": 221580758173.49, ""volume_1mth_usd"": 11816685174661.7, ""price_usd"": 1, ""chain_addresses"": [  {  ""chain_id"": ""ETHEREUM"",  ""network_id"": ""MAINNET"",  ""address"": ""0xd233d1f6fd11640081abb8db125f722b5dc729dc""  } ], ""data_start"": ""2010-07-17"", ""data_end"": ""2019-11-03"" }]Loading...Was this section helpful?12345PreviousList all assets by asset IDNextList all exchanges by exchange_idCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/metadata/list-all-assets)"
81,i.io market data rest api metadata list all symbols,"i.io market data rest api metadata list all symbols.   List all symbols | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataList all asset iconsList all assets by asset IDList all assetsList all exchanges by exchange_idList all exchangesList all symbolsList of icons for the exchangesList of symbols for the exchangeList symbol mapping for the exchangeMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIMetadataList all symbolsList all symbolsGET /v1/symbolsRetrieves all symbols with optional filtering.info""price_precision"" and ""size_precision"" are data precisions and are not always the same precisions used for trading eg. for the ""BINANCE"" exchanges.infoYou should not assume that the market data will be always within the resolution provided by the ""price_precision"" and ""size_precision"". The fact that the precision values can be derived from a posterior implies the fact that this data could be delayed, also it can be changed by the data source without notice and we will immediately deliver data with the new precision while could not update the precision values in this endpoint immediately.Symbol identifier​Our symbol identifier is created using a pattern that depends on symbol type.Typesymbol_id patternSPOT{exchange_id}_SPOT_{asset_id_base}_{asset_id_quote}FUTURES{exchange_id}_FTS_{asset_id_base}_{asset_id_quote}_{YYMMDD of future_delivery_time}OPTION{exchange_id}_OPT_{asset_id_base}_{asset_id_quote}_{YYMMDD of option_expiration_time}_{option_strike_price}_{option_type_is_call as C/P}PERPETUAL{exchange_id}_PERP_{asset_id_base}_{asset_id_quote}INDEX{exchange_id}_IDX_{index_id}CREDIT{exchange_id}_CRE_{asset_id_base}CONTACT{exchange_id}_COT_{contract_id}infoIn the unlikely event when the ""symbolid"" for more than one market is the same. We will append the additional term (prefixed with the """") at the end of the duplicated identifiers to differentiate them.Symbol types list (enumeration of symbol_type output variable)​TypeNameDescriptionSPOTFX SpotAgreement to exchange one asset for another one (e.g. Buy BTC for USD)FUTURESFutures contractFX Spot derivative contract where traders agree to trade fx spot at predetermined future timeOPTIONOption contractFX Spot derivative contract where traders agree to trade right to require buy or sell of fx spot at agreed price on exercise datePERPETUALPerpetual contractFX Spot derivative contract where traders agree to trade fx spot continously without predetermined future delivery timeINDEXIndexStatistical composite that measures changes in the economy or markets.CREDITCredit/FundingMargin funding contract. Order book displays lending offers and borrow bids. Price represents the daily rate.CONTRACTContractRepresents other types of financial instruments (e.g. spreads, interest rate swap)Additional output variables for symbol_type = INDEX​VariableDescriptionindex_idIndex identifierindex_display_nameHuman readable name of the index (optional)index_display_descriptionDescription of the index (optional)Additional output variables for symbol_type = FUTURES​VariableDescriptionfuture_delivery_timePredetermined time of futures contract delivery date in ISO 8601future_contract_unitContact size (eg. 10 BTC if future_contract_unit = 10 and future_contract_unit_asset = BTC)future_contract_unit_assetIdentifier of the asset used to denominate the contract unitAdditional output variables for symbol_type = PERPETUAL​VariableDescriptionfuture_contract_unitContact size (eg. 10 BTC if future_contract_unit = 10 and future_contract_unit_asset = BTC)future_contract_unit_assetIdentifier of the asset used to denominate the contract unitAdditional output variables for symbol_type = OPTION​VariableDescriptionoption_type_is_callBoolean value representing option type. true for Call options, false for Put optionsoption_strike_pricePrice at which option contract can be exercisedoption_contract_unitBase asset amount of underlying spot which single option representsoption_exercise_styleOption exercise style. Can be EUROPEAN or AMERICANoption_expiration_timeOption contract expiration time in ISO 8601Additional output variables for symbol_type = CONTRACT​VariableDescriptioncontract_delivery_timePredetermined time of contract delivery date in ISO 8601contract_unitContact size (eg. 10 BTC if contract_unit = 10 and contract_unit_asset = BTC)contract_unit_assetIdentifier of the asset used to denominate the contract unitcontract_idIdentifier of contract by the exchangeQuery Parametersfilter_symbol_id stringComma or semicolon delimited parts of symbol identifier used to filter response. (optional, eg. BITSTAMP_ or BINANCE_SPOT_)filter_exchange_id stringThe filter for exchange ID.filter_asset_id stringThe filter for asset ID.Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.exchange_id string nullableThe exchange identifier.symbol_type string nullableThe symbol type.asset_id_base string nullableThe base asset identifier.asset_id_quote string nullableThe quote asset identifier.asset_id_unit string nullableThe unit asset identifier.future_contract_unit double nullableThe contract unit for futures.future_contract_unit_asset string nullableThe asset used as the unit for futures contract.future_delivery_time date-time nullableThe future delivery time for futures contract.option_type_is_call boolean nullableIndicates whether the option type is a call.option_strike_price double nullableThe strike price for options.option_contract_unit double nullableThe contract unit for options.option_exercise_style string nullableThe exercise style for options.option_expiration_time date-time nullableThe expiration time for options.contract_delivery_time date-time nullableThe delivery time for contracts.contract_unit double nullableThe contract unit for contracts.contract_unit_asset string nullableThe asset used as the unit for contracts.contract_id string nullableThe contract identifier.contract_display_name string nullableThe display name of the contract.contract_display_description string nullableThe display description of the contract.data_start string nullabledata_end string nullabledata_quote_start date-time nullableThe start date of quote data.data_quote_end date-time nullableThe end date of quote data.data_orderbook_start date-time nullableThe start date of order book data.data_orderbook_end date-time nullableThe end date of order book data.data_trade_start date-time nullableThe start date of trade data.data_trade_end date-time nullableThe end date of trade data.index_id string nullableThe index identifier.index_display_name string nullableThe display name of the index.index_display_description string nullableThe display description of the index.volume_1hrs double nullableThe volume in the last 1 hour.volume_1hrs_usd double nullableThe volume in USD in the last 1 hour.volume_1day double nullableThe volume in the last 1 day.volume_1day_usd double nullableThe volume in USD in the last 1 day.volume_1mth double nullableThe volume in the last 1 month.volume_1mth_usd double nullableThe volume in USD in the last 1 month.price double nullableThe price.symbol_id_exchange string nullableThe symbol identifier in the exchange.asset_id_base_exchange string nullableThe base asset identifier in the exchange.asset_id_quote_exchange string nullableThe quote asset identifier in the exchange.price_precision double nullableThe price precision.size_precision double nullableThe size precision.raw_kvp object nullableNot normalized raw kvp data.property name* string][ { ""symbol_id"": ""string"", ""exchange_id"": ""string"", ""symbol_type"": ""string"", ""asset_id_base"": ""string"", ""asset_id_quote"": ""string"", ""asset_id_unit"": ""string"", ""future_contract_unit"": 0, ""future_contract_unit_asset"": ""string"", ""future_delivery_time"": ""2024-07-16T12:55:05.276Z"", ""option_type_is_call"": true, ""option_strike_price"": 0, ""option_contract_unit"": 0, ""option_exercise_style"": ""string"", ""option_expiration_time"": ""2024-07-16T12:55:05.276Z"", ""contract_delivery_time"": ""2024-07-16T12:55:05.276Z"", ""contract_unit"": 0, ""contract_unit_asset"": ""string"", ""contract_id"": ""string"", ""contract_display_name"": ""string"", ""contract_display_description"": ""string"", ""data_start"": ""string"", ""data_end"": ""string"", ""data_quote_start"": ""2024-07-16T12:55:05.276Z"", ""data_quote_end"": ""2024-07-16T12:55:05.276Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.276Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.276Z"", ""data_trade_start"": ""2024-07-16T12:55:05.276Z"", ""data_trade_end"": ""2024-07-16T12:55:05.276Z"", ""index_id"": ""string"", ""index_display_name"": ""string"", ""index_display_description"": ""string"", ""volume_1hrs"": 0, ""volume_1hrs_usd"": 0, ""volume_1day"": 0, ""volume_1day_usd"": 0, ""volume_1mth"": 0, ""volume_1mth_usd"": 0, ""price"": 0, ""symbol_id_exchange"": ""string"", ""asset_id_base_exchange"": ""string"", ""asset_id_quote_exchange"": ""string"", ""price_precision"": 0, ""size_precision"": 0, ""raw_kvp"": {} }][ { ""symbol_id"": ""KRAKENFTS_PERP_BTC_USD"", ""exchange_id"": ""KRAKENFTS"", ""symbol_type"": ""PERPETUAL"", ""asset_id_base"": ""BTC"", ""asset_id_quote"": ""USD"", ""asset_id_unit"": ""USD"", ""future_contract_unit"": 1, ""future_contract_unit_asset"": ""USD"", ""data_start"": ""2019-10-30"", ""data_end"": ""2021-03-03"", ""data_quote_start"": ""2019-10-30T16:53:10.3262317Z"", ""data_quote_end"": ""2021-03-03T13:51:45.6970000Z"", ""data_orderbook_start"": ""2019-10-30T16:53:10.3262317Z"", ""data_orderbook_end"": ""2020-08-05T14:37:32.0080000Z"", ""data_trade_start"": ""2019-10-30T16:38:52.1620000Z"", ""data_trade_end"": ""2021-03-03T13:46:25.7810000Z"", ""volume_1hrs"": 22897091, ""volume_1hrs_usd"": 22897091, ""volume_1day"": 459390289, ""volume_1day_usd"": 459390289, ""volume_1mth"": 12875674995, ""volume_1mth_usd"": 12875674995, ""price"": 51266, ""symbol_id_exchange"": ""pi_xbtusd"", ""asset_id_base_exchange"": ""XBT"", ""asset_id_quote_exchange"": ""USD"", ""price_precision"": 0.1, ""size_precision"": 1 }, { ""symbol_id"": ""POLONIEX_SPOT_LTC_USDC"", ""exchange_id"": ""POLONIEX"", ""symbol_type"": ""SPOT"", ""asset_id_base"": ""LTC"", ""asset_id_quote"": ""USDC"", ""data_start"": ""2018-11-20"", ""data_end"": ""2021-03-01"", ""data_quote_start"": ""2018-11-20T15:24:58.4128803Z"", ""data_quote_end"": ""2021-03-01T16:07:09.3475456Z"", ""data_orderbook_start"": ""2018-11-20T15:24:58.4128803Z"", ""data_orderbook_end"": ""2020-08-05T14:37:20.2695780Z"", ""data_trade_start"": ""2018-11-20T15:25:38.0000000Z"", ""data_trade_end"": ""2021-03-01T16:03:18.0000000Z"", ""volume_1hrs"": 51.68645899, ""volume_1hrs_usd"": 9036.44, ""volume_1day"": 465.568863, ""volume_1day_usd"": 81396.28, ""volume_1mth"": 22528.27638495, ""volume_1mth_usd"": 3938661, ""symbol_id_exchange"": ""USDC_LTC"", ""asset_id_base_exchange"": ""LTC"", ""asset_id_quote_exchange"": ""USDC"", ""price_precision"": 1e-8, ""size_precision"": 1e-8 }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.exchange_id string nullableThe exchange identifier.symbol_type string nullableThe symbol type.asset_id_base string nullableThe base asset identifier.asset_id_quote string nullableThe quote asset identifier.asset_id_unit string nullableThe unit asset identifier.future_contract_unit double nullableThe contract unit for futures.future_contract_unit_asset string nullableThe asset used as the unit for futures contract.future_delivery_time date-time nullableThe future delivery time for futures contract.option_type_is_call boolean nullableIndicates whether the option type is a call.option_strike_price double nullableThe strike price for options.option_contract_unit double nullableThe contract unit for options.option_exercise_style string nullableThe exercise style for options.option_expiration_time date-time nullableThe expiration time for options.contract_delivery_time date-time nullableThe delivery time for contracts.contract_unit double nullableThe contract unit for contracts.contract_unit_asset string nullableThe asset used as the unit for contracts.contract_id string nullableThe contract identifier.contract_display_name string nullableThe display name of the contract.contract_display_description string nullableThe display description of the contract.data_start string nullabledata_end string nullabledata_quote_start date-time nullableThe start date of quote data.data_quote_end date-time nullableThe end date of quote data.data_orderbook_start date-time nullableThe start date of order book data.data_orderbook_end date-time nullableThe end date of order book data.data_trade_start date-time nullableThe start date of trade data.data_trade_end date-time nullableThe end date of trade data.index_id string nullableThe index identifier.index_display_name string nullableThe display name of the index.index_display_description string nullableThe display description of the index.volume_1hrs double nullableThe volume in the last 1 hour.volume_1hrs_usd double nullableThe volume in USD in the last 1 hour.volume_1day double nullableThe volume in the last 1 day.volume_1day_usd double nullableThe volume in USD in the last 1 day.volume_1mth double nullableThe volume in the last 1 month.volume_1mth_usd double nullableThe volume in USD in the last 1 month.price double nullableThe price.symbol_id_exchange string nullableThe symbol identifier in the exchange.asset_id_base_exchange string nullableThe base asset identifier in the exchange.asset_id_quote_exchange string nullableThe quote asset identifier in the exchange.price_precision double nullableThe price precision.size_precision double nullableThe size precision.raw_kvp object nullableNot normalized raw kvp data.property name* string][ { ""symbol_id"": ""string"", ""exchange_id"": ""string"", ""symbol_type"": ""string"", ""asset_id_base"": ""string"", ""asset_id_quote"": ""string"", ""asset_id_unit"": ""string"", ""future_contract_unit"": 0, ""future_contract_unit_asset"": ""string"", ""future_delivery_time"": ""2024-07-16T12:55:05.277Z"", ""option_type_is_call"": true, ""option_strike_price"": 0, ""option_contract_unit"": 0, ""option_exercise_style"": ""string"", ""option_expiration_time"": ""2024-07-16T12:55:05.277Z"", ""contract_delivery_time"": ""2024-07-16T12:55:05.277Z"", ""contract_unit"": 0, ""contract_unit_asset"": ""string"", ""contract_id"": ""string"", ""contract_display_name"": ""string"", ""contract_display_description"": ""string"", ""data_start"": ""string"", ""data_end"": ""string"", ""data_quote_start"": ""2024-07-16T12:55:05.277Z"", ""data_quote_end"": ""2024-07-16T12:55:05.277Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.277Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.277Z"", ""data_trade_start"": ""2024-07-16T12:55:05.277Z"", ""data_trade_end"": ""2024-07-16T12:55:05.277Z"", ""index_id"": ""string"", ""index_display_name"": ""string"", ""index_display_description"": ""string"", ""volume_1hrs"": 0, ""volume_1hrs_usd"": 0, ""volume_1day"": 0, ""volume_1day_usd"": 0, ""volume_1mth"": 0, ""volume_1mth_usd"": 0, ""price"": 0, ""symbol_id_exchange"": ""string"", ""asset_id_base_exchange"": ""string"", ""asset_id_quote_exchange"": ""string"", ""price_precision"": 0, ""size_precision"": 0, ""raw_kvp"": {} }][ { ""symbol_id"": ""KRAKENFTS_PERP_BTC_USD"", ""exchange_id"": ""KRAKENFTS"", ""symbol_type"": ""PERPETUAL"", ""asset_id_base"": ""BTC"", ""asset_id_quote"": ""USD"", ""asset_id_unit"": ""USD"", ""future_contract_unit"": 1, ""future_contract_unit_asset"": ""USD"", ""data_start"": ""2019-10-30"", ""data_end"": ""2021-03-03"", ""data_quote_start"": ""2019-10-30T16:53:10.3262317Z"", ""data_quote_end"": ""2021-03-03T13:51:45.6970000Z"", ""data_orderbook_start"": ""2019-10-30T16:53:10.3262317Z"", ""data_orderbook_end"": ""2020-08-05T14:37:32.0080000Z"", ""data_trade_start"": ""2019-10-30T16:38:52.1620000Z"", ""data_trade_end"": ""2021-03-03T13:46:25.7810000Z"", ""volume_1hrs"": 22897091, ""volume_1hrs_usd"": 22897091, ""volume_1day"": 459390289, ""volume_1day_usd"": 459390289, ""volume_1mth"": 12875674995, ""volume_1mth_usd"": 12875674995, ""price"": 51266, ""symbol_id_exchange"": ""pi_xbtusd"", ""asset_id_base_exchange"": ""XBT"", ""asset_id_quote_exchange"": ""USD"", ""price_precision"": 0.1, ""size_precision"": 1 }, { ""symbol_id"": ""POLONIEX_SPOT_LTC_USDC"", ""exchange_id"": ""POLONIEX"", ""symbol_type"": ""SPOT"", ""asset_id_base"": ""LTC"", ""asset_id_quote"": ""USDC"", ""data_start"": ""2018-11-20"", ""data_end"": ""2021-03-01"", ""data_quote_start"": ""2018-11-20T15:24:58.4128803Z"", ""data_quote_end"": ""2021-03-01T16:07:09.3475456Z"", ""data_orderbook_start"": ""2018-11-20T15:24:58.4128803Z"", ""data_orderbook_end"": ""2020-08-05T14:37:20.2695780Z"", ""data_trade_start"": ""2018-11-20T15:25:38.0000000Z"", ""data_trade_end"": ""2021-03-01T16:03:18.0000000Z"", ""volume_1hrs"": 51.68645899, ""volume_1hrs_usd"": 9036.44, ""volume_1day"": 465.568863, ""volume_1day_usd"": 81396.28, ""volume_1mth"": 22528.27638495, ""volume_1mth_usd"": 3938661, ""symbol_id_exchange"": ""USDC_LTC"", ""asset_id_base_exchange"": ""LTC"", ""asset_id_quote_exchange"": ""USDC"", ""price_precision"": 1e-8, ""size_precision"": 1e-8 }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.exchange_id string nullableThe exchange identifier.symbol_type string nullableThe symbol type.asset_id_base string nullableThe base asset identifier.asset_id_quote string nullableThe quote asset identifier.asset_id_unit string nullableThe unit asset identifier.future_contract_unit double nullableThe contract unit for futures.future_contract_unit_asset string nullableThe asset used as the unit for futures contract.future_delivery_time date-time nullableThe future delivery time for futures contract.option_type_is_call boolean nullableIndicates whether the option type is a call.option_strike_price double nullableThe strike price for options.option_contract_unit double nullableThe contract unit for options.option_exercise_style string nullableThe exercise style for options.option_expiration_time date-time nullableThe expiration time for options.contract_delivery_time date-time nullableThe delivery time for contracts.contract_unit double nullableThe contract unit for contracts.contract_unit_asset string nullableThe asset used as the unit for contracts.contract_id string nullableThe contract identifier.contract_display_name string nullableThe display name of the contract.contract_display_description string nullableThe display description of the contract.data_start string nullabledata_end string nullabledata_quote_start date-time nullableThe start date of quote data.data_quote_end date-time nullableThe end date of quote data.data_orderbook_start date-time nullableThe start date of order book data.data_orderbook_end date-time nullableThe end date of order book data.data_trade_start date-time nullableThe start date of trade data.data_trade_end date-time nullableThe end date of trade data.index_id string nullableThe index identifier.index_display_name string nullableThe display name of the index.index_display_description string nullableThe display description of the index.volume_1hrs double nullableThe volume in the last 1 hour.volume_1hrs_usd double nullableThe volume in USD in the last 1 hour.volume_1day double nullableThe volume in the last 1 day.volume_1day_usd double nullableThe volume in USD in the last 1 day.volume_1mth double nullableThe volume in the last 1 month.volume_1mth_usd double nullableThe volume in USD in the last 1 month.price double nullableThe price.symbol_id_exchange string nullableThe symbol identifier in the exchange.asset_id_base_exchange string nullableThe base asset identifier in the exchange.asset_id_quote_exchange string nullableThe quote asset identifier in the exchange.price_precision double nullableThe price precision.size_precision double nullableThe size precision.raw_kvp object nullableNot normalized raw kvp data.property name* string][ { ""symbol_id"": ""string"", ""exchange_id"": ""string"", ""symbol_type"": ""string"", ""asset_id_base"": ""string"", ""asset_id_quote"": ""string"", ""asset_id_unit"": ""string"", ""future_contract_unit"": 0, ""future_contract_unit_asset"": ""string"", ""future_delivery_time"": ""2024-07-16T12:55:05.277Z"", ""option_type_is_call"": true, ""option_strike_price"": 0, ""option_contract_unit"": 0, ""option_exercise_style"": ""string"", ""option_expiration_time"": ""2024-07-16T12:55:05.277Z"", ""contract_delivery_time"": ""2024-07-16T12:55:05.277Z"", ""contract_unit"": 0, ""contract_unit_asset"": ""string"", ""contract_id"": ""string"", ""contract_display_name"": ""string"", ""contract_display_description"": ""string"", ""data_start"": ""string"", ""data_end"": ""string"", ""data_quote_start"": ""2024-07-16T12:55:05.277Z"", ""data_quote_end"": ""2024-07-16T12:55:05.277Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.277Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.277Z"", ""data_trade_start"": ""2024-07-16T12:55:05.277Z"", ""data_trade_end"": ""2024-07-16T12:55:05.277Z"", ""index_id"": ""string"", ""index_display_name"": ""string"", ""index_display_description"": ""string"", ""volume_1hrs"": 0, ""volume_1hrs_usd"": 0, ""volume_1day"": 0, ""volume_1day_usd"": 0, ""volume_1mth"": 0, ""volume_1mth_usd"": 0, ""price"": 0, ""symbol_id_exchange"": ""string"", ""asset_id_base_exchange"": ""string"", ""asset_id_quote_exchange"": ""string"", ""price_precision"": 0, ""size_precision"": 0, ""raw_kvp"": {} }][ { ""symbol_id"": ""KRAKENFTS_PERP_BTC_USD"", ""exchange_id"": ""KRAKENFTS"", ""symbol_type"": ""PERPETUAL"", ""asset_id_base"": ""BTC"", ""asset_id_quote"": ""USD"", ""asset_id_unit"": ""USD"", ""future_contract_unit"": 1, ""future_contract_unit_asset"": ""USD"", ""data_start"": ""2019-10-30"", ""data_end"": ""2021-03-03"", ""data_quote_start"": ""2019-10-30T16:53:10.3262317Z"", ""data_quote_end"": ""2021-03-03T13:51:45.6970000Z"", ""data_orderbook_start"": ""2019-10-30T16:53:10.3262317Z"", ""data_orderbook_end"": ""2020-08-05T14:37:32.0080000Z"", ""data_trade_start"": ""2019-10-30T16:38:52.1620000Z"", ""data_trade_end"": ""2021-03-03T13:46:25.7810000Z"", ""volume_1hrs"": 22897091, ""volume_1hrs_usd"": 22897091, ""volume_1day"": 459390289, ""volume_1day_usd"": 459390289, ""volume_1mth"": 12875674995, ""volume_1mth_usd"": 12875674995, ""price"": 51266, ""symbol_id_exchange"": ""pi_xbtusd"", ""asset_id_base_exchange"": ""XBT"", ""asset_id_quote_exchange"": ""USD"", ""price_precision"": 0.1, ""size_precision"": 1 }, { ""symbol_id"": ""POLONIEX_SPOT_LTC_USDC"", ""exchange_id"": ""POLONIEX"", ""symbol_type"": ""SPOT"", ""asset_id_base"": ""LTC"", ""asset_id_quote"": ""USDC"", ""data_start"": ""2018-11-20"", ""data_end"": ""2021-03-01"", ""data_quote_start"": ""2018-11-20T15:24:58.4128803Z"", ""data_quote_end"": ""2021-03-01T16:07:09.3475456Z"", ""data_orderbook_start"": ""2018-11-20T15:24:58.4128803Z"", ""data_orderbook_end"": ""2020-08-05T14:37:20.2695780Z"", ""data_trade_start"": ""2018-11-20T15:25:38.0000000Z"", ""data_trade_end"": ""2021-03-01T16:03:18.0000000Z"", ""volume_1hrs"": 51.68645899, ""volume_1hrs_usd"": 9036.44, ""volume_1day"": 465.568863, ""volume_1day_usd"": 81396.28, ""volume_1mth"": 22528.27638495, ""volume_1mth_usd"": 3938661, ""symbol_id_exchange"": ""USDC_LTC"", ""asset_id_base_exchange"": ""LTC"", ""asset_id_quote_exchange"": ""USDC"", ""price_precision"": 1e-8, ""size_precision"": 1e-8 }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.exchange_id string nullableThe exchange identifier.symbol_type string nullableThe symbol type.asset_id_base string nullableThe base asset identifier.asset_id_quote string nullableThe quote asset identifier.asset_id_unit string nullableThe unit asset identifier.future_contract_unit double nullableThe contract unit for futures.future_contract_unit_asset string nullableThe asset used as the unit for futures contract.future_delivery_time date-time nullableThe future delivery time for futures contract.option_type_is_call boolean nullableIndicates whether the option type is a call.option_strike_price double nullableThe strike price for options.option_contract_unit double nullableThe contract unit for options.option_exercise_style string nullableThe exercise style for options.option_expiration_time date-time nullableThe expiration time for options.contract_delivery_time date-time nullableThe delivery time for contracts.contract_unit double nullableThe contract unit for contracts.contract_unit_asset string nullableThe asset used as the unit for contracts.contract_id string nullableThe contract identifier.contract_display_name string nullableThe display name of the contract.contract_display_description string nullableThe display description of the contract.data_start string nullabledata_end string nullabledata_quote_start date-time nullableThe start date of quote data.data_quote_end date-time nullableThe end date of quote data.data_orderbook_start date-time nullableThe start date of order book data.data_orderbook_end date-time nullableThe end date of order book data.data_trade_start date-time nullableThe start date of trade data.data_trade_end date-time nullableThe end date of trade data.index_id string nullableThe index identifier.index_display_name string nullableThe display name of the index.index_display_description string nullableThe display description of the index.volume_1hrs double nullableThe volume in the last 1 hour.volume_1hrs_usd double nullableThe volume in USD in the last 1 hour.volume_1day double nullableThe volume in the last 1 day.volume_1day_usd double nullableThe volume in USD in the last 1 day.volume_1mth double nullableThe volume in the last 1 month.volume_1mth_usd double nullableThe volume in USD in the last 1 month.price double nullableThe price.symbol_id_exchange string nullableThe symbol identifier in the exchange.asset_id_base_exchange string nullableThe base asset identifier in the exchange.asset_id_quote_exchange string nullableThe quote asset identifier in the exchange.price_precision double nullableThe price precision.size_precision double nullableThe size precision.raw_kvp object nullableNot normalized raw kvp data.property name* string][ { ""symbol_id"": ""string"", ""exchange_id"": ""string"", ""symbol_type"": ""string"", ""asset_id_base"": ""string"", ""asset_id_quote"": ""string"", ""asset_id_unit"": ""string"", ""future_contract_unit"": 0, ""future_contract_unit_asset"": ""string"", ""future_delivery_time"": ""2024-07-16T12:55:05.278Z"", ""option_type_is_call"": true, ""option_strike_price"": 0, ""option_contract_unit"": 0, ""option_exercise_style"": ""string"", ""option_expiration_time"": ""2024-07-16T12:55:05.278Z"", ""contract_delivery_time"": ""2024-07-16T12:55:05.278Z"", ""contract_unit"": 0, ""contract_unit_asset"": ""string"", ""contract_id"": ""string"", ""contract_display_name"": ""string"", ""contract_display_description"": ""string"", ""data_start"": ""string"", ""data_end"": ""string"", ""data_quote_start"": ""2024-07-16T12:55:05.278Z"", ""data_quote_end"": ""2024-07-16T12:55:05.278Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.278Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.278Z"", ""data_trade_start"": ""2024-07-16T12:55:05.278Z"", ""data_trade_end"": ""2024-07-16T12:55:05.278Z"", ""index_id"": ""string"", ""index_display_name"": ""string"", ""index_display_description"": ""string"", ""volume_1hrs"": 0, ""volume_1hrs_usd"": 0, ""volume_1day"": 0, ""volume_1day_usd"": 0, ""volume_1mth"": 0, ""volume_1mth_usd"": 0, ""price"": 0, ""symbol_id_exchange"": ""string"", ""asset_id_base_exchange"": ""string"", ""asset_id_quote_exchange"": ""string"", ""price_precision"": 0, ""size_precision"": 0, ""raw_kvp"": {} }][ { ""symbol_id"": ""KRAKENFTS_PERP_BTC_USD"", ""exchange_id"": ""KRAKENFTS"", ""symbol_type"": ""PERPETUAL"", ""asset_id_base"": ""BTC"", ""asset_id_quote"": ""USD"", ""asset_id_unit"": ""USD"", ""future_contract_unit"": 1, ""future_contract_unit_asset"": ""USD"", ""data_start"": ""2019-10-30"", ""data_end"": ""2021-03-03"", ""data_quote_start"": ""2019-10-30T16:53:10.3262317Z"", ""data_quote_end"": ""2021-03-03T13:51:45.6970000Z"", ""data_orderbook_start"": ""2019-10-30T16:53:10.3262317Z"", ""data_orderbook_end"": ""2020-08-05T14:37:32.0080000Z"", ""data_trade_start"": ""2019-10-30T16:38:52.1620000Z"", ""data_trade_end"": ""2021-03-03T13:46:25.7810000Z"", ""volume_1hrs"": 22897091, ""volume_1hrs_usd"": 22897091, ""volume_1day"": 459390289, ""volume_1day_usd"": 459390289, ""volume_1mth"": 12875674995, ""volume_1mth_usd"": 12875674995, ""price"": 51266, ""symbol_id_exchange"": ""pi_xbtusd"", ""asset_id_base_exchange"": ""XBT"", ""asset_id_quote_exchange"": ""USD"", ""price_precision"": 0.1, ""size_precision"": 1 }, { ""symbol_id"": ""POLONIEX_SPOT_LTC_USDC"", ""exchange_id"": ""POLONIEX"", ""symbol_type"": ""SPOT"", ""asset_id_base"": ""LTC"", ""asset_id_quote"": ""USDC"", ""data_start"": ""2018-11-20"", ""data_end"": ""2021-03-01"", ""data_quote_start"": ""2018-11-20T15:24:58.4128803Z"", ""data_quote_end"": ""2021-03-01T16:07:09.3475456Z"", ""data_orderbook_start"": ""2018-11-20T15:24:58.4128803Z"", ""data_orderbook_end"": ""2020-08-05T14:37:20.2695780Z"", ""data_trade_start"": ""2018-11-20T15:25:38.0000000Z"", ""data_trade_end"": ""2021-03-01T16:03:18.0000000Z"", ""volume_1hrs"": 51.68645899, ""volume_1hrs_usd"": 9036.44, ""volume_1day"": 465.568863, ""volume_1day_usd"": 81396.28, ""volume_1mth"": 22528.27638495, ""volume_1mth_usd"": 3938661, ""symbol_id_exchange"": ""USDC_LTC"", ""asset_id_base_exchange"": ""LTC"", ""asset_id_quote_exchange"": ""USDC"", ""price_precision"": 1e-8, ""size_precision"": 1e-8 }]Loading...Was this section helpful?12345PreviousList all exchangesNextList of icons for the exchangesCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/metadata/list-all-symbols)"
82,i.io faq general Was my free API Key banned blocked,"i.io faq general Was my free API Key banned blocked.   Was my free API Key banned/blocked? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralWas my free API Key banned/blocked?Was my free API Key banned/blocked?If you are using our free plan and experience a 403 error on HTTP response with the BANNED_FREE_PLAN_IP_ABUSE in the error message, then your free key was blocked as our system detected a link to another free API key (more than one API key was accessed from the IP address that accessed this key).However, please be informed that the existence of each additional API Key for a subscription (enabled or disabled) above the plan quota is charged 1 USD per day, with a minimum of one day. So it is possible to have multiple API keys under a single account.You can have only a single free API key and an unlimited number of paid subscriptions; paid subscriptions and single free API key usage are allowed at the same time. To continue using the free plan after the ban, another free API key needs to be provisioned on a different email address, but this can happen again if the rules will not be satisfied.Was this section helpful?12345PreviousSome symbols have extra identifiersNextWe need a OneZero FIX API session, is this possible?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/Was-my-free-API-Key-banned-blocked)"
83,i.io naas api bitcoin Methods listlockunspent,"i.io naas api bitcoin Methods listlockunspent.   listlockunspent | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodslistlockunspentOn this pagelistlockunspentOverview​The 'listlockunspent' Returns the list of all labels, or labels that are assigned to addresses with a specific purpose.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""listlockunspent"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""listlockunspent\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""listlockunspent"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""2.0"", ""method"": ""listlockunspent"", ""params"": [], ""id"": 1})headers = { 'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type': 'application/json', 'accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""listlockunspent"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""listlockunspent"",""params"": [],""id"":1}`) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"") req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""method"": ""listlockunspent"", ""params"": [], ""id"": 1})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""listlockunspent\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​txid: The transaction id lockedResponse​{ ""result"": null, ""error"": { ""code"": -18, ""message"": ""No wallet is loaded. Load a wallet using loadwallet or create a new one with createwallet. (Note: A default wallet is no longer automatically created)"" }, ""id"": 1}Was this section helpful?12345PreviouslistlabelsNextlistsinceblockOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/listlockunspent)"
84,i.io faq api Do you offer Trading API,"i.io faq api Do you offer Trading API.   Do you offer Trading API? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQAPIDo you offer Trading API?Do you offer Trading API?We have Execution Management System API EMS is a software that manages orders, executions, and exposure in an efficient, fast, cost-effective, and straightforward manner. An EMS allows you to route orders to multiple cryptocurrency exchanges simultaneously using a simple, robust, and unified Application Programming Interface (API).The complete documentation is available here: https://docs.coinapi.io/ems-apiWas this section helpful?12345PreviousDo you accept bank or wire transfers?NextEmpty response when using EMS endpointsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/api/Do-you-offer-Trading-API)"
85,i.io general faq general Why am I receiving message Forbidden,"i.io general faq general Why am I receiving message Forbidden.   Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralWhy am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?This occurs on WebSocket whenever a certain data type is being accessed that is not included in your current subscription tier.Example:{ ""type"": ""hello"", ""apikey"": ""73034021-SAMPLE-STARTUP-KEY"", ""heartbeat"": false, ""subscribe_data_type"": [""quote""] }You will receive:{ ""message"": ""Forbidden - Your API key don't have privileges to data type 'quote'."", ""type"": ""error"" }This is because the Quote data type is not available for the Startup Subscription via WebSocket. If you'd like to upgrade your account, submit a request here: https://support.coinapi.io/hc/en-us/requests/newWas this section helpful?12345PreviousWhich assets or currencies are listed?NextWill I get an access to Market Data API if I purchase EMS Trading API?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/Why-am-I-receiving-message-Forbidden)"
86,i.io market data rest api ohlcv ohlcv latest data,"i.io market data rest api ohlcv ohlcv latest data.   Latest data | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcv Historical data by exchange Historical data Latest data List all periodsOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIOhlcv Latest data Latest dataGET /v1/ohlcv/:symbol_id/latestGet OHLCV latest timeseries data returned in time descending order. Data can be requested by the period and for the specific symbol eg BITSTAMP_SPOT_BTC_USD, if you need to query timeseries by asset pairs eg. BTC/USD, then please reffer to the Exchange Rates Timeseries datainfoOHLCV Latest endpoint is providing real-time data without delay. The OHLCV Historical endpoint data can be delayed a few seconds.Path Parameterssymbol_id string requiredSymbol identifier of requested timeseries (from the Metadata -> Symbols)Query Parametersperiod_id string requiredIdentifier of requested timeseries period (e.g. 5SEC or 2MTH)limit int32Default value: 100Amount of items to return (mininum is 1, maximum is 100000, default value is 100, if the parameter is used then every 100 output items are counted as one request)include_empty_items booleanInclude items with no activity? (default value is false, possible values are true or false)Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [time_period_start date-timeThe start time of the time period.time_period_end date-timeThe end time of the time period.time_open date-time nullableThe time when the price opened.time_close date-time nullableThe time when the price closed.price_open double nullableThe opening price.price_high double nullableThe highest price during the time period.price_low double nullableThe lowest price during the time period.price_close double nullableThe closing price.volume_traded doubleThe total volume traded during the time period.trades_count int64The number of trades executed during the time period.][ { ""time_period_start"": ""2024-07-16T12:55:05.288Z"", ""time_period_end"": ""2024-07-16T12:55:05.288Z"", ""time_open"": ""2024-07-16T12:55:05.288Z"", ""time_close"": ""2024-07-16T12:55:05.288Z"", ""price_open"": 0, ""price_high"": 0, ""price_low"": 0, ""price_close"": 0, ""volume_traded"": 0, ""trades_count"": 0 }][ { ""time_period_start"": ""2017-08-09T14:31:00.0000000Z"", ""time_period_end"": ""2017-08-09T14:32:00.0000000Z"", ""time_open"": ""2017-08-09T14:31:01.0000000Z"", ""time_close"": ""2017-08-09T14:31:46.0000000Z"", ""price_open"": 3255.59, ""price_high"": 3255.59, ""price_low"": 3244.74, ""price_close"": 3244.74, ""volume_traded"": 16.90327455, ""trades_count"": 31 }, { ""time_period_start"": ""2017-08-09T14:30:00.0000000Z"", ""time_period_end"": ""2017-08-09T14:31:00.0000000Z"", ""time_open"": ""2017-08-09T14:30:05.0000000Z"", ""time_close"": ""2017-08-09T14:30:35.0000000Z"", ""price_open"": 3256, ""price_high"": 3256.01, ""price_low"": 3247, ""price_close"": 3255.6, ""volume_traded"": 58.13139792, ""trades_count"": 33 }]SchemaExample (from schema)Example responseSchemaArray [time_period_start date-timeThe start time of the time period.time_period_end date-timeThe end time of the time period.time_open date-time nullableThe time when the price opened.time_close date-time nullableThe time when the price closed.price_open double nullableThe opening price.price_high double nullableThe highest price during the time period.price_low double nullableThe lowest price during the time period.price_close double nullableThe closing price.volume_traded doubleThe total volume traded during the time period.trades_count int64The number of trades executed during the time period.][ { ""time_period_start"": ""2024-07-16T12:55:05.288Z"", ""time_period_end"": ""2024-07-16T12:55:05.288Z"", ""time_open"": ""2024-07-16T12:55:05.288Z"", ""time_close"": ""2024-07-16T12:55:05.288Z"", ""price_open"": 0, ""price_high"": 0, ""price_low"": 0, ""price_close"": 0, ""volume_traded"": 0, ""trades_count"": 0 }][ { ""time_period_start"": ""2017-08-09T14:31:00.0000000Z"", ""time_period_end"": ""2017-08-09T14:32:00.0000000Z"", ""time_open"": ""2017-08-09T14:31:01.0000000Z"", ""time_close"": ""2017-08-09T14:31:46.0000000Z"", ""price_open"": 3255.59, ""price_high"": 3255.59, ""price_low"": 3244.74, ""price_close"": 3244.74, ""volume_traded"": 16.90327455, ""trades_count"": 31 }, { ""time_period_start"": ""2017-08-09T14:30:00.0000000Z"", ""time_period_end"": ""2017-08-09T14:31:00.0000000Z"", ""time_open"": ""2017-08-09T14:30:05.0000000Z"", ""time_close"": ""2017-08-09T14:30:35.0000000Z"", ""price_open"": 3256, ""price_high"": 3256.01, ""price_low"": 3247, ""price_close"": 3255.6, ""volume_traded"": 58.13139792, ""trades_count"": 33 }]SchemaExample (from schema)Example responseSchemaArray [time_period_start date-timeThe start time of the time period.time_period_end date-timeThe end time of the time period.time_open date-time nullableThe time when the price opened.time_close date-time nullableThe time when the price closed.price_open double nullableThe opening price.price_high double nullableThe highest price during the time period.price_low double nullableThe lowest price during the time period.price_close double nullableThe closing price.volume_traded doubleThe total volume traded during the time period.trades_count int64The number of trades executed during the time period.][ { ""time_period_start"": ""2024-07-16T12:55:05.288Z"", ""time_period_end"": ""2024-07-16T12:55:05.288Z"", ""time_open"": ""2024-07-16T12:55:05.288Z"", ""time_close"": ""2024-07-16T12:55:05.288Z"", ""price_open"": 0, ""price_high"": 0, ""price_low"": 0, ""price_close"": 0, ""volume_traded"": 0, ""trades_count"": 0 }][ { ""time_period_start"": ""2017-08-09T14:31:00.0000000Z"", ""time_period_end"": ""2017-08-09T14:32:00.0000000Z"", ""time_open"": ""2017-08-09T14:31:01.0000000Z"", ""time_close"": ""2017-08-09T14:31:46.0000000Z"", ""price_open"": 3255.59, ""price_high"": 3255.59, ""price_low"": 3244.74, ""price_close"": 3244.74, ""volume_traded"": 16.90327455, ""trades_count"": 31 }, { ""time_period_start"": ""2017-08-09T14:30:00.0000000Z"", ""time_period_end"": ""2017-08-09T14:31:00.0000000Z"", ""time_open"": ""2017-08-09T14:30:05.0000000Z"", ""time_close"": ""2017-08-09T14:30:35.0000000Z"", ""price_open"": 3256, ""price_high"": 3256.01, ""price_low"": 3247, ""price_close"": 3255.6, ""volume_traded"": 58.13139792, ""trades_count"": 33 }]SchemaExample (from schema)Example responseSchemaArray [time_period_start date-timeThe start time of the time period.time_period_end date-timeThe end time of the time period.time_open date-time nullableThe time when the price opened.time_close date-time nullableThe time when the price closed.price_open double nullableThe opening price.price_high double nullableThe highest price during the time period.price_low double nullableThe lowest price during the time period.price_close double nullableThe closing price.volume_traded doubleThe total volume traded during the time period.trades_count int64The number of trades executed during the time period.][ { ""time_period_start"": ""2024-07-16T12:55:05.288Z"", ""time_period_end"": ""2024-07-16T12:55:05.288Z"", ""time_open"": ""2024-07-16T12:55:05.288Z"", ""time_close"": ""2024-07-16T12:55:05.288Z"", ""price_open"": 0, ""price_high"": 0, ""price_low"": 0, ""price_close"": 0, ""volume_traded"": 0, ""trades_count"": 0 }][ { ""time_period_start"": ""2017-08-09T14:31:00.0000000Z"", ""time_period_end"": ""2017-08-09T14:32:00.0000000Z"", ""time_open"": ""2017-08-09T14:31:01.0000000Z"", ""time_close"": ""2017-08-09T14:31:46.0000000Z"", ""price_open"": 3255.59, ""price_high"": 3255.59, ""price_low"": 3244.74, ""price_close"": 3244.74, ""volume_traded"": 16.90327455, ""trades_count"": 31 }, { ""time_period_start"": ""2017-08-09T14:30:00.0000000Z"", ""time_period_end"": ""2017-08-09T14:31:00.0000000Z"", ""time_open"": ""2017-08-09T14:30:05.0000000Z"", ""time_close"": ""2017-08-09T14:30:35.0000000Z"", ""price_open"": 3256, ""price_high"": 3256.01, ""price_low"": 3247, ""price_close"": 3255.6, ""volume_traded"": 58.13139792, ""trades_count"": 33 }]Loading...Was this section helpful?12345Previous Historical dataNext List all periodsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/ohlcv/ohlcv-latest-data)"
87,i.io naas api ethereum Methods eth subscribePendingTransactions,"i.io naas api ethereum Methods eth subscribePendingTransactions.   subscribePendingTransactions | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodssubscribePendingTransactionsOn this pagesubscribePendingTransactionsOverview​The 'subscribePendingTransactions' method allows developers to subscribe to real-time updates about pending transactions on the Ethereum blockchain. Applications will receive notifications whenever a pending transaction appears on the blockchain.Request​{ ""method"": ""subscribePendingTransactions"", ""params"": [""pendingTransactions"", ""callback_function""]}Request Parameters​string — A keyword identifying the type of event to subscribe to, pendingTransactions in this case.function — (optional) A callback function that will be called every time a new event of the specified type is received. This function takes two parameters: error and result. The error parameter contains any error that occurred while subscribing to the event, and the result parameter contains the data for the event that was received.Response​{ ""transactionHash"": ""hash_identifying_the_pending_transaction""}Was this section helpful?12345Previouseth_subscribeNexteth_syncingOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_subscribePendingTransactions)"
88,i.io faq security and privacy What CDN does the API use,i.io faq security and privacy What CDN does the API use.   What CDN does the API use? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIBilling and SubscriptionsSecurity and PrivacyWhat CDN does the API use?What information do I need to provide in order to subscribe?What security mechanisms does CoinAPI use to protect my data?What should I do if my API key was compromised?Customer PortalChangelogFAQSecurity and PrivacyWhat CDN does the API use?What CDN does the API use?We build our own CDN network with nodes directly distributing data between each other via the fastest routes. Any existing CDN solutions are targeted on the caching which is not applicable to financial data.Was this section helpful?12345PreviousSecurity and PrivacyNextWhat information do I need to provide in order to subscribe?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/security-and-privacy/What-CDN-does-the-API-use)
89,i.io how to guides import data to google sheets excel,"i.io how to guides import data to google sheets excel.   Import data to Google Sheets/Excel | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesAcquire exchange rates with different programming languagesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPICreating a historical crypto price chart using CoinAPI and D3.jsFetching market data with KNIMEGet Historical OHLCV Data Using CoinAPIGet symbol funding rate metric data using CoinAPIImport API into PostmanImport data to Google Sheets/ExcelReal-time data visualization with javascriptReal-time trades stream using WebSocket with different languagesRetrieve and analyze crypto order book data using a cryptocurrency APITrading Essentials: QuickstartMarket Data APIEMS APIFAQCustomer PortalChangelogHow-to guidesImport data to Google Sheets/ExcelOn this pageImport data to Google Sheets/ExcelIntroduction​There are various methods to access market data, including utilizing programming languages or tools that enable REST API requests. In this guide, we will specifically concentrate on extracting data in CSV (comma-separated-values) format using a simple approach that involves accessing data directly through a web browser. CSV is widely used due to its simplicity and compatibility with various spreadsheet applications like Microsoft Excel and Google Sheets.Getting started​Before diving into the tutorial, ensure you have:Web browser installed: google chrome, firefox, microsoft edge, or any otherA CoinAPI key (obtainable by signing up on the CoinAPI website)A spreadsheet application like Microsoft Excel or Google SheetsRetrieve BTC Exchange Rates in .csv format via web browser​It is possible to control the format of data by using output_format variable in query string parameters. To get BTC exchange rates in csv format, copy and paste the below URL to the address bar of your web browser:https://rest.coinapi.io/v1/exchangerate/BTC?apikey=YOUR_API_KEY-ed802af4-e855-4505-AEA&output_format=csvNote: Don't forget to replace YOUR-API-KEY with your actual API key.Simple then press ctrl+a or command+a to select exchange rates, then press ctrl + c to copy data. After obtaining the data, you can seamlessly paste it directly into any text editor.Then, select the Save As option, and don't forget to include the .csv file extension.CSV import: Microsoft Excel​To import the .csv file into the MS Excel application, navigate to the Data tab, and choose the From Text/CSV option.Select your .csv file which includes BTC exchange rate data in csv format.Verify the output of import in the preview window.With these simple steps, you can now efficiently work with and analyze the market data in a familiar spreadsheet environment, empowering you to make informed decisions based on the exchange rate information. CSV import: Google Sheets​To import the .csv file into the Google Sheets application, navigate to the File menu.Within that menu, select the Import option.Upload your .csv file which includes BTC exchange rate data.Make sure to set the correct Import location and Separator type, then press Import data.Here's the final result:With these simple steps, you can now efficiently work with and analyze the market data in a familiar spreadsheet environment, empowering you to make informed decisions based on the exchange rate information. Summary​We have explored a simple approach to accessing market data in CSV format directly through a web browser. By utilizing this method, you can easily extract the data you need for analysis and integrate it with various spreadsheet applications like Microsoft Excel or Google Sheets.While the simple approach through a web browser provides easy access to market data in CSV format, there is cryptotick specialized platform that offers a wide range of market data types in the csv format, including quotes, trades, limit order book, OHLCV, and others.Happy data exploration!Was this section helpful?12345PreviousImport API into PostmanNextReal-time data visualization with javascriptIntroductionGetting startedRetrieve BTC Exchange Rates in .csv format via web browserCSV import: Microsoft ExcelCSV import: Google SheetsSummaryCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/how-to-guides/import-data-to-google-sheets-excel)"
90,i.io market data how to guides retrieve and analyze crypto order book data using a cryptocurrency API,"i.io market data how to guides retrieve and analyze crypto order book data using a cryptocurrency API.   Retrieve and analyze crypto order book data using a cryptocurrency API | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesAcquire exchange rates with different programming languagesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPIBuilding a cryptocurrency exchange comparison tool using Market Data APICreating a historical crypto price chart using CoinAPI and D3.jsFetching market data with KNIMEGet Historical OHLCV Data Using CoinAPIGet symbol funding rate metric data using CoinAPIImport API into PostmanImport data to Google Sheets/ExcelReal-time data visualization with javascriptReal-time trades stream using WebSocket with different languagesRetrieve and analyze crypto order book data using a cryptocurrency APITrading Essentials: QuickstartPerformance Testing GuideHow-to guidesRetrieve and analyze crypto order book data using a cryptocurrency APIOn this pageRetrieve and analyze crypto order book data using a cryptocurrency APIIn this tutorial, we will delve into the process of fetching and analyzing cryptocurrency order books using the Python programming language and CoinAPI.Agenda🔥:​Crypto order book basics: Understanding cryptocurrency trading order books.Fetching data: Using CoinAPI and Python to retrieve real-time crypto order book data.Analysis: Interpreting cryptocurrency API data for insights.Visualization: Displaying order book data with Python’s Matplotlib.Metrics calculation: Computing key metrics from cryptocurrency API data.CoinAPI: The ultimate cryptocurrency API for all your crypto data needs 🚀​Before diving into our guide, let’s take a moment to introduce CoinAPI. CoinAPI offers easy access to a wide range of financial information, encompassing both live and historical data from various exchanges. Whether you’re looking for detailed trading data, OHLCV (Open, High, Low, Close, Volume), or specific event information, CoinAPI delivers. CoinAPI provides crypto order book data, making it one of the best crypto APIs available. Additionally, our support for multiple data delivery methods, including REST and WebSocket makes it highly versatile for developers creating trading algorithms or crypto market data visualizations.Let's Begin 🚀​Harnessing the capabilities of CoinAPI, a robust cryptocurrency API, alongside Python, known for its versatility in data analysis and statistical computing, we can delve deeply into the nuances of the cryptocurrency market.We’ll walk you through the steps to fetch and analyze crypto order book data in real time, leveraging the comprehensive data provided by the cryptocurrency API.Setting Up the API Request​To fetch real-time order book data, you'll first need an API key from CoinAPI website. Once you have it, you can proceed to retrieve the data using Python.Fetching the dataimport requestsimport jsonAPI_KEY = ""YOUR_API_KEY_HERE""url = f""https://rest.coinapi.io/v1/orderbooks/current?symbol=KRAKEN_SPOT_BTC_USD&apikey={API_KEY}""response = requests.get(url)if response.status_code == 200: # The request was successful data = response.json()  # Save the data to a file with open(""order-books-kraken-spot-btc-usd.json"", ""w"") as file:  json.dump(data, file, indent=4) print(""Data saved to order-books-kraken-spot-btc-usd.json"")else: # Handle error cases print(f""Error: Status code {response.status_code}"") print(response.text)Response{ ""symbol_id"": ""KRAKEN_SPOT_BTC_USD"", ""time_exchange"": ""2023-11-24T08:26:46.6928657Z"", ""time_coinapi"": ""2023-11-24T08:26:46.6928657Z"", ""asks"": [  {   ""price"": 37549.1,   ""size"": 19.23618731  },  {   ""price"": 37549.9,   ""size"": 0.08242079  },  /// other entries omitted for brevity ], ""bids"": [  {   ""price"": 37549.0,   ""size"": 0.136004  },  {   ""price"": 37545.1,  }  /// other entries omitted for brevity ]}Data Analysis and Metrics​Upon data retrieval, the next step involves data analysis using Python. The obtained data typically represents a snapshot of buy and sell orders in the market at a specific moment. This data consists of two key components: bids and asks. Bids signify the price levels at which buyers are willing to acquire an asset, while asks represent the price levels at which sellers are willing to sell it. The difference between the highest bid and the lowest ask is referred to as the spread.Here is a comprehensive list of common metrics and analytical procedures:Order Book Depth - visualize the liquidity available at various price levels.Order Imbalance - analyze the disparity between bids and asks to gain insights into market sentiment.Price Levels - identify significant price levels characterized by substantial volumes of bids or asks.Market Spread - compute the current bid-ask spread as an indicator of market liquidity.Order Book Depth Visualization​In this Python code, we demonstrate how to visualize the order book depth of a cryptocurrency trading pair using Matplotlib.import jsonimport matplotlib.pyplot as plt# Function to read order book data from a JSONdef read_order_book_data(file_path): with open(file_path, 'r') as file:  order_book_data = json.load(file) return order_book_datafile_path = 'order-books-kraken-spot-btc-usd.json'# Read order book data from the file we've obtained in the previous steporder_book_data = read_order_book_data(file_path)# Function to visualize order book depth chartdef visualize_order_book_depth(order_book_data): bids = order_book_data[""bids""] asks = order_book_data[""asks""]  bid_prices = [entry[""price""] for entry in bids] bid_sizes = [entry[""size""] for entry in bids]  ask_prices = [entry[""price""] for entry in asks] ask_sizes = [entry[""size""] for entry in asks]  plt.figure(figsize=(10, 6)) plt.plot(bid_prices, bid_sizes, label=""Bids (buyers)"", color=""green"") plt.plot(ask_prices, ask_sizes, label=""Asks (sellers)"", color=""red"") plt.xlabel(""Price"") plt.ylabel(""Size"") plt.title(""Order Book Depth"") plt.legend() plt.show()# Visualize the order book depthvisualize_order_book_depth(order_book_data)The following visualization is the result of the Python script demonstrated above.Order Book Depth Visualization:is a measure of the quantity of buy and sell orders available for a particular financial assetit provides insight into market liquidity and the willingness of traders to buy or sell at different pricesmay be used for trading decisions, as it reveals potential price trendsOrder Imbalance, Price Levels, Market Spread​In this Python code, we explore order imbalance, significant bids & asks, market spread metrics for a BTC/USD trading pair.import json# Function to read order book data from a JSONdef read_order_book_data(file_path): with open(file_path, 'r') as file:  order_book_data = json.load(file) return order_book_datafile_path = 'order-books-kraken-spot-btc-usd.json'# Read order book data from the file we've obtained in the previous steporder_book_data = read_order_book_data(file_path)# Function to calculate order imbalancedef calculate_order_imbalance(order_book_data): bids = sum(entry[""size""] for entry in order_book_data[""bids""]) asks = sum(entry[""size""] for entry in order_book_data[""asks""]) order_imbalance = (bids - asks) / (bids + asks) return order_imbalance# Function to identify significant price levelsdef identify_significant_price_levels(order_book_data, threshold=50): bids = order_book_data[""bids""] asks = order_book_data[""asks""]  significant_bids = [entry for entry in bids if entry[""size""] > threshold] significant_asks = [entry for entry in asks if entry[""size""] > threshold] return significant_bids, significant_asks# Function to calculate market spreaddef calculate_market_spread(order_book_data): best_bid = order_book_data[""bids""][0][""price""] best_ask = order_book_data[""asks""][0][""price""]  spread = best_ask - best_bid return spread# Common metrics calculationorder_imbalance = calculate_order_imbalance(order_book_data)significant_price_threshold = 20significant_bids, significant_asks = identify_significant_price_levels(order_book_data, significant_price_threshold)spread = calculate_market_spread(order_book_data)print(""******************************"")print(""Order Imbalance:"", order_imbalance)print(""***************************"")print(""Significant Bids:"", significant_bids)print(""***************************"")print(""Significant Asks:"", significant_asks)print(""***************************"")print(""Market Spread:"", spread)print(""***************************"")Result> ******************************> Order Imbalance: -0.012400502029283922> ***************************> Significant Bids: [{'price': 37440.7, 'size': 24.73909889}, {'price': 36451.0, 'size': 25.0}]> ***************************> Significant Asks: [{'price': 37749.0, 'size': 25.0}, {'price': 37840.0, 'size': 24.08119208}, {'price': 38000.0, 'size': 29.60579175}, {'price': 39000.0, 'size': 21.75395535}, {'price': 40000.0, 'size': 58.28620718}]> ***************************> Market Spread: 0.09999999999854481> ***************************Calculated metrics:order_imbalance - it measures the difference between the total volume of buy orders and sell orders. It provides insights into the overall market sentiment by indicating whether there is an excess of buying or selling interest.significant_price_threshold is a predetermined value (set to 20 in this case) used to identify price levels in the order book that are considered significant. It helps traders focus on specific price points that may have a more substantial impact on the market.significant_bids and significant_asks are lists of price levels derived from the order book data that meet or exceed the significant_price_threshold. These levels are typically associated with higher trading activity and may be seen as key support and resistance levels.spread is a metric that calculates the difference between the best bid and best ask prices. It represents the cost of executing a market order and is a fundamental factor for traders to consider when entering or exiting positions.Summary​This tutorial has equipped you with the knowledge and tools necessary to fetch and analyze cryptocurrency order book data using CoinAPI and Python. You've learned how to access real-time order book information, visualize order book depth, and calculate important metrics. Armed with this understanding, you are now better prepared to explore and navigate the cryptocurrency markets, enabling you to make more informed trading decisions and develop data-driven trading strategies. Remember that the cryptocurrency market is highly dynamic, so continuous monitoring and analysis are essential for staying ahead in this exciting and rapidly evolving space. Happy trading! 🚀📈💰Was this section helpful?12345PreviousReal-time trades stream using WebSocket with different languagesNextTrading Essentials: QuickstartAgenda🔥:CoinAPI: The ultimate cryptocurrency API for all your crypto data needs 🚀Let's Begin 🚀Setting Up the API RequestData Analysis and MetricsOrder Book Depth VisualizationOrder Imbalance, Price Levels, Market SpreadSummaryCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/how-to-guides/retrieve-and-analyze-crypto-order-book-data-using-a-cryptocurrency-API)"
91,i.io naas api bitcoin Methods getrawmempool,"i.io naas api bitcoin Methods getrawmempool.   getrawmempool | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetrawmempoolOn this pagegetrawmempoolOverview​The 'getrawmempool' retrieves all transaction IDs currently held in the memory pool utilizing the 'getrawmempool' RPC method. This method presents the data as a JSON array containing string transaction IDs.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""getrawmempool"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""getrawmempool\"",\""params\"": [ ]}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getrawmempool"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection(""mainnet-bitcoin.node.coinapi.io"")payload = json.dumps({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""getrawmempool"",""params"": []})headers = {'Content-Type': 'application/json','accept': 'application/json','X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}conn.request(""POST"", ""/"", payload, headers)res = conn.getresponse()data = res.read()print(data.decode(""utf-8""))var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getrawmempool"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""id"":1,""method"":""getrawmempool"",""params"": [ ]}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""getrawmempool"",""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""getrawmempool\"",\""params\"": [ ]}"");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​verbose (Boolean)Default: 'false'When set to 'true', it returns a JSON object. Conversely, when set to false, it returns an array of transaction IDs.mempool_sequence (Boolean)Default: 'false'If true, the return will include a JSON object containing the transaction list along with an associated mempool sequence number.Response​Response when verbose is true:{ ""transactionid"": ""12345abcdef12345abcdef12345abcdef12345abcdef12345abcdef12345abcdef"", ""vsize"": 567, ""weight"": 1234, ""time"": 1677745678, ""height"": 678901, ""descendantcount"": 3, ""descendantsize"": 789, ""ancestorcount"": 2, ""ancestorsize"": 456, ""wtxid"": ""abcdef12345abcdef12345abcdef12345abcdef12345abcdef12345abcdef123"", ""fees"": { ""base"": 0.00012345, ""modified"": 0.00012356, ""ancestor"": 0.00012367, ""descendant"": 0.00012378 }, ""depends"": [""txid1"", ""txid2""], ""hex"": ""abcdef12345abcdef12345"", ""spentby"": [""txid3"", ""txid4""], ""hex"": ""abcdef12345abcdef12346"", ""bip125-replaceable"": true, ""unbroadcast"": false, ""error"": null}{ ""txids"": [ ""abcdef12345abcdef12345abcdef12345abcdef12345abcdef12345abcdef123"", ""12345abcdef12345abcdef12345abcdef12345abcdef12345abcdef12345abcdef"" ], ""hex"": ""abcdef12345abcdef12346"", ""mempool_sequence"": 12345}When verbose is true:transactionid: Identifies the transaction.vsize: The virtual transaction size as detailed in BIP 141, different from the actual serialized size for witness transactions due to the discounted witness data.weight: The transaction weight, as prescribed in BIP 141.time: Records the local time the transaction entered the pool, denoted in seconds since January 1, 1970 (GMT).height: Indicates the block height at the time the transaction entered the pool.descendantcount: Counts the number of in-mempool descendant transactions (including the current transaction).descendantsize: Calculates the virtual transaction size of the in-mempool descendants (including the current transaction).ancestorcount: Counts the number of in-mempool ancestor transactions (including the current transaction).ancestorsize: Calculates the virtual transaction size of the in-mempool ancestors (including the current transaction).wtxid: Represents the hash of the serialized transaction, including witness data.fees: A JSON object encapsulating details about the transaction fee paid by the transaction, including:base: Transaction fee in BTC.modified: Transaction fee with fee deltas used for mining priority, measured in BTC.ancestor: Modified fees of in-mempool ancestors (inclusive) in BTC.descendant: Modified fees of in-mempool descendants (inclusive) in BTC.depends: Lists unconfirmed transactions used as inputs for the current transaction.hex: Displays the parent transaction ID.spentby: Notes unconfirmed transactions that are utilizing outputs from the current transaction.hex: Exhibits the child transaction ID.bip125-replaceable: Denotes whether the transaction can be replaced according to BIP125 (replace-by-fee).unbroadcast: Marks if the transaction is currently unbroadcast (no initial broadcast acknowledgment from peers).error: If applicable, displays an error message.When verbose is false:txids: A JSON array containing transaction IDs.hex: Specifies the transaction ID.mempool_sequence: Denotes the mempool sequence value.Was this section helpful?12345PreviousgetrawchangeaddressNextgetrawtransactionOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getrawmempool)"
92,i.io general faq general API Usage Limits,"i.io general faq general API Usage Limits.   API Usage Limits | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralAPI Usage LimitsAPI Usage LimitsInformation about the request calculation algorithm for the REST API is available here[1], along with the details of how you can measure requests remaining or used after every request.You may accurately check the remaining credits for your API Key through the response headers. Have in mind that the Metrics tab [2] should be used only for visualization, analytics, and reporting. You should not use it to decide if you are approaching the limit in real-time as the data in this report is aggregated daily, and the request credits in real-time are calculated from the last 24-hour using a sliding time window. You can find more information about real-time limits here[1].[1] https://docs.coinapi.io/market-data/rest-api#limits  [2] https://customerportal.coinapi.io/#rest-usage-getWas this section helpful?12345PreviousGeneralNextAre subscription payments executed automatically?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/API-Usage-Limits)"
93,i.io market data rest api metrics historical metrics for symbol,"i.io market data rest api metrics historical metrics for symbol.   Historical metrics for symbol | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsCurrent metrics for given assetCurrent metrics for given exchangeCurrent metrics for given symbolHistorical metrics for assetHistorical metrics for symbolHistorical metrics for the exchangeListing of all supported metrics by CoinAPIListing of all supported exchange metricsListing of all supported metrics for assetListing of all supported metrics for symbolOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIMetricsHistorical metrics for symbolHistorical metrics for symbolGET /v1/metrics/symbol/historyGet symbol metrics history.Query Parametersmetric_id string requiredMetric identifier (from the Metrics -> Listing)symbol_id string requiredSymbol identifier (from the Metadata -> Symbols)time_start date-timeStarting time in ISO 8601time_end date-timeEnding time in ISO 8601time_format stringIf set, returned values will be in unix timestamp format (valid values: unix_sec, unix_millisec, unix_microsec, unix_nanosec)period_id stringIdentifier of requested timeseries period (e.g. 5SEC or 2MTH), default value is 1SEClimit int32Default value: 100Amount of items to return (optional, mininum is 1, maximum is 100000, default value is 100, if the parameter is used then every 100 output items are counted as one request)Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableGets or sets the symbol id.time date-timeGets or sets the time at which the value is recorded.value doubleGets or sets the value of the metric.][ { ""symbol_id"": ""string"", ""time"": ""2024-07-16T12:55:05.259Z"", ""value"": 0 }][ { ""time_period_start"": ""2023-07-03T14:29:02.0000000Z"", ""time_period_end"": ""2023-07-03T14:29:03.0000000Z"", ""time_open"": ""2023-07-03T14:29:02.5699837Z"", ""time_close"": ""2023-07-03T14:29:02.5699837Z"", ""first"": 0, ""last"": 0, ""min"": 0, ""max"": 0, ""count"": 0, ""sum"": 30668.476938 }, { ""time_period_start"": ""2023-07-03T14:29:03.0000000Z"", ""time_period_end"": ""2023-07-03T14:29:04.0000000Z"", ""time_open"": ""2023-07-03T14:29:03.1076159Z"", ""time_close"": ""2023-07-03T14:29:03.1076159Z"", ""first"": 0, ""last"": 0, ""min"": 0, ""max"": 0, ""count"": 0, ""sum"": 0.05485331 }, { ""time_period_start"": ""2023-07-03T14:29:04.0000000Z"", ""time_period_end"": ""2023-07-03T14:29:05.0000000Z"", ""time_open"": ""2023-07-03T14:29:04.5792149Z"", ""time_close"": ""2023-07-03T14:29:04.9459786Z"", ""first"": 0, ""last"": 0, ""min"": 0, ""max"": 0, ""count"": 0, ""sum"": 7.0257000000000005 }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableGets or sets the symbol id.time date-timeGets or sets the time at which the value is recorded.value doubleGets or sets the value of the metric.][ { ""symbol_id"": ""string"", ""time"": ""2024-07-16T12:55:05.260Z"", ""value"": 0 }][ { ""time_period_start"": ""2023-07-03T14:29:02.0000000Z"", ""time_period_end"": ""2023-07-03T14:29:03.0000000Z"", ""time_open"": ""2023-07-03T14:29:02.5699837Z"", ""time_close"": ""2023-07-03T14:29:02.5699837Z"", ""first"": 0, ""last"": 0, ""min"": 0, ""max"": 0, ""count"": 0, ""sum"": 30668.476938 }, { ""time_period_start"": ""2023-07-03T14:29:03.0000000Z"", ""time_period_end"": ""2023-07-03T14:29:04.0000000Z"", ""time_open"": ""2023-07-03T14:29:03.1076159Z"", ""time_close"": ""2023-07-03T14:29:03.1076159Z"", ""first"": 0, ""last"": 0, ""min"": 0, ""max"": 0, ""count"": 0, ""sum"": 0.05485331 }, { ""time_period_start"": ""2023-07-03T14:29:04.0000000Z"", ""time_period_end"": ""2023-07-03T14:29:05.0000000Z"", ""time_open"": ""2023-07-03T14:29:04.5792149Z"", ""time_close"": ""2023-07-03T14:29:04.9459786Z"", ""first"": 0, ""last"": 0, ""min"": 0, ""max"": 0, ""count"": 0, ""sum"": 7.0257000000000005 }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableGets or sets the symbol id.time date-timeGets or sets the time at which the value is recorded.value doubleGets or sets the value of the metric.][ { ""symbol_id"": ""string"", ""time"": ""2024-07-16T12:55:05.260Z"", ""value"": 0 }][ { ""time_period_start"": ""2023-07-03T14:29:02.0000000Z"", ""time_period_end"": ""2023-07-03T14:29:03.0000000Z"", ""time_open"": ""2023-07-03T14:29:02.5699837Z"", ""time_close"": ""2023-07-03T14:29:02.5699837Z"", ""first"": 0, ""last"": 0, ""min"": 0, ""max"": 0, ""count"": 0, ""sum"": 30668.476938 }, { ""time_period_start"": ""2023-07-03T14:29:03.0000000Z"", ""time_period_end"": ""2023-07-03T14:29:04.0000000Z"", ""time_open"": ""2023-07-03T14:29:03.1076159Z"", ""time_close"": ""2023-07-03T14:29:03.1076159Z"", ""first"": 0, ""last"": 0, ""min"": 0, ""max"": 0, ""count"": 0, ""sum"": 0.05485331 }, { ""time_period_start"": ""2023-07-03T14:29:04.0000000Z"", ""time_period_end"": ""2023-07-03T14:29:05.0000000Z"", ""time_open"": ""2023-07-03T14:29:04.5792149Z"", ""time_close"": ""2023-07-03T14:29:04.9459786Z"", ""first"": 0, ""last"": 0, ""min"": 0, ""max"": 0, ""count"": 0, ""sum"": 7.0257000000000005 }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableGets or sets the symbol id.time date-timeGets or sets the time at which the value is recorded.value doubleGets or sets the value of the metric.][ { ""symbol_id"": ""string"", ""time"": ""2024-07-16T12:55:05.260Z"", ""value"": 0 }][ { ""time_period_start"": ""2023-07-03T14:29:02.0000000Z"", ""time_period_end"": ""2023-07-03T14:29:03.0000000Z"", ""time_open"": ""2023-07-03T14:29:02.5699837Z"", ""time_close"": ""2023-07-03T14:29:02.5699837Z"", ""first"": 0, ""last"": 0, ""min"": 0, ""max"": 0, ""count"": 0, ""sum"": 30668.476938 }, { ""time_period_start"": ""2023-07-03T14:29:03.0000000Z"", ""time_period_end"": ""2023-07-03T14:29:04.0000000Z"", ""time_open"": ""2023-07-03T14:29:03.1076159Z"", ""time_close"": ""2023-07-03T14:29:03.1076159Z"", ""first"": 0, ""last"": 0, ""min"": 0, ""max"": 0, ""count"": 0, ""sum"": 0.05485331 }, { ""time_period_start"": ""2023-07-03T14:29:04.0000000Z"", ""time_period_end"": ""2023-07-03T14:29:05.0000000Z"", ""time_open"": ""2023-07-03T14:29:04.5792149Z"", ""time_close"": ""2023-07-03T14:29:04.9459786Z"", ""first"": 0, ""last"": 0, ""min"": 0, ""max"": 0, ""count"": 0, ""sum"": 7.0257000000000005 }]Loading...Was this section helpful?12345PreviousHistorical metrics for assetNextHistorical metrics for the exchangeCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/metrics/historical-metrics-for-symbol)"
94,i.io naas api bitcoin Methods getmempoolancestors,"i.io naas api bitcoin Methods getmempoolancestors.   getmempoolancestors | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetmempoolancestorsOn this pagegetmempoolancestorsOverview​The 'getmempoolancestors' RPC Method returns all in-mempool ancestors for a transaction in the mempool.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --body-data '{""jsonrpc"":""2.0"",""method"":""getmempoolancestors"",""params"": [],""id"":1}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""getmempoolancestors\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""getmempoolancestors"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection(""mainnet-bitcoin.node.coinapi.io"")payload = json.dumps({""jsonrpc"": ""2.0"",""method"": ""getmempoolancestors"",""params"": [],""id"": 1})headers = {'Content-Type': 'application/json','accept': 'application/json','X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}conn.request(""POST"", ""/"", payload, headers)res = conn.getresponse()data = res.read()print(data.decode(""utf-8""))var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""getmempoolancestors"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""getmempoolancestors"",""params"": [],""id"":1}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({""jsonrpc"": ""2.0"",""method"": ""getmempoolancestors"",""params"": [],""id"": 1})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""jsonrpc\"":\""2.0\"",\""method\"":\""getmempoolancestors\"",\""params\"": [],\""id\"":1}"");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​txid (string, required): The transaction id, and it must be in mempool verbose (string): default=false. It's true for a JSON object and false for array of transaction idsResponse​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": 1234567.890123}(for verbose = false) hex: The transaction id of an in-mempool ancestor transaction (for verbose = true) transactionid: The transaction id vsize: The virtual transaction size as defined in BIP 141. This is different from actual serialized size for witness transactions as witness data is discounted weight: The transaction weight as defined in BIP 141 time: The local time transaction entered pool in seconds since 1 Jan 1970 GMT height: The block height when the transaction entered pool descendantcount: The number of in-mempool descendant transactions (including this one) descendantsize: The virtual transaction size of in-mempool descendants (including this one) ancestorcount: The number of in-mempool ancestor transactions (including this one) wtxid: The hash of serialized transaction, including witness data fees: A JSON array containing information about the transaction fee paid by the transaction base: The transaction fee in BTC modified: The transaction fee with fee deltas used for mining priority in BTC ancestor: The modified fees of in-mempool ancestors (including this one) in BTC descendant: The modified fees of in-mempool descendants (including this one) in BTC depends: Unconfirmed transactions used as inputs for this transaction hex: The parent transaction id spentby: Unconfirmed transactions spending outputs from this transaction hex: The child transaction id bip125-replaceable: Whether this transaction could be replaced due to BIP125 (replace-by-fee) unbroadcast: Whether this transaction is currently unbroadcast (initial broadcast not yet acknowledged by any peers)Was this section helpful?12345PreviousgetmemoryinfoNextgetmempooldescendantsOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getmempoolancestors)"
95,i.io general customer portal customer portal metrics explained,"i.io general customer portal customer portal metrics explained.   Metrics tab explained | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalMetrics tab explainedTraces view explainedFAQGlossaryChangelogCustomer PortalMetrics tab explainedOn this pageMetrics tab explainedThis section is dedicated to provide you with a comprehensive understanding of the Metrics Tab within the customer portal. In this section, we will delve into the various metric parameters, offering detailed explanations and corresponding descriptions to better understand your historical usage.What is Usage Metric?​Usage metric is record that we log when from our perspective usage of our products occured. We will name here few examples of the usage:Performing API calls, connections, subscriptions or other operations against our APIReceiving or sending data to us in various forms (flat files, streaming, API calls)Having active API Keys or defined accountsMetric parameters​Each metric can contain any amount of parameters and a single value. Parameters are used to identify where the usage occured. For example we will use parameters to separate the usage by API Key, Protocol or the Product that was accessed. Below we will list complete list of the parameters that can occur:ParameterDescriptionAPIKeyAPI Key that initiated specific usage metricDataCenterLocation where the usage metric was created (e.g. AWS-EU-EAST-1 etc)DataSourceIdentification of the specific data source which was related to usage metric (e.g. BINANCE, COINBASE, ETHEREUM-MAINNET etc.)OperationNameThe ID which identifies the operations within the ServiceName and ProtocolName, usually Data Type (DTO) otherwise id of the operation like method in the JSON-PRC calls. (e.g. QUOTES_SYMBOL_HISTORY, eth_call)ProtocolNameThe name of the protocol that was used to generate the metric (e.g. REST, WebSocket, FIX, S3)ServiceNameThe name of the product (e.g. MarketData)Grouping data​In the customer portal you can group the metrics by any parameter to inspect the usage in that dimension. For example by selecting metric COINAPI_DATA_MSGS_SENT and grouping by ProtocolName you can inspect how much bytes we delivered to your application by every protocol in requested time period.Metrics​MetricParametersUnitValue RepresentationCOINAPI_DATA_MSGS_SENTAPIKey DataSource OperationName ProtocolName ServiceNameEntitiesAmount of the data points/entities/messages sent by the API to the client.COINAPI_DATA_BYTES_SENTAPIKey DataSource OperationName ProtocolName ServiceNameBytesNumber of bytes sent by the API to the client.COINAPI_DATA_MSGS_RECEIVEDAPIKey DataSource OperationName ProtocolName ServiceNameEntitiesAmount of the data points/entities/messages received by the API from the customer.COINAPI_DATA_BYTES_RECEIVEDAPIKey DataSource OperationName ProtocolName ServiceNameBytesNumber of bytes received by the API from the customer.COINAPI_CALLS_RECEIVEDAPIKey DataSource OperationName ProtocolName ServiceNameCallsNumber of API calls received from client by the API.COINAPI_CALLS_SENTAPIKey DataSource OperationName ProtocolName ServiceNameCallsNumber of API calls delivered from API to client.COINAPI_REST_CREDITSAPIKey ServiceNameCreditsNumber of credits used by the API calls. This is useful for the Market Data REST API where each API Call can be counted as more than single credit.COINAPI_REST_APICALLSAPIKey ServiceNameCalls(Deprecated) Number of REST API calls used, regardless of the credits used for each call. Please migrato the COINAPI_CALLS_SENTCOINAPI_APICALLS_COUNTAPIKey OperationName ProtocolName ServiceNameCalls(Deprecated) Number of API calls used. Please migrate to the COINAPI_CALLS_SENTCOINAPI_APIKEY_DAYSAPIKeyAPI Key DaysCouting the number of the API Keys for the customer. We will report for each API Key active single unit for each day.COINAPI_NAAS_UNITSAPIKey DataSource OperationName ProtocolName ServiceNameCreditsNumber of credits used by the Node As A Service products.COINAPI_JWT_VALIDATION_COUNTAPIKeyOccurencesNumber of occurences where we needed to fully validate JWT Secret.COINAPI_JWT_CACHE_HITAPIKeyOccurencesNumber of occurences where we do not needed to fully validate JWT Secret.COINAPI_CONNECTION_SECONDSAPIKey DataSource OperationName ProtocolName ServiceNameConnection SecondsNumber of connection-seconds where the connection was established with the API.COINAPI_APICALLS_RESPONSE_MILLISECONDSAPIKey DataSource OperationName ProtocolName ServiceNameMillisecondsNumber of milliseconds that we spent generating the response to the API call for the customer.EMSX_EXCHANGE_RUNTIME_SECONDSAPIKey DataSource OperationName ProtocolName ServiceNameAccount SecondsNumber of account-seconds counted from the accounts managed by the EMS API.*_USDSame as for the source metricUSD CentsMetrics that we are using to convert overage or paying metrics to the USD value that will be added to the next invoice. For example the COINAPI_DATA_BYTES_SENT metric can generate USD overages by posting to the COINAPI_DATA_BYTES_SENT_USD metric.By understanding the Metrics Tab and its parameters, you can make informed decisions to utilize your usage better.Was this section helpful?12345PreviousCustomer PortalNextTraces view explainedWhat is Usage Metric?Metric parametersGrouping dataMetricsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/customer-portal/customer-portal-metrics-explained)"
96,i.io general faq api Do you accept bank or wire transfers,"i.io general faq api Do you accept bank or wire transfers.   Do you accept bank or wire transfers? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer EMS Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What is the rate limit for EMS Trading API?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQAPIDo you accept bank or wire transfers?Do you accept bank or wire transfers?We only accept bank and wire transfers for annual subscriptions.For monthly subscriptions, only credit card payments are accepted.Was this section helpful?12345PreviousAPINextDo you offer EMS Trading API?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/api/Do-you-accept-bank-or-wire-transfers)"
97,i.io market data#time,"i.io market data#time.   Market Data API | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideMarket Data APIOn this pageMarket Data - Starter Guide Welcome to the CoinAPI developer documentation. This document should contain all the information required to properly implement applications using our API.Overview of the APIs​3 main interfaces can be used to access CoinAPI:APIDataCommunicationDescriptionRESTfulLive and HistoricalRequest-responseStateless API provides the widest range of data, not capable of streaming, only pooling.WebSocket V1LivePublish-subscribeStateful API providing streaming of real-time market data. Using a single connection, clients are able to subscribe to multiple data sources.WebSocket DSLivePublish-subscribeNewly introduced, stateful API providing streaming of real-time market data with direct connections to each data source for optimized performance and reliability.FIXLivePublish-subscribeStateful API providing streaming of real-time market data, widely adopted by the finance industry. Using single connection client is able to subscribe to multiple data sources.Comparison: REST vs. Streaming Protocols (WebSocket & FIX)​Understanding the differences between REST and streaming protocols like WebSocket and FIX is essential for developers when designing and implementing financial applications. Here's a detailed comparison to guide your choice.FeatureREST APIWebSocket & FIXCommunication ModelRequest-response model, where the client sends a request and the server respondsContinuous, bidirectional communication allowing for real-time data streamingUse CaseIdeal for operations that do not require real-time updates, such as retrieving historical dataSuited for applications requiring real-time market data updates and trading operationsComplexityGenerally simpler to implement due to the stateless nature of HTTP requestsMore complex due to the need for handling continuous connections and real-time data managementData FreshnessData is only as fresh as the last request made by the clientData is continuously updated in real-time, providing the latest market informationScalabilityCan be more easily scaled using standard web infrastructureScaling requires careful management of connection resources and data throughputLatencyHigher latency due to the overhead of making HTTP requestsLower latency, optimized for real-time data delivery and trading activitiesState ManagementStateless, with each request being independentStateful, maintaining a continuous connection stateKey Takeaways​REST API is straightforward and effective for operations that can tolerate the latency inherent in the request-response model. It's widely used for accessing historical data, account management, and other non-time-sensitive operations.WebSocket & FIX are tailored for real-time applications, such as live market data feeds, trading platforms, and other scenarios where immediate data access is crucial. They offer lower latency and continuous data streams but come with added complexity in implementation and resource management.Choosing between REST and streaming protocols depends on your application's specific needs regarding data freshness, real-time updates, and the complexity you're prepared to manage.Comparison: WebSocket APIs vs. FIX API​Understanding the differences between WebSocket APIs (both V1 and DS) and the FIX API is crucial for developers and financial institutions looking to integrate real-time market data and trading capabilities. Here's a detailed comparison to guide your choice.FeatureWebSocket APIsFIX APIProtocol NaturePublish-subscribe model, designed for real-time data streamingSession-based protocol, widely used for trading and order managementUse CaseBest suited for applications requiring real-time market data updatesPrimarily used for trading, order submission, and execution reportsComplexityRelatively simple to implement and useMore complex due to its extensive use in trading operationsData TypesPrimarily focused on market data (quotes, trades, book data)Supports a wide range of financial information including order entries, executions, and market dataLatencyLow latency, especially with WebSocket DS API optimized for high-frequency dataGenerally low latency, with performance depending on the implementation and network infrastructureReliabilityHigh reliability with TCP-based delivery ensuring message order and integrityExtremely high reliability and considered the industry standard for trading activitiesAuthorizationHTTP based authorization methodsUses session-based logins with possible additional security measuresFlexibilityHigh flexibility in subscribing to specific data types and exchangesHigh degree of customization and control over trading operations and data exchangeKey Takeaways​WebSocket APIs are ideal for applications that require efficient, real-time access to market data. They offer simplicity in implementation and flexibility in data subscription, making them suitable for a wide range of applications beyond trading, such as analytics and monitoring tools.FIX API is the go-to protocol for trading operations, offering robustness, reliability, and a wide range of functionalities tailored to the needs of traders and financial institutions. Its complexity and capabilities make it the standard for order management and execution in the financial industry.Choosing between WebSocket APIs and the FIX API depends on your specific requirements, whether you're focusing on real-time data streaming for various applications or engaging in complex trading operations.Comparison: WebSocket V1 vs. WebSocket DS API​When choosing between WebSocket V1 and WebSocket DS API, it's important to understand their key differences and how they cater to different needs. Here's a comparison to help you decide which API suits your project requirements better.FeatureWebSocket V1 APIWebSocket DS APIConnection TypePossible to acquire the data from multiple data sources using single connectionSeparate data sources need separate connectionRoutingGeoDNS for regional routing to nearest infrastructureOptimized DNS for more direct connection per specific data sourceData typestrade, quote, orderbooks, ohlcv, exchange rates, metadatatrade, quote, orderbooksAuthorizationIn protocol authorization, query-string, URL path, header, or JWTquery-string, URL path, header, or JWTSymbol FilteringFlexible symbol filteringRequires precise symbol identifiers for improved data accuracySymbologyCoinAPI Symbol identifiersCoinAPI or Exchange symbols identifiersKey Takeaways​WebSocket V1 is versatile and user-friendly, making it suitable for a wide range of applications that require real-time market data.WebSocket DS API is tailored for scenarios demanding high data volumes and low latency, such as high-frequency trading platforms. Its direct routing and exchange-specific connections provide a more efficient data stream with reduced latency.Choosing the right API depends on your specific needs regarding data volume, latency sensitivity, and the complexity of your data subscription requirements. Both APIs continue to be supported, ensuring that you can select the one that best fits your project's needs.SDK​Our Software Development Kit (SDK) is available on GitHub at https://github.com/coinapi/coinapi-sdk. If possible then we are strongly recommending using our tested libraries available on GitHub, rather than creating new ones. However, if you decide to create your implementation or to change the existing one, then we encourage you to create a Pull Request to our main repository with the proposed changes, we will able to include your code in our official repository for use by other users, effectively creating collaboration.In the repository, you can find libraries or examples for languages or environments like:PythonRMatlabC#C++.NETJavaRubyGoJavaScriptTypeScriptNode.jsPHPHaskellObjective-CSwiftSecurity​The use of encryption is optional, and the decision to use it is on you. On the encrypted endpoints, we are using protocols that are considered the best security practices.tipYou should assume that we are always providing certificates signed by the Trusted Certification Authority.Standards and conventions​This section represents used standards and conventions across all documents and API's.infoThe keywords ""MUST"", ""MUST NOT"", ""REQUIRED"", ""SHALL"", ""SHALL NOT"", ""SHOULD"", ""SHOULD NOT"", ""RECOMMENDED"", ""MAY"", and ""OPTIONAL"" in this document are to be interpreted as described in RFC 2119.Variables naming​All variables are named using the Snake case (or snake_case) naming convention. This means that words are separated by a single underscore _ character, no spaces are used, and letters are lowercase.Asset codes​ISO 4217 currency code standard is used for fiat money identifications. Cryptocurrency assets are identified using codes used by the general public or adopted by the majority of exchanges.Exchange codes​Exchange on our platform is identified by the specific exchange API and the matching engine behind it. When the example exchange has multiple separate APIs, e.g., for different products SPOT, OPTIONS, or to cover other regions, we will expose these symbols from these respective APIs on different exchange identifiers. Below are examples of BINANCE (multiple APIs, multiple regions) and DERIBIT (single API, single region). A full listing of exchanges can be queried using the Market Data REST API.BINANCE Exchange IDsWebsiteDescriptionBINANCEhttps://www.binance.com/BinanceBINANCEDEXhttps://www.binance.org/Binance DEXBINANCEFTShttps://www.binance.com/Binance Futures (USDT/dapi)BINANCEFTSChttps://www.binance.com/Binance Futures (Coin/fapi)BINANCEFTSCUAThttps://www.binance.com/Binance Futures Testnet (Coin/fapi)BINANCEFTSUAThttps://www.binance.com/Binance Futures Testnet (USDT/dapi)BINANCEJEhttps://www.binance.je/Binance JerseyBINANCEJEXhttps://www.jex.com/enBinance JEXBINANCEKRhttps://www.binance.kr/Binance KoreaBINANCEOPTVhttps://www.binance.com/Binance Options Vanilla (vapi)BINANCEOPTVUAThttps://www.binance.com/Binance Options Vanilla Testnet (vapi)BINANCEUAThttps://www.binance.com/Binance TestnetBINANCEUGhttps://www.binance.co.ug/Binance UgandaBINANCEUShttps://www.binance.us/Binance USDERIBIT Exchange IDsWebsiteDescriptionDERIBIThttps://www.deribit.com/DeribitNumbers precision​Numbers in our platform can have a maximum of 19 digits overall, but no more than 9 decimal places. In cases when the number represents aggregate value then we allow 38 digits overall, but still no more than 9 decimal places.Time​For all input and output time values ISO 8601 standard is used.Format specifierDescriptionyyyyThe year is a four-digit number.MMThe month, from 01 through 12.ddThe day of the month, from 01 through 31.HHThe hour, using a 24-hour clock from 00 to 23.mmThe minute, from 00 through 59.ssThe second, from 00 through 59.fffThe milliseconds in a date and time value.fffffffThe ten-millionths of a second in a date and time value.Input time values are parsed using the following formats as far as possible:yyyy-MM-ddTHH:mm:ss.fffffffyyyy-MM-ddTHH:mm:ss.fffyyyy-MM-ddTHH:mm:ssyyyy-MM-ddTHH:mmyyyy-MM-ddTHHyyyy-MM-ddyyyyMMddTHHmmssfffffffyyyyMMddTHHmmssfffyyyyMMddTHHmmssyyyyMMddTHHmmyyyyMMddTHHyyyyMMddinfoWhen time zone information is not supplied, we will assume the UTC zone.Output time values are formatted using the following patterns:yyyy-MM-ddTHH:mm:ss.fffffffZyyyy-MM-ddinfoAll time values we provide are UTC zones. Do not assume otherwise.Was this section helpful?12345NextAuthenticationOverview of the APIsComparison: REST vs. Streaming Protocols (WebSocket & FIX)Key TakeawaysComparison: WebSocket APIs vs. FIX APIKey TakeawaysComparison: WebSocket V1 vs. WebSocket DS APIKey TakeawaysSDKSecurityStandards and conventionsVariables namingAsset codesExchange codesNumbers precisionTimeCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data#time)"
98,i.io naas api bitcoin Methods getrawchangeaddress,"i.io naas api bitcoin Methods getrawchangeaddress.   getrawchangeaddress | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetrawchangeaddressOn this pagegetrawchangeaddressOverview​The 'getrawchangeaddress' method allows you to generate a new Bitcoin address for receiving change. This method is primarily used with raw transactions and not for normal use.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""getrawchangeaddress"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""getrawchangeaddress\"",\""params\"": [ ]}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getrawchangeaddress"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection(""mainnet-bitcoin.node.coinapi.io"")payload = json.dumps({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""getrawchangeaddress"",""params"": []})headers = {'Content-Type': 'application/json','accept': 'application/json','X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}conn.request(""POST"", ""/"", payload, headers)res = conn.getresponse()data = res.read()print(data.decode(""utf-8""))var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getrawchangeaddress"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""id"":1,""method"":""getrawchangeaddress"",""params"": [ ]}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getrawchangeaddress"", ""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""getrawchangeaddress\"",\""params\"": [ ]}"");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​address_type (string, optional): The type of address to generate. The options available are ""legacy"", ""p2sh-segwit"", and ""bech32"". The default value is set by the -changetype parameter.Response​{ ""address"": ""string""}Was this section helpful?12345PreviousgetpeerinfoNextgetrawmempoolOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getrawchangeaddress)"
99,i.io naas api ethereum Methods eth getBlockByHash,"i.io naas api ethereum Methods eth getBlockByHash.   eth_getBlockByHash | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_getBlockByHashOn this pageeth_createAccessListOverview​The 'eth_getBlockByHash' method returns information about a block whose hash is in the request.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'content-type: application/json' \   --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data '{ ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_getBlockByHash"", ""params"": [ ""0x63392b0dbab8cecbf16a8174f6ee7c2fd58a01d1f9bd5599aa422d0c782908d5"", ""0x63392b0dbab8cecbf16a8174f6ee7c2fd58a01d1f9bd5599aa422d0c782908d5"" ]}' using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"", ""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getBlockByHash\"",\""params\"":[\""0x63392b0dbab8cecbf16a8174f6ee7c2fd58a01d1f9bd5599aa422d0c782908d5\"",\""0x63392b0dbab8cecbf16a8174f6ee7c2fd58a01d1f9bd5599aa422d0c782908d5\""]}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"",CURLOPT_RETURNTRANSFER => true,CURLOPT_ENCODING => """",CURLOPT_MAXREDIRS => 10,CURLOPT_TIMEOUT => 30,CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,CURLOPT_CUSTOMREQUEST => ""POST"",CURLOPT_POSTFIELDS => json_encode(['id' => 1,'jsonrpc' => '2.0','method' => 'eth_getBlockByHash','params' => ['0x63392b0dbab8cecbf16a8174f6ee7c2fd58a01d1f9bd5599aa422d0c782908d5','0x63392b0dbab8cecbf16a8174f6ee7c2fd58a01d1f9bd5599aa422d0c782908d5']]),CURLOPT_HTTPHEADER => [""accept: application/json"",""content-type: application/json"",""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY""],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) {echo ""cURL Error #:"" . $err;} else {echo $response;}?> import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_getBlockByHash"", ""params"": [""0x63392b0dbab8cecbf16a8174f6ee7c2fd58a01d1f9bd5599aa422d0c782908d5"", ""0x63392b0dbab8cecbf16a8174f6ee7c2fd58a01d1f9bd5599aa422d0c782908d5""]}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"",  ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text) const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({ id: 1, jsonrpc: '2.0', method: 'eth_getBlockByHash', params: [  '0x63392b0dbab8cecbf16a8174f6ee7c2fd58a01d1f9bd5599aa422d0c782908d5',  '0x63392b0dbab8cecbf16a8174f6ee7c2fd58a01d1f9bd5599aa422d0c782908d5' ] })};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err)); package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getBlockByHash\"",\""params\"":[\""0x63392b0dbab8cecbf16a8174f6ee7c2fd58a01d1f9bd5599aa422d0c782908d5\"",\""0x63392b0dbab8cecbf16a8174f6ee7c2fd58a01d1f9bd5599aa422d0c782908d5\""]}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))} require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getBlockByHash\"",\""params\"":[\""0x63392b0dbab8cecbf16a8174f6ee7c2fd58a01d1f9bd5599aa422d0c782908d5\"",\""0x63392b0dbab8cecbf16a8174f6ee7c2fd58a01d1f9bd5599aa422d0c782908d5\""]}""response = http.request(request)puts response.read_body OkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getBlockByHash\"",\""params\"":[\""0x63392b0dbab8cecbf16a8174f6ee7c2fd58a01d1f9bd5599aa422d0c782908d5\"",\""0x63392b0dbab8cecbf16a8174f6ee7c2fd58a01d1f9bd5599aa422d0c782908d5\""]}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();}Request Parameters​hash: (string) [ Required ] A string representing the hash (32 bytes) of a block.transaction details flag: (boolean) [ Required ] If set to 'true', returns the full transaction objects, if 'false' returns only the hashes of the transactions.Response​{ ""jsonrpc"": ""2.0"", ""id"": 0, ""result"": { ""difficulty"": ""0xbfabcdbd93dda"", ""extraData"": ""0x737061726b706f6f6c2d636e2d6e6f64652d3132"", ""gasLimit"": ""0x79f39e"", ""gasUsed"": ""0x79ccd3"", ""hash"": ""0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35"", ""logsBloom"": ""0x4848112002a2020aaa0812180045840210020005281600c80104264300080008000491220144461026015300100000128005018401002090a824a4150015410020140400d808440106689b29d0280b1005200007480ca950b15b010908814e01911000054202a020b05880b914642a0000300003010044044082075290283516be82504082003008c4d8d14462a8800c2990c88002a030140180036c220205201860402001014040180002006860810ec0a1100a14144148408118608200060461821802c081000042d0810104a8004510020211c088200420822a082040e10104c00d010064004c122692020c408a1aa2348020445403814002c800888208b1"", ""miner"": ""0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c"", ""mixHash"": ""0x3d1fdd16f15aeab72e7db1013b9f034ee33641d92f71c0736beab4e67d34c7a7"", ""nonce"": ""0x4db7a1c01d8a8072"", ""number"": ""0x5bad55"", ""parentHash"": ""0x61a8ad530a8a43e3583f8ec163f773ad370329b2375d66433eb82f005e1d6202"", ""receiptsRoot"": ""0x5eced534b3d84d3d732ddbc714f5fd51d98a941b28182b6efe6df3a0fe90004b"", ""sha3Uncles"": ""0x8a562e7634774d3e3a36698ac4915e37fc84a2cd0044cb84fa5d80263d2af4f6"", ""size"": ""0x41c7"", ""stateRoot"": ""0xf5208fffa2ba5a3f3a2f64ebd5ca3d098978bedd75f335f56b705d8715ee2305"", ""timestamp"": ""0x5b541449"", ""totalDifficulty"": ""0x12ac11391a2f3872fcd"", ""transactions"": [  ""0x8784d99762bccd03b2086eabccee0d77f14d05463281e121a62abfebcf0d2d5f"",  ""0x311be6a9b58748717ac0f70eb801d29973661aaf1365960d159e4ec4f4aa2d7f"",  ""0xe42b0256058b7cad8a14b136a0364acda0b4c36f5b02dea7e69bfd82cef252a2"",  ""0x4eb05376055c6456ed883fc843bc43df1dcf739c321ba431d518aecd7f98ca11"",  ""0x994dd9e72b212b7dc5fd0466ab75adf7d391cf4f206a65b7ad2a1fd032bb06d7"",  ""0xf6feecbb9ab0ac58591a4bc287059b1133089c499517e91a274e6a1f5e7dce53"",  ""0x7e537d687a5525259480440c6ea2e1a8469cd98906eaff8597f3d2a44422ff97"",  ""0xa762220e92bed6d77a2c19ffc60dad77d71bd5028c5230c896ab4b9552a39b50"",  ""0xf1fa677edda7e5add8e794732c7554cd5459a5c12781dc71de73c7937dfb2775"",  ""0x241d89f7888fbcfadfd415ee967882fec6fdd67c07ca8a00f2ca4c910a84c7dd"" ], ""transactionsRoot"": ""0xf98631e290e88f58a46b7032f025969039aa9b5696498efc76baf436fa69b262"", ""uncles"": [  ""0x824cce7c7c2ec6874b9fa9a9a898eb5f27cbaf3991dfa81084c3af60d1db618c"" ] }}A block object matching the hash in the request, or null when no block was found. The matched block contains the following keys and their values:difficulty: A hexadecimal of the difficulty for this block.extraData: The ""extra data"" field of this block.gasLimit: Maximum gas allowed in this block.gasUsed: Total used gas by all transactions in this block.hash: 32 bytes. The hash of the block. Null when the returned block is the pending block.logsBloom: 256 bytes. The bloom filter for the logs of the block. Null when the returned block is the pending block.miner: 20 bytes. The address of the beneficiary to whom the mining rewards were given.nonce: 8 bytes. The hash of the generated proof-of-work. Null when the returned block is the pending block.number: The block number. Null when the returned block is the pending block.parentHash: 32 bytes. The hash of the parent block.receiptsRoot: 32 bytes. The root of the receipts trie of the block.sha3Uncles: 32 bytes. The SHA3 of the uncles data in the block.size: A hexadecimal of the size of this block in bytes.stateRoot: 32 bytes. The root of the final state trie of the block.timestamp: Unix timestamp for when the block was collated.totalDifficulty: A hexadecimal of the total difficulty of the chain until this block.transactions: [Array] An array of transaction objects, or 32 bytes transaction hashes depending on the last given parameter.transactionsRoot: 32 bytes. The root of the transaction trie of the block.uncles: [Array] An Array of uncle hashes.Was this section helpful?12345Previouseth_createAccessListNexteth_getBlockByNumberOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_getBlockByHash)"
100,i.io management subscriptions,i.io management subscriptions. Customer portal CoinAPI.ioYou need to enable JavaScript to run this app.(https://docs.coinapi.io/management/subscriptions)
101,i.io general faq api Where can I find examples and SDK source codes for API,"i.io general faq api Where can I find examples and SDK source codes for API.   Where can I find examples and SDK source codes for API? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer EMS Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What is the rate limit for EMS Trading API?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQAPIWhere can I find examples and SDK source codes for API?Where can I find examples and SDK source codes for API?Take a look at our GitHub repository at https://github.com/coinapi/coinapi-sdkWas this section helpful?12345PreviousWhat timezone is used for date/time values?NextWhy are limit headers not always showing on a request?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/api/Where-can-I-find-examples-and-SDK-source-codes-for-API)"
102,i.io naas api bitcoin Methods decodepsbt x,"i.io naas api bitcoin Methods decodepsbt x.   decodePSBT | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsdecodePSBTOn this pagedecodePSBTOverview​The 'decodePSBT' method is utilized to decode a PSBT (Partially Signed Bitcoin Transaction) into a human-readable format, providing detailed information about the transaction in JSON format. This method is essential for developers and users who want to understand the transaction details before it is broadcasted to the network.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""decodePSBT"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""decodePSBT\"",\r \""params\"": []\r }\r "", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""decodePSBT"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""decodePSBT"", ""params"": []})headers = { 'Content-Type': 'application/json', 'accept': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""decodePSBT"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{`+""""+` ""jsonrpc"": ""1.0"",`+""""+` ""id"": ""1"",`+""""+` ""method"": ""decodePSBT"",`+""""+` ""params"": []`+""""+`}`+""""+``)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({""jsonrpc"": ""1.0"",""id"": ""1"",""method"": ""decodePSBT"",""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder().build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""decodePSBT\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder().url(""https://bitcoin-mainnet.node.coinapi.io"").method(""POST"", body).addHeader(""Content-Type"", ""application/json"").addHeader(""accept"", ""application/json"").addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"").build();Response response = client.newCall(request).execute();Request Parameters​psbt (string): The PSBT string that needs to be decoded.Response​{ ""tx"": { ""decoded network-serialized unsigned transaction"": ""..."" }, ""unknown"": { ""key"": ""hex"", ""value"": ""..."" }, ""inputs"": [ {  ""non_witness_utxo"": {  ""decoded network transaction for non-witness UTXOs"": ""...""  },  ""witness_utxo"": {  ""amount"": ""n"",  ""scriptPubKey"": {   ""asm"": ""str"",   ""hex"": ""hex"",   ""type"": ""str"",   ""address"": ""str""  }  },  ""partial_signatures"": {  ""pubkey"": ""str"",  ""signature"": ""...""  },  ""sighash"": ""str"",  ""redeem_script"": {  ""asm"": ""str"",  ""hex"": ""hex"",  ""type"": ""str""  },  ""witness_script"": {  ""asm"": ""str"",  ""hex"": ""hex"",  ""type"": ""str""  },  ""bip32_derivs"": [  {   ""master_fingerprint"": ""str"",   ""path"": ""str""  }  ],  ""final_scriptsig"": {  ""asm"": ""str"",  ""hex"": ""str""  },  ""final_scriptwitness"": [""hex""],  ""unknown"": {  ""key"": ""hex"",  ""value"": ""...""  } } ], ""outputs"": [ {  ""redeem_script"": {  ""asm"": ""str"",  ""hex"": ""hex"",  ""type"": ""str""  },  ""witness_script"": {  ""asm"": ""str"",  ""hex"": ""hex"",  ""type"": ""str""  },  ""bip32_derivs"": [  {   ""pubkey"": ""str"",   ""master_fingerprint"": ""str"",   ""path"": ""str""  }  ],  ""unknown"": {  ""key"": ""hex"",  ""value"": ""...""  } } ], ""fee"": ""n""}Errors​Invalid Request: This error is returned if the request format is incorrect.Internal Error: This error is returned if there's a server-side issue processing the request.Rate Limits​Please note that there are rate limits applied to the API to ensure fair usage. Free-tier users are limited to 100 requests per day, while premium users can make up to 1000 or more requests per day.Support​If you encounter any issues or have further questions regarding the decodePSBT method, please contact our support team at [email protected].Was this section helpful?12345PreviousdecodeRawTransactionNextDecodescriptOverviewRequestRequest ParametersResponseErrorsRate LimitsSupportCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/decodepsbt_x)"
103,i.io flat files api data types trades,"i.io flat files api data types trades.   Trades | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyFlat FilesBilling and UsageData & StructureQuotesTradesFull Limit Order BookS3 APIPush APIData & StructureTradesOn this pageTradesOverview​The Trades data type provides information about individual transactions that have occurred on an exchange for a specific trading pair. This data is crucial for understanding market activity, price movements, and trading volumes.File Organization​Trade data is organized in the S3 bucket as follows:trades/└── YYYYMMDD/ └── [EXCHANGE_ID]-[SYMBOL_ID].csv.gzExample: trades/20230701/BINANCE-BTCUSDT.csv.gzFile Format​Files are in CSV format, compressed with gzip. Each row represents a single trade.Data Fields​Column NameTypeDescriptiontime_exchangedatetimeUTC timestamp of the trade provided by the exchange or estimated using the exchange API delay.time_coinapidatetimeUTC timestamp when CoinAPI first received the trade information.guidstringUnique identifier of the trade provided by CoinAPI.pricedecimalPrice at which the trade occurred.base_amountdecimalAmount of base asset traded in the transaction.taker_sidestringAggressor side of the transaction. Possible values: BUY, SELL, BUY_ESTIMATED, SELL_ESTIMATED, UNKNOWN.Example Data​time_exchange,time_coinapi,guid,price,base_amount,taker_side2023-07-01T12:00:00.123456Z,2023-07-01T12:00:00.234567Z,550e8400-e29b-41d4-a716-446655440000,30000.50,0.1,BUY2023-07-01T12:00:01.123456Z,2023-07-01T12:00:01.234567Z,550e8400-e29b-41d4-a716-446655440001,30001.00,0.05,SELL2023-07-01T12:00:02.123456Z,2023-07-01T12:00:02.234567Z,550e8400-e29b-41d4-a716-446655440002,30000.75,0.2,BUY_ESTIMATEDData Collection Process​We maintain real-time connections to supported exchanges.As trades occur, we capture the trade information provided by the exchange.The data is processed, normalized, and stored in our system.At the end of each day (UTC), the data is aggregated into daily files and uploaded to the S3 bucket.Taker Side Explanation​BUY: The exchange reported that the trade aggressor was buying.SELL: The exchange reported that the trade aggressor was selling.BUY_ESTIMATED: The exchange didn't report the aggressor; we estimated it was more likely a buy.SELL_ESTIMATED: The exchange didn't report the aggressor; we estimated it was more likely a sell.UNKNOWN: The exchange didn't report the aggressor, and we couldn't confidently estimate it.Corner Cases and Special Considerations​Time Discrepancies: There might be slight differences between time_exchange and time_coinapi due to network latency or exchange API delays.Estimated Taker Side: When the exchange doesn't provide the taker side, we use our algorithms to estimate it. These estimations are based on order book data and may not always be 100% accurate.Trade Reversals: In rare cases, exchanges might reverse or cancel trades. These are typically not reflected in our data, so be aware that very recent trade data might be subject to change on the exchange itself.File Splitting​For highly active trading pairs, a single day's data may be split across multiple files:trades/20230701/BINANCE-BTCUSDT_001.csv.gztrades/20230701/BINANCE-BTCUSDT_002.csv.gzUsage Tips​Use the guid field to uniquely identify trades and avoid double-counting when processing multiple files.The base_amount field represents the amount in the base currency of the trading pair (e.g., BTC in BTC/USDT).To calculate the total value of a trade in the quote currency, multiply price by base_amount.When analyzing trade direction, consider using only BUY and SELL categories for the most accurate data, or include estimated values if you need more comprehensive data.For any questions or issues with the Trades data, please contact our support team.Was this section helpful?12345PreviousQuotesNextFull Limit Order BookOverviewFile OrganizationFile FormatData FieldsExample DataData Collection ProcessTaker Side ExplanationCorner Cases and Special ConsiderationsFile SplittingUsage TipsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/flat-files-api/data-types/trades)"
104,i.io naas api ethereum Methods eth getLogs,"i.io naas api ethereum Methods eth getLogs.   eth_getLogs | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_getLogsOn this pageeth_getLogsOverview​The ""eth_getLogs"" method returns an array of all the logs matching the given filter object.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'content-type: application/json' \   --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data '{ ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_getLogs"", ""params"": [ {  ""address"": [  ""0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907""  ],  ""fromBlock"": ""0x429d3b"",  ""toBlock"": ""latest"",  ""topics"": [  ""0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"",  ""0x00000000000000000000000000b46c2526e227482e2ebb8f4c69e4674d262e75"",  ""0x00000000000000000000000054a2d42a40f51259dedd1978f6c118a0f0eff078""  ] } ]}'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getLogs\"",\""params\"":[{\""address\"":[\""0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907\""],\""fromBlock\"":\""0x429d3b\"",\""toBlock\"":\""latest\"",\""topics\"":[\""0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"",\""0x00000000000000000000000000b46c2526e227482e2ebb8f4c69e4674d262e75\"",\""0x00000000000000000000000054a2d42a40f51259dedd1978f6c118a0f0eff078\""]}]}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"",CURLOPT_RETURNTRANSFER => true,CURLOPT_ENCODING => """",CURLOPT_MAXREDIRS => 10,CURLOPT_TIMEOUT => 30,CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,CURLOPT_CUSTOMREQUEST => ""POST"",CURLOPT_POSTFIELDS => json_encode(['id' => 1,'jsonrpc' => '2.0','method' => 'eth_getLogs','params' => [['address' => ['0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907'],'fromBlock' => '0x429d3b','toBlock' => 'latest','topics' => ['0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef','0x00000000000000000000000000b46c2526e227482e2ebb8f4c69e4674d262e75','0x00000000000000000000000054a2d42a40f51259dedd1978f6c118a0f0eff078']]]]),CURLOPT_HTTPHEADER => [""accept: application/json"",""content-type: application/json"",""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY""],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) {echo ""cURL Error #:"" . $err;} else {echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_getLogs"", ""params"": [  {   ""address"": [""0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907""],   ""fromBlock"": ""0x429d3b"",   ""toBlock"": ""latest"",   ""topics"": [""0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"", ""0x00000000000000000000000000b46c2526e227482e2ebb8f4c69e4674d262e75"", ""0x00000000000000000000000054a2d42a40f51259dedd1978f6c118a0f0eff078""]  } ]}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text) const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({ id: 1, jsonrpc: '2.0', method: 'eth_getLogs', params: [  {  address: ['0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907'],  fromBlock: '0x429d3b',  toBlock: 'latest',  topics: [   '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef',   '0x00000000000000000000000000b46c2526e227482e2ebb8f4c69e4674d262e75',   '0x00000000000000000000000054a2d42a40f51259dedd1978f6c118a0f0eff078'  ]  } ] })};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getLogs\"",\""params\"":[{\""address\"":[\""0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907\""],\""fromBlock\"":\""0x429d3b\"",\""toBlock\"":\""latest\"",\""topics\"":[\""0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"",\""0x00000000000000000000000000b46c2526e227482e2ebb8f4c69e4674d262e75\"",\""0x00000000000000000000000054a2d42a40f51259dedd1978f6c118a0f0eff078\""]}]}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getLogs\"",\""params\"":[{\""address\"":[\""0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907\""],\""fromBlock\"":\""0x429d3b\"",\""toBlock\"":\""latest\"",\""topics\"":[\""0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"",\""0x00000000000000000000000000b46c2526e227482e2ebb8f4c69e4674d262e75\"",\""0x00000000000000000000000054a2d42a40f51259dedd1978f6c118a0f0eff078\""]}]}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getLogs\"",\""params\"":[{\""address\"":[\""0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907\""],\""fromBlock\"":\""0x429d3b\"",\""toBlock\"":\""latest\"",\""topics\"":[\""0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"",\""0x00000000000000000000000000b46c2526e227482e2ebb8f4c69e4674d262e75\"",\""0x00000000000000000000000054a2d42a40f51259dedd1978f6c118a0f0eff078\""]}]}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​A filter object containing the following:address: (Optional) Contract address (20 bytes) or a list of addresses from which logs should originate.fromBlock: (Optional, default is ""'latest'"") A hexadecimal block number, or the string 'latest', 'earliest' or 'pending'.toBlock: (Optional, default is ""'latest'"") A hexadecimal block number, or the string 'latest', 'earliest' or 'pending'.topics: (Optional) Array of 32 bytes DATA topics. Topics are order-dependent.blockhash: (Optional) Restricts the logs returned to the single block referenced in the 32-byte hash blockHash. Using blockHash is equivalent to setting fromBlock and toBlock to the block number referenced in the blockHash. If blockHash is present in the filter criteria, then neither fromBlock nor toBlock are allowed.Response​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": [ {  ""address"": ""0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907"",  ""blockHash"": ""0x8243343df08b9751f5ca0c5f8c9c0460d8a9b6351066fae0acbd4d3e776de8bb"",  ""blockNumber"": ""0x429d3b"",  ""data"": ""0x000000000000000000000000000000000000000000000000000000012a05f200"",  ""logIndex"": ""0x56"",  ""removed"": false,  ""topics"": [  ""0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"",  ""0x00000000000000000000000000b46c2526e227482e2ebb8f4c69e4674d262e75"",  ""0x00000000000000000000000054a2d42a40f51259dedd1978f6c118a0f0eff078""  ],  ""transactionHash"": ""0xab059a62e22e230fe0f56d8555340a29b2e9532360368f810595453f6fdd213b"",  ""transactionIndex"": ""0xac"" } ]}An array of log objects, or an empty array if nothing has changed since the last poll. Log objects contain the following keys and their values:removed: (Boolean) true when the log was removed, due to a chain reorganization. false if it's a valid log.logIndex: Hexadecimal of the log index position in the block. 'Null' when it is a pending log.transactionIndex: Hexadecimal of the transactions index position from which the log was created. 'Null' when it is a pending log.transactionHash: 32 bytes. Hash of the transactions from which this log was created. 'Null' when it is a pending log.blockHash: 32 bytes. Hash of the block where this log was in. 'Null' when it is a pending log.blockNumber: Block number where this log was in. 'Null' when it is a pending log.address: 20 bytes. Address from which this log originated.data: Contains one or more 32-bytes non-indexed arguments of the log.topics: An array of 0 to 4 indexed log arguments, each 32 bytes.Constraints​To ensure efficient use of resources, 'eth_getLogs' requests are subject to the following constraints:A maximum of 5,000 parameters in a single request.A maximum of 10,000 results can be returned by a single query.Query duration must not exceed 10 seconds.If a query returns too many results or exceeds the max query duration, one of the following errors is returned:{ ""jsonrpc"": ""2.0"", ""id"": 1, ""error"": { ""code"": -32005, ""message"": ""query returned more than 10000 results"" }}or{ ""jsonrpc"": ""2.0"", ""id"": 1, ""error"": { ""code"": -32005, ""message"": ""query timeout exceeded"" }}If this happens:Limit your query to a smaller number of blocks using fromBlock and toBlock.If querying for commonly used topics, consider limiting to a single smart contract address.Was this section helpful?12345Previouseth_getFilterLogsNexteth_getProofOverviewRequestRequest ParametersResponseConstraintsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_getLogs)"
105,i.io naas api bitcoin Methods getnettotals,"i.io naas api bitcoin Methods getnettotals.   getnettotals | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetnettotalsOn this pagegetnettotalsOverview​The 'getnettotals' method returns information about network traffic, including bytes in, bytes out, and current time.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KE' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""getnettotals"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KE"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""getnettotals\"",\""params\"": [ ]}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KE'];$body = '{ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getnettotals"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection(""mainnet-bitcoin.node.coinapi.io"")payload = json.dumps({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getnettotals"", ""params"": []})headers = { 'Content-Type': 'application/json', 'accept': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KE'}conn.request(""POST"", ""/"", payload, headers)res = conn.getresponse()data = res.read()print(data.decode(""utf-8""))var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KE"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getnettotals"", ""params"": [] }),};$.ajax(settings).done(function (response) {console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{""jsonrpc"":""2.0"",""id"":1,""method"":""getnettotals"",""params"": [ ]}`) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KE"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KE""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getnettotals"", ""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""getnettotals\"",\""params\"": [ ]}"");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KE"") .build();Response response = client.newCall(request).execute();Request Parameters​Response​{ ""result"": [ ""n"", ... ], ""error"": null, ""id"": 1}Was this section helpful?12345PreviousgetmininginfoNextgetnetworkhashpsOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getnettotals)"
106,i.io market data rest api metrics listing of all supported metrics for asset,"i.io market data rest api metrics listing of all supported metrics for asset.   Listing of all supported metrics for asset | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsCurrent metrics for given assetCurrent metrics for given exchangeCurrent metrics for given symbolHistorical metrics for assetHistorical metrics for symbolHistorical metrics for the exchangeListing of all supported metrics by CoinAPIListing of all supported exchange metricsListing of all supported metrics for assetListing of all supported metrics for symbolOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIMetricsListing of all supported metrics for assetListing of all supported metrics for assetGET /v1/metrics/asset/listingGet data metrics for asset.Query Parametersmetric_id stringMetric identifier (from the Metrics -> Listing)exchange_id stringExchange identifier (from the Metadata -> Exchanges)chain_id stringChain identifiernetwork_id stringNetwork identifierasset_id stringAsset identifier (from the Metadata -> Assets)asset_id_external stringThe asset external identifierResponses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [metric_id string nullableGets or sets the metric ID.symbol_id string nullableGets or sets the symbol ID.symbol_id_external string nullableGets or sets the symbol ID from the exchange.exchange_id string nullableGets or sets the exchange ID.asset_id string nullableGets or sets the asset ID.asset_id_external string nullableGets or sets the asset ID from the exchange.chain_id string nullableGets or sets the chain id.network_id string nullableGets or sets the network id.][ { ""metric_id"": ""string"", ""symbol_id"": ""string"", ""symbol_id_external"": ""string"", ""exchange_id"": ""string"", ""asset_id"": ""string"", ""asset_id_external"": ""string"", ""chain_id"": ""string"", ""network_id"": ""string"" }][ { ""metric_id"": ""LIQUIDATION_TIME_IN_FORCE"", ""symbol_id"": ""BINANCEFTS_PERP_ETC_USDT"", ""exchange_id"": ""BINANCEFTS"" }, { ""metric_id"": ""LIQUIDATION_ORDER_TYPE"", ""symbol_id"": ""BINANCEFTS_PERP_EOS_USDT"", ""exchange_id"": ""BINANCEFTS"" }, { ""metric_id"": ""LIQUIDATION_ORDER_STATUS"", ""symbol_id"": ""BINANCEFTS_PERP_EOS_USDT"", ""exchange_id"": ""BINANCEFTS"" }]SchemaExample (from schema)Example responseSchemaArray [metric_id string nullableGets or sets the metric ID.symbol_id string nullableGets or sets the symbol ID.symbol_id_external string nullableGets or sets the symbol ID from the exchange.exchange_id string nullableGets or sets the exchange ID.asset_id string nullableGets or sets the asset ID.asset_id_external string nullableGets or sets the asset ID from the exchange.chain_id string nullableGets or sets the chain id.network_id string nullableGets or sets the network id.][ { ""metric_id"": ""string"", ""symbol_id"": ""string"", ""symbol_id_external"": ""string"", ""exchange_id"": ""string"", ""asset_id"": ""string"", ""asset_id_external"": ""string"", ""chain_id"": ""string"", ""network_id"": ""string"" }][ { ""metric_id"": ""LIQUIDATION_TIME_IN_FORCE"", ""symbol_id"": ""BINANCEFTS_PERP_ETC_USDT"", ""exchange_id"": ""BINANCEFTS"" }, { ""metric_id"": ""LIQUIDATION_ORDER_TYPE"", ""symbol_id"": ""BINANCEFTS_PERP_EOS_USDT"", ""exchange_id"": ""BINANCEFTS"" }, { ""metric_id"": ""LIQUIDATION_ORDER_STATUS"", ""symbol_id"": ""BINANCEFTS_PERP_EOS_USDT"", ""exchange_id"": ""BINANCEFTS"" }]SchemaExample (from schema)Example responseSchemaArray [metric_id string nullableGets or sets the metric ID.symbol_id string nullableGets or sets the symbol ID.symbol_id_external string nullableGets or sets the symbol ID from the exchange.exchange_id string nullableGets or sets the exchange ID.asset_id string nullableGets or sets the asset ID.asset_id_external string nullableGets or sets the asset ID from the exchange.chain_id string nullableGets or sets the chain id.network_id string nullableGets or sets the network id.][ { ""metric_id"": ""string"", ""symbol_id"": ""string"", ""symbol_id_external"": ""string"", ""exchange_id"": ""string"", ""asset_id"": ""string"", ""asset_id_external"": ""string"", ""chain_id"": ""string"", ""network_id"": ""string"" }][ { ""metric_id"": ""LIQUIDATION_TIME_IN_FORCE"", ""symbol_id"": ""BINANCEFTS_PERP_ETC_USDT"", ""exchange_id"": ""BINANCEFTS"" }, { ""metric_id"": ""LIQUIDATION_ORDER_TYPE"", ""symbol_id"": ""BINANCEFTS_PERP_EOS_USDT"", ""exchange_id"": ""BINANCEFTS"" }, { ""metric_id"": ""LIQUIDATION_ORDER_STATUS"", ""symbol_id"": ""BINANCEFTS_PERP_EOS_USDT"", ""exchange_id"": ""BINANCEFTS"" }]SchemaExample (from schema)Example responseSchemaArray [metric_id string nullableGets or sets the metric ID.symbol_id string nullableGets or sets the symbol ID.symbol_id_external string nullableGets or sets the symbol ID from the exchange.exchange_id string nullableGets or sets the exchange ID.asset_id string nullableGets or sets the asset ID.asset_id_external string nullableGets or sets the asset ID from the exchange.chain_id string nullableGets or sets the chain id.network_id string nullableGets or sets the network id.][ { ""metric_id"": ""string"", ""symbol_id"": ""string"", ""symbol_id_external"": ""string"", ""exchange_id"": ""string"", ""asset_id"": ""string"", ""asset_id_external"": ""string"", ""chain_id"": ""string"", ""network_id"": ""string"" }][ { ""metric_id"": ""LIQUIDATION_TIME_IN_FORCE"", ""symbol_id"": ""BINANCEFTS_PERP_ETC_USDT"", ""exchange_id"": ""BINANCEFTS"" }, { ""metric_id"": ""LIQUIDATION_ORDER_TYPE"", ""symbol_id"": ""BINANCEFTS_PERP_EOS_USDT"", ""exchange_id"": ""BINANCEFTS"" }, { ""metric_id"": ""LIQUIDATION_ORDER_STATUS"", ""symbol_id"": ""BINANCEFTS_PERP_EOS_USDT"", ""exchange_id"": ""BINANCEFTS"" }]Loading...Was this section helpful?12345PreviousListing of all supported exchange metricsNextListing of all supported metrics for symbolCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/metrics/listing-of-all-supported-metrics-for-asset)"
107,i.io naas api ethereum Methods eth getFilterChanges,"i.io naas api ethereum Methods eth getFilterChanges.   eth_getFilterChanges | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_getFilterChangesOn this pageeth_getFilterChangesOverview​Polling method for a filter, which returns an array of logs that occurred since the last poll. The filter must be created by calling either 'eth_newFilter' or 'eth_newBlockFilter'.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'content-type: application/json' \  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data '{ ""id"": 1, ""jsonrpc"": ""2.0"", ""params"": [ ""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8"", ""latest"" ], ""method"": ""eth_getCode""}'var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8\"",\""latest\""],\""method\"":\""eth_getCode\""}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content);<?php$curl = curl_init();curl_setopt_array($curl, [CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"",CURLOPT_RETURNTRANSFER => true,CURLOPT_ENCODING => """",CURLOPT_MAXREDIRS => 10,CURLOPT_TIMEOUT => 30,CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,CURLOPT_CUSTOMREQUEST => ""POST"",CURLOPT_POSTFIELDS => json_encode(['id' => 1,'jsonrpc' => '2.0','params' => ['0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8','latest'],'method' => 'eth_getCode']),CURLOPT_HTTPHEADER => [""accept: application/json"",""content-type: application/json"",""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY""],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) {echo ""cURL Error #:"" . $err;} else {echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""params"": [""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8"", ""latest""], ""method"": ""eth_getCode""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text)const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({ id: 1, jsonrpc: '2.0', params: ['0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8', 'latest'], method: 'eth_getCode' })};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8\"",\""latest\""],\""method\"":\""eth_getCode\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8\"",\""latest\""],\""method\"":\""eth_getCode\""}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8\"",\""latest\""],\""method\"":\""eth_getCode\""}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​'filter ID': A string denoting the filter ID.Response​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""error"": { ""code"": -32000, ""message"": ""filter not found"" }}log object array: An array of log objects, or an empty array if nothing has changed since the last poll.For filters created with 'eth_newBlockFilter', the return values are block hashes (32 bytes), e.g. '[""0x3454645634534...""]'.For filters created with 'eth_newFilter', the logs are objects with the following parameters:address: 20 bytes. Address from which this log originated.blockHash: 32 bytes. The hash of the block where this log was in. 'Null' when it is a pending log.blockNumber: The block number where this log was in. 'Null' when it is a pending log.data: DATA. Contains the non-indexed arguments of the log.logIndex: A hexadecimal of the log index position in the block. 'Null' when it is a pending log.removed: 'true' when the log was removed, due to a chain reorganization. 'false' if it is a valid log.topics: Array of DATA. An array of 0 to 4 32-bytes DATA of indexed log arguments. In Solidity, the first topic is the hash of the signature of the event (e.g., Deposit(address,bytes32,uint256)), except when you declared the event with the anonymous specifier.transactionHash: 32 bytes. A hash of the transactions from which this log was created. 'Null' when it is a pending log.transactionIndex: A hexadecimal of the transactions index position from which this log was created. 'Null' when it is a pending log.Was this section helpful?12345Previouseth_getCodeNexteth_getFilterLogsOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_getFilterChanges)"
108,i.io general faq general Should we file a ticket every time,"i.io general faq general Should we file a ticket every time.   Should we file a ticket every time? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralShould we file a ticket every time?Should we file a ticket every time?Your company should file a ticket every time there is a problem.Our current agreement does not include the SLA on the Service, just the SLA on the Support. In this case when you file a ticket then you have a guarantee that we are working on that, lack of SLA on the Service means that we do not know what is important for your company and does not monitor and are accountable on those specific things as we even not defined them. We have customers where we measure every specific metrics about the feed and because of that knowledge we made architectural decisions to minimize the possibility of breaching this specific SLA, but for other customers they are irrelevant.We are of course monitoring the infrastructure continuously and acting upon issues. We always seeking to optimize processes, because of that we usually not have repeating issues. The same was for this case, actually, there was a data but updated at a lower frequency. We will of course analyze this internally outside this case and seek possible improvement in this area by extending the monitoring set up to include that kind of failures if that will be reasonable.Was this section helpful?12345PreviousREST API empty array/collection response and 550 error explained.NextSome symbols have extra identifiersCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/Should-we-file-a-ticket-every-time)"
109,i.io naas api bitcoin Methods importdescriptors,"i.io naas api bitcoin Methods importdescriptors.   import_descriptors | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsimport_descriptorsOn this pageimport_descriptorsOverview​The 'import_descriptors' method allows you to import descriptors to the CoinAPI. This method is essential for managing various aspects of your Bitcoin transactions and wallet functionalities through the CoinAPI.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""import_descriptors"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""import_descriptors\"",\""params\"": [ ]}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""import_descriptors"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection(""mainnet-bitcoin.node.coinapi.io"")payload = json.dumps({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""import_descriptors"",""params"": []})headers = {'Content-Type': 'application/json','accept': 'application/json','X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}conn.request(""POST"", ""/"", payload, headers)res = conn.getresponse()data = res.read()print(data.decode(""utf-8""))var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""import_descriptors"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""id"":1,""method"":""import_descriptors"",""params"": [ ]}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""import_descriptors"", ""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""import_descriptors\"",\""params\"": [ ]}"");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​desc: A descriptor to import. This is a required parameter.active: Set this descriptor to be the active descriptor for the corresponding output type/externality. This is an optional parameter, with the default value being false.range: If a ranged descriptor is used, this specifies the end or the range (in the form [begin, end]) to import. This is an optional parameter.next_index: If a ranged descriptor is set to active, this specifies the next index to generate addresses from. This is an optional parameter.timestamp: Time from which to start rescanning the blockchain for this descriptor, in UNIX epoch time. Use the string ""now"" to substitute the current synced blockchain time. This is a required parameter.internal: Whether matching outputs should be treated as not incoming payments (e.g., change). This is an optional parameter, with the default value being false.label: Label to assign to the address; only allowed with internal = false. This is an optional parameter, with the default value being an empty string.Response​{ // Response structure here}Was this section helpful?12345PreviousimportAddressNextimportmultiOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/importdescriptors)"
110,i.io market data rest api metadata#list all assets get,i.io market data rest api metadata#list all assets get.   Metadata | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataList all asset iconsList all assets by asset IDList all assetsList all exchanges by exchange_idList all exchangesList all symbolsList of icons for the exchangesList of symbols for the exchangeList symbol mapping for the exchangeMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIMetadataMetadata📄️ List all asset iconsGets the list of icons (of the given size) for all the assets.📄️ List all assets by asset IDList all assets by asset ID📄️ List all assetsRetrieves all assets.📄️ List all exchanges by exchange_idList all exchanges by exchange_id📄️ List all exchangesGet a detailed list of exchanges provided by the system.📄️ List all symbolsRetrieves all symbols with optional filtering.📄️ List of icons for the exchangesList of icons for the exchanges📄️ List of symbols for the exchangeList of symbols for the exchange📄️ List symbol mapping for the exchangeList symbol mapping for the exchangeWas this section helpful?12345PreviousTimeseries Index ValueNextList all asset iconsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/metadata#list-all-assets-get)
111,i.io faq general What are the benefits of using the WebSocket SDK,"i.io faq general What are the benefits of using the WebSocket SDK.   What are the benefits of using the WebSocket SDK? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralWhat are the benefits of using the WebSocket SDK?What are the benefits of using the WebSocket SDK?Our WebSocket SDK provides you many benefits like:You don't need to waste time on the development of the protocol, testing, and maintaining that code in the future in case of bugs or future changesSDK has correct protocol implementation which is 100% covered with the unit testsReconnections, heartbeats, and errors detected are handled inside the library silently (if you want to log them there is an event handler)Zero allocation JSON parsing => minimal CPU usageBest practices appliedOptimal handling of the messages received; messages are placed on the queue from which they are parsed and pushed by another thread to prevent TCP backpressure.Was this section helpful?12345PreviousWe need a OneZero FIX API session, is this possible?NextWhat are the inclusions of the Enterprise Plan?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/What-are-the-benefits-of-using-the-WebSocket-SDK)"
112,i.io customer portal,i.io customer portal.   Customer Portal | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQCustomer PortalMetrics tab explainedChangelogCustomer PortalCustomer PortalThis section will cover the Customer Portal sectionsWas this section helpful?12345PreviousWhat should I do if my API key was compromised?NextMetrics tab explainedCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/customer-portal)
113,i.io naas api ethereum Methods eth estimateGas,"i.io naas api ethereum Methods eth estimateGas.   eth_estimateGas | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_estimateGasOn this pageeth_createAccessListOverview​The 'eth_estimateGas' method generates and returns an estimate of how much gas is necessary for a transaction to complete. It's important to note that this transaction will not be added to the blockchain. The estimate might be significantly more than the actual gas used due to various reasons, including EVM mechanics and node performance.Gas Parameter Limitation​To ensure the optimal performance and security of our API, the gas parameter in the eth_estimateGas method (as well as in eth_call) is capped at 10 times (1000%) the current block gas limit. If you're testing this in a local environment (e.g., ganache, besu, geth), you can replicate this behavior using the rpc.gascap command-line option.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'content-type: application/json' \  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data '{ ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_estimateGas"", ""params"": [ {  ""to"": ""0xd46e8dd67c5d32be8058bb8eb970870f07244567"",  ""gas"": ""0x00"",  ""gasPrice"": ""0x09184e72a000"",  ""value"": ""0x00"",  ""data"": ""0x"" }, {  ""to"": ""0xd46e8dd67c5d32be8058bb8eb970870f07244567"",  ""gas"": ""0x00"",  ""gasPrice"": ""0x09184e72a000"",  ""value"": ""0x00"",  ""data"": ""0x"" } ]}'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"", ""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_estimateGas\"",\""params\"":[{\""to\"":\""0xd46e8dd67c5d32be8058bb8eb970870f07244567\"",\""gas\"":\""0x00\"",\""gasPrice\"":\""0x09184e72a000\"",\""value\"":\""0x00\"",\""data\"":\""0x\""},{\""to\"":\""0xd46e8dd67c5d32be8058bb8eb970870f07244567\"",\""gas\"":\""0x00\"",\""gasPrice\"":\""0x09184e72a000\"",\""value\"":\""0x00\"",\""data\"":\""0x\""}]}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [ CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"", CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => """", CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 30, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => ""POST"", CURLOPT_POSTFIELDS => json_encode([ 'id' => 1, 'jsonrpc' => '2.0', 'method' => 'eth_estimateGas', 'params' => [  [    'to' => '0xd46e8dd67c5d32be8058bb8eb970870f07244567',    'gas' => '0x00',    'gasPrice' => '0x09184e72a000',    'value' => '0x00',    'data' => '0x'  ],  [    'to' => '0xd46e8dd67c5d32be8058bb8eb970870f07244567',    'gas' => '0x00',    'gasPrice' => '0x09184e72a000',    'value' => '0x00',    'data' => '0x'  ] ] ]), CURLOPT_HTTPHEADER => [ ""accept: application/json"", ""content-type: application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" ],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) { echo ""cURL Error #:"" . $err;} else { echo $response;} ?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_estimateGas"", ""params"": [  {   ""to"": ""0xd46e8dd67c5d32be8058bb8eb970870f07244567"",   ""gas"": ""0x00"",   ""gasPrice"": ""0x09184e72a000"",   ""value"": ""0x00"",   ""data"": ""0x""  },  {   ""to"": ""0xd46e8dd67c5d32be8058bb8eb970870f07244567"",   ""gas"": ""0x00"",   ""gasPrice"": ""0x09184e72a000"",   ""value"": ""0x00"",   ""data"": ""0x""  } ]}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text)const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key' : '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({ id: 1, jsonrpc: '2.0', method: 'eth_estimateGas', params: [  {  to: '0xd46e8dd67c5d32be8058bb8eb970870f07244567',  gas: '0x00',  gasPrice: '0x09184e72a000',  value: '0x00',  data: '0x'  },  {  to: '0xd46e8dd67c5d32be8058bb8eb970870f07244567',  gas: '0x00',  gasPrice: '0x09184e72a000',  value: '0x00',  data: '0x'  } ] })};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_estimateGas\"",\""params\"":[{\""to\"":\""0xd46e8dd67c5d32be8058bb8eb970870f07244567\"",\""gas\"":\""0x00\"",\""gasPrice\"":\""0x09184e72a000\"",\""value\"":\""0x00\"",\""data\"":\""0x\""},{\""to\"":\""0xd46e8dd67c5d32be8058bb8eb970870f07244567\"",\""gas\"":\""0x00\"",\""gasPrice\"":\""0x09184e72a000\"",\""value\"":\""0x00\"",\""data\"":\""0x\""}]}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))} require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_estimateGas\"",\""params\"":[{\""to\"":\""0xd46e8dd67c5d32be8058bb8eb970870f07244567\"",\""gas\"":\""0x00\"",\""gasPrice\"":\""0x09184e72a000\"",\""value\"":\""0x00\"",\""data\"":\""0x\""},{\""to\"":\""0xd46e8dd67c5d32be8058bb8eb970870f07244567\"",\""gas\"":\""0x00\"",\""gasPrice\"":\""0x09184e72a000\"",\""value\"":\""0x00\"",\""data\"":\""0x\""}]}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_estimateGas\"",\""params\"":[{\""to\"":\""0xd46e8dd67c5d32be8058bb8eb970870f07244567\"",\""gas\"":\""0x00\"",\""gasPrice\"":\""0x09184e72a000\"",\""value\"":\""0x00\"",\""data\"":\""0x\""},{\""to\"":\""0xd46e8dd67c5d32be8058bb8eb970870f07244567\"",\""gas\"":\""0x00\"",\""gasPrice\"":\""0x09184e72a000\"",\""value\"":\""0x00\"",\""data\"":\""0x\""}]}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​block number: [required] A string representing a block number, or one of the string tags: 'latest', 'earliest', or 'pending'.TRANSACTION CALL OBJECT [required]:'from': [optional] 20 Bytes - The address the transaction originates from.'to': 20 Bytes - The destination address of the transaction.'gas': [optional] Hexadecimal value representing the gas provided for the transaction execution. While eth_estimateGas consumes no gas, this parameter might be needed in certain scenarios.'gasPrice': [optional] Hexadecimal value of the gas price for each unit of gas.'maxPriorityFeePerGas': [optional] Maximum fee, in Wei, the sender is willing to pay per gas above the base fee.'maxFeePerGas': [optional] Maximum total fee (base fee + priority fee), in Wei, the sender is willing to pay per gas.'value': [optional] Hexadecimal value of the amount sent with the transaction.'data': [optional] Hash of the method signature and encoded parameters.If no gas limit is specified, the system uses the block gas limit from the pending block as an upper bound. This means the returned estimate might not be sufficient if the required gas exceeds the pending block gas limit.Response​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": ""0xb1770efb14906e509893b6190359658208ae64d0c56e22f748a1b0869885559e""}A hexadecimal representation of the estimated gas for the provided transaction.If the call results in an EVM REVERT operation, an error response is returned with the revert reason pre-decoded as a stringWas this section helpful?12345Previouseth_createAccessListNexteth_feeHistoryOverviewGas Parameter LimitationRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_estimateGas)"
114,i.io faq security and privacy What security mechanisms does CoinAPI use to protect my data,"i.io faq security and privacy What security mechanisms does CoinAPI use to protect my data.   What security mechanisms does CoinAPI use to protect my data? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIBilling and SubscriptionsSecurity and PrivacyWhat CDN does the API use?What information do I need to provide in order to subscribe?What security mechanisms does CoinAPI use to protect my data?What should I do if my API key was compromised?Customer PortalChangelogFAQSecurity and PrivacyWhat security mechanisms does CoinAPI use to protect my data?What security mechanisms does CoinAPI use to protect my data?Your sensitive information is stored inside the service provider, which is constantly audited and certified as a PCI-DSS Level 1 Service Provider. This is the most stringent level of certification available in the payments industry. To retain the certification, a payment provider must use world-class security tools and techniques to maintain a high level of security.Was this section helpful?12345PreviousWhat information do I need to provide in order to subscribe?NextWhat should I do if my API key was compromised?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/security-and-privacy/What-security-mechanisms-does-CoinAPI-use-to-protect-my-data)"
115,i.io naas api bitcoin Methods getblockcount,"i.io naas api bitcoin Methods getblockcount.   getblockcount | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetblockcountOn this pagegetblockcountOverview​The 'getblockcount' RPC method in the CoinAPI allows you to retrieve the height of the fully-validated blockchain. The genesis block, which is the first block in the blockchain, has a height of 0. This method is essential for users who want to track the current length of the blockchain.Request​shellcsharpphppythonjavascriptgorubywget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""getblockcount"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""getblockcount\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""getblockcount"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""2.0"", ""method"": ""getblockcount"", ""params"": [], ""id"": 1})headers = { 'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type': 'application/json', 'accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""getblockcount"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""getblockcount"",""params"": [],""id"":1}`) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"") req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""method"": ""getblockcount"", ""params"": [], ""id"": 1})response = https.request(request)puts response.read_body ```</TabItem><TabItem value=""java"">```javaOkHttpClient client = new OkHttpClient().newBuilder().build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""2.0\"",\r \""id\"": \""1\"",\r \""method\"": \""getblockcount\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​This method does not require any parameters.Response​{ ""result"": 810358, ""error"": null, ""id"": 1}result: This field will contain the current block count, representing the height of the blockchain.error: In case of an error, this field will contain the respective error message, if any.Was this section helpful?12345PreviousgetblockchaininfoNextgetblockfilterOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getblockcount)"
116,i.io general faq general Some symbols have extra identifiers,"i.io general faq general Some symbols have extra identifiers.   Some symbols have extra identifiers | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralSome symbols have extra identifiersOn this pageSome symbols have extra identifiersQuestion​what does ""5656B6"" mean? ""OKEX_FTS_ETH_USD_190927_5656B6""Answer​This behavior is documented here: https://docs.coinapi.io/market-data/rest-api/metadata/list-all-symbols#symbol-identifier in the In the unlikely event when the “symbolid” for more than one market is the same. We will append the additional term (prefixed with the “”) at the end of the duplicated identifiers to differentiate them.This happened for OKEX as they deprecated the API to which we were connected, because of that we were forced to switch to another API version. The differences between API's were significant and we needed to list the same markets from the new API under different series to give our customers a possibility to differentiate them.Was this section helpful?12345PreviousShould we file a ticket every time?NextWas my free API Key banned/blocked?QuestionAnswerCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/Some-symbols-have-extra-identifiers)"
117,i.io general faq general Invalid API Key error for a newly purchased key,"i.io general faq general Invalid API Key error for a newly purchased key.   ""Invalid API Key"" error for a newly purchased key | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneral""Invalid API Key"" error for a newly purchased key""Invalid API Key"" error for a newly purchased keyWe need a few minutes to propagate information about the new key through our independent server sites.This is by design as our multiple geographical independent sites are designed to be highly available and we didn't have a single point where the API keys are stored.Was this section helpful?12345PreviousI hardly use the REST API, why is my usage so high?NextIs SOR included in the basic EMS Trading API package?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/Invalid-API-Key-error-for-a-newly-purchased-key)"
118,i.io flat files api data types,"i.io flat files api data types.   Data Types and File Structure Overview | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyFlat FilesBilling and UsageData & StructureQuotesTradesFull Limit Order BookS3 APIPush APIData & StructureOn this pageData Types and File Structure OverviewThe Flat Files S3 API provides access to various types of cryptocurrency market data. This document provides an overview of the available data types and the general file structure used across the system.Available Data Types​Our API offers the following types of market data:QuotesTradesLimit Book SnapshotsFull Limit Order BookOHLCV (Open, High, Low, Close, Volume)Each data type is documented in detail in its respective article, including field descriptions, data formats, and usage examples.File Structure​Data in the S3 bucket is organized according to the following structure:/├── trades/│ └── YYYYMMDD/│  └── [EXCHANGE_ID]-[SYMBOL_ID].csv.gz├── quotes/│ └── YYYYMMDD/│  └── [EXCHANGE_ID]-[SYMBOL_ID].csv.gz├── limitbook_full/│ └── YYYYMMDD/│  └── [EXCHANGE_ID]-[SYMBOL_ID].csv.gz├── limitbook_snapshot_X/│ └── YYYYMMDD/│  └── [EXCHANGE_ID]-[SYMBOL_ID].csv.gz└── ohlcv_active_consolidated/ └── YYYYMMDD/  └── [EXCHANGE_ID]-[SYMBOL_ID].csv.gzWhere:YYYYMMDD represents the date of the data[EXCHANGE_ID] is the identifier for the specific exchange[SYMBOL_ID] is the identifier for the specific trading pair or instrumentFile Format​All data files are stored in CSV (Comma-Separated Values) format and compressed using gzip compression. This approach balances human readability with efficient storage and transfer sizes.To use these files:Download the .csv.gz fileDecompress the file using a tool that supports gzip (e.g., gzip, 7-zip)Open the resulting CSV file in a spreadsheet application or process it with your preferred data analysis toolData Consistency and Synchronization​All timestamp fields across different data types are synchronized to ensure consistency when analyzing data from multiple sources. We use high-precision time synchronization to maintain accuracy across our data collection infrastructure.Best Practices for Data Retrieval​Use date-based partitioning to efficiently retrieve data for specific time periods.Leverage the prefix functionality in S3 listing operations to filter data by exchange, symbol, or date.Implement parallel downloads for large datasets to improve retrieval speed.Consider implementing local caching for frequently accessed data to reduce API calls and improve application performance.For detailed information on each data type, please refer to the individual data type documentation.Was this section helpful?12345PreviousBilling and UsageNextQuotesAvailable Data TypesFile StructureFile FormatData Consistency and SynchronizationBest Practices for Data RetrievalCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/flat-files-api/data-types)"
119,i.io cdn cgi l email protection#fe8b8d9b8cbe87d09d9193,"i.io cdn cgi l email protection#fe8b8d9b8cbe87d09d9193.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 86784d864c39772e •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#fe8b8d9b8cbe87d09d9193)"
120,i.io general faq security and privacy,i.io general faq security and privacy.   Security and Privacy | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIBilling and SubscriptionsSecurity and PrivacyWhat CDN does the API use?What information do I need to provide in order to subscribe?What security mechanisms does CoinAPI use to protect my data?What should I do if my API key was compromised?GlossaryChangelogFAQSecurity and PrivacySecurity and PrivacyWas this section helpful?12345PreviousHow to upgrade/downgrade my subscription?NextWhat CDN does the API use?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/security-and-privacy)
121,i.io general faq general Exchange chart is different OHLCV,"i.io general faq general Exchange chart is different OHLCV.   Exchange chart is different OHLCV | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralExchange chart is different OHLCVExchange chart is different OHLCVWe do not have visibility as to how the data source is creating the OHLCV as there are multiple ways this could be done. Internally we do not try to match the data source chart. A quick summary to give light as to why our data is different: Every exchange can aggregate differentlyWe aggregate from real-time streamWe aggregate sometimes on time of reception Because of that, the data could be different. We do not try to match that. We are performing the same aggregation across all data sources to have unification across them.Was this section helpful?12345PreviousDoes CoinAPI provide asset icons/images of the cryptocurrencies?NextHow can I set custom timezone in the data?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/Exchange-chart-is-different-OHLCV)"
122,i.io naas api ethereum Methods eth getBalance,"i.io naas api ethereum Methods eth getBalance.   eth_createAccessList | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_createAccessListOn this pageeth_createAccessListOverview​The 'eth_getBalance' method returns the balance of the specified address in wei.Request​shellcsharpphppythonjavascriptgorubyjava curl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'content-type: application/json' \  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data '{ ""id"": 1, ""jsonrpc"": ""2.0"", ""params"": [ ""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8"", ""latest"" ], ""method"": ""eth_getBalance""}' using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"", ""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8\"",\""latest\""],\""method\"":\""eth_getBalance\""}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"",CURLOPT_RETURNTRANSFER => true,CURLOPT_ENCODING => """",CURLOPT_MAXREDIRS => 10,CURLOPT_TIMEOUT => 30,CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,CURLOPT_CUSTOMREQUEST => ""POST"",CURLOPT_POSTFIELDS => json_encode(['id' => 1,'jsonrpc' => '2.0','params' => ['0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8','latest'],'method' => 'eth_getBalance']),CURLOPT_HTTPHEADER => [""accept: application/json"",""content-type: application/json""""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY""],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) {echo ""cURL Error #:"" . $err;} else {echo $response;}?> import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""params"": [""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8"", ""latest""], ""method"": ""eth_getBalance""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text) const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({ id: 1, jsonrpc: '2.0', params: ['0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8', 'latest'], method: 'eth_getBalance' })};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8\"",\""latest\""],\""method\"":\""eth_getBalance\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))} require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8\"",\""latest\""],\""method\"":\""eth_getBalance\""}""response = http.request(request)puts response.read_body OkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8\"",\""latest\""],\""method\"":\""eth_getBalance\""}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();}Request Parameters​'address' (20 Bytes) - The address to get the balance of.'block' (optional) - The block number to retrieve the balance from. It can be one of the following:'earliest': For the earliest/genesis block.'latest:' For the latest mined block.'pending:' For the pending state/transactions.Or you can specify a block number.Response​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": ""0x7f49b9052e509c""}'result (String)'' - The current balance of the address in wei.Notes:The balance is returned in wei, which is the smallest denomination of ether. To convert the balance to ether, divide the result by 10^18.Always ensure to use a valid Ethereum address and specify the correct block parameter.Was this section helpful?12345Previouseth_gasPriceNexteth_getBlockByHashOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_getBalance)"
123,i.io general faq general Is latency higher for the exchanges which are providing only REST API,"i.io general faq general Is latency higher for the exchanges which are providing only REST API.   Is latency higher for the exchanges which are providing only REST API? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralIs latency higher for the exchanges which are providing only REST API?Is latency higher for the exchanges which are providing only REST API?If the exchange has only REST API then latency is usually higher in comparison to typical WebSocket exchange, in that case on our end we are using hundreds of the servers to get the data faster and avoid limits imposed by the REST API's.Was this section helpful?12345PreviousIs SOR included in the basic EMS Trading API package?NextIs there an SLA agreement available?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/Is-latency-higher-for-the-exchanges-which-are-providing-only-REST-API)"
124,i.io market data rest api order book l3 order book l 3 current order books,"i.io market data rest api order book l3 order book l 3 current order books.   Current order books | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcvOrder BookOrder Book L3 Current order book by symbol_id Current order booksQuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIOrder Book L3 Current order books Current order booksGET /v1/orderbooks3/current Current order booksQuery Parametersfilter_symbol_id stringComma or semicolon delimited parts of symbol identifier used to filter the response.limit_levels int32The maximum number of levels to include in the response.Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)SchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the order book.time_coinapi date-timeThe CoinAPI time when the order book was received.asks nullableThe asks made by market makers.bids nullableThe bids made by market makers.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.267Z"", ""time_coinapi"": ""2024-07-16T12:55:05.267Z"" }]SchemaExample (from schema)SchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the order book.time_coinapi date-timeThe CoinAPI time when the order book was received.asks nullableThe asks made by market makers.bids nullableThe bids made by market makers.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.267Z"", ""time_coinapi"": ""2024-07-16T12:55:05.267Z"" }]SchemaExample (from schema)SchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the order book.time_coinapi date-timeThe CoinAPI time when the order book was received.asks nullableThe asks made by market makers.bids nullableThe bids made by market makers.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.267Z"", ""time_coinapi"": ""2024-07-16T12:55:05.267Z"" }]SchemaExample (from schema)SchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the order book.time_coinapi date-timeThe CoinAPI time when the order book was received.asks nullableThe asks made by market makers.bids nullableThe bids made by market makers.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.267Z"", ""time_coinapi"": ""2024-07-16T12:55:05.267Z"" }]Loading...Was this section helpful?12345Previous Current order book by symbol_idNextQuotesCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/order-book-l3/order-book-l-3-current-order-books)"
125,i.io market data rest api indexes create index,"i.io market data rest api indexes create index.   Create index | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIREST APIExchange RatesIndexesCreate indexGet index dataList of available indexesRetrieve Historical Composition Value Timeseries Retrieves historical timeseries for the specific composition value for an indexRetrieve Historical Index Value and CompositionRetrieve Historical Index Value TimeseriesUpdate indexMetadataMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket APIFIX APIS3 APIJSON RPCEMS APIFAQCustomer PortalChangelogMarket Data APIREST APIIndexesCreate indexCreate indexPOST /v1/indexesCreate indexapplication/jsontext/jsonapplication/*+jsonapplication/x-msgpackRequest Bodyindex_id string nullableGets or sets the index ID associated with the index.name string nullableGets or sets the name associated with the index.description string nullableGets or sets the descripion of the index.index_method string nullableGets or sets the index method.index_method_parameters object nullableGets or sets the parameters of the index method.property name* stringperiod_recalculation string nullableGets or sets the period recalculation of the index.visibility_public boolean nullableGets or sets the visibility public of the index.notify_emails string nullableGets or sets the notify emails of the index.components object[] nullableGets or sets the components of the index.Array [component_id string nullableevaluation_method string nullableevaluation_method_parameters object nullableproperty name* string]Request Bodyindex_id string nullableGets or sets the index ID associated with the index.name string nullableGets or sets the name associated with the index.description string nullableGets or sets the descripion of the index.index_method string nullableGets or sets the index method.index_method_parameters object nullableGets or sets the parameters of the index method.property name* stringperiod_recalculation string nullableGets or sets the period recalculation of the index.visibility_public boolean nullableGets or sets the visibility public of the index.notify_emails string nullableGets or sets the notify emails of the index.components object[] nullableGets or sets the components of the index.Array [component_id string nullableevaluation_method string nullableevaluation_method_parameters object nullableproperty name* string]Request Bodyindex_id string nullableGets or sets the index ID associated with the index.name string nullableGets or sets the name associated with the index.description string nullableGets or sets the descripion of the index.index_method string nullableGets or sets the index method.index_method_parameters object nullableGets or sets the parameters of the index method.property name* stringperiod_recalculation string nullableGets or sets the period recalculation of the index.visibility_public boolean nullableGets or sets the visibility public of the index.notify_emails string nullableGets or sets the notify emails of the index.components object[] nullableGets or sets the components of the index.Array [component_id string nullableevaluation_method string nullableevaluation_method_parameters object nullableproperty name* string]Request Bodyindex_id string nullableGets or sets the index ID associated with the index.name string nullableGets or sets the name associated with the index.description string nullableGets or sets the descripion of the index.index_method string nullableGets or sets the index method.index_method_parameters object nullableGets or sets the parameters of the index method.property name* stringperiod_recalculation string nullableGets or sets the period recalculation of the index.visibility_public boolean nullableGets or sets the visibility public of the index.notify_emails string nullableGets or sets the notify emails of the index.components object[] nullableGets or sets the components of the index.Array [component_id string nullableevaluation_method string nullableevaluation_method_parameters object nullableproperty name* string]Responses201successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Schemaindex_id string nullablestatus string nullable{ ""index_id"": ""string"", ""status"": ""string""}SchemaExample (from schema)Schemaindex_id string nullablestatus string nullable{ ""index_id"": ""string"", ""status"": ""string""}SchemaExample (from schema)Schemaindex_id string nullablestatus string nullable{ ""index_id"": ""string"", ""status"": ""string""}SchemaExample (from schema)Schemaindex_id string nullablestatus string nullable{ ""index_id"": ""string"", ""status"": ""string""}Loading...Was this section helpful?12345PreviousIndexesNextGet index dataCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/indexes/create-index)"
126,i.io market data rest api order book l3 order book l 3 current order book by symbol id,"i.io market data rest api order book l3 order book l 3 current order book by symbol id.   Current order book by symbol_id | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcvOrder BookOrder Book L3 Current order book by symbol_id Current order booksQuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIOrder Book L3 Current order book by symbol_id Current order book by symbol_idGET /v1/orderbooks3/:symbol_id/currentRetrieves the current order book for the specified symbol.Path Parameterssymbol_id string requiredThe symbol ID (from the Metadata -> Symbols)Query Parameterslimit_levels int32The maximum number of levels to include in the response.Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemasymbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the order book.time_coinapi date-timeThe CoinAPI time when the order book was received.asks nullableThe asks made by market makers.bids nullableThe bids made by market makers.{ ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.268Z"", ""time_coinapi"": ""2024-07-16T12:55:05.268Z""}{ ""symbol_id"": ""COINBASE_SPOT_BCH_USD"", ""time_exchange"": ""2020-08-27T10:28:35.6111130Z"", ""time_coinapi"": ""2020-08-27T10:28:35.6766461Z"", ""asks"": [ {  ""id"": ""3c5e789c-4c84-448a-9c5d-50532ea1ccbb"",  ""price"": 272.89,  ""size"": 1 }, {  ""id"": ""c64a76ba-5107-4c1b-b788-271ee88df318"",  ""price"": 272.9,  ""size"": 18 } ], ""bids"": [ {  ""id"": ""100d5004-f4e0-4e92-a571-392403d5b073"",  ""price"": 272.83,  ""size"": 18 }, {  ""id"": ""0889cf06-4a9d-4519-98e6-fac5dcb7afbf"",  ""price"": 272.83,  ""size"": 0.64185083 } ]}SchemaExample (from schema)Example responseSchemasymbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the order book.time_coinapi date-timeThe CoinAPI time when the order book was received.asks nullableThe asks made by market makers.bids nullableThe bids made by market makers.{ ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.268Z"", ""time_coinapi"": ""2024-07-16T12:55:05.268Z""}{ ""symbol_id"": ""COINBASE_SPOT_BCH_USD"", ""time_exchange"": ""2020-08-27T10:28:35.6111130Z"", ""time_coinapi"": ""2020-08-27T10:28:35.6766461Z"", ""asks"": [ {  ""id"": ""3c5e789c-4c84-448a-9c5d-50532ea1ccbb"",  ""price"": 272.89,  ""size"": 1 }, {  ""id"": ""c64a76ba-5107-4c1b-b788-271ee88df318"",  ""price"": 272.9,  ""size"": 18 } ], ""bids"": [ {  ""id"": ""100d5004-f4e0-4e92-a571-392403d5b073"",  ""price"": 272.83,  ""size"": 18 }, {  ""id"": ""0889cf06-4a9d-4519-98e6-fac5dcb7afbf"",  ""price"": 272.83,  ""size"": 0.64185083 } ]}SchemaExample (from schema)Example responseSchemasymbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the order book.time_coinapi date-timeThe CoinAPI time when the order book was received.asks nullableThe asks made by market makers.bids nullableThe bids made by market makers.{ ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.268Z"", ""time_coinapi"": ""2024-07-16T12:55:05.268Z""}{ ""symbol_id"": ""COINBASE_SPOT_BCH_USD"", ""time_exchange"": ""2020-08-27T10:28:35.6111130Z"", ""time_coinapi"": ""2020-08-27T10:28:35.6766461Z"", ""asks"": [ {  ""id"": ""3c5e789c-4c84-448a-9c5d-50532ea1ccbb"",  ""price"": 272.89,  ""size"": 1 }, {  ""id"": ""c64a76ba-5107-4c1b-b788-271ee88df318"",  ""price"": 272.9,  ""size"": 18 } ], ""bids"": [ {  ""id"": ""100d5004-f4e0-4e92-a571-392403d5b073"",  ""price"": 272.83,  ""size"": 18 }, {  ""id"": ""0889cf06-4a9d-4519-98e6-fac5dcb7afbf"",  ""price"": 272.83,  ""size"": 0.64185083 } ]}SchemaExample (from schema)Example responseSchemasymbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the order book.time_coinapi date-timeThe CoinAPI time when the order book was received.asks nullableThe asks made by market makers.bids nullableThe bids made by market makers.{ ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.268Z"", ""time_coinapi"": ""2024-07-16T12:55:05.268Z""}{ ""symbol_id"": ""COINBASE_SPOT_BCH_USD"", ""time_exchange"": ""2020-08-27T10:28:35.6111130Z"", ""time_coinapi"": ""2020-08-27T10:28:35.6766461Z"", ""asks"": [ {  ""id"": ""3c5e789c-4c84-448a-9c5d-50532ea1ccbb"",  ""price"": 272.89,  ""size"": 1 }, {  ""id"": ""c64a76ba-5107-4c1b-b788-271ee88df318"",  ""price"": 272.9,  ""size"": 18 } ], ""bids"": [ {  ""id"": ""100d5004-f4e0-4e92-a571-392403d5b073"",  ""price"": 272.83,  ""size"": 18 }, {  ""id"": ""0889cf06-4a9d-4519-98e6-fac5dcb7afbf"",  ""price"": 272.83,  ""size"": 0.64185083 } ]}Loading...Was this section helpful?12345PreviousOrder Book L3Next Current order booksCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/order-book-l3/order-book-l-3-current-order-book-by-symbol-id)"
127,i.io faq general Can I have multiple API keys in one account,"i.io faq general Can I have multiple API keys in one account.   Can I have multiple API keys in one account? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralCan I have multiple API keys in one account?Can I have multiple API keys in one account?Yes, it's possible that they have multiple API keys for the same subscription. In the Customer Portal, navigate to Subscriptions > APIKEYS > CREATE APIKEY It is important to note that the existence of each additional API Key for a subscription (enabled or disabled) above the plan quota is charged 1 USD per day, with a minimum of one dayThe multiple API keys can be limited via the configuration of the specific API key, for example, the specific API key newly created cannot overage or limit the specific API key to X number of requests to avoid causing issues for other keys. Increased security is one of the main benefits of having numerous API keys. Each key acts as an access point and particular identifier. Users can compartmentalize their access by making unique keys, which lowers the likelihood that a security breach will have a negative effect. The remaining keys are unaffected if one key is hacked, protecting sensitive information and reducing risks.Was this section helpful?12345PreviousCan I get the XML or CSV instead of the JSON output format?NextCan I have multiple subscriptions?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/Can-I-have-multiple-API-keys-in-one-account)"
128,i.io market data websocket messages,"i.io market data websocket messages.   Messages | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1EndpointsGeneralMessagesWebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideWebSocket API V1MessagesOn this pageMessagesTrades IN​Trade message JSON is structured like this:{ ""type"": ""trade"", ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""sequence"": 2323346, ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""uuid"": ""770C7A3B-7258-4441-8182-83740F3E2457"", ""price"": 770.000000000, ""size"": 0.050000000, ""taker_side"": ""BUY""}Trade message is sent for every executed transaction (orderbook match).Message variables​VariableDescriptiontypeMessage type, always tradesymbol_idOur symbol identifier, format documented heresequenceSequence number per pair (type, symbol_id) which is valid only for the lifespan of the connection.time_exchangeTime of trade reported by exchangetime_coinapiTime when coinapi first received trade from exchangeuuidOur unique trade identifier in form of UUIDv4pricePrice of the transactionsizeBase asset amount traded in transaction (if a value is equal to zero, then transaction price just marking a data point eg. in the index time series)taker_sideAggressor side of the transaction (BUY/SELL/BUY_ESTIMATED/SELL_ESTIMATED/UNKNOWN)Possible taker_side values​If exchange has not reported who the aggressor side of the transaction was, then we will classNameify who it most probably was based on current market view.taker_sideDescriptionBUYExchange has reported that transaction aggressor was buyingSELLExchange has reported that transaction aggressor was sellingBUY_ESTIMATEDExchange has not reported transaction aggressor, we estimated that more likely it was buyingSELL_ESTIMATEDExchange has not reported transaction aggressor, we estimated that more likely it was sellingUNKNOWNExchange has not reported transaction aggressor and we have not estimated who it wastipTo classNameify who the aggressor of the transaction was, we use a proprietary algorithm that extends the method described in the paper ""Inferring trade direction from intraday data (1991) by Lee and Ready""Quotes IN​Quote message JSON is structured like this:{ ""type"": ""quote"", ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""sequence"": 2323346, ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770.000000000, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124}Quote message is sent for each update on orderbook first best bid or ask level.Message variables​VariableDescriptiontypeMessage type, always quotesymbol_idOur symbol identifier, format documented here.sequenceSequence number per pair (type, symbol_id) which is valid only for the lifespan of the connection.time_exchangeExchange time of orderbooktime_coinapiCoinAPI time when orderbook received from exchangeask_priceBest asking priceask_sizeVolume resting on best ask (if a value is equal to zero then size is unknown)bid_priceBest bidding pricebid_sizeVolume resting on best bid (if a value is equal to zero then size is unknown)Orderbook L2 (Full) IN​A Book message is sent for each snapshot or update of the order book. After subscription to this data type is initialized, we immediately start delivering updates to the order book and at least one snapshot will be provided as soon as possible with the nearest update of the book. Book message represents total ammount of bids and asks aggregated by price level.{ ""type"": ""book"", ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""sequence"": 2323346, ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""is_snapshot"": true, ""asks"": [ {  ""price"": 456.35,  ""size"": 123 }, {  ""price"": 456.36,  ""size"": 23 }, ... cut ... ], ""bids"": [ {  ""price"": 456.10,  ""size"": 42 }, {  ""price"": 456.09,  ""size"": 5 }, ... cut ... ]}Message variables​VariableDescriptiontypeMessage type, always booksymbol_idOur symbol identifier, format documented here.sequenceSequence number per pair (type, symbol_id) which is valid only for the lifespan of the connection.time_exchangeExchange time of orderbooktime_coinapiCoinAPI time when orderbook received from exchangeis_snapshotIs message a snapshot? If true then all bid and ask levels are listed, otherwise only changed since the last message.asksAll ask levels for snapshot message, otherwise only changed ask levels since the last message. Data will be in order from the best to the worst price.bidsAll bid levels for snapshot message, otherwise only changed bid levels since the last message. Data will be in order from the best to the worst price.pricePrice of bid/asksizeVolume resting on bid/ask level in base amountOrderbook L2 (max 2x5) IN​A Book5 message contain first 5 best bid or ask levels. infoUpdates in this data type can be aggregated, e.g., 1 update every 100ms or 1s if the book actually changed on the level covered. Aggregation time depends on the connection bandwidth. Please subscribe to the full order book stream if you need all updates.{ ""type"": ""book5"", ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""sequence"": 2323346, ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""asks"": [ {  ""price"": 456.35,  ""size"": 123 }, {  ""price"": 456.36,  ""size"": 23 }, ... cut ... ], ""bids"": [ {  ""price"": 456.10,  ""size"": 42 }, {  ""price"": 456.09,  ""size"": 5 }, ... cut ... ]}Message variables​VariableDescriptiontypeMessage type, always book5symbol_idOur symbol identifier, format documented here.sequenceSequence number per pair (type, symbol_id) which is valid only for the lifespan of the connection.time_exchangeExchange time of orderbooktime_coinapiCoinAPI time when orderbook received from exchangeasksBest 5 ask levels in order from best to worst.bidsBest 5 bid levels in order from best to worst.pricePrice of bid/asksizeVolume resting on bid/ask level in base amountOrderbook L2 (max 2x20) IN​A Book20 message contain first 20 best bid or ask levels. infoUpdates in this data type can be aggregated, e.g., 1 update every 100ms or 1s if the book actually changed on the level covered. Aggregation time depends on the connection bandwidth. Please subscribe to the full order book stream if you need all updates.{ ""type"": ""book20"", ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""sequence"": 2323346, ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""asks"": [ {  ""price"": 456.35,  ""size"": 123 }, {  ""price"": 456.36,  ""size"": 23 }, ... cut ... ], ""bids"": [ {  ""price"": 456.10,  ""size"": 42 }, {  ""price"": 456.09,  ""size"": 5 }, ... cut ... ]}Message variables​VariableDescriptiontypeMessage type, always book20symbol_idOur symbol identifier, format documented here.sequenceSequence number per pair (type, symbol_id) which is valid only for the lifespan of the connection.time_exchangeExchange time of orderbooktime_coinapiCoinAPI time when orderbook received from exchangeasksBest 20 ask levels in order from best to worst.bidsBest 20 bid levels in order from best to worst.pricePrice of bid/asksizeVolume resting on bid/ask level in base amountOrderbook L2 (max 2x50) IN​A Book50 message contain first 50 best bid or ask levels. infoUpdates in this data type can be aggregated, e.g., 1 update every 100ms or 1s if the book actually changed on the level covered. Aggregation time depends on the connection bandwidth. Please subscribe to the full order book stream if you need all updates.{ ""type"": ""book50"", ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""sequence"": 2323346, ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""asks"": [ {  ""price"": 456.35,  ""size"": 123 }, {  ""price"": 456.36,  ""size"": 23 }, ... cut ... ], ""bids"": [ {  ""price"": 456.10,  ""size"": 42 }, {  ""price"": 456.09,  ""size"": 5 }, ... cut ... ]}Message variables​VariableDescriptiontypeMessage type, always book50symbol_idOur symbol identifier, format documented here.sequenceSequence number per pair (type, symbol_id) which is valid only for the lifespan of the connection.time_exchangeExchange time of orderbooktime_coinapiCoinAPI time when orderbook received from exchangeasksBest 50 ask levels in order from best to worst.bidsBest 50 bid levels in order from best to worst.pricePrice of bid/asksizeVolume resting on bid/ask level in base amountOrderbook L3 (Full) IN​A book_l3 message is sent for each snapshot or update of the order book in the level 3 format (order-by-order). After subscription to this data type is initialized, we immediately start delivering updates to the order book and at least one snapshot will be provided as soon as possible with the nearest update of the book. Book L3 does not aggregate any data. Every ask and bid corresponds to passive order with information on the price and size of that order. The id can identify any order.infoIf the data source is providing the maximum resoluiont of the order book on level 2 then this data type will fallback to the Level 2, in that case the Order ID's will be null or not provided. You should treat Order without Id as Level 2 aggregated entry in the price queue.{ ""type"": ""book_l3"" ""symbol_id"": ""COINBASE_SPOT_BCH_USD"", ""sequence"": 2323346, ""time_exchange"": ""2020-08-26T12:36:04.3464706Z"", ""time_coinapi"": ""2020-08-26T12:36:04.2807750Z"", ""is_snapshot"": false, ""asks"": [ {  ""id"": ""520269d4-c085-47ed-8825-6d787af90800"",  ""price"": 273.01,  ""size"": 1.81940502,  ""update_type"":""ADD"" }, {  ""id"": ""0ac891c7-8360-462c-8d9a-d8b217d3fca2"",  ""price"": 273.02,  ""size"": 1.0,  ""update_type"":""DELETE"" }, ... cut ... ], ""bids"": [ {  ""id"": ""6340ec1e-8be8-404e-b9a4-a14120ec179e"",  ""price"": 272.94,  ""size"": 1.81940502,  ""update_type"":""UPDATE"" }, {  ""id"": ""7eaaa899-089f-4308-9fa2-e33737ae36ee"",  ""price"": 272.96,  ""size"": 1.85989855,  ""update_type"":""DELETE"" }, ... cut ... ]}Message variables​VariableDescriptiontypeMessage type, always book_l3symbol_idOur symbol identifier, format documented here.sequenceSequence number per pair (type, symbol_id) which is valid only for the lifespan of the connection.time_exchangeExchange time of orderbooktime_coinapiCoinAPI time when orderbook received from exchangeis_snapshotIs message a snapshot? If true then all bid and ask levels are listed, otherwise only changed since the last messageasksAll ask levels for snapshot message, otherwise only changed ask levels since the last message. Data will be in order from the best to the worst price.bidsAll bid levels for snapshot message, otherwise only changed bid levels since the last message. Data will be in order from the best to the worst price.idOrder identifierpricePrice of bid/asksizeBid/ask base asset amountupdate_typeType of update messagePossible update_type values​The snapshot message represents the initial collection of the orders in the order book. Further updates are modifying this collection. update_type determines the type of update for the order. Please note that the snapshot message has no defined update_type.update_typeDescriptionADDAdd order to the price queue.UPDATEUpdate the order size in the price queue.SUBTRACTSubtract the order size in the price queue.DELETEDelete the order from the price queue.MATCHSubtract the order size in the price queue (same as SUBTRACT but caused by the match).OHLCV IN​A OHLCV message is sent on the between 1SEC and 1DAY. We are sending message when the ohlcv period is closed (we saw timestamp belonging to the new period) or every 5 seconds if ohlcv period was updated but not yet closed. { ""type"": ""ohlcv"", ""symbol_id"": ""BITSTAMP_SPOT_XRP_USD"", ""sequence"": 511, ""time_period_start"": ""2019-06-11T15:26:00.0000000Z"", ""time_period_end"": ""2019-06-11T15:27:00.0000000Z"", ""time_open"": ""2019-06-11T15:26:07.0000000Z"", ""time_close"": ""2019-06-11T15:26:36.0000000Z"", ""price_open"": 0.3865, ""price_high"": 0.38706, ""price_low"": 0.3865, ""price_close"": 0.38706, ""volume_traded"": 1500.31419084, ""trades_count"": 5}Message variables​VariableDescriptiontypeMessage type, always ohlcvsymbol_idOur symbol identifier, format documented here.sequenceSequence number per pair (type, symbol_id) which is valid only for the lifespan of the connection.period_idIdentifier of timeseries period full list heretime_period_startPeriod starting time (range left inclusive)time_period_endPeriod ending time (range right exclusive)time_openTime of first trade inside period rangetime_closeTime of last trade inside period rangeprice_openFirst trade price inside period rangeprice_highHighest traded price inside period rangeprice_lowLowest traded price inside period rangeprice_closeLast trade price inside period rangevolume_tradedCumulative base amount traded inside period rangetrades_countAmount of trades executed inside period rangeAsset IN​A asset message is sent periodically to update last volume and other information. Feed is useful to keep track of the current assets metadata. Subscription to this message type triggers delivery of the snapshot.{ ""type"":""asset"", ""asset_id"":""FAKT"", ""name"":""FAKT"", ""type_is_crypto"":1, ""data_quote_start"":""2022-06-06T13:40:56.7147296Z"", ""data_quote_end"":""2022-11-09T00:00:00.0000000Z"", ""data_orderbook_start"":""2022-06-23T00:00:00.0000000Z"", ""data_orderbook_end"":""2022-11-09T00:00:00.0000000Z"", ""data_trade_start"":""2022-06-06T13:33:33.0000000Z"", ""data_trade_end"":""2022-11-09T00:00:00.0000000Z"", ""data_symbols_count"":6, ""volume_1hrs_usd"":577.30, ""volume_1day_usd"":23801.27, ""volume_1mth_usd"":559053.26, ""price_usd"":0.0189885151556305438646080756,}Message variables​VariableDescriptiontypeMessage type, always assetasset_idIdentifier of asset (full list available here)...For other fields please reffer to the asset model documented hereExchange IN​A exchange message is sent periodically to update last volume and other information. Feed is useful to keep track of the current exchanges metadata. Subscription to this message type triggers delivery of the snapshot.{ ""type"":""exchange"", ""exchange_id"":""BITMEX"", ""website"":""https://www.bitmex.com/"", ""name"":""BitMEX"", ""data_start"":""2014-11-22"", ""data_end"":""2022-11-09"", ""data_quote_start"":""2014-11-22T16:58:47.8820780Z"", ""data_quote_end"":""2022-11-09T00:00:00.0000000Z"", ""data_orderbook_start"":""2014-11-22T16:58:47.8820780Z"", ""data_orderbook_end"":""2022-11-09T00:00:00.0000000Z"", ""data_trade_start"":""2014-11-22T17:51:38.9484710Z"", ""data_trade_end"":""2022-11-09T00:00:00.0000000Z"", ""data_symbols_count"":411}Message variables​VariableDescriptiontypeMessage type, always exchangeexchange_idIdentifier of exchange (full list available here)...For other fields please reffer to the exchange model documented hereSymbol IN​A symbol message is sent periodically to update last volume and other information. Feed is useful to keep track of the current symbols metadata. Subscription to this message type triggers delivery of the snapshot.{ ""type"": ""symbol"", ""symbol_id"": ""KRAKENFTS_PERP_BTC_USD"", ""exchange_id"": ""KRAKENFTS"", ""symbol_type"": ""PERPETUAL"", ""asset_id_base"": ""BTC"", ""asset_id_quote"": ""USD"", ""asset_id_unit"": ""USD"", ""future_contract_unit"": 1.000000000, ""future_contract_unit_asset"": ""USD"", ""data_start"": ""2019-10-30"", ""data_end"": ""2021-03-03"", ""data_quote_start"": ""2019-10-30T16:53:10.3262317Z"", ""data_quote_end"": ""2021-03-03T13:51:45.6970000Z"", ""data_orderbook_start"": ""2019-10-30T16:53:10.3262317Z"", ""data_orderbook_end"": ""2020-08-05T14:37:32.0080000Z"", ""data_trade_start"": ""2019-10-30T16:38:52.1620000Z"", ""data_trade_end"": ""2021-03-03T13:46:25.7810000Z"", ""volume_1hrs"": 22897091.000000000, ""volume_1hrs_usd"": 22897091.00, ""volume_1day"": 459390289.000000000, ""volume_1day_usd"": 459390289.00, ""volume_1mth"": 12875674995.000000000, ""volume_1mth_usd"": 12875674995.00, ""price"": 51266, ""symbol_id_exchange"": ""pi_xbtusd"", ""asset_id_base_exchange"": ""XBT"", ""asset_id_quote_exchange"": ""USD"", ""price_precision"": 0.100000000, ""size_precision"": 1.000000000}Message variables​VariableDescriptiontypeMessage type, always symbolsymbol_idIdentifier of symbol (full list available here)...For other fields please reffer to the symbol model documented hereExchange Rate IN​Exchange rate is defined as (VWAP-24H) last 24 hour (rolling window over time) Volume Weighted Average Price across multiple data sources listed on our platform. We are selecting and managing the data sources that are used in the calculation based on multiple factors to provide data of highest quality.{ ""type"": ""exrate"", ""asset_id_base"": ""BTC"", ""asset_id_quote"": ""USD"", ""rate_type"":""BASE_ALL_CROSSES_TO_REF"", ""time"": ""2019-06-11T15:26:00.0000000Z"", ""rate"": 10065.0319541}Rate types​Rate can be several types, we explain what this mean in the table below.Rate typeDescriptionBASE_QUOTE_ISOLATEDTo produce rate value only assets in the asset_id_base or asset_id_quote quotes were used across multiple data sources.BASE_ALL_CROSSES_TO_REFTo produce the value of the rate all crosses that included asset_id_base across data sources were used and the value was quoted in the reference asset asset_id_quote. This means for example that BTC/USD component of the rate could be composed of the BTC/ETH * ETH/USDT * USDT/USD crosses. In this rate type, we want to express the true value of the asset by seeking markets that have volume/activity and not blinding ourselves only to the direct crosses that in the crypto industry will often not represent the majority of the price discovery activity. This is the same type of rate that is available through other of our APIs.BASE_AND_QUOTE_TO_REFThis is the same as BASE_ALL_CROSSES_TO_REF, but published only if your client subscribed to asset pair like BTC/EUR and the quote asset is not reference asset, then the rate is composed like this BTC/USD * USD/EUR in this example from the stream of BASE_ALL_CROSSES_TO_REF internally every 1 second.Message variables​VariableDescriptiontypeMessage type, always exrateasset_id_baseBase asset identifier. Full list available hereasset_id_quoteQuote asset identifier. Always USD.rate_typeRate calculation type it could be BASE_QUOTE_ISOLATED or BASE_ALL_CROSSES_TO_REF.timeTime of the exchange raterateExchange rate between pair of assets.infoThere is too much assets to deliver all crosses between them (assets_count^2), because of that if you need rate quoted in asset different than USD then you need to calculate it yourself on the client side eg. ""BTC/USD 1 / (USDC/USD) = BTC/USD USD/USDC = BTC/USDC""Reconnect IN​Reconnect message is sent by the server to all connected clients when the server will be restarted or shut down at the defined exact time included in the message content. After the period specified in message passes, the client must expect that the underlying WebSocket connection will be closed from the server-side. A new connection will automatically be established to a different server.The correct way of handling this event depends on the specific requirements of the integration, but we can define standard ways how to handle it:Wait for the connection to be closed and reconnectReconnect immediately after receiving the messageUpon receiving the message, establish a second connection, and subscribe to the same scope of data. When the first connection is disconnected, do not reconnect it and instead transparently switch the data streams between connections. This method requires more implementation as a transparent switch of the data stream must not break the sequence for streams published using the initial snapshot and update messages. To make sure the sequence is correct, the client must: (a) maintain a state by applying updates to snapshot or (b) buffer the data from the second connection and processing it at the transparent connection switch.Example JSON reconnect message is structured like this:{ ""type"": ""reconnect"" ""within_seconds"": 10, ""before_time"": ""2020-08-06T19:19:09.7035429Z"",}Message variables​VariableDescriptiontypeMessage type, always reconnectwithin_secondsSeconds within which reconnection should be performed.before_timeTime before which reconnection should be performed.Heartbeat IN​Heartbeat message JSON is structured like this:{ ""type"": ""hearbeat""}Heartbeat message is sent to you every time there is one second of silence in communication between us, if you agreed on this feature in Hello message.tipWebSocket working on TCP protocol which doesn’t have the feature indicating that the connection is broken without trying exchange data over it. As you will not be actively sending messages to us, with Heartbeat you can distinguish a situation where there are no market data updates for you (Heartbeat is delivered but no market data updates) or connection between us is broken (Heartbeat and market data updates are not delivered). Was this section helpful?12345PreviousGeneralNextWebSocket API DSTrades INMessage variablesPossible taker_side valuesQuotes INMessage variablesOrderbook L2 (Full) INMessage variablesOrderbook L2 (max 2x5) INMessage variablesOrderbook L2 (max 2x20) INMessage variablesOrderbook L2 (max 2x50) INMessage variablesOrderbook L3 (Full) INMessage variablesPossible update_type valuesOHLCV INMessage variablesAsset INMessage variablesExchange INMessage variablesSymbol INMessage variablesExchange Rate INRate typesMessage variablesReconnect INMessage variablesHeartbeat INCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/websocket/messages)"
129,i.io faq account I want to change my account name,"i.io faq account I want to change my account name.   I want to change my account's name? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountHow I can update my credit card / billing information?How can I change my CoinAPI account's email address?How can I get an invoice or receipt?How do I make an account?I want to change my account's name?Managing Team MembersCan I add other users to my account?How do I get an additional API key?APIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQCustomer AccountI want to change my account's name?I want to change my account's name?Customers will have the option to modify the name associated with their account by utilizing the Customer Portal (https://customerportal.coinapi.io/login). Once you have successfully logged into your account, simply navigate to Subscriptions > Manage Subscriptions > Update Information (Under Billing Information). By accessing this section, you will be presented with the option to alter the account's name to your desired preference.It is important to note that this change will not only reflect the updated name within the Customer Portal but also extend its impact to future invoices generated for your subscription. This means that once the name change is implemented, all forthcoming invoices issued in relation to your subscription will bear the newly updated name.Was this section helpful?12345PreviousHow do I make an account?NextManaging Team MembersCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/account/I-want-to-change-my-account-name)"
130,i.io flat files api data types link to trades doc,i.io flat files api data types link to trades doc.   Page Not Found | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyPage Not FoundWe could not find what you were looking for.Please contact the owner of the site that linked you to the original URL and let them know their link is broken.Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/flat-files-api/data-types/link-to-trades-doc)
131,i.io naas api bitcoin Methods abortrescan x,"i.io naas api bitcoin Methods abortrescan x.   abortrescan | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsabortrescanOn this pageabortrescanOverview​The 'abortrescan' Stops current wallet rescan triggered by an RPC call, e.g. by an importprivkey call.Request​shellcsharpphppythonjavascriptgorubywget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""abortrescan"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""abortrescan\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""abortrescan"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({""jsonrpc"": ""2.0"",""method"": ""abortrescan"",""params"": [],""id"": 1})headers = {'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY','Content-Type': 'application/json','accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""abortrescan"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""abortrescan"",""params"": [],""id"":1}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"")req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({""jsonrpc"": ""2.0"",""method"": ""abortrescan"",""params"": [],""id"": 1})response = https.request(request)puts response.read_bodyResponse​{ ""result"": null, ""error"": { ""code"": -18, ""message"": ""No wallet is loaded. Load a wallet using loadwallet or create a new one with createwallet. (Note: A default wallet is no longer automatically created)"" }, ""id"": 1}Was this section helpful?12345PreviousabandontransactionNextaddnodeOverviewRequestResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/abortrescan_x)"
132,i.io faq billing and subscriptions Can I cancel my subscription anytime,"i.io faq billing and subscriptions Can I cancel my subscription anytime.   Can I cancel my subscription anytime? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIBilling and SubscriptionsCan I cancel my subscription anytime?Can I still use my API key if I cancel my subscription?How to reactivate my canceled subscription?How to subscribe to the API?How to upgrade/downgrade my subscription?Security and PrivacyCustomer PortalChangelogFAQBilling and SubscriptionsCan I cancel my subscription anytime?Can I cancel my subscription anytime?Yes, as stated on our legal terms under Customer Agreement section 2.4:""You may terminate your initial Order of the applicable Software or Cloud Services under this Agreement, for no reason or any reason, by providing notice of termination. At your request (which may be made through your Account or by contacting us), we may disable the license key that allowed the Software to operate or disable access to the Cloud Services. All fees paid are non-refundable.""More information can be found here: https://www.coinapi.io/legalWas this section helpful?12345PreviousBilling and SubscriptionsNextCan I still use my API key if I cancel my subscription?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/billing-and-subscriptions/Can-I-cancel-my-subscription-anytime)"
133,i.io market data websocket ds messages,"i.io market data websocket ds messages.   Messages | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1WebSocket API DSEndpointsGeneralMessagesJSON RPCFIX APIHow-to guidesPerformance Testing GuideWebSocket API DSMessagesOn this pageMessagesTrades IN​Trade message JSON is structured like this:{ ""type"": ""trade"", ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""sequence"": 2323346, ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""uuid"": ""770C7A3B-7258-4441-8182-83740F3E2457"", ""price"": 770.000000000, ""size"": 0.050000000, ""taker_side"": ""BUY""}Trade message is sent for every executed transaction (orderbook match).Message variables​VariableDescriptiontypeMessage type, always tradesymbol_idOur symbol identifier, format documented heresequenceSequence number per pair (type, symbol_id) which is valid only for the lifespan of the connection.time_exchangeTime of trade reported by exchangetime_coinapiTime when coinapi first received trade from exchangeuuidOur unique trade identifier in form of UUIDv4pricePrice of the transactionsizeBase asset amount traded in transaction (if a value is equal to zero, then transaction price just marking a data point eg. in the index time series)taker_sideAggressor side of the transaction (BUY/SELL/BUY_ESTIMATED/SELL_ESTIMATED/UNKNOWN)Possible taker_side values​If exchange has not reported who the aggressor side of the transaction was, then we will classNameify who it most probably was based on current market view.taker_sideDescriptionBUYExchange has reported that transaction aggressor was buyingSELLExchange has reported that transaction aggressor was sellingBUY_ESTIMATEDExchange has not reported transaction aggressor, we estimated that more likely it was buyingSELL_ESTIMATEDExchange has not reported transaction aggressor, we estimated that more likely it was sellingUNKNOWNExchange has not reported transaction aggressor and we have not estimated who it wastipTo classNameify who the aggressor of the transaction was, we use a proprietary algorithm that extends the method described in the paper ""Inferring trade direction from intraday data (1991) by Lee and Ready""Quotes IN​Quote message JSON is structured like this:{ ""type"": ""quote"", ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""sequence"": 2323346, ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770.000000000, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124}Quote message is sent for each update on orderbook first best bid or ask level.Message variables​VariableDescriptiontypeMessage type, always quotesymbol_idOur symbol identifier, format documented here.sequenceSequence number per pair (type, symbol_id) which is valid only for the lifespan of the connection.time_exchangeExchange time of orderbooktime_coinapiCoinAPI time when orderbook received from exchangeask_priceBest asking priceask_sizeVolume resting on best ask (if a value is equal to zero then size is unknown)bid_priceBest bidding pricebid_sizeVolume resting on best bid (if a value is equal to zero then size is unknown)Orderbook L2 (Full) IN​A Book message is sent for each snapshot or update of the order book. After subscription to this data type is initialized, we immediately start delivering updates to the order book and at least one snapshot will be provided as soon as possible with the nearest update of the book. Book message represents total ammount of bids and asks aggregated by price level.{ ""type"": ""book"", ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""sequence"": 2323346, ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""is_snapshot"": true, ""asks"": [ {  ""price"": 456.35,  ""size"": 123 }, {  ""price"": 456.36,  ""size"": 23 }, ... cut ... ], ""bids"": [ {  ""price"": 456.10,  ""size"": 42 }, {  ""price"": 456.09,  ""size"": 5 }, ... cut ... ]}Message variables​VariableDescriptiontypeMessage type, always booksymbol_idOur symbol identifier, format documented here.sequenceSequence number per pair (type, symbol_id) which is valid only for the lifespan of the connection.time_exchangeExchange time of orderbooktime_coinapiCoinAPI time when orderbook received from exchangeis_snapshotIs message a snapshot? If true then all bid and ask levels are listed, otherwise only changed since the last message.asksAll ask levels for snapshot message, otherwise only changed ask levels since the last message. Data will be in order from the best to the worst price.bidsAll bid levels for snapshot message, otherwise only changed bid levels since the last message. Data will be in order from the best to the worst price.pricePrice of bid/asksizeVolume resting on bid/ask level in base amountOrderbook L2 (max 2x5) IN​A Book5 message contain first 5 best bid or ask levels. infoUpdates in this data type can be aggregated, e.g., 1 update every 100ms or 1s if the book actually changed on the level covered. Aggregation time depends on the connection bandwidth. Please subscribe to the full order book stream if you need all updates.{ ""type"": ""book5"", ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""sequence"": 2323346, ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""asks"": [ {  ""price"": 456.35,  ""size"": 123 }, {  ""price"": 456.36,  ""size"": 23 }, ... cut ... ], ""bids"": [ {  ""price"": 456.10,  ""size"": 42 }, {  ""price"": 456.09,  ""size"": 5 }, ... cut ... ]}Message variables​VariableDescriptiontypeMessage type, always book5symbol_idOur symbol identifier, format documented here.sequenceSequence number per pair (type, symbol_id) which is valid only for the lifespan of the connection.time_exchangeExchange time of orderbooktime_coinapiCoinAPI time when orderbook received from exchangeasksBest 5 ask levels in order from best to worst.bidsBest 5 bid levels in order from best to worst.pricePrice of bid/asksizeVolume resting on bid/ask level in base amountOrderbook L2 (max 2x20) IN​A Book20 message contain first 20 best bid or ask levels. infoUpdates in this data type can be aggregated, e.g., 1 update every 100ms or 1s if the book actually changed on the level covered. Aggregation time depends on the connection bandwidth. Please subscribe to the full order book stream if you need all updates.{ ""type"": ""book20"", ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""sequence"": 2323346, ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""asks"": [ {  ""price"": 456.35,  ""size"": 123 }, {  ""price"": 456.36,  ""size"": 23 }, ... cut ... ], ""bids"": [ {  ""price"": 456.10,  ""size"": 42 }, {  ""price"": 456.09,  ""size"": 5 }, ... cut ... ]}Message variables​VariableDescriptiontypeMessage type, always book20symbol_idOur symbol identifier, format documented here.sequenceSequence number per pair (type, symbol_id) which is valid only for the lifespan of the connection.time_exchangeExchange time of orderbooktime_coinapiCoinAPI time when orderbook received from exchangeasksBest 20 ask levels in order from best to worst.bidsBest 20 bid levels in order from best to worst.pricePrice of bid/asksizeVolume resting on bid/ask level in base amountOrderbook L2 (max 2x50) IN​A Book50 message contain first 50 best bid or ask levels. infoUpdates in this data type can be aggregated, e.g., 1 update every 100ms or 1s if the book actually changed on the level covered. Aggregation time depends on the connection bandwidth. Please subscribe to the full order book stream if you need all updates.{ ""type"": ""book50"", ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""sequence"": 2323346, ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""asks"": [ {  ""price"": 456.35,  ""size"": 123 }, {  ""price"": 456.36,  ""size"": 23 }, ... cut ... ], ""bids"": [ {  ""price"": 456.10,  ""size"": 42 }, {  ""price"": 456.09,  ""size"": 5 }, ... cut ... ]}Message variables​VariableDescriptiontypeMessage type, always book50symbol_idOur symbol identifier, format documented here.sequenceSequence number per pair (type, symbol_id) which is valid only for the lifespan of the connection.time_exchangeExchange time of orderbooktime_coinapiCoinAPI time when orderbook received from exchangeasksBest 50 ask levels in order from best to worst.bidsBest 50 bid levels in order from best to worst.pricePrice of bid/asksizeVolume resting on bid/ask level in base amountOrderbook L3 (Full) IN​A book_l3 message is sent for each snapshot or update of the order book in the level 3 format (order-by-order). After subscription to this data type is initialized, we immediately start delivering updates to the order book and at least one snapshot will be provided as soon as possible with the nearest update of the book. Book L3 does not aggregate any data. Every ask and bid corresponds to passive order with information on the price and size of that order. The id can identify any order.infoIf the data source is providing the maximum resoluiont of the order book on level 2 then this data type will fallback to the Level 2, in that case the Order ID's will be null or not provided. You should treat Order without Id as Level 2 aggregated entry in the price queue.{ ""type"": ""book_l3"" ""symbol_id"": ""COINBASE_SPOT_BCH_USD"", ""sequence"": 2323346, ""time_exchange"": ""2020-08-26T12:36:04.3464706Z"", ""time_coinapi"": ""2020-08-26T12:36:04.2807750Z"", ""is_snapshot"": false, ""asks"": [ {  ""id"": ""520269d4-c085-47ed-8825-6d787af90800"",  ""price"": 273.01,  ""size"": 1.81940502,  ""update_type"":""ADD"" }, {  ""id"": ""0ac891c7-8360-462c-8d9a-d8b217d3fca2"",  ""price"": 273.02,  ""size"": 1.0,  ""update_type"":""DELETE"" }, ... cut ... ], ""bids"": [ {  ""id"": ""6340ec1e-8be8-404e-b9a4-a14120ec179e"",  ""price"": 272.94,  ""size"": 1.81940502,  ""update_type"":""UPDATE"" }, {  ""id"": ""7eaaa899-089f-4308-9fa2-e33737ae36ee"",  ""price"": 272.96,  ""size"": 1.85989855,  ""update_type"":""DELETE"" }, ... cut ... ]}Message variables​VariableDescriptiontypeMessage type, always book_l3symbol_idOur symbol identifier, format documented here.sequenceSequence number per pair (type, symbol_id) which is valid only for the lifespan of the connection.time_exchangeExchange time of orderbooktime_coinapiCoinAPI time when orderbook received from exchangeis_snapshotIs message a snapshot? If true then all bid and ask levels are listed, otherwise only changed since the last messageasksAll ask levels for snapshot message, otherwise only changed ask levels since the last message. Data will be in order from the best to the worst price.bidsAll bid levels for snapshot message, otherwise only changed bid levels since the last message. Data will be in order from the best to the worst price.idOrder identifierpricePrice of bid/asksizeBid/ask base asset amountupdate_typeType of update messagePossible update_type values​The snapshot message represents the initial collection of the orders in the order book. Further updates are modifying this collection. update_type determines the type of update for the order. Please note that the snapshot message has no defined update_type.update_typeDescriptionADDAdd order to the price queue.UPDATEUpdate the order size in the price queue.SUBTRACTSubtract the order size in the price queue.DELETEDelete the order from the price queue.MATCHSubtract the order size in the price queue (same as SUBTRACT but caused by the match).Reconnect IN​Reconnect message is sent by the server to all connected clients when the server will be restarted or shut down at the defined exact time included in the message content. After the period specified in message passes, the client must expect that the underlying WebSocket connection will be closed from the server-side. A new connection will automatically be established to a different server.The correct way of handling this event depends on the specific requirements of the integration, but we can define standard ways how to handle it:Wait for the connection to be closed and reconnectReconnect immediately after receiving the messageUpon receiving the message, establish a second connection, and subscribe to the same scope of data. When the first connection is disconnected, do not reconnect it and instead transparently switch the data streams between connections. This method requires more implementation as a transparent switch of the data stream must not break the sequence for streams published using the initial snapshot and update messages. To make sure the sequence is correct, the client must: (a) maintain a state by applying updates to snapshot or (b) buffer the data from the second connection and processing it at the transparent connection switch.Example JSON reconnect message is structured like this:{ ""type"": ""reconnect"" ""within_seconds"": 10, ""before_time"": ""2020-08-06T19:19:09.7035429Z"",}Message variables​VariableDescriptiontypeMessage type, always reconnectwithin_secondsSeconds within which reconnection should be performed.before_timeTime before which reconnection should be performed.Heartbeat IN​Heartbeat message JSON is structured like this:{ ""type"": ""hearbeat""}Heartbeat message is sent to you every time there is one second of silence in communication between us, if you agreed on this feature in Hello message.tipWebSocket working on TCP protocol which doesn’t have the feature indicating that the connection is broken without trying exchange data over it. As you will not be actively sending messages to us, with Heartbeat you can distinguish a situation where there are no market data updates for you (Heartbeat is delivered but no market data updates) or connection between us is broken (Heartbeat and market data updates are not delivered). Was this section helpful?12345PreviousGeneralNextJSON RPCTrades INMessage variablesPossible taker_side valuesQuotes INMessage variablesOrderbook L2 (Full) INMessage variablesOrderbook L2 (max 2x5) INMessage variablesOrderbook L2 (max 2x20) INMessage variablesOrderbook L2 (max 2x50) INMessage variablesOrderbook L3 (Full) INMessage variablesPossible update_type valuesReconnect INMessage variablesHeartbeat INCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/websocket-ds/messages)"
134,i.io ems api rest api orders cancel all orders request,"i.io ems api rest api orders cancel all orders request.   Cancel all orders request | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIREST APIBalancesOrdersCancel all orders requestCancel order requestGet open ordersGet order execution reportHistory of order changesSend new orderPositionsWebSocket APIFIX APISelf Hosted GuideREST APIOrdersCancel all orders requestCancel all orders requestPOST /v1/orders/cancel/allThis request cancels all open orders on single specified exchange.application/jsonRequest Body requiredOrderCancelAllRequest object.exchange_id string requiredIdentifier of the exchange from which active orders should be canceled.Responses200400490Resultapplication/jsonSchemaExample (from schema)Schematype stringMessage type, constant.reject_reason RejectReasonPossible values: [OTHER, EXCHANGE_UNREACHABLE, EXCHANGE_RESPONSE_TIMEOUT, ORDER_ID_NOT_FOUND, INVALID_TYPE, METHOD_NOT_SUPPORTED, JSON_ERROR]Cause of rejection.exchange_id stringIf the message related to exchange, then the identifier of the exchange will be provided.message stringMessage text.rejected_message stringValue of rejected request, if available.{ ""type"": ""MESSAGE_REJECT"", ""reject_reason"": ""ORDER_ID_NOT_FOUND"", ""exchange_id"": ""BINANCE"", ""message"": ""Order with ID: BINANCE-7d8a-4888 not found"", ""rejected_message"": ""{\""client_order_id\"":\""BINANCE-7d8a-4888\"",\""exchange_id\"":\""BINANCE\"",\""type\"":\""ORDER_CANCEL_SINGLE_REQUEST\""}""}Input model validation errors.application/jsonSchemaExample (from schema)Schematype stringtitle stringstatus numbertraceId stringerrors string{ ""type"": ""https://tools.ietf.org/html/rfc7231#section-6.5.1"", ""title"": ""One or more validation errors occurred."", ""status"": 400, ""traceId"": ""d200e8b5-4271a5461ce5342f"", ""errors"": ""string""}Exchange is unreachable.appliction/jsonSchemaExample (from schema)Schematype stringMessage type, constant.reject_reason RejectReasonPossible values: [OTHER, EXCHANGE_UNREACHABLE, EXCHANGE_RESPONSE_TIMEOUT, ORDER_ID_NOT_FOUND, INVALID_TYPE, METHOD_NOT_SUPPORTED, JSON_ERROR]Cause of rejection.exchange_id stringIf the message related to exchange, then the identifier of the exchange will be provided.message stringMessage text.rejected_message stringValue of rejected request, if available.{ ""type"": ""MESSAGE_REJECT"", ""reject_reason"": ""ORDER_ID_NOT_FOUND"", ""exchange_id"": ""BINANCE"", ""message"": ""Order with ID: BINANCE-7d8a-4888 not found"", ""rejected_message"": ""{\""client_order_id\"":\""BINANCE-7d8a-4888\"",\""exchange_id\"":\""BINANCE\"",\""type\"":\""ORDER_CANCEL_SINGLE_REQUEST\""}""}Loading...Was this section helpful?12345PreviousOrdersNextCancel order requestCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/rest-api/orders/cancel-all-orders-request)"
135,i.io naas api api limits and billing metrics,"i.io naas api api limits and billing metrics.   API limits and billing metrics | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumAPI limits and billingOn this pageAPI limits and billing metricsAPI limits are a crucial aspect of any API product, and they exist for several important reasons. They are designed to ensure fair usage and maintain the quality of service for all users. By implementing these limits, we can prevent any single user from overloading the system, which could potentially degrade the performance for others. This is a standard practice across the industry and is essential for maintaining a high level of service.One of the key limits we have in place is the Concurrency limit. This limit is specifically designed to protect our infrastructure. It controls the number of simultaneous API calls/requests that can be executed at any given moment. Each API call/request increases the Concurrency limit against your quota, and it decreases when the call/request finishes. This ensures that our servers are not overwhelmed by too many simultaneous requests, thereby ensuring smooth and efficient operation.The specific limits that apply to you depend on several factors. These include the plan you have subscribed to, the product you are using, and the protocol you are utilizing. Different products and protocols may have different limits, reflecting their varying requirements and capabilities.We understand that different users may have different needs, and we try to accommodate these requests whenever possible. Therefore, some limits, such as the Concurrency limit, can be requested to be increased through our support team. We review these requests on a case-by-case basis, taking into account factors such as your usage history and the capacity of our infrastructure.There are also limits that depend on your plan, such as the Request limit or the Node as a Service units limit. If you exceed these limits, you can continue to use our services by paying an overage fee. This allows us to maintain a high level of service for all users, even during periods of high demand.In conclusion, API limits are a necessary and important part of our service. They ensure that all users can enjoy a high-quality, reliable service, and they protect our infrastructure from being overwhelmed.Limits applied to our products​Product nameLimitsNAAS REST APINAAS Credits LimitNAAS Concurrency LimitNAAS WebSocket APINAAS Credits Limit NAAS Concurrency LimitMultiple API keys for a subscription​At CoinAPI, we understand that our customers may have diverse needs and may require multiple API keys for a single subscription. We have designed our system to accommodate this requirement, allowing you to add additional API keys to your subscription. These keys operate within the confines of a single limit, ensuring that you have the flexibility you need without compromising on control.Each API key can be further customized with a more precise limit. This feature allows you to manage your usage effectively, ensuring that each key is used optimally and within its designated limit. This level of control can be particularly useful in managing resources and preventing overuse.In addition to these features, we also offer the ability for API calls using a specific API key to generate overage, i.e., exceed the quota. This can be particularly useful in situations where you anticipate a higher volume of calls. However, it's important to note that if the limit is exceeded, the API calls may be rejected to prevent overuse and maintain system integrity. All these settings, including the limits and the ability to set overage, can be managed from the Customer Portal. This ensures that you have complete control over your subscription and can make adjustments as and when needed.Customizing Limits for API Keys within a Subscription​If both API keys, each with a limit of 500, exhaust their allotted limits, reaching a combined total of 1000, further requests made using either key will be rejected until the limit resets. This ensures that the total usage across all keys within the subscription does not exceed the subscription limit.Exceeding Limits for API Keys within a Subscription​If one API key within the subscription exceeds its limit of 500, while the other key is still within its limit, requests made using the exceeded key will be rejected until the limit resets. However, requests made using the other key, which is still within its limit, will continue to be processed without interruption.infoIn summary, managing limits within a subscription involves ensuring that the usage across all API keys and services remains within the specified limits, with mechanisms in place to handle potential overages and maintain service availability and quality.Node as a Service API​The utilization of CoinAPI.io's API is quantified in API Credits, providing a standardized measure for usage. Each API Credit value is assigned based on the complexity and resource intensity of specific methods within the platform. The credit values range from 10 to 500, with each method having a distinct credit value.For instance, eth_call is assigned a value of 20 API Credits. These credit values take into account various intricate factors such as computational load, memory consumption, disk usage, and network resources associated with the execution of each method.This dynamic credit system ensures a fair and accurate representation of the resources utilized by different API methods, offering transparency and flexibility in aligning with CoinAPI.io's pricing plans.Request limit / APIKey​X-UnitsLimit-Quota-Overage: disabledX-UnitsLimit-Quota-Allocated: 10000000X-UnitsLimit-Used: 0X-UnitsLimit-Quota-Remaining: 10000000HTTP HeaderTypeDescriptionX-UnitsLimit-Quota-OveragestringProvides information about whether a given API key may exceed the plan quota within a 24-hour time frame, which could result in additional charges. This header is fully defined and configured in the customer portal.X-UnitsLimit-Quota-AllocatedstringTotal number of requests that can be made within a specific subscription during a 24-hour time frame. This quota allocation is determined based on the user's subscription purchase.X-UnitsLimit-Quota-RemainingstringProvides valuable information about the remaining quota within the subscription for making requests within a 24-hour time frame. This header indicates the number of requests that can still be made within the allocated quota for the current 24-hour period.X-UnitsLimit-UsedintProvides information about the request limit that has been used within the last 24-hour period. This header indicates the amount of request capacity consumed based on the usage history. It is important to note that the header is not always appended to every request to optimize the operation of the API.BitcoinEthereumMethod nameValueabandontransaction10abortrescan10addnode10analyzepsbt10bumpfee10combinepsbt10combinerawtransaction10createmultisig10createpsbt10createrawtransaction10createwallet10decoderawtransaction10decodepsbt10decodescript10deriveaddresses10disconnectnode10dumpprivkey10estimatesmartfee10finalizepsbt10fundrawtransaction10generateblock10generatetoaddress10generatetodescriptor10getaddressesbylabel10getbalance10getbalances10getbestblockhash10getblock10getblockchaininfo10getblockcount10getblockfilter10getblockhash10getblockheader10getblockstats10getblocktemplate10getchaintips10getchaintxstats10getconnectioncount10getdifficulty10getindexinfo10getmemoryinfo10getmempoolancestors10getmempooldescendants10getmempoolentry10getmempoolinfo10getmininginfo10getnettotals10getnetworkhashps10getnetworkinfo10getnewaddress10getnodeaddresses10getpeerinfo10getrawchangeaddress10getrawmempool10getrawtransaction10getreceivedbyaddress10getreceivedbylabel10getrpcinfo10gettransaction10gettxout10gettxoutproof10gettxoutsetinfo10help10importaddress10importdescriptors10importmulti10importprivkey10importprunedfunds10importpubkey10importwallet10keypoolrefill10listreceivedbyaddress10listaddressgroupings10listbanned10listlabels10listlockunspent10listsinceblock10listtransactions10Method nameValueeth_blockNumber20eth_call20eth_chainId20eth_coinbase20eth_createAccessList20eth_estimateGas20eth_feeHistory20eth_gasPrice20eth_getBalance20eth_getBlockByHash20eth_getBlockByNumber20eth_getBlockReceipts20eth_getBlockTransactionCountByHash20eth_getBlockTransactionCountByNumber20eth_getCode20eth_getFilterChanges20eth_getFilterLogs20eth_getLogs20eth_getProof20eth_getStorageAt20eth_getTransactionByBlockHashAndIndex20eth_getTransactionByBlockNumberAndIndex20eth_getTransactionByHash20eth_getTransactionCount20eth_getTransactionReceipt20eth_getUncleByBlockHashAndIndex20eth_getUncleByBlockNumberAndIndex20eth_getUncleCountByBlockHash20eth_getUncleCountByBlockNumber20eth_getWork20eth_hashrate20eth_maxPriorityFeePerGas20eth_mining20eth_newBlockFilter20eth_newFilter20eth_newPendingTransactionFilter20eth_protocolVersion20eth_sendRawTransaction20eth_sign20eth_signTransaction20eth_submitWork20eth_subscribe20eth_subscribePendingTransactions20eth_syncing20eth_uninstallFilter20eth_unsubscribe20getBeaconBlocksAttestations20getBlockByRoot20getTxPoolStatus20net_listening20net_peerCount20net_version20trace_block70trace_call70trace_callMany70trace_filter70trace_rawTransaction70trace_replayBlockTransactions500trace_replayTransaction500trace_transaction70txpool_content500txpool_contentFrom70txpool_inspect70web3_clientVersion20web3_sha320Was this section helpful?12345PreviousAuthenticationNextBitcoinLimits applied to our productsMultiple API keys for a subscriptionCustomizing Limits for API Keys within a SubscriptionExceeding Limits for API Keys within a SubscriptionNode as a Service APIRequest limit / APIKeyCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/api-limits-and-billing-metrics)"
136,i.io general faq general Can I get the XML or CSV instead of the JSON output format,"i.io general faq general Can I get the XML or CSV instead of the JSON output format.   Can I get the XML or CSV instead of the JSON output format? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralCan I get the XML or CSV instead of the JSON output format?Can I get the XML or CSV instead of the JSON output format?Yes. Check the documentation for the output_format API parameter at https://docs.coinapi.io/market-data/rest-api#output-data-formatWas this section helpful?12345PreviousCan I get exchange wallet deposit and withdrawal status?NextCan I have multiple API keys in one account?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/Can-I-get-the-XML-or-CSV-instead-of-the-JSON-output-format)"
137,i.io general glossary JSON,"i.io general glossary JSON.   JSON | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGlossaryBlockchain Address and OutputBlockchain NodeChain (Blockchain)EndpointJSONNetworkSatoshiTransactionWalletBlockchain BlockChangelogGlossaryJSONOn this pageJSONJSON​JSON (JavaScript Object Notation) is a lightweight data-interchange format that is easy for humans to read and write and for machines to parse and generate. JSON is widely used for transmitting data in web applications between clients and servers.Key Characteristics​Syntax: JSON syntax is derived from JavaScript object notation and includes key-value pairs, arrays, and nested structures.Readability: JSON is designed to be human-readable, with a simple and intuitive structure.Interoperability: JSON is language-agnostic and can be used across various programming languages, making it a versatile choice for data interchange.Usage​APIs: JSON is commonly used in APIs to format the data exchanged between the server and client.Configuration Files: Many applications use JSON to store configuration settings and other structured data.Was this section helpful?12345PreviousEndpointNextNetworkJSONCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/glossary/JSON)"
138,i.io general faq general How does the full orderbook stream work,"i.io general faq general How does the full orderbook stream work.   How does the full orderbook stream work? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralHow does the full orderbook stream work?How does the full orderbook stream work?WebSocket API (data type = 'book')To maintain full order book visibility you need to first process snapshot (message with is_snapshot = true), after that when you have the full order book state, then you need to apply updates to that order book (message with is_snapshot = false).We can at our discretion provide a snapshot in the middle of the connection. If you receive a snapshot in the middle of the connection, then you must invalidate the previous order book state and apply the snapshot as the current state of the book.You could process updates to the book only if you received a snapshot for that book.Snapshot will be delivered instead of the first order book change after establishing a WebSocket API subscription. More information: https://docs.coinapi.io/market-data/websocket/messages#orderbook-l2-full--inWas this section helpful?12345PreviousHow does SOR determine the best exchange for order execution?NextHow granular is your data?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/How-does-the-full-orderbook-stream-work)"
139,i.io ems api websocket,"i.io ems api websocket.   WebSocket API | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIREST APIWebSocket APIMessagesFIX APISelf Hosted GuideWebSocket APIOn this pageWebSocket APIThis section will provide necessary information about the CoinAPI EMS WebSocket API protocol.WebSocket API provides real-time communication capacity for order management, execution reports, balances and the positions.Implemented Standards:HTTP1.0HTTP1.1HTTP2.0WebSocketcautionYour WebSocket client implementation must comply with the ""v13"" version of the protocol documented in the RFC6455, including responding with the ""Pong"" message each time we will send ""Ping"" (every minute), failure to respond with the ""Pong"" from your WebSocket client will cause a connection to be closed.Endpoints​Deployment methodEnvironmentUrlManaged CloudProductionUse Managed Cloud REST API /v1/locations to get specific endpoints to each server site where your deployments spanSelf HostedProductionIP Address of the ems-gateway container/excecutable in the closest server site to the caller locationAuthentication​If the software is deployed as Self-Hosted then API do not require authentication as inside your infrastructure, your company is responsible for the security and access controls. If the software is deployed in our Managed Cloud, there are 2 methods for authenticating with us, you only need to use one:Custom authorization header named X-CoinAPI-Key with the API KeyQuery string parameter named apikey with the API KeyTLS Client Certificate from the `Managed Cloud REST API` (/v1/certificate/pem endpoint) while establishing a TLS session with us.Custom authorization header​You can authorize by providing additional custom header named X-CoinAPI-Key and API key as its value.Assuming that your API key is 73034021-THIS-IS-SAMPLE-KEY, then the authorization header you should send to us will look like: X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEYtipThis method is recommended by us and you should use it in production environments.Query string authorization parameter​You can authorize by providing an additional parameter named apikey with a value equal to your API key in the query string of your HTTP request.Assuming that your API key is 73034021-THIS-IS-SAMPLE-KEY and that you want to request all exchange rates from BTC asset, then your query string should look like this: GET /v1/exchangerate/BTC?apikey=73034021-THIS-IS-SAMPLE-KEYinfoQuery string method may be more practical for development activities.Was this section helpful?12345PreviousGet open positionsNextMessagesEndpointsAuthenticationCustom authorization headerQuery string authorization parameterCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/websocket)"
140,i.io flat files api data types link to quotes doc,i.io flat files api data types link to quotes doc.   Page Not Found | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyPage Not FoundWe could not find what you were looking for.Please contact the owner of the site that linked you to the original URL and let them know their link is broken.Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/flat-files-api/data-types/link-to-quotes-doc)
141,i.io cdn cgi l email protection#aedddbdedec1dcdaeecdc1c7c0cfdec780c7c1,"i.io cdn cgi l email protection#aedddbdedec1dcdaeecdc1c7c0cfdec780c7c1.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 8aad27c53d6827b8 •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#aedddbdedec1dcdaeecdc1c7c0cfdec780c7c1)"
142,i.io general faq billing and subscriptions Can I still use my API key if I cancel my subscription,"i.io general faq billing and subscriptions Can I still use my API key if I cancel my subscription.   Can I still use my API key if I cancel my subscription? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIBilling and SubscriptionsCan I cancel my subscription anytime?Can I still use my API key if I cancel my subscription?How to reactivate my canceled subscription?How to subscribe to the API?How to upgrade/downgrade my subscription?Security and PrivacyGlossaryChangelogFAQBilling and SubscriptionsCan I still use my API key if I cancel my subscription?Can I still use my API key if I cancel my subscription?Cancelling your API key's subscription will render it unusable up until the end of your current billing period. If you still want to be able to use your API key, you may instead opt to downgrade to our Free tier.To learn more about the scope of the Free tier, please refer to our Pricing page: https://www.coinapi.io/PricingWas this section helpful?12345PreviousCan I cancel my subscription anytime?NextHow to reactivate my canceled subscription?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/billing-and-subscriptions/Can-I-still-use-my-API-key-if-I-cancel-my-subscription)"
143,i.io naas api authentication,"i.io naas api authentication.   Authentication | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumAuthenticationOn this pageAuthenticationIn this section, you will find comprehensive information about the process of CoinAPI authentication. It covers the fundamental aspects and procedures involved in obtaining authentication for CoinAPI usage. Whether you are new to CoinAPI or seeking to enhance your understanding of the authentication process, this section will provide you with a valuable overview of the topic.There are different types of authentication methods available to secure and control access to its services.API Key - fundamental method of authentication that involves the usage of an API key for authentication and access control.API Key + JWT token - extended authentication method that combines the use of an API key along with a JWT token for enhanced security and authentication. Useful when you need to share the API Key publicly, for example when accessing the CoinAPI endpoints from the frontend JavaScript code exposed to the end-users. JWT token will be required along the API Key from the CoinAPI side to perform successful authentication, and the JWT tokens can be only generated from your side as you know the secret (private key or secret) based on which JWT token with the specified expiration time are issued.Authentication methods supported by the API​Here's an overview of the various products offered by CoinAPI and the supported authentication methods for each product. To use resources that require authorized access, you will need to use one of the many authentication methods described below.Product nameAPIX-CoinAPI-Key headerQuery paramURL pathAuthorization headerBasic authJWTNodeJSON-RPC✅✅✅✅✅✅NodeWebSocket✅✅✅✅✅✅cautionIf you are using the Authorization header to pass the API key, please note that it cannot be used together with a JWT token. In case you have enabled JWT authentication, we recommend using alternative methods to pass the API key such as: a Custom authentication header, Query string parameter, or API Key in the URL.X-CoinAPI-Key header​You can authorize by providing an additional custom header named X-CoinAPI-Key and API key as its value.Assuming that your API key is 73034021-THIS-IS-SAMPLE-KEY, then the authentication header you should send to us will look like:X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEYQuery string parameter (apikey)​You can authorize by providing an additional parameter named apikey with a value equal to your API key in the query string of your HTTP request.Assuming that your API key is 73034021-THIS-IS-SAMPLE-KEY and that you want to request all exchange rates from BTC asset, then your query string should look like this: GET /v1/exchangerate/BTC?apikey=73034021-THIS-IS-SAMPLE-KEYcautionThe Query string method may be more practical for development activities.URL path​To ensure proper authentication when passing the API key in the URL, it is important to format it correctly. The real API key should always be preceded by the APIKEY- prefix, followed by the actual API key. For example, if your API key is 73034021-THIS-IS-SAMPLE-KEY, the URL should be structured as /APIKEY-73034021-THIS-IS-SAMPLE-KEY.The API key can be placed at the beginning, middle, or end of the URL path. Note that the key is completely ignored when determining the path of the requested resource. Here are examples of the different placements:At the beginning of the URL:/APIKEY-73034021-THIS-IS-SAMPLE-KEY/v1/exchangesIn the middle of the URL:/v1/APIKEY-73034021-THIS-IS-SAMPLE-KEY/exchangesAt the end of the URL:/v1/exchanges/APIKEY-73034021-THIS-IS-SAMPLE-KEYPlease make sure to replace 73034021-THIS-IS-SAMPLE-KEY with your actual API key for authentication and access to the requested resources and remember to include the APIKEY- prefix before your real API key.Authorization header​This method involves including the API key directly in the Authorization header of the API request.Authorization: 73034021-THIS-IS-SAMPLE-KEYBasic auth​Use Basic Authentication by setting the Authorization header with a base64 encoded string that combines your API key with a username (coinapi):Authorization: Basic Y29pbmFwaTo3MzAzNDAyMS1USElTLUlTLVNBTVBMRS1LRVk=In this example, Y29pbmFwaTo3MzAzNDAyMS1USElTLUlTLVNBTVBMRS1LRVk is a base64 encoded string of the username and API key (coinapi:73034021-THIS-IS-SAMPLE-KEY).JWT token​The JWT authentication method provides a secure and efficient way to authorize requests using JSON Web Tokens (JWT). With this method, JWTs can be passed via the Authorization header in the Bearer JWT_TOKEN format.Supported JWT Algorithms​The JWT authentication method supports the following algorithms for JWT token verification with various key sizes:RSASSA-PSS (e.g. PS256)RSASSA-PKCS1-v1_5 (e.g. RS256)ECDSA (e.g. ES256)HMAC (e.g. HS256)Enabling JWT authentication​To enable JWT authentication for your API key:Access the customer portal and import the public JWT key (RSA or ECDSA) for the API key.Generate a JWT token using your private key (it ensures the authenticity and integrity of the token)Include the generated JWT token in the Authorization header of your API requests using Bearer JWT_TOKEN format.Let the CoinAPI server verify the token's authenticity using the corresponding public key you've imported in Step 1 during the API request.Example request with JWT authentication​To include a JWT in an API request, add the token to the Authorization header using the Bearer scheme. The format of the header is as follows: `Authorization: Bearer JWT_TOKEN`Example request header with JWT token generated using RS256 algorithm:Authorization: Bearer eyJraWQiOiI5ODViMmQ0ZC1kMjE1LTQwN2MtODcxNi01NTIzNjA0YmM0ZTIiLCJhbGciOiJSUzI1NiJ9.ew0KICAic3ViIjogIjEyMzQ1Njc4OTAiLA0KICAibmFtZSI6ICJFWEFNUExFIFRPS0VOIiwNCiAgImlhdCI6IDE1MTYyMzkwMjIsDQogICJuYmYiOiAxNjg2MTM3MDI0LA0KICAiZXhwIjogMTcxNzY3MzAyNA0KfQ.CX6MWRSXQPKuQ_jrFCME91IwZhK8lq_2XrbDOyZ4-tPo0Ro52HA289sIfLo2LNafWQlq2lClfCN55TxyfC8n0xiifUwdec7g3kcGjCri6vTxaa8p6S3Fyyt2DxXccpi3Se4d_3mEQBZwMchKbQsw-W7Wj7njUk31ycgPQovvF4WrTuEYmhYw1sO9jCTORHmsSO7Shml7kv7AxlIUmzB2oq2KSmBhJV38Nz9oYj3KlPoMjgaIl4xYldNqnGyshh6fQyUQ1gQMQV6e4M5ro8YthjPOCvAT8yk77dTyOoE6Im58cAp6KtM-Gko-tWppUQTu-0M82LOvD_duP77n-hcoTwDecoded JWT token header:{ ""kid"": ""985b2d4d-d215-407c-8716-5523604bc4e2"", ""alg"": ""RS256"" }Decoded JWT token payload:{ ""sub"": ""1234567890"", ""name"": ""EXAMPLE TOKEN"", ""iat"": 1516239022, ""nbf"": 1686137024, ""exp"": 1717673024}JWT Token expiration​To ensure the validity of JWT tokens and prevent the use of expired tokens, the inclusion of the following claims is required:NBF (Not Before)The ""nbf"" claim specifies the earliest time at which the token can be considered valid. Tokens with a ""nbf"" claim set in the future should not be accepted.EXP (Expiration Time)The ""exp"" claim defines the expiration time of the token. Tokens with an ""exp"" claim set in the past should not be accepted.Request authentication​During the process of request authentication, the CoinAPI server follows a series of steps to ensure secure access to its resources. Here's an overview of the authentication process:Upon receiving the request, the CoinAPI server extracts the JWT from the Authorization header.Then, it verifies the JWT signature and checks the ""NBF"" and ""EXP"" claims to ensure token validity and expiration.If the JWT is valid and not expired, the server authorizes the request and proceeds with the necessary processing to access CoinAPI resources.If the JWT is invalid or expired, the server returns an appropriate error response.Was this section helpful?12345PreviousNaaS APINextAPI limits and billingAuthentication methods supported by the APIX-CoinAPI-Key headerQuery string parameter (apikey)URL pathAuthorization headerBasic authJWT tokenCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/authentication)"
144,i.io flat files api rest api metadata,i.io flat files api rest api metadata.   Metadata | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyFlat FilesBilling and UsageData & StructureS3 APIPush APIMetadataList all exchanges by exchange_idList all exchangesList of symbols for the exchangePush APIMetadataMetadata📄️ List all exchanges by exchange_idList all exchanges by exchange_id📄️ List all exchangesGet a detailed list of exchanges provided by the system.📄️ List of symbols for the exchangeList of symbols for the exchangeWas this section helpful?12345PreviousPush APINextList all exchanges by exchange_idCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/flat-files-api/rest-api/metadata)
145,i.io how to guides acquire exchange rates with different programming languages,"i.io how to guides acquire exchange rates with different programming languages.   Acquire exchange rates with different programming languages | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesAcquire exchange rates with different programming languagesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPICreating a historical crypto price chart using CoinAPI and D3.jsFetching market data with KNIMEGet Historical OHLCV Data Using CoinAPIGet symbol funding rate metric data using CoinAPIImport API into PostmanImport data to Google Sheets/ExcelReal-time data visualization with javascriptReal-time trades stream using WebSocket with different languagesRetrieve and analyze crypto order book data using a cryptocurrency APITrading Essentials: QuickstartMarket Data APIEMS APIFAQCustomer PortalChangelogHow-to guidesAcquire exchange rates with different programming languagesOn this pageAcquire exchange rates with different programming languagesIntroduction​CoinAPI provides a powerful interface for interacting with multiple cryptocurrency markets, allowing for efficient data retrieval and processing. This tutorial walks you through the process of using CoinAPI's API to access exchange rate data using Python, Javascript, and Java. The objective here is to equip you with the necessary know-how to utilize our API for your crypto projects.Prerequisites​A CoinAPI key (obtainable by signing up on the CoinAPI website)Familiarity with RESTful APIs and JSON (JavaScript Object Notation)A basic understanding of at least one programming language: Python, Javascript or JavaAPI Key generation​Before we dive into code, it's crucial to understand that to use the CoinAPI, you need an API key. This key identifies your application and authorizes requests.Visit the CoinAPI websiteRegister an account or log in if you already have oneNavigate to the API Keys section and generate a new API keyRemember to store your key safely - it's your credential!Making an API Request with Python​To connect to CoinAPI in Python, we'll use the requests library. If you don't have the 'requests' library installed, you can add it using pip:pip install requestsHere's an example of the access-coinapi-data.py Python script:import requestsdef fetch_data():url = ""https://rest.coinapi.io/v1/exchangerate/BTC/USD""headers = { ""X-CoinAPI-Key"": ""YOUR-API-KEY"" # Replace with your API key}response = requests.get(url, headers=headers)return response.json()print(fetch_data())This script fetches the current exchange rate of Bitcoin (BTC) to USD. To execute the script, run python access-coinapi-data.py command.> python access-coinapi-data.py{ ""time"": ""2023-07-24T11:31:56.0000000Z"", ""asset_id_base"": ""BTC"", ""asset_id_quote"": ""USD"", ""rate"": 29295.929694597355}Note: Don't forget to replace YOUR-API-KEY with your actual API key.Making an API Request with Javascript​Make sure to install the nodejs runtime environment before. Add package.json with node-fetch module dependency.{ ""type"": ""module"", ""dependencies"": { ""node-fetch"": ""^3.3.1"" }}Create file access-coinapi-data.js with the following code:import fetch from 'node-fetch';fetch('https://rest.coinapi.io/v1/exchangerate/BTC/USD', {headers: { ""X-CoinAPI-Key"": ""YOUR_API_KEY"" // Replace with your API key }}).then(response => response.json()).then(data => console.log(data)).catch(error => console.error('Error:', error));This example fetches the current exchange rate from BTC to USD.Install dependencies via the npm install command. Execute your program in the nodejs runtime environment with the node access-coinapi-data.js command.> node access-coinapi-data.js{ ""time"": ""2023-07-24T11:31:56.0000000Z"", ""asset_id_base"": ""BTC"", ""asset_id_quote"": ""USD"", ""rate"": 29295.929694597355}Note: Don't forget to replace YOUR-API-KEY with your actual API key.Making an API Request with Java​Make sure to install Java Development Kit (JDK) as it includes a runtime environment (JRE) plus additional tools and utilities required for Java development. To check whether JRE and JDK are already installed on your system you may use the java -version command.Java offers multiple ways to send HTTP requests. Here we'll use the HttpURLConnection class. Create Main.java file with the following content:import java.net.HttpURLConnection;import java.net.URL;import java.io.BufferedReader;import java.io.InputStreamReader;public class Main { private static final String API_KEY = ""YOUR-API-KEY""; // Replace with your API key public static void main(String[] args) throws Exception {  URL url = new URL(""https://rest.coinapi.io/v1/exchangerate/BTC/USD"");  HttpURLConnection conn = (HttpURLConnection) url.openConnection();  conn.setRequestProperty(""X-CoinAPI-Key"", API_KEY);  BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()));  String inputLine;  StringBuffer content = new StringBuffer();  while ((inputLine = in.readLine()) != null) {   content.append(inputLine);  }  in.close();  conn.disconnect();  System.out.println(content.toString()); }}This script fetches the current exchange rate of Bitcoin (BTC) to USD. Use the javac Main.java command to compile the java source file into bytecode. The resulting bytecode file will be named Main.class. After the compilation step, you can execute the program using java Main to see the exchange rate output.> javac Main.Java> java Main{ ""time"": ""2023-07-24T11:31:56.0000000Z"", ""asset_id_base"": ""BTC"", ""asset_id_quote"": ""USD"", ""rate"": 29295.929694597355}Note: Don't forget to replace YOUR-API-KEY with your actual API key.Understanding the Response​CoinAPI returns data in JSON format, which we convert to a Python dictionary using response.json(). The /v1/exchangerate/BTC/USD endpoint response includes:time: The timestamp of the last data update.asset_id_base: The base asset (in our case, BTC).asset_id_quote: The quote asset (in our case, USD).rate: The current exchange rate from BTC to USD.Converting Between Cryptocurrencies​The /v1/exchangerate/BTC/USD endpoint retrieves the current exchange rate of BTC to USD. Additionally, the Exchange Rates endpoint provides the flexibility to obtain exchange rates between BTC and various other assets, allowing users to access the conversion rates for multiple asset pairs involving BTC.import requests url = 'https://rest.coinapi.io/v1/exchangerate/BTC' headers = {'X-CoinAPI-Key' : 'YOUR_API_KEY'} response = requests.get(url, headers=headers) print(response.json())Here's the response for the BTC exchange rate to various assets, e.g EUR, USD, ETH, XRP:{ ""asset_id_base"": ""BTC"", ""rates"": [  {   ""time"": ""2023-07-24T13:00:43.0000000Z"",   ""asset_id_quote"": ""EUR"",   ""rate"": 26371.195622912368  },  {   ""time"": ""2023-07-24T13:00:43.0000000Z"",   ""asset_id_quote"": ""USD"",   ""rate"": 29222.332203558577  },  {   ""time"": ""2023-07-24T13:00:43.0000000Z"",   ""asset_id_quote"": ""ETH"",   ""rate"": 15.780394091251145  },  {   ""time"": ""2023-07-24T13:00:43.0000000Z"",   ""asset_id_quote"": ""XRP"",   ""rate"": 41915.164263881525  },  // ...more BTC exchange rates with various other assets...}To perform a cryptocurrency conversion from one currency to another, simply multiply the given amount by the exchange rate of the target cryptocurrency. Here's an example of converting 1.5 BTC to ETH:import requests url = 'https://rest.coinapi.io/v1/exchangerate/BTC' headers = {'X-CoinAPI-Key' : ""YOUR_API_KEY""}response = requests.get(url, headers=headers) #exchange rates with BTC as base assetrates = response.json()['rates'] # finding exchange rate for ETH (quote asset)eth_rate = [x['rate'] for x in rates if x['asset_id_quote'] == 'ETH'][0] btc_amount = 1.5eth_amount = btc_amount * eth_rate # actual conversionprint(f'1.5 BTC is equivalent to {eth_amount} ETH')Below is the result of 1.5 BTC to ETH conversion:>python convert.py1.5 BTC is equivalent to 23.671802476675076 ETHThe exchange rates endpoint plays a critical role in providing real-time conversion rates for cryptocurrencies. The rate represents the conversion factor that determines the value of one unit of the base currency in terms of the target currency. It indicates how much of the target currency you would get in exchange for one unit of the base currency.For more information, you can check REST API Exchange Rates docs Best Practices​Security: never expose your API key publicly or commit it to version control. Store it in a secure and encrypted location and treat your API key as a password.Error Handling: CoinAPI can return various error codes (like 400, 403, 429) indicating issues such as invalid input or rate limit exceeding. Make sure to handle these potential errors in your code.Rate Limiting: Ensure your application gracefully handles rate limit errors by implementing retry logic. Refer to CoinAPI's Rate Limiting documentation for more details.Error Handling​Include robust error handling to account for potential issues such as network errors, API limits, or invalid responses. Here's a simple example:try: response = requests.get(url, headers=headers) response.raise_for_status() # Raises a HTTPError if the status is 4xx, 5xxexcept requests.exceptions.RequestException as err: print(f""An Error Occured: {err}"")else: data = response.json()Rate Limiting​Keep track of your API usage to avoid hitting rate limits. CoinAPI provides different request tiers based on your subscription level.print(response.headers.get(""X-RateLimit-Used""))print(response.headers.get(""X-RateLimit-Limit""))print(response.headers.get(""X-RateLimit-Remaining""))print(response.headers.get(""X-RateLimit-Request-Cost""))For more information about rate limiting check REST API Limits.API Key Security​Never expose your API key in a client-side application or a public code repository. Always keep it securely on your server.dangerOnce your API key falls into the wrong hands, it can be used to make requests within your subscription.Caching​To minimize API calls and maximize efficiency, consider implementing caching on your end.Troubleshooting​If you encounter any issues while connecting to CoinAPI, make sure to:Verify that your API key is correct.Check if you have reached the API rate limit.Confirm that you're using the right endpoint and method (GET, POST, etc.).Ensure you've installed the correct libraries and dependencies and are using a supported version of the programming language.You're now ready to use CoinAPI's API to access cryptocurrency data efficiently and effectively. For more information, you can check REST API Exchange Rates docs Happy coding!Was this section helpful?12345PreviousHow-to guidesNextBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPIIntroductionPrerequisitesAPI Key generationMaking an API Request with PythonCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/how-to-guides/acquire-exchange-rates-with-different-programming-languages)"
146,i.io faq account How can I change my CoinAPI account email address,"i.io faq account How can I change my CoinAPI account email address.   How can I change my CoinAPI account's email address? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountHow I can update my credit card / billing information?How can I change my CoinAPI account's email address?How can I get an invoice or receipt?How do I make an account?I want to change my account's name?Managing Team MembersCan I add other users to my account?How do I get an additional API key?APIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQCustomer AccountHow can I change my CoinAPI account's email address?How can I change my CoinAPI account's email address?You can change your account's email address through the Customer Portal here: https://customerportal.coinapi.io/subscriptions After logging in, navigate to Subscriptions > Manage Subscriptions > Update InformationIf you do not have access to the account anymore, we can change the email address on your behalf as long as it is for personal use, or you are changing it to another employee's email under the same organization. If so, please submit a ticket here: https://support.coinapi.io/hc/en-us/requests/new There are some cases where we do NOT allow changing an account's email address. One case would be if you are requesting to change your account email address from a former organization to a new organization since you are no longer working there. E.g, you are an employee who worked for the company ""X"" and have an account with the email [email protected] wherein you purchased our products in behalf of the company, and you want to request to have the account's email address changed to [email protected] since you've changed workplaces; we would not allow this since it would basically mean that company Y would have the license to access the data of company X.Was this section helpful?12345PreviousHow I can update my credit card / billing information?NextHow can I get an invoice or receipt?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/account/How-can-I-change-my-CoinAPI-account-email-address)"
147,i.io naas api bitcoin Methods getblockheader,"i.io naas api bitcoin Methods getblockheader.   getblockheader | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetblockheaderOn this pagegetblockheaderOverview​The 'getblockheader'PC method allows you to retrieve the header of a specific block using its hash.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --body-data '{ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""getblockheader"", ""params"": []}' \'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""getblockheader\"",\r \""params\"": []\r }\r "", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""getblockheader"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({""jsonrpc"": ""1.0"",""id"": ""1"",""method"": ""getblockheader"",""params"": []})headers = {'Content-Type': 'application/json','accept': 'application/json','X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""getblockheader"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{`+""""+` ""jsonrpc"": ""1.0"",`+""""+` ""id"": ""1"",`+""""+` ""method"": ""getblockheader"",`+""""+` ""params"": []`+""""+`}`+""""+``)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({""jsonrpc"": ""1.0"",""id"": ""1"",""method"": ""getblockheader"",""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""getblockheader\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​blockhash (required)Type: stringDescription: The unique identifier of the block you want to query.verbose (optional)Type: booleanDefault: trueDescription: When set to true, the method returns a JSON object. If set to false, it returns hex-encoded dataResponse​For verbose = true:hash: The hash identifier of the block.confirmations: The number of confirmations the block has, or -1 if the block is not part of the main chain.height: The height or index of the block in the blockchain.version: The version number of the block.versionHex: The version number of the block, formatted in hexadecimal.merkleroot: The Merkle root of the block.time: The time the block was created, expressed in UNIX epoch time.mediantime: The median time of the block, also expressed in UNIX epoch time.nonce: The nonce of the block.bits: The value of the nBits field in the block header.difficulty: An estimate of the amount of work required to find this block compared to the work required to find block 0.chainwork: The expected number of hashes needed to produce the current chain.nTx: The number of transactions included in the block.previousblockhash: The hash of the preceding block, if available.nextblockhash: The hash of the subsequent block, if available.error: Any error messages encountered during the request.For verbose = false:result: A string containing serialized, hex-encoded data for the block hash.error: Any error messages encountered during the request.Was this section helpful?12345PreviousgetblockhashNextgetblockstatsOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getblockheader)"
148,i.io faq account,"i.io faq account.   Customer Account | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountHow I can update my credit card / billing information?How can I change my CoinAPI account's email address?How can I get an invoice or receipt?How do I make an account?I want to change my account's name?Managing Team MembersCan I add other users to my account?How do I get an additional API key?APIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQCustomer AccountCustomer AccountWas this section helpful?12345PreviousWhy am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?NextHow I can update my credit card / billing information?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/account)"
149,i.io faq general How granular is your data,"i.io faq general How granular is your data.   How granular is your data? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralHow granular is your data?How granular is your data?We have a distinction between aggregated data types and raw data types. OHLCV and Exchange Rates are aggregated, so we need to have some time period in which aggregation is happening. All aggregated data types we have start from 1 SEC interval. If the data type/data stream is not aggregated then we are operating in real-time, disseminating all updates and providing data access in the historical API and flat files (aka tick by tick) through our other website, Cryptotick.com.To see the time periods you can use for Exchange Rates and OHLCV data, please see here: https://docs.coinapi.io/faq/api/What-are-the-time-periods-I-can-use-for-Exchange-Rates-and-OHLCVWas this section helpful?12345PreviousHow does the full orderbook stream work?NextHow is trade volume calculated?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/How-granular-is-your-data)"
150,i.io naas api ethereum Methods eth getUncleByBlockHashAndIndex,"i.io naas api ethereum Methods eth getUncleByBlockHashAndIndex.   eth_getUncleByBlockHashAndIndex | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_getUncleByBlockHashAndIndexOn this pageeth_getUncleByBlockHashAndIndexOverview​The 'eth_getUncleByBlockHashAndIndex' method returns information about a uncle of a block given the block hash and the uncle index position.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'content-type: application/json' \  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data '{ ""id"": 1, ""jsonrpc"": ""2.0"", ""params"": [ ""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8"", ""latest"" ], ""method"": ""eth_getTransactionCount""}'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8\"",\""latest\""],\""method\"":\""eth_getTransactionCount\""}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [CURLOPT_URL => ""https://eth-mainnet.g.alchemy.com/v2/docs-demo"",CURLOPT_RETURNTRANSFER => true,CURLOPT_ENCODING => """",CURLOPT_MAXREDIRS => 10,CURLOPT_TIMEOUT => 30,CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,CURLOPT_CUSTOMREQUEST => ""POST"",CURLOPT_POSTFIELDS => json_encode(['id' => 1,'jsonrpc' => '2.0','params' => ['0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8','latest'],'method' => 'eth_getTransactionCount']),CURLOPT_HTTPHEADER => [""accept: application/json"",""content-type: application/json""],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) {echo ""cURL Error #:"" . $err;} else {echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""params"": [""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8"", ""latest""], ""method"": ""eth_getTransactionCount""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text)const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({ id: 1, jsonrpc: '2.0', params: ['0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8', 'latest'], method: 'eth_getTransactionCount' })};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://eth-mainnet.g.alchemy.com/v2/docs-demo"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8\"",\""latest\""],\""method\"":\""eth_getTransactionCount\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8\"",\""latest\""],\""method\"":\""eth_getTransactionCount\""}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8\"",\""latest\""],\""method\"":\""eth_getTransactionCount\""}"");Request request = new Request.Builder() .url(""https://eth-mainnet.g.alchemy.com/v2/docs-demo"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .build();Response response = client.newCall(request).execute();Request Parameters​'block hash': [ Required ] A string representing the hash (32 bytes) of a block.'uncle index position': [ Required ] A hexadecimal equivalent of the integer indicating the uncle's index positionResponse​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": null}A block object, or null when no block was found. The block object returned will consist of the following keys and their values:number: The block number. Null when the returned block is the pending block.hash: 32 bytes. Hash of the block. Null when it's a pending block.parentHash: 32 bytes. Hash of the parent block.nonce: 8 bytes. Hash of the generated proof-of-work. Null when the returned block is the pending block.sha3Uncles: 32 bytes. The SHA3 of the uncles data in the block.logsBloom: 256 bytes. The Bloom filter for the logs of the block. Null when the returned block is the pending block.transactionsRoot: 32 bytes. The root of the transaction trie of the block.stateRoot: 32 bytes. The root of the final state trie of the block.receiptsRoot: 32 bytes. The root of the receipts trie of the block.miner: 20 bytes. The address of the beneficiary to whom the mining rewards were given.difficulty: The hexadecimal of the difficulty for this block.totalDifficulty: The hexadecimal of the total difficulty of the chain until this block.extraData: The ""extra data"" field of this block.size: The hexadecimal of the size of this block in bytes.gasLimit: Maximum gas allowed in this block.gasUsed: Total used gas by all transactions in this block.timestamp: The unix timestamp for when theWas this section helpful?12345Previouseth_getTransactionReceiptNexteth_getUncleByBlockNumberAndIndexOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_getUncleByBlockHashAndIndex)"
151,i.io market data how to guides,"i.io market data how to guides.   How-to guides | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesAcquire exchange rates with different programming languagesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPIBuilding a cryptocurrency exchange comparison tool using Market Data APICreating a historical crypto price chart using CoinAPI and D3.jsFetching market data with KNIMEGet Historical OHLCV Data Using CoinAPIGet symbol funding rate metric data using CoinAPIImport API into PostmanImport data to Google Sheets/ExcelReal-time data visualization with javascriptReal-time trades stream using WebSocket with different languagesRetrieve and analyze crypto order book data using a cryptocurrency APITrading Essentials: QuickstartPerformance Testing GuideHow-to guidesOn this pageHow-to guidesWelcome to the How-to Guides section of our CoinAPI documentation. This is your comprehensive resource for understanding and effectively utilizing our API to its fullest potential. These guides provide best practices for getting started, implementing, and adopting CoinAPI on your tech stack.These guides are designed to provide you with clear, step-by-step instructions to help you navigate through various tasks and operations. From basic API calls to more complex data manipulations, we've got you covered.Each guide is structured to provide a practical, real-world scenario that illustrates how to use specific features of our API. They are not only meant to be instructional but also to inspire you to explore the many ways you can use CoinAPI to drive your cryptocurrency projects forward. Remember, the world of cryptocurrencies is ever-evolving, and so is our API. We regularly update these guides to reflect the latest features and improvements. So, make sure to check back often for the most up-to-date information.We hope these guides will empower you to create, innovate, and achieve success in your cryptocurrency endeavors. You’ll learn how to:​Access and interpret cryptocurrency data using CoinAPI.Build a portfolio tracker with React and CoinAPI.Convert between different cryptocurrencies using CoinAPI.Retrieve historical OHLCV Data Using CoinAPISubscribe to real-time trades stream using WebSocket.Visualize real-time data using JavaScript and CoinAPI.Extract market data in the csv format and import to spreadsheet applications like Microsoft Excel and Google SheetsFetching market data with KNIMEWhat’s next?​This quick start guide has given you a flavor of what CoinAPI can offer and an idea of how to build a solution. To find out more by exploring specific guides from the menu view.The next steps​Read more about CoinAPICheck our FAQ sectionRead our blogNeed help?If you need any help with your implementation or if you have encountered any problems, do get in touch. You can also quickly find answers from our FAQs, and blog.Was this section helpful?12345PreviousMessagesNextAcquire exchange rates with different programming languagesYou’ll learn how to:What’s next?The next stepsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/how-to-guides)"
152,i.io general glossary Wallet,"i.io general glossary Wallet.   Wallet | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGlossaryBlockchain Address and OutputBlockchain NodeChain (Blockchain)EndpointJSONNetworkSatoshiTransactionWalletBlockchain BlockChangelogGlossaryWalletOn this pageWalletWallet​A Wallet is a digital tool that allows users to make electronic transactions with blockchain. It stores the user's private key and public address, enabling the secure sending and receiving of cryptocurrency.Key Characteristics​Private Key: A secret key known only to the user, used to sign transactions and access funds.Public Address: A publicly shared address that others can use to send cryptocurrency to the wallet.Types of Wallets: Wallets can be hardware-based, software-based, or web-based, each offering different levels of security and convenience.Importance​Security: Wallets protect the user's private keys and ensure that only the owner can authorize transactions.Convenience: Wallets provide a user-friendly interface for managing cryptocurrency holdings and performing transactions.Was this section helpful?12345PreviousTransactionNextBlockchain BlockWalletCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/glossary/Wallet)"
153,i.io general faq account can i add other users to my account,"i.io general faq account can i add other users to my account.   Can I add other users to my account? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountHow I can update my credit card / billing information?How can I change my CoinAPI account's email address?How can I get an invoice or receipt?How do I make an account?I want to change my account's name?Managing Team MembersCan I add other users to my account?How do I get an additional API key?APIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQCustomer AccountCan I add other users to my account?Can I add other users to my account?Yes, you may add the option to add other users to the account as well as add an admin role. In order to do this:Login to the Customer Portal: https://customerportal.coinapi.io/loginNavigate to 'Team Members': Once you are inside the portal, navigate to the 'Team Members' section Add Email Address: Invite team members to join your account by entering their email addresses. Assign the Designated Role: As the account owner, you hold the reins to assign roles. Choose between 'Admin' and 'User' roles, each with distinct capabilities.Both Admin and User roles can log in to the account, although the Admin role basically has the same capabilities as the owner of the account, such as adding new subscriptions, editing billing information, etc.Was this section helpful?12345PreviousManaging Team MembersNextHow do I get an additional API key?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/account/can-i-add-other-users-to-my-account)"
154,i.io market data how to guides real time trades stream using websocket with different languages,"i.io market data how to guides real time trades stream using websocket with different languages.   Real-time trades stream using WebSocket with different languages | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesAcquire exchange rates with different programming languagesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPIBuilding a cryptocurrency exchange comparison tool using Market Data APICreating a historical crypto price chart using CoinAPI and D3.jsFetching market data with KNIMEGet Historical OHLCV Data Using CoinAPIGet symbol funding rate metric data using CoinAPIImport API into PostmanImport data to Google Sheets/ExcelReal-time data visualization with javascriptReal-time trades stream using WebSocket with different languagesRetrieve and analyze crypto order book data using a cryptocurrency APITrading Essentials: QuickstartPerformance Testing GuideHow-to guidesReal-time trades stream using WebSocket with different languagesOn this pageReal-time trades stream using WebSocket with different languagesIntroduction​This tutorial will guide you on how to subscribe to real-time cryptocurrency market data using CoinAPI. We will explore using the WebSocket protocol in Python, JavaScript, and Java to get live market data updates.Understanding WebSocket Protocol​CoinAPI provides real-time data through the WebSocket protocol. WebSocket allows for full-duplex communication channels over a single TCP connection, making it an excellent choice for live data updates. The key endpoint for real-time data is wss://ws.coinapi.io/v1/. To subscribe to a specific type of data, you need to send a subscription message after the connection is established.Python Example​In Python, we can use the websocket-client library to connect to CoinAPI's WebSocket API. If you don't have the websocket-client library installed, you can add it using pip:pip install websocket-clientHere's an example of real time trade data retrieval:import websocketimport json def on_message(ws, message): print(message) def on_error(ws, error): print(error) def on_close(ws): print(""### closed ###"") def on_open(ws): ws.send(json.dumps({  ""type"": ""hello"",  ""apikey"": ""YOUR_API_KEY"",  ""subscribe_data_type"": [""trade""],  ""subscribe_filter_symbol_id"": [ ""BITSTAMP_SPOT_BTC_USD$"", ""BITFINEX_SPOT_BTC_USD$"" ] })) ws = websocket.WebSocketApp(""wss://ws.coinapi.io/v1"",        on_message = on_message,        on_error = on_error,        on_close = on_close)ws.on_open = on_openws.run_forever()This script:Opens WebSocket connectionSubscribes to real-time data for BTC/USD trading on Bitstamp and Bitfinex (you may replace with your desired cryptocurrency pair)Prints incoming real-time messagesNote: If subscribe_filter_symbol_id is ended with $ character then the exact match is used instead of prefix match.You can check out more message examples and hello message parameters.JavaScript Example​Make sure to install nodejs runtime environment before. First, add package.json with node-fetch dependency:{ ""type"": ""module"", ""dependencies"": { ""ws"": ""^8.13.0"" }}In JavaScript, you can use WebSocket API:import WebSocket from 'ws';const socket = new WebSocket('wss://ws.coinapi.io/v1/'); socket.onopen = function (event) { socket.send(JSON.stringify({  ""type"": ""hello"",  ""apikey"": ""YOUR_API_KEY"",  ""subscribe_data_type"": [""trade""],  ""subscribe_filter_symbol_id"": [ ""BITSTAMP_SPOT_BTC_USD$"", ""BITFINEX_SPOT_BTC_LTC$"" ] }));}; socket.onmessage = function (event) { console.log(event.data);}; socket.onerror = function (error) { console.log(`WebSocket error: ${error}`);};This script:Opens WebSocket connectionSubscribes to real-time data for BTC/USD trading on Bitstamp and Bitfinex (you may replace with your desired cryptocurrency pair)Prints incoming real-time messagesInstall dependencies via npm install command. Execute your program in nodejs runtime environment with node your-script-name.js command.Note: If subscribe_filter_symbol_id is ended with $ character then the exact match is used instead of prefix match.You can check out more message examples and hello message parameters.JavaScript in a web browser​Here's an example that works directly in a web browser, create index.html file, paste the code, and start in a web browser:<!DOCTYPE html><html><head> <title>Realtime Crypto Market Data Example</title></head><body> <script>  const socket = new WebSocket('wss://ws.coinapi.io/v1/');  socket.onopen = function (event) {   socket.send(JSON.stringify({    ""type"": ""hello"",    ""apikey"": ""YOUR_API_KEY"",    ""subscribe_data_type"": [""trade""],    ""subscribe_filter_symbol_id"": [""BITSTAMP_SPOT_BTC_USD$"", ""BITFINEX_SPOT_BTC_LTC$""]   }));  };  socket.onmessage = function (event) {   console.log(event.data);   const contentDiv = document.getElementById('content');   contentDiv.textContent += event.data;  };  socket.onerror = function (error) {   console.log(`WebSocket error: ${error}`);  }; </script>  <div id=""content""> </body></html>Java Example​If you're using a Maven project, include Java-WebSocket and JSON dependencies in your pom.xml file:<dependencies> <dependency>  <groupId>org.java-websocket</groupId>  <artifactId>Java-WebSocket</artifactId>  <version>1.5.1</version> </dependency> <dependency>  <groupId>org.json</groupId>  <artifactId>json</artifactId>  <version>20210307</version> </dependency> </dependencies>Here's a Java example that uses WebSocketClient and JSONObject classes:import org.java_websocket.client.WebSocketClient;import org.java_websocket.handshake.ServerHandshake;import org.json.JSONArray;import org.json.JSONObject;import java.net.URI;import java.net.URISyntaxException;public class Main { public static void main(String[] args) {  try {   WebSocketClient socket = new WebSocketClient(new URI(""wss://ws.coinapi.io/v1/"")) {        @Override    public void onOpen(ServerHandshake serverHandshake) {     JSONObject message = new JSONObject();     message.put(""type"", ""hello"");     message.put(""apikey"", ""YOUR_API_KEY"");     JSONArray subscribeDataType = new JSONArray();     subscribeDataType.put(""trade"");     message.put(""subscribe_data_type"", subscribeDataType);     JSONArray subscribeFilterSymbolId = new JSONArray();     subscribeFilterSymbolId.put(""BITSTAMP_SPOT_BTC_USD$"");     subscribeFilterSymbolId.put(""BITFINEX_SPOT_BTC_LTC$"");     message.put(""subscribe_filter_symbol_id"", subscribeFilterSymbolId);     this.send(message.toString());    }    @Override    public void onMessage(String message) {     System.out.println(message);    }    @Override    public void onClose(int code, String reason, boolean remote) {     System.out.println(""WebSocket closed"");    }    @Override    public void onError(Exception ex) {     System.out.println(""WebSocket error: "" + ex.getMessage());    }   };   socket.connect();  } catch (URISyntaxException e) {   e.printStackTrace();  } }}This Java program:Opens WebSocket connectionSubscribes to real-time data for BTC/USD trading on Bitstamp and Bitfinex (you may replace with your desired cryptocurrency pair)Prints incoming real-time messagesBest Practices​Handle connection issues: internet connections aren't always stable. Implement reconnection logic for robustness.Handle rate limiting: even for WebSocket connections, CoinAPI has rate limits. Keep track of your message rate.Secure your API Key: do not hardcode your API key. Make sure it is kept secure, consider using environment variables or secure config files which are not committed to your version control system.Note: If subscribe_filter_symbol_id is ended with $ character then the exact match is used instead of prefix match.You can check out more message examples and hello message parameters.Troubleshooting​If you're having issues, double-check the following:The API key is correct and has the required permissions.The WebSocket endpoint URL is correctly formatted.The subscription message contains a valid symbol_id.You have the correct libraries or dependencies installed, and you're using a supported version of the language.Stay tuned for more tutorials on advanced uses of CoinAPI!Was this section helpful?12345PreviousReal-time data visualization with javascriptNextRetrieve and analyze crypto order book data using a cryptocurrency APIIntroductionUnderstanding WebSocket ProtocolPython ExampleJavaScript ExampleJavaScript in a web browserJava ExampleBest PracticesTroubleshootingCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/how-to-guides/real-time-trades-stream-using-websocket-with-different-languages)"
155,i.io general faq api Empty response when using EMS endpoints,"i.io general faq api Empty response when using EMS endpoints.   Empty response when using EMS endpoints | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer EMS Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What is the rate limit for EMS Trading API?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQAPIEmpty response when using EMS endpointsEmpty response when using EMS endpointsThe https://ems-mgmt.coinapi.io/v1/endpoints endpoint returns an empty response in cases where there are no accounts defined. This is the reason why endpoints are not returned, as the EMS service cannot be rendered without any associated accounts. If the list is empty, it indicates the absence of defined accounts.For more information on adding new accounts or updating existing exchange accounts for your subscription in the EMS API, please refer to our documentation here [1].Reference: [1] https://docs.coinapi.io/ems-api/managed-cloud-rest-api/account/persist-accountWas this section helpful?12345PreviousDo you offer EMS Trading API?NextFIX API Logon TroubleshootingCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/api/Empty-response-when-using-EMS-endpoints)"
156,i.io ems api fix,"i.io ems api fix.   FIX API | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIREST APIWebSocket APIFIX APIMessagesSelf Hosted GuideFIX APIOn this pageFIX APIFinancial Information eXchange (FIX) protocol is an electronic communications protocol initiated in 1992 for international real-time exchange of information related to securities transactions and markets.You can use it for real-time order management and receiving execution reports from us, and it's an alternative to WebSocket protocol.Implemented Standards:FIX4.4FIX5.0SP2FIXT1.1infoIf you don't have experience with FIX protocol, consider using a much simpler to implement REST or WebSocket API.Endpoints​Default session configuration:[DEFAULT]DefaultApplVerID=FIX.5.0TransportDataDictionary=FIX/FIXT11.xmlAppDataDictionary=FIX/FIX50.xmlConnectionType=initiatorReconnectInterval=1ResetOnLogon=YResetOnLogout=YResetOnDisconnect=YSenderCompID=OMS.FIX.CLIENTSocketConnectPort=3401SocketConnectHost=127.0.0.1FIX 4.4 session configuration:[SESSION]BeginString=FIX.4.4StartTime=00:00:00EndTime=00:00:00TargetCompID=CoinAPI.OEML.FIXDataDictionary=FIX/FIX44.xmlHeartBtInt=1FileStorePath=storeFIX 5.0 / FIXT 1.1 session configuration:[SESSION]BeginString=FIXT.1.1StartTime=00:00:00EndTime=00:00:00TargetCompID=CoinAPI.OEML.FIXDataDictionary=FIX/FIX50.xmlHeartBtInt=1FileStorePath=storeDeploymentEnvironmentHostnamePortAuthenticationManaged CloudProductionUse Managed Cloud REST API /v1/locations to get specific endpoints to each server site where your deployments span3301TLS Client CertificateSelf HostedProductionIP Address of the ems-gateway container/excecutable in the closest server site to the caller location3401NoOur sesssion configuration parameters:ParameterValueHostnamelook at the table abovePortlook at the table aboveSpecifications*(XML FIX Specification can be downloaded here: FIX44.xml) FIX50.xml FIXT11.xml) Gateway timezone | UTC ReconnectInterval | 1 ResetOnLogon | Y ResetOnLogout | Y ResetOnDisconnect | Y SenderCompID | OMS.FIX.CLIENT TargetCompID | CoinAPI.OEML.FIX SocketConnectPort | look at the table above* StartTime | 00:00:00 EndTime | 00:00:00 HeartBtInt | 1Authentication​As you can observe in the documentation below in the Logon FIX Message, do not contain any authentication data. This is by design. If the software is deployed as Self-Hosted then API do not require authentication as inside your infrastructure, your company is responsible for the security and access controls. If the software is deployed in our Managed Cloud, then we need your client to provide us the certificate from the Managed Cloud REST API, while establishing a TLS session with us. We are using the that client certificate provided on the TLS layer, to authenticaticate your FIX session.Was this section helpful?12345PreviousMessagesNextMessagesEndpointsAuthenticationCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/fix)"
157,i.io general faq api What is the rate limit for EMS Trading API,"i.io general faq api What is the rate limit for EMS Trading API.   What is the rate limit for EMS Trading API? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer EMS Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What is the rate limit for EMS Trading API?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQAPIWhat is the rate limit for EMS Trading API?What is the rate limit for EMS Trading API?Our EMS Trading API has no rate limits.Was this section helpful?12345PreviousWhat happens if I exceed my plan’s REST API daily request limit?NextWhat languages do you support?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/api/What-is-the-rate-limit-for-EMS-Trading-API)"
158,i.io faq general Invalid API Key error for a newly purchased key,"i.io faq general Invalid API Key error for a newly purchased key.   ""Invalid API Key"" error for a newly purchased key | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneral""Invalid API Key"" error for a newly purchased key""Invalid API Key"" error for a newly purchased keyWe need a few minutes to propagate information about the new key through our independent server sites.This is by design as our multiple geographical independent sites are designed to be highly available and we didn't have a single point where the API keys are stored.Was this section helpful?12345PreviousI hardly use the REST API, why is my usage so high?NextIs latency higher for the exchanges which are providing only REST API?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/Invalid-API-Key-error-for-a-newly-purchased-key)"
159,i.io naas api bitcoin Methods estimatesmartfee,"i.io naas api bitcoin Methods estimatesmartfee.   estimatesmartfee | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsestimatesmartfeeOn this pageestimatesmartfeeOverview​The 'estimatesmartfee' RPC method allows you to estimate the smart fee per kilobyte required for a transaction to be processed within a certain number of blocks. It also returns the number of blocks for which the estimate is valid. Each call to this method consumes 1 API credit.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --body-data '{ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""estimatesmartfee"", ""params"": []}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""estimatesmartfee\"",\r \""params\"": []\r }\r "", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""estimatesmartfee"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""estimatesmartfee"", ""params"": []})headers = { 'Content-Type': 'application/json', 'accept': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""estimatesmartfee"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainpackage mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{`+""""+` ""jsonrpc"": ""1.0"",`+""""+` ""id"": ""1"",`+""""+` ""method"": ""estimatesmartfee"",`+""""+` ""params"": []`+""""+`}`+""""+``) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""estimatesmartfee"", ""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""estimatesmartfee\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​'conf_target' (numeric) Requirement: MandatoryThis parameter specifies the confirmation target in blocks.'estimate_mode' (string) Default Value: CONSERVATIVEhis parameter allows you to set the fee estimate mode. You can choose between different modes to get a more conservative or aggressive fee estimate.Response​{ ""blocks"": 6, ""feerate"": 0.00012345, ""errors"": [], ""str"": """"}'blocks' The block number where the estimate was found.'feerate' The estimated fee rate, denoted in BTC/kB.'errors' A list of errors encountered during the processing, if any.'str' A string describing the error in detail, if any error was encountered.NotesThe 'conf_target' parameter is essential to get an accurate fee estimate. It represents the number of blocks within which you want the transaction to be confirmed.The 'estimate_mode' parameter allows you to tailor the fee estimate according to your preference. The default value is ""CONSERVATIVE"", which provides a more cautious fee estimate.The method returns detailed information about the estimated fee, including the block number where the estimate was found and the estimated fee rate in BTC/kB.If there are any errors during the processing, the method will return the errors in the 'errors' field and a detailed error description in the 'str' field.Was this section helpful?12345PreviousdumpprivkeyNextfinalizepsbtOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/estimatesmartfee)"
160,i.io naas api bitcoin Methods getchaintxstats,"i.io naas api bitcoin Methods getchaintxstats.   getchaintxstats | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetchaintxstatsOn this pagegetchaintxstatsOverview​The 'getchaintxstats' method returns the current client version.Request​shellcsharpphppythonjavascriptgorubyjavacurl --location 'https://bitcoin-mainnet.node.coinapi.io' \--header 'x-coinapi-key: '73034021-THIS-IS-SAMPLE-KEY' \--header 'Content-Type: application/json' \--header 'accept: application/json' \--data '{""jsonrpc"":""2.0"",""method"":""getchaintxstats"",""params"": [],""id"":1}'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""getchaintxstats\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""getchaintxstats"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({""jsonrpc"": ""2.0"",""method"": ""getchaintxstats"",""params"": [],""id"": 1})headers = {'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY','Content-Type': 'application/json','accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""getchaintxstats"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""getchaintxstats"",""params"": [],""id"":1}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"")req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({""jsonrpc"": ""2.0"",""method"": ""getchaintxstats"",""params"": [],""id"": 1})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""getchaintxstats\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​Response​{ ""result"": { ""time"": 1696369677, ""txcount"": 902751827, ""window_final_block_hash"": ""00000000000000000004749a1d06c52c2442a7bec69ace34edb9a0d6e9102182"", ""window_final_block_height"": 810528, ""window_block_count"": 4320, ""window_tx_count"": 13661510, ""window_interval"": 2535793, ""txrate"": 5.38747050725355 }, ""error"": null, ""id"": 1}Was this section helpful?12345PreviousgetchaintipsNextgetconnectioncountOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getchaintxstats)"
161,i.io general faq account How do I make an account,"i.io general faq account How do I make an account.   How do I make an account? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountHow I can update my credit card / billing information?How can I change my CoinAPI account's email address?How can I get an invoice or receipt?How do I make an account?I want to change my account's name?Managing Team MembersCan I add other users to my account?How do I get an additional API key?APIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQCustomer AccountHow do I make an account?How do I make an account?Only emails related to active or canceled paid subscriptions can log into the Customer Portal, unless the Product Support Team created the Account. Your new account will be set up automatically with your first login if you are our paid customer.Was this section helpful?12345PreviousHow can I get an invoice or receipt?NextI want to change my account's name?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/account/How-do-I-make-an-account)"
162,i.io naas api bitcoin Methods importwallet,"i.io naas api bitcoin Methods importwallet.   importwallet | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsimportwalletOn this pageimportwalletOverview​The 'importwallet' method allows you to Add a public key (in hex) that can be watched as if it were in your wallet but cannot be used to spend. Requires a new wallet backup.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""importwallet"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""importwallet\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""importwallet"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({""jsonrpc"": ""2.0"",""method"": ""importwallet"",""params"": [],""id"": 1})headers = {'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY','Content-Type': 'application/json','accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""importwallet"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""importwallet"",""params"": [],""id"":1}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"")req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({""jsonrpc"": ""2.0"",""method"": ""importwallet"",""params"": [],""id"": 1})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""importwallet\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​filename: The wallet fileResponse​{ // Response structure here}Was this section helpful?12345PreviousimportpubkeyNextkeypoolrefillOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/importwallet)"
163,i.io naas api bitcoin Methods getaddressesbylabel,"i.io naas api bitcoin Methods getaddressesbylabel.   getaddressesbylabel | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetaddressesbylabelOn this pagegetaddressesbylabelOverview​The 'getaddressesbylabel' Returns the list of addresses assigned the specified label.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""getaddressesbylabel"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""getaddressesbylabel\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""getaddressesbylabel"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""2.0"", ""method"": ""getaddressesbylabel"", ""params"": [], ""id"": 1})headers = { 'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type': 'application/json', 'accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""getaddressesbylabel"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""getaddressesbylabel"",""params"": [],""id"":1}`) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"") req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""method"": ""getaddressesbylabel"", ""params"": [], ""id"": 1})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder().build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""2.0\"",\r \""id\"": \""1\"",\r \""method\"": \""getaddressesbylabel\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​label: The label.Response​{ ""result"": null, ""error"": { ""code"": -1, ""message"": ""getaddressesbylabel \""label\"" Returns the list of addresses assigned the specified label. Arguments: 1. label (string, required) The label. Result: {       (json object) json object with addresses as keys \""address\"" : {   (json object) json object with information about address  \""purpose\"" : \""str\""  (string) Purpose of address (\""send\"" for sending address, \""receive\"" for receiving address) }, ... } Examples: > bitcoin-cli getaddressesbylabel \""tabby\"" > curl --user myusername --data-binary '{\""jsonrpc\"": \""1.0\"", \""id\"": \""curltest\"", \""method\"": \""getaddressesbylabel\"", \""params\"": [\""tabby\""]}' -H 'content-type: text/plain;' http://127.0.0.1:8332/ "" }, ""id"": 1}Was this section helpful?12345PreviousgeneratetodescriptorNextgetbalanceOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getaddressesbylabel)"
164,i.io ems api managed cloud rest api account persist account,"i.io ems api managed cloud rest api account persist account.   Add or update account | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIAccountDelete accountDelete all accountsGet accountsAdd or update accountCertificateEndpointsExchangeLocationREST APIWebSocket APIFIX APISelf Hosted GuideManaged Cloud REST APIAccountAdd or update accountAdd or update accountPOST /v1/accountsAdd new or update existing exchange account for your subscription in the EMS API.application/jsonRequest Body requiredExchange account object that needs to be add/update to the EMSexchange_id stringExchange identifier and optional tag identifying specific account configured when the software will be managing multiple accounts on the same exchange; for eg: BITSTAMP BITSTAMP/7c177641-74bd-4dbe-9b01-2497c12a5f70` BITSTAMP/2574 Allowed separators between the exchange identifier and the tag: ~/.,:;!@#$%^&*-_+=.parameters object[]Parameters required to log into the exchangeArray [key stringvalue string]Responses400405Invalid exchange idValidation exceptionLoading...Was this section helpful?12345PreviousGet accountsNextCertificateCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/managed-cloud-rest-api/account/persist-account)"
165,i.io market data how to guides get symbol funding rate metric data,"i.io market data how to guides get symbol funding rate metric data.   Get symbol funding rate metric data using CoinAPI | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesAcquire exchange rates with different programming languagesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPIBuilding a cryptocurrency exchange comparison tool using Market Data APICreating a historical crypto price chart using CoinAPI and D3.jsFetching market data with KNIMEGet Historical OHLCV Data Using CoinAPIGet symbol funding rate metric data using CoinAPIImport API into PostmanImport data to Google Sheets/ExcelReal-time data visualization with javascriptReal-time trades stream using WebSocket with different languagesRetrieve and analyze crypto order book data using a cryptocurrency APITrading Essentials: QuickstartPerformance Testing GuideHow-to guidesGet symbol funding rate metric data using CoinAPIOn this pageGet symbol funding rate metric data using CoinAPIThis comprehensive tutorial guides you through the process of retrieving current metric data from the example exchange using an API. Whether you're a developer, data analyst, or trader, having access to real-time metrics is crucial for making informed decisions.Introduction​The API we'll be working with provides access to a wide range of real-time metrics for various symbols and exchanges. You can use this API to fetch current metrics for specific metric identifiers, symbol identifiers, and exchange identifiers.Understanding the API Endpoints​Let's dive into the details of the API endpoints that allow you to access current metric data:/v1/metrics/symbol/listing​HTTP Method: GETSummary: Listing of all supported metrics for symbolDescription: This endpoint enables you to retrieve a comprehensive listing of all the supported metrics available for a specific symbol. It's a valuable resource to understand the types of metrics you can access.Parameters:metric_id (query): Metric identifier (type: string)exchange_id (query): Exchange identifier (type: string)symbol_id (query): Symbol identifier (type: string)Responses:200: Successful operationtext/plain, application/json, text/json, application/x-msgpack: Array of ListingItemExample Request:GET /v1/metrics/symbol/listing?exchange_id=BINANCEFTSCThe above command returns JSON structured like this:[ {  ""metric_id"": ""DERIVATIVES_MARK_PRICE"",  ""symbol_id"": ""BINANCEFTSC_PERP_ETH_USD"",  ""symbol_id_external"": ""ETHUSD_PERP"",  ""exchange_id"": ""BINANCEFTSC"" }, {  ""metric_id"": ""DERIVATIVES_FUNDING_RATE_CURRENT"",  ""symbol_id"": ""BINANCEFTSC_PERP_LTC_USD"",  ""symbol_id_external"": ""LTCUSD_PERP"",  ""exchange_id"": ""BINANCEFTSC"" }, {  ""metric_id"": ""LIQUIDATION_AVERAGE_PRICE"",  ""symbol_id"": ""BINANCEFTSC_PERP_OP_USD"",  ""symbol_id_external"": ""OPUSD_PERP"",  ""exchange_id"": ""BINANCEFTSC"" }, {  ""metric_id"": ""LIQUIDATION_ORDER_STATUS"",  ""symbol_id"": ""BINANCEFTSC_FTS_BCH_USD_231229"",  ""symbol_id_external"": ""BCHUSD_231229"",  ""exchange_id"": ""BINANCEFTSC"" }]/v1/metrics/symbol/current​HTTP Method: GETSummary: Current metrics for a given symbolDescription: Use this endpoint to fetch real-time metrics for a specific symbol. Whether you're interested in price, volume, or other key metrics, this endpoint provides up-to-the-minute data.Parameters:metric_id (query): Metric identifier (type: string)symbol_id (query): Symbol identifier (type: string)exchange_id (query): Exchange identifier (type: string)Responses:200: Successful operationtext/plain, application/json, text/json, application-x-msgpack: Array of GeneralDataExample Request:GET /v1/metrics/symbol/current?metric_id=DERIVATIVES_FUNDING_RATE_CURRENT&symbol_id=BINANCEFTSC_PERP_ETH_USD&exchange_id=BINANCEFTSCThe above command returns JSON structured like this:[ {  ""entry_time"": ""2023-10-17T14:59:00.0828571Z"",  ""recv_time"": ""2023-10-17T14:59:00.0819390Z"",  ""exchange_id"": ""BINANCEFTSC"",  ""symbol_id"": ""BINANCEFTSC_PERP_ETH_USD"",  ""metric_id"": ""DERIVATIVES_FUNDING_RATE_CURRENT"",  ""value_decimal"": 0.00000269 }]/v1/metrics/symbol/history​HTTP Method: GETSummary: Historical metrics for a symbolDescription: If you need historical metric data for a symbol, this endpoint has you covered. You can specify the time range, format, and limit the number of data points returned.Parameters:metric_id (query, required): Metric identifier (type: string)symbol_id (query, required): Symbol identifier (type: string)time_start (query): Starting time in ISO 8601 format (type: string, format: date-time)time_end (query): Ending time in ISO 8601 format (type: string, format: date-time)time_format (query): If set, returned values will be in the Unix timestamp format (valid values: unix_sec, unix_millisec, unix_microsec, unix_nanosec) (type: string)period_id (query): Identifier of the requested time series period (e.g., 5SEC or 2MTH) (type: string)limit (query): Amount of items to return (optional, the minimum is 1, the maximum is 100000, the default value is 100, if the parameter is used then every 100 output items are counted as one request) (type: integer, format: int32, default: 100)Responses:200: Successful operationtext/plain, application/json, text/json, application-x-msgpack: Array of MetricDataExample Request:GET /v1/metrics/symbol/history?metric_id=DERIVATIVES_FUNDING_RATE_CURRENT&symbol_id=BINANCEFTSC_PERP_ETH_USD&time_start=2023-03-01T00:00:00&time_end=2023-03-10T00:00:00&time_format=unix_sec&period_id=1HRS&limit=100The above command returns JSON structured like this:[ {  ""time_period_start"": 1677628800,  ""time_period_end"": 1677632400,  ""time_open"": 1677628800,  ""time_close"": 1677632340,  ""first"": -0.00013075,  ""last"": -0.00011917,  ""min"": -0.00013373,  ""max"": -0.00011458,  ""count"": 57,  ""sum"": -0.00702479 }, {  ""time_period_start"": 1677632400,  ""time_period_end"": 1677636000,  ""time_open"": 1677632400,  ""time_close"": 1677635940,  ""first"": -0.00011952,  ""last"": -9.289E-05,  ""min"": -0.0001221,  ""max"": -9.267E-05,  ""count"": 57,  ""sum"": -0.006305099999999999 }, {  ""time_period_start"": 1677636000,  ""time_period_end"": 1677639600,  ""time_open"": 1677636003,  ""time_close"": 1677639540,  ""first"": -9.265E-05,  ""last"": -5.219E-05,  ""min"": -9.265E-05,  ""max"": -5.219E-05,  ""count"": 56,  ""sum"": -0.004191260000000001 }, {  ""time_period_start"": 1677639600,  ""time_period_end"": 1677643200,  ""time_open"": 1677639600,  ""time_close"": 1677643143,  ""first"": -5.016E-05,  ""last"": 4.839E-05,  ""min"": -5.016E-05,  ""max"": 4.839E-05,  ""count"": 57,  ""sum"": -4.3300000000000144E-06 }, {  ""time_period_start"": 1677643200,  ""time_period_end"": 1677646800,  ""time_open"": 1677643260,  ""time_close"": 1677645000,  ""first"": 5.084E-05,  ""last"": 0.0001,  ""min"": 5.084E-05,  ""max"": 0.0001,  ""count"": 29,  ""sum"": 0.00223415 }]Best Practices​To ensure a smooth experience while using this API, consider the following best practices:Secure Your API Keys: Always store API keys securely and avoid hard-coding them in your code.Rate Limiting: Be aware of rate limits and handle rate limit-exceeded responses (HTTP 429) gracefully.Efficient Data Fetching: Use query parameters effectively to retrieve the data you need without unnecessary requests.Troubleshooting​If you encounter any issues while working with this API, here are some troubleshooting tips:API Key: Ensure your API key is correct and has the necessary permissions.Rate Limits: Stay within the rate limits for your account type to avoid rate limit exceeded responses.Endpoint and Headers: Use the correct endpoint and provide proper request headers.Parameter Validity: Verify the validity and format of symbol and period IDs.Dependencies: Ensure you have the required libraries or dependencies installed.For more detailed information, refer to the API documentation.Was this section helpful?12345PreviousGet Historical OHLCV Data Using CoinAPINextImport API into PostmanIntroductionUnderstanding the API Endpoints/v1/metrics/symbol/listing/v1/metrics/symbol/historyBest PracticesTroubleshootingCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/how-to-guides/get-symbol-funding-rate-metric-data)"
166,i.io ems api,"i.io ems api.   EMS - Starter Guide | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIREST APIWebSocket APIFIX APISelf Hosted GuideEMS APIOn this pageEMS - Starter GuideThis section will provide general information about the Execution Management System API (EMS API) software product and enumerate a number of features that it provides.infoThe keywords ""MUST"", ""MUST NOT"", ""REQUIRED"", ""SHALL"", ""SHALL NOT"", ""SHOULD"", ""SHOULD NOT"", ""RECOMMENDED"", ""MAY"", and ""OPTIONAL"" in this document are to be interpreted as described in RFC 2119.What is EMS API?​Execution Management System (EMS) is a software that manages orders, executions, and exposure in an efficient, fast, cost-effective, and straightforward manner. An EMS allows you to route orders to multiple cryptocurrency exchanges simultaneously using a simple, robust, and unified Application Programming Interface (API).The software can be used in 2 different ways:Managed Cloud - Everything on our side. Hosted in the Cloud by CoinAPI. You manage the deployment using the REST API.Self-Hosted - Software on our side, on everything else.Dimension ComparisonManaged CloudSelf-HostedEase of use/installationVery easyHardTime to marketFastSlowDevOps team required to maintainNoYesOrder flow sent directly to the destinationNoYesWho manages the infrastructure (incl. monitoring)CoinAPIYouWho optimizes the latencyCoinAPIYou (CoinAPI only in software)How to installInstruct our Cloud Mgmt APIInstall on your infrastructurecautionWe recommend starting with the Managed Cloud and possibly upgrading to the Self-Hosted if the requirements of the integration/project will make that commercially reasonable.Architecture and components​A self-hosted EMS cluster can be deployed on a single server or multiple servers that will span multiple geographical locations, server sites, or cloud providers. In the Managed Cloud version, you did not care about that as we manage the server sites to be as close to the order destinations as possible.EMS consists of several components listed and ordered by dependency relationship:Exchange - Order destination, exchange, or broker.CoinAPI EMS Edge - Software that's responsible for communicating with the single specific order destination for which is deployed. This component exposes the EMS API for diagnostics purposes which functions visibility are limited to this single destination.CoinAPI EMS API - Software that's responsible for exposing fully functional the EMS API, maintaining the connection with all instances of CoinAPI EMS Edge.Customer Application - Customer software using the EMS API exposed by the CoinAPI EMS API component.Benefits and features​Low latency support​Specific projects usually involve High-Frequency Trading (HFT) or Market Making (MM) requiring low latency access to the order destination. EMS API was designed to have native support for this kind of activity.For every order destination in the cluster to which the submillisecond latency is required, these components should be deployed on a single server as close as possible to the order destination:CoinAPI EMS EdgeCoinAPI EMS APICustomer Application The closest proximity can be achieved using the:cloud region and/or availability zone the same as the destinationcollocation near the destinationcross-connect or direct-connect to the destination network infrastructureshortcutting the routers, SNAT/DNAT hosts, or proxies like CloudFlareThe cluster can naturally contain other order destinations at the same time in this setup, and this fact doesn't affect the latency to the locally provisioned destination(s).Normalized API abstraction​Our EMS API provides an abstraction layer that consolidates all supported third-party APIs into a single set of simple and robust data models and protocols. The Exchanges and the Assets are standardized using the Market Data REST API with which this product is compatible. More information about the exchanges and asset standardization can be found in the Documentation of the Market Data Product.Industry-standard protocols​Our API's can be accessed using multiple protocols widely adopted by the industry as a standard:RESTWebSocketFIX 4.4, 5.0FIXT 1.1Self-host or in Cloud​Deploy your property applications and trading algorithms in your company's collocated data centers or cloud providers if you need that, otherwise, let us manage the infrastructure and focus on using the API.Security & Privacy​Don't need to worry about the issues at the audit. Order flow, exchange API keys, or execution reports never leave your company infrastructure as the product is self-hosted.tipThe software complies with the ""SOC 2"" and ""ISO/IEC 27001 information security certifications.Multi-account support​Manage an unlimited number of exchange accounts in the cluster (for example, on behalf of your customers).SDK and samples for 40+ languages​We have the SDK libraries and code samples available for more than 40+ languages. The full list is available here: https://github.com/coinapi/coinapi-sdk/tree/masterComprehensive support​Leverage support for all market types and order types.High-quality integrations​Our integrations with third-party APIs are heavily tested and crafted with stability and latency in mind. For several third parties, we usually use multiple protocols simultaneously or tricks to acquire valuable pieces of information faster.Enterprise-grade support and maintenance​EMS product is fully supported and maintained to stay ahead of the curve. This approach offloads the often disliked responsibilities of the Software and DevOps Engineers in the organization and enables them to focus on the core business.High availability​The EMS software is designed to support high-availability deployments out of the box. For each order destination, we/you deploy multiple CoinAPI EMS Edge and CoinAPI EMS API components on different servers, availability zones, or cloud/infrastructure providers. Cluster using the service discovery backend, all components are automatically detected and interconnected.P&L and asset monitoring​Using the EMS, your organization can manage exposure and positions in real-time across all supported order destinations and build sophisticated risk management controls.Order lifecycle​This section will describe the lifecycle of the order in the EMS software.Order status description​This table describes how to interpret a specific order status.NameCan transit toStatus descriptionRECEIVEDREJECTEDROUTINGThe order is processed by the EMS.ROUTINGROUTEDThe order is (on the wire) between the EMS and the Exchange.ROUTEDREJECTEDNEWPARTIALLY_FILLEDFILLEDCANCELEDThe order has been sent to the exchange and not yet active in the order book.NEWPARTIALLY_FILLEDFILLEDPENDING_CANCELCANCELEDThe order is active in the book in its original state.PENDING_CANCELNEWPARTIALLY_FILLEDFILLEDCANCELEDThe order cancelation message has been sent to the Order destination.PARTIALLY_FILLEDFILLEDPENDING_CANCELCANCELEDThe order is partially filled and active in the order book.FILLEDThe order is filled and removed from the order book. This state is terminal.CANCELEDThe order is canceled and removed from the order book. This state is terminal.REJECTEDThe order is rejected. This state is terminal.Order status lifecycle​This table describes how to interpret transitions between order statuses and their initial values.Source StatusDestination statusDescriptionRECEIVEDEMS received a new order via the API.NEWEMS received an unseen new order from the Order destination. The order was relayed to the destination outside the EMS.PARTIALLY_FILLEDEMS received unseen partially filled order from the Order destination. The order was relayed to the destination outside the EMS.RECEIVEDREJECTEDEMS rejected the order.RECEIVEDROUTINGEMS delivering the order to the Order destination.ROUTINGROUTEDEMS sent the order to the Order destination.ROUTEDREJECTEDEMS received a message from the exchange that the order was rejected.ROUTEDNEWEMS received a message from the exchange that the order is active in the book in its original state.ROUTEDPARTIALLY_FILLEDEMS received a message from the exchange that part of the order was executed aggressively (removed liquidity). The remaining passive part is active in the book.ROUTEDFILLEDEMS received a message from the exchange that the order was executed aggressively (removed liquidity).ROUTEDCANCELEDEMS received a message from the exchange that the order is in the canceled state. The order has not been in the book as the conditions for the entry were not satisfied.NEWPARTIALLY_FILLEDEMS received a message from the exchange that part of the passive order was filled.NEWFILLEDEMS received a message from the exchange that the passive order is filled.NEWPENDING_CANCELEMS received cancel request for the order and successfully relayed it to the Order destination.NEWCANCELEDEMS received a message from the exchange that the passive order was canceled.PARTIALLY_FILLEDFILLEDEMS received a message from the exchange that the remaining part of the passive order is filled.PARTIALLY_FILLEDPENDING_CANCELEMS received cancel request for the remaining part of the passive order and successfully relayed it to the Order destination.PARTIALLY_FILLEDCANCELEDEMS received a message from the exchange that the remaining part of the passive order is canceled.PENDING_CANCELNEWEMS received a message from the exchange that updated the order before processing the cancellation request or the order cancellation request was rejected.PENDING_CANCELPARTIALLY_FILLEDEMS received a message from the exchange that updated the order before processing the cancellation request or the order cancellation request was rejected.PENDING_CANCELFILLEDEMS received a message from the exchange that updated the order before processing the cancellation request or the order cancellation request was rejected.PENDING_CANCELCANCELEDEMS received a message from exchange` that updated the order before processing the cancellation request or the order cancellation request was rejected.Order parameters​This section will describe parameters of the order in the EMS sofware.Order type​EMS supports only the LIMIT order type. Market orders don't have price protection, and because of that, they are not supported. As an alternative, you can use the Immediate or Cancel IOC order and provide the worst execution price to achieve the same result.Time in force​Time in force is a special instruction used when placing a trade to indicate how long an order will remain active before it expires.The table below describes how to interpret time in force parameter values.Time in forceShortcodeDescriptionGOOD_TILL_CANCELGTCA Good Till Cancel (GTC) is a default type of time-in-force. The order that lasts until is completed or canceled.GOOD_TILL_TIME_EXCHANGEGTTEThe Good Till Time Exchange (GTTE) time in force lets you set an expiration date and time up until which an order will be active in the book. The exchange handles the execution of the cancel originated from parameter.GOOD_TILL_TIME_OEMLGTTOThe Good Till Time OEML (GTTO) time in force lets you set an expiration date and time up until which an order will be active in the book. The CoinAPI EMS Edge sending the cancel request originated from the parameter. Worth mentioning that: (a) The cancellation request will not be sent if the software will be not be running at the time of expiration. (b) This parameter does not depend on the exchange. (c) The clock of the server running CoinAPI EMS Edge is used to trigger the cancelation request at the expiration.FILL_OR_KILLFOKFill or kill (FOK) is a type of time in force used to instruct an exchange to execute a transaction immediately and completely or not at all. This order will only remove liquidity from the order book. It must be filled in its entirety or canceled (killed).IMMEDIATE_OR_CANCELIOCAn immediate or cancel order (IOC) is a type of time in force used to instruct an exchange to execute all or part immediately and cancels any unfilled portion of the order. This order will only remove liquidity from the order book. It will fill whatever part of the order it can immediately and cancel any remaining amount so that no part of the order is added to the order book.The table below displays a breakdown of the EMS support of specific time in force values by the Order destination. Order destination idGTCGTTEGTTOFOKIOCBINANCEXXXXBINANCEUATXXXXBINANCEJEXXXXBINANCEUSXXXXBINANCEFTSXXXXBINANCEFTSUATXXXXBINANCEFTSCXXXXBINANCEFTSCUATXXXXBINANCEOPTVXXXXBINANCEOPTVUATXXXXBITFINEXXXXXXBITMEXXXXXBITMEXUATXXXXBITSTAMPXXXXBLOCKCHAINEXCHANGEXXXXCOINBASEXXXXGEMINIXXXXHITBTCXXXXXKRAKENXXXKRAKENFTSXXXPOLONIEXXXXXLMAXDIGITALXXXXLMAXDIGITALUATXXXXDERIBITXXXXDERIBITUATXXXXDYDXXXXXXLegend: X - supported.Execution instructions​Execution instruction puts restrictions on order handling at the matching engine. More than one instruction can apply to an order. The table below describes how to interpret execution instructions parameter values. Legend: X - supported.InstructionShortcodeDescriptionAUCTION_ONLYAOAn Auction Only (AO) instructs exchange that this order is for the auction only book for the next auction. The order may be cancelled up until the the auction locks, after which cancel requests will be rejected.INDICATION_OF_INTERESTIOIAn indication of interest (IOI) instructs exchange that this order should be processed as request for liquidity from block trading market markets.MAKER_OR_CANCELMOCA Maker or cancel (MOC) instructs exchange that this order will only add liquidity to the order book. If any part of the order could be filled immediately, the whole order will instead be rejected before any execution occurs. This instruction is also known as Post only or Participate don't initiate.CANCEL_ON_DISCONNECTCODCancel on System Failure (Cancel on disconnect)DO_NOT_CANCEL_ON_DISCONNECTNCODReinstate on System Failure (Do not cancel on disconnect)DO_NOT_INCREASEDNI(Reduce only) If part of a position is closed by any other means than the reduce-only order, the reduce-only order will be automatically adjusted downwards. If the trader decides to increase their position before the reduce-only order is executed, the quantity of the reduce-only order will not increase as well.The table below displays a breakdown of the EMS support of specific execution instructions by the Order destination. Order destination idMOCAOIOICODNCODDNIBINANCEXBINANCEUATXBINANCEJEXBINANCEUSXBINANCEFTSXBINANCEFTSUATXBINANCEFTSCXBINANCEFTSCUATXBINANCEOPTVXBINANCEOPTVUATXBITFINEXXBITMEXXBITMEXUATXBITSTAMPBLOCKCHAINEXCHANGEXCOINBASEXGEMINIXXXHITBTCKRAKENFTSXKRAKENXPOLONIEXXLMAXDIGITALXXLMAXDIGITALUATXXDERIBITXXDERIBITUATXXDYDXXXLegend: X - supported.Market Orders​While our API inherently supports limit orders, we understand the necessity for some clients to operate with market orders. This documentation provides a technical solution for simulating market orders using our limit order functionality with the Fill or Kill (FOK) option.Technical Solution​To mimic the behavior of a market order using our API, which inherently supports limit orders, clients can place a limit order with a Fill or Kill (FOK) condition. This approach effectively replicates the immediate execution characteristic of a market order while requiring the specification of a maximum (for buy orders) or minimum (for sell orders) price limit.Implementation Steps:Prepare the Order:Define the order as a limit order. Set the price limit to the maximum price the client is willing to pay for a buy order or the minimum price they are willing to accept for a sell order. Ensure that the order quantity meets the client's requirement for the transaction.Set the FOK Condition:Apply the Fill or Kill condition to the order. This condition mandates that the order must be executed immediately in its entirety or not executed at all. It ensures that partial fills do not occur, closely aligning with the nature of a market order.Execution and Validation:Upon submission, the EMS will attempt to fill the order immediately based on the specified price limits and the FOK condition. If the order cannot be filled immediately and completely within the defined price range, it will be automatically cancelled, ensuring no partial fills.Advantages and Considerations​Immediate Execution: The FOK condition ensures that the order, if executed, is filled immediately, mirroring the behavior of a market order.Price Control: Clients maintain control over the maximum or minimum price limits, adding a layer of price protection that standard market orders do not provide.Simplicity: This method avoids the need for additional development or integration, utilizing the existing infrastructure of our API.Using a limit order API can be considered simpler and more straightforward for several reasons, especially when compared to other types of trading orders. Here are some factors that contribute to the perceived simplicity:Predictability and Control:Price Certainty: Limit orders allow users to specify the maximum or minimum price at which they are willing to buy or sell an asset. This provides certainty about the price, which is not the case with market orders, where the execution price can vary.Control over Execution: Users have better control over their trades. They can decide not to execute a trade if the market does not reach their specified price, avoiding unwanted entries or exits in volatile market conditions.Consistent behaviour: Not all the order destinations support market orders or when they support it, usually they are implmeneted in form of limit orders.Straightforward Implementation:Simplicity in API Design: Limit order APIs are generally straightforward to implement and integrate because the parameters are clear and well-defined (quantity, price, and sometimes duration).Fewer Real-time Considerations: Unlike market orders, where getting the best available price in real-time is crucial, limit orders are placed based on predefined criteria. This can reduce the complexity associated with rapid decision-making and real-time data processing.Reduced Need for Immediate Market Data:Less Dependency on Real-time Pricing: Since the execution of a limit order is based on the user's specified price, there's less need for immediate or real-time market data, unlike market orders where knowing the current market price is crucial for order execution.Cost Predictability:Avoidance of Slippage: With limit orders, the risk of slippage (the difference between the expected price of a trade and the price at which the trade is executed) is eliminated. Users can be more confident about the cost of their trades, making financial planning and risk management more straightforward.Ease of Monitoring and Management:Set and Forget: Users can place limit orders and not worry about monitoring the market constantly. The order will only execute if the market price meets the user's criteria, making it a more passive form of trading.Batch Processing Friendly: For applications or trading strategies that place numerous orders, limit orders can be more manageable as they don't require immediate processing or constant monitoring of market prices.Reduced Impact on Market Price:Minimized Market Disruption: Limit orders can be less disruptive to the market price, especially for large orders. They are executed only at the user's specified price, avoiding large, sudden impacts on the market price that can occur with large market orders.In summary, a limit order API can offer a simpler and more controlled trading experience, with price certainty, reduced need for real-time market data, straightforward implementation, and predictable costs. These factors contribute to its appeal, especially for users or systems focusing on strategic, planned trading activities rather than immediate, real-time market engagement.Time​For all input and output time values ISO 8601 standard is used.Format specifierDescriptionyyyyThe year as a four-digit number.MMThe month, from 01 through 12.ddThe day of the month, from 01 through 31.HHThe hour, using a 24-hour clock from 00 to 23.mmThe minute, from 00 through 59.ssThe second, from 00 through 59.fffThe milliseconds in a date and time value.fffffffThe ten millionths of a second in a date and time value.Input time values are parsed using the following formats as far as possible:yyyy-MM-ddTHH:mm:ss.fffffffyyyy-MM-ddTHH:mm:ss.fffyyyy-MM-ddTHH:mm:ssyyyy-MM-ddTHH:mmyyyy-MM-ddTHHyyyy-MM-ddyyyyMMddTHHmmssfffffffyyyyMMddTHHmmssfffyyyyMMddTHHmmssyyyyMMddTHHmmyyyyMMddTHHyyyyMMddinfoWhen time zone information is not supplied, we will assume the UTC time zone.Output time values are formatted using the following patterns:yyyy-MM-ddTHH:mm:ss.fffffffZyyyy-MM-ddinfoAll time values we provide are UTC time zone. Do not assume otherwise.Was this section helpful?12345NextAuthenticationWhat is EMS API?Architecture and componentsBenefits and featuresLow latency supportNormalized API abstractionIndustry-standard protocolsSelf-host or in CloudSecurity & PrivacyMulti-account supportSDK and samples for 40+ languagesComprehensive supportHigh-quality integrationsEnterprise-grade support and maintenanceHigh availabilityP&L and asset monitoringOrder status descriptionOrder status lifecycleMarket OrdersTechnical SolutionAdvantages and ConsiderationsTimeCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api)"
167,i.io market data rest api indexes update index,"i.io market data rest api indexes update index.   Update index | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIREST APIExchange RatesIndexesCreate indexGet index dataList of available indexesRetrieve Historical Composition Value Timeseries Retrieves historical timeseries for the specific composition value for an indexRetrieve Historical Index Value and CompositionRetrieve Historical Index Value TimeseriesUpdate indexMetadataMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket APIFIX APIS3 APIJSON RPCEMS APIFAQCustomer PortalChangelogMarket Data APIREST APIIndexesUpdate indexUpdate indexPUT /v1/indexes/:index_idUpdate indexPath Parametersindex_id string requiredapplication/jsontext/jsonapplication/*+jsonapplication/x-msgpackRequest Bodyindex_id string nullableGets or sets the index ID associated with the index.name string nullableGets or sets the name associated with the index.description string nullableGets or sets the descripion of the index.index_method string nullableGets or sets the index method.index_method_parameters object nullableGets or sets the parameters of the index method.property name* stringperiod_recalculation string nullableGets or sets the period recalculation of the index.visibility_public boolean nullableGets or sets the visibility public of the index.notify_emails string nullableGets or sets the notify emails of the index.components object[] nullableGets or sets the components of the index.Array [component_id string nullableevaluation_method string nullableevaluation_method_parameters object nullableproperty name* string]Request Bodyindex_id string nullableGets or sets the index ID associated with the index.name string nullableGets or sets the name associated with the index.description string nullableGets or sets the descripion of the index.index_method string nullableGets or sets the index method.index_method_parameters object nullableGets or sets the parameters of the index method.property name* stringperiod_recalculation string nullableGets or sets the period recalculation of the index.visibility_public boolean nullableGets or sets the visibility public of the index.notify_emails string nullableGets or sets the notify emails of the index.components object[] nullableGets or sets the components of the index.Array [component_id string nullableevaluation_method string nullableevaluation_method_parameters object nullableproperty name* string]Request Bodyindex_id string nullableGets or sets the index ID associated with the index.name string nullableGets or sets the name associated with the index.description string nullableGets or sets the descripion of the index.index_method string nullableGets or sets the index method.index_method_parameters object nullableGets or sets the parameters of the index method.property name* stringperiod_recalculation string nullableGets or sets the period recalculation of the index.visibility_public boolean nullableGets or sets the visibility public of the index.notify_emails string nullableGets or sets the notify emails of the index.components object[] nullableGets or sets the components of the index.Array [component_id string nullableevaluation_method string nullableevaluation_method_parameters object nullableproperty name* string]Request Bodyindex_id string nullableGets or sets the index ID associated with the index.name string nullableGets or sets the name associated with the index.description string nullableGets or sets the descripion of the index.index_method string nullableGets or sets the index method.index_method_parameters object nullableGets or sets the parameters of the index method.property name* stringperiod_recalculation string nullableGets or sets the period recalculation of the index.visibility_public boolean nullableGets or sets the visibility public of the index.notify_emails string nullableGets or sets the notify emails of the index.components object[] nullableGets or sets the components of the index.Array [component_id string nullableevaluation_method string nullableevaluation_method_parameters object nullableproperty name* string]Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Schemaindex_id string nullablestatus string nullable{ ""index_id"": ""string"", ""status"": ""string""}SchemaExample (from schema)Schemaindex_id string nullablestatus string nullable{ ""index_id"": ""string"", ""status"": ""string""}SchemaExample (from schema)Schemaindex_id string nullablestatus string nullable{ ""index_id"": ""string"", ""status"": ""string""}SchemaExample (from schema)Schemaindex_id string nullablestatus string nullable{ ""index_id"": ""string"", ""status"": ""string""}Loading...Was this section helpful?12345PreviousRetrieve Historical Index Value TimeseriesNextMetadataCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/indexes/update-index)"
168,i.io faq general Which assets or currencies are listed,"i.io faq general Which assets or currencies are listed.   Which assets or currencies are listed? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralWhich assets or currencies are listed?Which assets or currencies are listed?Listing of the assets integrated can be seen by using the assets endpoint: https://rest.coinapi.io/v1/assets/Was this section helpful?12345PreviousWhere is CoinAPI infrastructure located?NextWhy am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/Which-assets-or-currencies-are-listed)"
169,i.io naas api ethereum Methods trace rawTransaction,"i.io naas api ethereum Methods trace rawTransaction.   trace_rawTransaction | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodstrace_rawTransactionOn this pagetrace_rawTransactionOverview​The 'trace_rawTransaction' method allows users to retrieve internal transactions that occurred during the execution of a specific Ethereum transaction. This is particularly useful for understanding the internal operations of complex smart contract interactions.Request​{ ""transaction_hash"": ""YOUR_TRANSACTION_HASH"", ""api_key"": ""YOUR_API_KEY""}Request Parameters​transaction_hash: The hash of the Ethereum transaction you want to trace.api_key: Your CoinAPI API key.Response​{ ""transaction_hash"": ""YOUR_TRANSACTION_HASH"", ""block_number"": 1234567, ""from_address"": ""0xSenderAddress"", ""to_address"": ""0xReceiverAddress"", ""value"": ""0.5 ETH"", ""gas_used"": 21000, ""internal_transactions"": [ {  ""from_address"": ""0xInternalSender"",  ""to_address"": ""0xInternalReceiver"",  ""value"": ""0.1 ETH"",  ""gas_used"": 5000 } // ... more internal transactions if any ]}Errors​Invalid Request: This error is returned if the request format is incorrect.Internal Error: This error is returned if there's a server-side issue processing the request.Rate Limits​Please note that there are rate limits applied to the API to ensure fair usage. Free-tier users are limited to 100 requests per day, while premium users can make up to 1000 or more requests per day.Support​If you encounter any issues or have further questions regarding the eth_getBlockByHash method, please contact our support team at [email protected].Was this section helpful?12345Previoustrace_filterNexttrace_replayBlockTransactionsOverviewRequestRequest ParametersResponseErrorsRate LimitsSupportCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/trace_rawTransaction)"
170,i.io naas api bitcoin Methods getreceivedbylabel,"i.io naas api bitcoin Methods getreceivedbylabel.   getreceivedbylabel | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetreceivedbylabelOn this pagegetreceivedbylabelshellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY""' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""getreceivedbylabel"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"""");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""getreceivedbylabel\"",\""params\"": [ ]}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY""'];$body = '{ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getreceivedbylabel"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection(""mainnet-bitcoin.node.coinapi.io"")payload = json.dumps({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""getreceivedbylabel"",""params"": []})headers = {'Content-Type': 'application/json','accept': 'application/json','X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY""'}conn.request(""POST"", ""/"", payload, headers)res = conn.getresponse()data = res.read()print(data.decode(""utf-8""))var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"""" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getreceivedbylabel"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""id"":1,""method"":""getreceivedbylabel"",""params"": [ ]}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"""")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getreceivedbylabel"", ""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""getreceivedbylabel\"",\""params\"": [ ]}"");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"""") .build();Response response = client.newCall(request).execute();Overview​The 'getreceivedbylabel' method allows you to retrieve the total amount received by addresses associated with a specific label in transactions with at least a specified number of confirmations.Request​Get specific rate GETRequest Parameters​label (string, required): The label you want to query. It could be the default label using an empty string (“”).minconf (numeric, optional, default=1): The minimum number of confirmations a transaction needs to have to be included in the response. The default value is 1.Response​{ ""n"": ""numeric"", ""description"": ""The total amount in BTC received for this label.""}Was this section helpful?12345PreviousgetreceivedbyaddressNextgetrpcinfoOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getreceivedbylabel)"
171,i.io market data rest api indexes timeseries index value,"i.io market data rest api indexes timeseries index value.   Timeseries Index Value | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesHistorical Index Value w/CompositionList indexesTimeseries Index ValueMetadataMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIIndexesTimeseries Index ValueTimeseries Index ValueGET /v1/indexes/:index_id/timeseriesTimeseries Index ValuePath Parametersindex_id string requiredQuery Parametersperiod_id string requiredIdentifier of requested timeseries period (e.g. 5SEC or 1DAY)time_start string requiredTimeseries starting time in ISO 8601time_end string requiredTimeseries ending time in ISO 8601limit int32Default value: 100Amount of items to return (optional, mininum is 1, maximum is 100000, default value is 100, if the parameter is used then every 100 output items are counted as one request)Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)SchemaArray [time_period_start date-timeThe start time of the time period.time_period_end date-timeThe end time of the time period.time_open date-time nullableThe time when the value opened.time_close date-time nullableThe time when the value closed.value_open double nullableThe opening value.value_high double nullableThe highest value during the time period.value_low double nullableThe lowest value during the time period.value_close double nullableThe closing value.value_count int64The number of values during the time period.][ { ""time_period_start"": ""2024-07-16T12:55:05.251Z"", ""time_period_end"": ""2024-07-16T12:55:05.251Z"", ""time_open"": ""2024-07-16T12:55:05.251Z"", ""time_close"": ""2024-07-16T12:55:05.251Z"", ""value_open"": 0, ""value_high"": 0, ""value_low"": 0, ""value_close"": 0, ""value_count"": 0 }]SchemaExample (from schema)SchemaArray [time_period_start date-timeThe start time of the time period.time_period_end date-timeThe end time of the time period.time_open date-time nullableThe time when the value opened.time_close date-time nullableThe time when the value closed.value_open double nullableThe opening value.value_high double nullableThe highest value during the time period.value_low double nullableThe lowest value during the time period.value_close double nullableThe closing value.value_count int64The number of values during the time period.][ { ""time_period_start"": ""2024-07-16T12:55:05.251Z"", ""time_period_end"": ""2024-07-16T12:55:05.251Z"", ""time_open"": ""2024-07-16T12:55:05.251Z"", ""time_close"": ""2024-07-16T12:55:05.251Z"", ""value_open"": 0, ""value_high"": 0, ""value_low"": 0, ""value_close"": 0, ""value_count"": 0 }]SchemaExample (from schema)SchemaArray [time_period_start date-timeThe start time of the time period.time_period_end date-timeThe end time of the time period.time_open date-time nullableThe time when the value opened.time_close date-time nullableThe time when the value closed.value_open double nullableThe opening value.value_high double nullableThe highest value during the time period.value_low double nullableThe lowest value during the time period.value_close double nullableThe closing value.value_count int64The number of values during the time period.][ { ""time_period_start"": ""2024-07-16T12:55:05.251Z"", ""time_period_end"": ""2024-07-16T12:55:05.251Z"", ""time_open"": ""2024-07-16T12:55:05.251Z"", ""time_close"": ""2024-07-16T12:55:05.251Z"", ""value_open"": 0, ""value_high"": 0, ""value_low"": 0, ""value_close"": 0, ""value_count"": 0 }]SchemaExample (from schema)SchemaArray [time_period_start date-timeThe start time of the time period.time_period_end date-timeThe end time of the time period.time_open date-time nullableThe time when the value opened.time_close date-time nullableThe time when the value closed.value_open double nullableThe opening value.value_high double nullableThe highest value during the time period.value_low double nullableThe lowest value during the time period.value_close double nullableThe closing value.value_count int64The number of values during the time period.][ { ""time_period_start"": ""2024-07-16T12:55:05.251Z"", ""time_period_end"": ""2024-07-16T12:55:05.251Z"", ""time_open"": ""2024-07-16T12:55:05.251Z"", ""time_close"": ""2024-07-16T12:55:05.251Z"", ""value_open"": 0, ""value_high"": 0, ""value_low"": 0, ""value_close"": 0, ""value_count"": 0 }]Loading...Was this section helpful?12345PreviousList indexesNextMetadataCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/indexes/timeseries-index-value)"
172,i.io general faq general Crossed books bid ask,"i.io general faq general Crossed books bid ask.   Crossed books / bid >= ask | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralCrossed books / bid >= askCrossed books / bid >= askWe are providing the data as delivered from the data source and many exchanges providing crossed books (bid==ask or negative spread), this depends on the internal matching engine design of the data source, eg. exchange matching orders at interval eg per 100ms or under high load accept the order, but not match immediately it by design.Was this section helpful?12345PreviousCan you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?NextDid you have market data in flat files?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/Crossed-books-bid-ask)"
173,i.io faq general Can I get exchange wallet deposit and withdrawal status,"i.io faq general Can I get exchange wallet deposit and withdrawal status.   Can I get exchange wallet deposit and withdrawal status? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralCan I get exchange wallet deposit and withdrawal status?Can I get exchange wallet deposit and withdrawal status?We currently don't have this feature. The majority of exchanges don't provide that information and because of that we can't make viable aggregation, but we are monitoring this opportunity.Was this section helpful?12345PreviousAre subscription payments executed automatically?NextCan I get the XML or CSV instead of the JSON output format?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/Can-I-get-exchange-wallet-deposit-and-withdrawal-status)"
174,i.io market data,"i.io market data.   Market Data API | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideMarket Data APIOn this pageMarket Data - Starter Guide Welcome to the CoinAPI developer documentation. This document should contain all the information required to properly implement applications using our API.Overview of the APIs​3 main interfaces can be used to access CoinAPI:APIDataCommunicationDescriptionRESTfulLive and HistoricalRequest-responseStateless API provides the widest range of data, not capable of streaming, only pooling.WebSocket V1LivePublish-subscribeStateful API providing streaming of real-time market data. Using a single connection, clients are able to subscribe to multiple data sources.WebSocket DSLivePublish-subscribeNewly introduced, stateful API providing streaming of real-time market data with direct connections to each data source for optimized performance and reliability.FIXLivePublish-subscribeStateful API providing streaming of real-time market data, widely adopted by the finance industry. Using single connection client is able to subscribe to multiple data sources.Comparison: REST vs. Streaming Protocols (WebSocket & FIX)​Understanding the differences between REST and streaming protocols like WebSocket and FIX is essential for developers when designing and implementing financial applications. Here's a detailed comparison to guide your choice.FeatureREST APIWebSocket & FIXCommunication ModelRequest-response model, where the client sends a request and the server respondsContinuous, bidirectional communication allowing for real-time data streamingUse CaseIdeal for operations that do not require real-time updates, such as retrieving historical dataSuited for applications requiring real-time market data updates and trading operationsComplexityGenerally simpler to implement due to the stateless nature of HTTP requestsMore complex due to the need for handling continuous connections and real-time data managementData FreshnessData is only as fresh as the last request made by the clientData is continuously updated in real-time, providing the latest market informationScalabilityCan be more easily scaled using standard web infrastructureScaling requires careful management of connection resources and data throughputLatencyHigher latency due to the overhead of making HTTP requestsLower latency, optimized for real-time data delivery and trading activitiesState ManagementStateless, with each request being independentStateful, maintaining a continuous connection stateKey Takeaways​REST API is straightforward and effective for operations that can tolerate the latency inherent in the request-response model. It's widely used for accessing historical data, account management, and other non-time-sensitive operations.WebSocket & FIX are tailored for real-time applications, such as live market data feeds, trading platforms, and other scenarios where immediate data access is crucial. They offer lower latency and continuous data streams but come with added complexity in implementation and resource management.Choosing between REST and streaming protocols depends on your application's specific needs regarding data freshness, real-time updates, and the complexity you're prepared to manage.Comparison: WebSocket APIs vs. FIX API​Understanding the differences between WebSocket APIs (both V1 and DS) and the FIX API is crucial for developers and financial institutions looking to integrate real-time market data and trading capabilities. Here's a detailed comparison to guide your choice.FeatureWebSocket APIsFIX APIProtocol NaturePublish-subscribe model, designed for real-time data streamingSession-based protocol, widely used for trading and order managementUse CaseBest suited for applications requiring real-time market data updatesPrimarily used for trading, order submission, and execution reportsComplexityRelatively simple to implement and useMore complex due to its extensive use in trading operationsData TypesPrimarily focused on market data (quotes, trades, book data)Supports a wide range of financial information including order entries, executions, and market dataLatencyLow latency, especially with WebSocket DS API optimized for high-frequency dataGenerally low latency, with performance depending on the implementation and network infrastructureReliabilityHigh reliability with TCP-based delivery ensuring message order and integrityExtremely high reliability and considered the industry standard for trading activitiesAuthorizationHTTP based authorization methodsUses session-based logins with possible additional security measuresFlexibilityHigh flexibility in subscribing to specific data types and exchangesHigh degree of customization and control over trading operations and data exchangeKey Takeaways​WebSocket APIs are ideal for applications that require efficient, real-time access to market data. They offer simplicity in implementation and flexibility in data subscription, making them suitable for a wide range of applications beyond trading, such as analytics and monitoring tools.FIX API is the go-to protocol for trading operations, offering robustness, reliability, and a wide range of functionalities tailored to the needs of traders and financial institutions. Its complexity and capabilities make it the standard for order management and execution in the financial industry.Choosing between WebSocket APIs and the FIX API depends on your specific requirements, whether you're focusing on real-time data streaming for various applications or engaging in complex trading operations.Comparison: WebSocket V1 vs. WebSocket DS API​When choosing between WebSocket V1 and WebSocket DS API, it's important to understand their key differences and how they cater to different needs. Here's a comparison to help you decide which API suits your project requirements better.FeatureWebSocket V1 APIWebSocket DS APIConnection TypePossible to acquire the data from multiple data sources using single connectionSeparate data sources need separate connectionRoutingGeoDNS for regional routing to nearest infrastructureOptimized DNS for more direct connection per specific data sourceData typestrade, quote, orderbooks, ohlcv, exchange rates, metadatatrade, quote, orderbooksAuthorizationIn protocol authorization, query-string, URL path, header, or JWTquery-string, URL path, header, or JWTSymbol FilteringFlexible symbol filteringRequires precise symbol identifiers for improved data accuracySymbologyCoinAPI Symbol identifiersCoinAPI or Exchange symbols identifiersKey Takeaways​WebSocket V1 is versatile and user-friendly, making it suitable for a wide range of applications that require real-time market data.WebSocket DS API is tailored for scenarios demanding high data volumes and low latency, such as high-frequency trading platforms. Its direct routing and exchange-specific connections provide a more efficient data stream with reduced latency.Choosing the right API depends on your specific needs regarding data volume, latency sensitivity, and the complexity of your data subscription requirements. Both APIs continue to be supported, ensuring that you can select the one that best fits your project's needs.SDK​Our Software Development Kit (SDK) is available on GitHub at https://github.com/coinapi/coinapi-sdk. If possible then we are strongly recommending using our tested libraries available on GitHub, rather than creating new ones. However, if you decide to create your implementation or to change the existing one, then we encourage you to create a Pull Request to our main repository with the proposed changes, we will able to include your code in our official repository for use by other users, effectively creating collaboration.In the repository, you can find libraries or examples for languages or environments like:PythonRMatlabC#C++.NETJavaRubyGoJavaScriptTypeScriptNode.jsPHPHaskellObjective-CSwiftSecurity​The use of encryption is optional, and the decision to use it is on you. On the encrypted endpoints, we are using protocols that are considered the best security practices.tipYou should assume that we are always providing certificates signed by the Trusted Certification Authority.Standards and conventions​This section represents used standards and conventions across all documents and API's.infoThe keywords ""MUST"", ""MUST NOT"", ""REQUIRED"", ""SHALL"", ""SHALL NOT"", ""SHOULD"", ""SHOULD NOT"", ""RECOMMENDED"", ""MAY"", and ""OPTIONAL"" in this document are to be interpreted as described in RFC 2119.Variables naming​All variables are named using the Snake case (or snake_case) naming convention. This means that words are separated by a single underscore _ character, no spaces are used, and letters are lowercase.Asset codes​ISO 4217 currency code standard is used for fiat money identifications. Cryptocurrency assets are identified using codes used by the general public or adopted by the majority of exchanges.Exchange codes​Exchange on our platform is identified by the specific exchange API and the matching engine behind it. When the example exchange has multiple separate APIs, e.g., for different products SPOT, OPTIONS, or to cover other regions, we will expose these symbols from these respective APIs on different exchange identifiers. Below are examples of BINANCE (multiple APIs, multiple regions) and DERIBIT (single API, single region). A full listing of exchanges can be queried using the Market Data REST API.BINANCE Exchange IDsWebsiteDescriptionBINANCEhttps://www.binance.com/BinanceBINANCEDEXhttps://www.binance.org/Binance DEXBINANCEFTShttps://www.binance.com/Binance Futures (USDT/dapi)BINANCEFTSChttps://www.binance.com/Binance Futures (Coin/fapi)BINANCEFTSCUAThttps://www.binance.com/Binance Futures Testnet (Coin/fapi)BINANCEFTSUAThttps://www.binance.com/Binance Futures Testnet (USDT/dapi)BINANCEJEhttps://www.binance.je/Binance JerseyBINANCEJEXhttps://www.jex.com/enBinance JEXBINANCEKRhttps://www.binance.kr/Binance KoreaBINANCEOPTVhttps://www.binance.com/Binance Options Vanilla (vapi)BINANCEOPTVUAThttps://www.binance.com/Binance Options Vanilla Testnet (vapi)BINANCEUAThttps://www.binance.com/Binance TestnetBINANCEUGhttps://www.binance.co.ug/Binance UgandaBINANCEUShttps://www.binance.us/Binance USDERIBIT Exchange IDsWebsiteDescriptionDERIBIThttps://www.deribit.com/DeribitNumbers precision​Numbers in our platform can have a maximum of 19 digits overall, but no more than 9 decimal places. In cases when the number represents aggregate value then we allow 38 digits overall, but still no more than 9 decimal places.Time​For all input and output time values ISO 8601 standard is used.Format specifierDescriptionyyyyThe year is a four-digit number.MMThe month, from 01 through 12.ddThe day of the month, from 01 through 31.HHThe hour, using a 24-hour clock from 00 to 23.mmThe minute, from 00 through 59.ssThe second, from 00 through 59.fffThe milliseconds in a date and time value.fffffffThe ten-millionths of a second in a date and time value.Input time values are parsed using the following formats as far as possible:yyyy-MM-ddTHH:mm:ss.fffffffyyyy-MM-ddTHH:mm:ss.fffyyyy-MM-ddTHH:mm:ssyyyy-MM-ddTHH:mmyyyy-MM-ddTHHyyyy-MM-ddyyyyMMddTHHmmssfffffffyyyyMMddTHHmmssfffyyyyMMddTHHmmssyyyyMMddTHHmmyyyyMMddTHHyyyyMMddinfoWhen time zone information is not supplied, we will assume the UTC zone.Output time values are formatted using the following patterns:yyyy-MM-ddTHH:mm:ss.fffffffZyyyy-MM-ddinfoAll time values we provide are UTC zones. Do not assume otherwise.Was this section helpful?12345NextAuthenticationOverview of the APIsComparison: REST vs. Streaming Protocols (WebSocket & FIX)Key TakeawaysComparison: WebSocket APIs vs. FIX APIKey TakeawaysComparison: WebSocket V1 vs. WebSocket DS APIKey TakeawaysSDKSecurityStandards and conventionsVariables namingAsset codesExchange codesNumbers precisionTimeCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data)"
175,i.io market data api limits and billing metrics,"i.io market data api limits and billing metrics.   API limits and billing metrics | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideAPI limits and billingOn this pageAPI limits and billing metricsAPI limits are a crucial aspect of any API product, and they exist for several important reasons. They are designed to ensure fair usage and maintain the quality of service for all users. By implementing these limits, we can prevent any single user from overloading the system, which could potentially degrade the performance for others. This is a standard practice across the industry and is essential for maintaining a high level of service.One of the key limits we have in place is the Concurrency limit. This limit is specifically designed to protect our infrastructure. It controls the number of simultaneous API calls/requests that can be executed at any given moment. Each API call/request increases the Concurrency limit against your quota, and it decreases when the call/request finishes. This ensures that our servers are not overwhelmed by too many simultaneous requests, thereby ensuring smooth and efficient operation.The specific limits that apply to you depend on several factors. These include the plan you have subscribed to, the product you are using, and the protocol you are utilizing. Different products and protocols may have different limits, reflecting their varying requirements and capabilities.We understand that different users may have different needs, and we try to accommodate these requests whenever possible. Therefore, some limits, such as the Concurrency limit, can be requested to be increased through our support team. We review these requests on a case-by-case basis, taking into account factors such as your usage history and the capacity of our infrastructure.There are also limits that depend on your plan, such as the Request limit or the Node as a Service units limit. If you exceed these limits, you can continue to use our services by paying an overage fee. This allows us to maintain a high level of service for all users, even during periods of high demand.In conclusion, API limits are a necessary and important part of our service. They ensure that all users can enjoy a high-quality, reliable service, and they protect our infrastructure from being overwhelmed.Limits applied to our products​Product nameLimitsMarket Data REST APICredits LimitConcurrency LimitMarket Data WebSocket APIRequest Limit / IPHello Limit / IPConcurrency limit / APIKeyMarket Data FIX APISession / APIKey Each API Key can have one session, and when next session is stablished then current is disconnectedMarket Data S3 APITODOMultiple API keys for a subscription​At CoinAPI, we understand that our customers may have diverse needs and may require multiple API keys for a single subscription. We have designed our system to accommodate this requirement, allowing you to add additional API keys to your subscription. These keys operate within the confines of a single limit, ensuring that you have the flexibility you need without compromising on control.Each API key can be further customized with a more precise limit. This feature allows you to manage your usage effectively, ensuring that each key is used optimally and within its designated limit. This level of control can be particularly useful in managing resources and preventing overuse.In addition to these features, we also offer the ability for API calls using a specific API key to generate overage, i.e., exceed the quota. This can be particularly useful in situations where you anticipate a higher volume of calls. However, it's important to note that if the limit is exceeded, the API calls may be rejected to prevent overuse and maintain system integrity. All these settings, including the limits and the ability to set overage, can be managed from the Customer Portal. This ensures that you have complete control over your subscription and can make adjustments as and when needed.Customizing Limits for API Keys within a Subscription​If both API keys, each with a limit of 500, exhaust their allotted limits, reaching a combined total of 1000, further requests made using either key will be rejected until the limit resets. This ensures that the total usage across all keys within the subscription does not exceed the subscription limit.Exceeding Limits for API Keys within a Subscription​If one API key within the subscription exceeds its limit of 500, while the other key is still within its limit, requests made using the exceeded key will be rejected until the limit resets. However, requests made using the other key, which is still within its limit, will continue to be processed without interruption.infoIn summary, managing limits within a subscription involves ensuring that the usage across all API keys and services remains within the specified limits, with mechanisms in place to handle potential overages and maintain service availability and quality.Market Data / REST API​Any authenticated endpoint is providing (in HTTP response headers) information about the current state of the limits associated with API Key. In this section we will describe each limit.Request limit / APIKey​X-RateLimit-Limit: 1000000X-RateLimit-Remaining: 999989X-RateLimit-Request-Cost: 1X-RateLimit-Reset: 2018-01-22T15:25:15.1234567ZThe request limit define number of maximum requests that could be executed in the 24 hours period (sliding/rollowing window - always last 24 hours from specific moment) for your subscription.We define 'request' as the amount of data you're asking for. This isn't always the same as the number of times you call the API. If you're not using a 'limit' parameter in your API call, or if it's not available, then each API call you make is counted as one request. However, if you are using a 'limit' parameter, then it works a bit differently. In this case, every 100 pieces of data you ask for is counted as one request. So, if you ask for 200 pieces of data in one API call, that would be counted as two requests.In the given example: The allocated quota (X-RateLimit-Limit) is the total number of requests that you're allowed to make in 24 hours. This number is set based on your subscription level. The request costs (X-RateLimit-Request-Cost) are the number of requests that you've already made within the current 24-hour period. Each API call you make has a cost associated with it, and these costs add up over time. The remaining requests (X-RateLimit-Remaining) are calculated by subtracting the sum of the request costs from the allocated quota. This tells you how many more requests you can make within the current 24-hour period. So in the example given, at 13:00 UTC on 2019-08-22, the number of remaining requests would be equal to the allocated quota, minus the sum of all the request costs that have been incurred from 13:00 UTC on 2019-08-21 to 13:00 UTC on 2019-08-22.HTTP HeaderTypeDescriptionX-RateLimit-UsedintProvides information about the request limit that has been used within the last 24-hour period. This header indicates the amount of request capacity consumed based on the usage history. It is important to note that the header is not always appended to every request to optimize the operation of the API.X-RateLimit-LimitintIs an optional feature that can be enabled via the customer portal to impose a limit on the capabilities of a specific API key. It allows you to define a threshold for the number of requests that can be made using a single API key within a 24-hour time frame.X-RateLimit-RemainingintProvides information about the number of requests that can still be made, based on the 24-hour usage history. This header serves as a helpful indicator of the remaining request capacity, allowing API consumers to manage their usage effectively. It is important to note that the header is not always appended to every request to optimize the operation of the API.X-RateLimit-Request-CostintThe number of requests used to generate current HTTP response.X-RateLimit-ResettimestringThe time when all provisioned requests are available to execute again if no more requests will be executed.X-RateLimit-Quota-OveragestringProvides information about whether a given API key may exceed the plan quota within a 24-hour time frame, which could result in additional charges. This header is fully defined and configured in the customer portal.X-RateLimit-Quota-Allocateduint64Total number of requests that can be made within a specific subscription during a 24-hour time frame. This quota allocation is determined based on the user's subscription purchase.X-RateLimit-Quota-Remainingint64Provides valuable information about the remaining quota within the subscription for making requests within a 24-hour time frame. This header indicates the number of requests that can still be made within the allocated quota for the current 24-hour period.GET v1/exchanges/ECB/apiKey-ED802AF4-E855-YOUR-API-KEYHost: coinapi.ioX-RateLimit-Used: 1000X-RateLimit-Limit: 5000X-RateLimit-Remaining: 4000X-RateLimit-Request-Cost: 1X-RateLimit-Reset: 2023-05-05T12:00:00.0000001ZX-RateLimit-Quota-Overage: ENABLEDX-RateLimit-Quota-Allocated: 10000X-RateLimit-Quota-Remaining: 5000Explanation:X-RateLimit-Used: 1000 (requests used in the last 24 hours)X-RateLimit-Limit: 5000 (total request limit within a 24-hour time frame)X-RateLimit-Remaining: 4000 (requests remaining within the last 24 hours)X-RateLimit-Request-Cost: 1 (cost or ""weight"" of each individual request)X-RateLimit-Reset: 2023-05-05T12:00:00.0000001Z (when the rate limit will reset within a 24-hour period)X-RateLimit-Overage: ENABLED (API key may exceed the plan quota within a 24-hour time frame)X-RateLimit-Quota-Allocated: 10000 (total number of requests allowed for all API keys within the subscription within a 24-hour time frame)X-RateLimit-Quota-Remaining: 5000 (requests remaining within the subscription's allocated quota within the last 24 hours)Concurrency limit / APIKey​X-ConcurrencyLimit-Limit: 10X-ConcurrencyLimit-Remaining: 5The concurrency limit defines the number of maximum concurrent API calls/requests that the API could process for your subscription at the current moment. Every API call/request increases the Concurrency limit against quota, and when it finishes, decreases it.HTTP HeaderTypeDescriptionX-ConcurrencyLimit-LimitintConcurrency limit allocated for your API key.X-ConcurrencyLimit-RemainingintThe number of concurrent API calls/requests available to be executed in this moment for your API key.Market Data / WebSocket API​API access is subject to limits and n this section we will describe each limit.Request limit / IP​X-WsRequestsPerIpLimit-Limit: 10X-WsRequestsPerIpLimit-WindowSizeMs: 10000X-WsRequestsPerIpLimit-Remaining: 0X-WsRequestsPerIpLimit-RetryAfterMs: 564We define WebSocket request as the event when the WebSocket upgrade on the HTTP is happening. The request limit restricts the number of maximum allowed newly initiated WebSocket connections per IP address in a time interval (sliding/rolling window ending at a specific moment) for your subscription. Limit prevents your client application from abusing the API by reconnecting in the loop without exponential backoff.HTTP HeaderTypeDescriptionX-WsRequestsPerIpLimit-LimitintValue of the limit quota allocated.X-WsRequestsPerIpLimit-RemainingintValue of the limit quota left at the moment, counted from last WindowSizeMs milliseconds.X-WsRequestsPerIpLimit-WindowSizeMsintWindow size on which the remaining value was calculated in milliseconds.X-WsRequestsPerIpLimit-RetryAfterMsintThe number of milliseconds after which Remaining > 0. (exist only in case of the error)Hello limit / IP​X-WsHelloPerIpLimit-Limit: 10X-WsHelloPerIpLimit-WindowSizeMs: 10000X-WsHelloPerIpLimit-Remaining: 0X-WsHelloPerIpLimit-RetryAfterMs: 564The hello limit restricts the number of maximum allowed hello messages per IP address in the time interval (sliding/rolling window ending at a specific moment) for your subscription. Limit prevents your client application from abusing the API by changing the scope of the subscription.HTTP HeaderTypeDescriptionX-WsHelloPerIpLimit-LimitintValue of the limit quota allocated.X-WsHelloPerIpLimit-RemainingintValue of the limit quota left at the moment, counted from last WindowSizeMs milliseconds.X-WsHelloPerIpLimit-WindowSizeMsintWindow size on which the remaining value was calculated in milliseconds.X-WsHelloPerIpLimit-RetryAfterMsintThe number of milliseconds after which Remaining > 0. (exist only in case of the error)Concurrency limit / APIKey​X-ConcurrencyLimit-Limit: 10X-ConcurrencyLimit-Remaining: 5The concurrency limit defines the number of maximum allowed concurrent websocket connections per APIKey at the current moment. Every new WebSocket connection increases the Concurrency limit against quota, and when it's closed, decreases it.HTTP HeaderTypeDescriptionX-ConcurrencyLimit-LimitintConcurrency limit allocated for your API key.X-ConcurrencyLimit-RemainingintThe number of concurrent WebSocket connections available to be established in this moment for your API key.Was this section helpful?12345PreviousAuthenticationNextREST APILimits applied to our productsMultiple API keys for a subscriptionCustomizing Limits for API Keys within a SubscriptionExceeding Limits for API Keys within a SubscriptionMarket Data / REST APIRequest limit / APIKeyConcurrency limit / APIKeyMarket Data / WebSocket APIRequest limit / IPHello limit / IPConcurrency limit / APIKeyCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/api-limits-and-billing-metrics)"
176,i.io naas api ethereum Methods eth call,"i.io naas api ethereum Methods eth call.   eth_call | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_callOn this pageeth_callOverview​The 'eth_call' method executes a new message call immediately without creating a transaction on the blockchain. This method is useful for querying data from the Ethereum blockchain without making any changes to the state.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \ --url https://ethereum-mainnet-geth-archive.node.coinapi.io \ --header 'accept: application/json' \ --header 'content-type: application/json' \ --header ""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"" \ --data '{""id"": 1,""jsonrpc"": ""2.0"",""method"": ""eth_call"",""params"": [{""to"": ""0xd46e8dd67c5d32be8058bb8eb970870f07244567"",""gas"": ""0x00"",""gasPrice"": ""0x09184e72a000"",""value"": ""0x00"",""data"": ""0x""}]}'using System.Net.Http.Headers;var client = new HttpClient();var request = new HttpRequestMessage{ Method = HttpMethod.Post, RequestUri = new Uri(""https://ethereum-mainnet-geth-archive.node.coinapi.io""), Headers = {  { ""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"" }, }, Content = new StringContent(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_call\"",\""params\"":[{\""to\"":\""0xd46e8dd67c5d32be8058bb8eb970870f07244567\"",\""gas\"":\""0x00\"",\""gasPrice\"":\""0x09184e72a000\"",\""value\"":\""0x00\"",\""data\"":\""0x\""}]}"") {  Headers =  {   ContentType = new MediaTypeHeaderValue(""application/json"")  } }};using (var response = await client.SendAsync(request)){ response.EnsureSuccessStatusCode(); var body = await response.Content.ReadAsStringAsync(); Console.WriteLine(body);}<?php$curl = curl_init();curl_setopt_array($curl, [ CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"", CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => """", CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 30, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => ""POST"", CURLOPT_POSTFIELDS => json_encode([ 'id' => 1, 'jsonrpc' => '2.0', 'method' => 'eth_call', 'params' => [  [    'to' => '0xd46e8dd67c5d32be8058bb8eb970870f07244567',    'gas' => '0x00',    'gasPrice' => '0x09184e72a000',    'value' => '0x00',    'data' => '0x'  ] ] ]), CURLOPT_HTTPHEADER => [ ""accept: application/json"", ""content-type: application/json"" ""X-CoinAPI-Key"" => ""73034021-THIS-IS-SAMPLE-KEY"" ],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) { echo ""cURL Error #:"" . $err;} else { echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = {""id"": 1,""jsonrpc"": ""2.0"",""method"": ""eth_call"",""params"": [{""to"": ""0xd46e8dd67c5d32be8058bb8eb970870f07244567"",""gas"": ""0x00"",""gasPrice"": ""0x09184e72a000"",""value"": ""0x00"",""data"": ""0x""}]}headers = {""accept"": ""application/json"",""content-type"": ""application/json""""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text)const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key' : '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({ id: 1, jsonrpc: '2.0', method: 'eth_call', params: [  {  to: '0xd46e8dd67c5d32be8058bb8eb970870f07244567',  gas: '0x00',  gasPrice: '0x09184e72a000',  value: '0x00',  data: '0x'  } ] })};fetch('https://eth-mainnet.g.alchemy.com/v2/docs-demo', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_call\"",\""params\"":[{\""to\"":\""0xd46e8dd67c5d32be8058bb8eb970870f07244567\"",\""gas\"":\""0x00\"",\""gasPrice\"":\""0x09184e72a000\"",\""value\"":\""0x00\"",\""data\"":\""0x\""}]}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = {\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_accounts\""}response = http.request(request)puts response.read_body; OkHttpClient client = new OkHttpClient();{MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_call\"",\""params\"":[{\""to\"":\""0xd46e8dd67c5d32be8058bb8eb970870f07244567\"",\""gas\"":\""0x00\"",\""gasPrice\"":\""0x09184e72a000\"",\""value\"":\""0x00\"",\""data\"":\""0x\""}]}"");Request request = new Request.Builder().url(""https://eth-mainnet.g.alchemy.com/v2/docs-demo"").post(body).addHeader(""accept"", ""application/json"").addHeader(""content-type"", ""application/json"").build();Response response = client.newCall(request).execute();}## Gas Parameter LimitationTo ensure the stability of our platform and prevent potential abuse, the 'gas' parameter in ""eth_estimateGas"" and this ""eth_call"" method is capped at 10x (1000%) the current block gas limit.Request Parameters​""from"": 20 bytes - [ Required ] Address the transaction is sent from.""to"": 20 bytes - Address the transaction is directed to.'gas': Hexadecimal value of the gas provided for the transaction execution. While 'eth_call' consumes zero gas, this parameter may be needed by some executions.'gasPrice': Hexadecimal value of the gasPrice used for each paid gas.'maxPriorityFeePerGas': Maximum fee, in Wei, the sender is willing to pay per gas above the base fee. (Relevant for EIP-1559 transactions)'maxFeePerGas': Maximum total fee (base fee + priority fee), in Wei, the sender is willing to pay per gas. (Relevant for EIP-1559 transactions)'value': Hexadecimal of the value sent with this transaction.'data': Hash of the method signature and encoded parameters. Refer to the Ethereum contract ABI specification for more details.'block parameter': [ Required ] A hexadecimal block number, or the string 'latest', 'earliest' or 'pending'.Response​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": ""0xb1770efb14906e509893b6190359658208ae64d0c56e22f748a1b0869885559e""}The returned value of the executed contract. If this call causes the EVM to execute a ''REVERT'' operation, an error response is returned with the revert reason pre-decoded as a string.Was this section helpful?12345Previouseth_blockNumberNexteth_chainIDOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_call)"
177,i.io faq general I hardly use the REST API why is my usage so high,"i.io faq general I hardly use the REST API why is my usage so high.   I hardly use the REST API, why is my usage so high? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralI hardly use the REST API, why is my usage so high?On this pageI hardly use the REST API, why is my usage so high?To provide further clarification regarding REST API request limits, please read this section from our documentation:The request limit define number of maximum requests that could be executed in the 24 hours period (sliding/rolling window - always last 24 hours from specific moment) for your subscription. We define request as data request credits and this is not always equal to the number of API calls executed against the API. A request is deemed to be a single one if the limit query parameter on the endpoint isn’t available, isn’t used or it's stated otherwise in the API documentation. Otherwise — if the limit query parameter is available and is used — then each of the 100 data points returned in the response is counted as one request. For example at the 2019-08-22 13:00 UTC value of the requests remaining (X-RateLimit-Remaining) will be equal to the allocated quota (X-RateLimit-Limit) decreased by the sum of the request costs (SUM(X-RateLimit-Request-Cost)) executed in the period 2019-08-21 13:00 UTC - 2019-08-22 13:00 UTC (last 24 hours).API calls are not equivalent to requests. To give an example, for the date 2023-01-01, you only made 85 API calls, but made a total of 10,012 requests. This is because some API calls pull more data, and every 100 of those data points are considered as 1 request. If you are under the Streamer subscription, you would be exceeding your subscription tier's daily request limit (10k daily requests) and get a 429 error (i.e too many requests -- You have exceeded your API key rate limits).How do I calculate the number of requests I'll be making for a certain query?​The limit query parameter defines the amount of items to return. If you are not using the limit query parameter, the default value will be 100. If you do use it, then every 100 output items will be counted as 1 request. For example, a request using the limit parameter with a value of 1,500 would cost 15 requests (1500/100=15).https://rest.coinapi.io/v1/ohlcv/BINANCE_SPOT_BTC_USDT/history?limit=1500&period_id=1MIN&time_start=2021-01-28&time_end=2022-01-28The minimum value for the limit parameter is 1 and the maximum is 100,000. In addition, you can check the number of requests used to generate the current HTTP response by checking your response header's x-ratelimit-request-cost. You can also check x-concurrencylimit-remaining to see your remaining requests for the day. You can also check your REST API historical daily number of requests metrics by using our Customer Portal available at https://customerportal.coinapi.io/To learn more about REST API Limits, see here: https://docs.coinapi.io/market-data/rest-api#limitsWas this section helpful?12345PreviousI forgot my paid subscription API keyNext""Invalid API Key"" error for a newly purchased keyHow do I calculate the number of requests I'll be making for a certain query?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/I-hardly-use-the-REST-API-why-is-my-usage-so-high)"
178,i.io market data rest api metrics listing of all supported exchange metrics,"i.io market data rest api metrics listing of all supported exchange metrics.   Listing of all supported exchange metrics | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsCurrent metrics for given assetCurrent metrics for given exchangeCurrent metrics for given symbolHistorical metrics for assetHistorical metrics for symbolHistorical metrics for the exchangeListing of all supported metrics by CoinAPIListing of all supported exchange metricsListing of all supported metrics for assetListing of all supported metrics for symbolOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIMetricsListing of all supported exchange metricsListing of all supported exchange metricsGET /v1/metrics/exchange/listingGet data metrics for exchange.Query Parametersmetric_id stringThe metric identifier (from the Metrics -> Listing)exchange_id string requiredThe exchange identifier (from the Metadata -> Exchanges)Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [metric_id string nullableGets or sets the metric ID.symbol_id string nullableGets or sets the symbol ID.symbol_id_external string nullableGets or sets the symbol ID from the exchange.exchange_id string nullableGets or sets the exchange ID.asset_id string nullableGets or sets the asset ID.asset_id_external string nullableGets or sets the asset ID from the exchange.chain_id string nullableGets or sets the chain id.network_id string nullableGets or sets the network id.][ { ""metric_id"": ""string"", ""symbol_id"": ""string"", ""symbol_id_external"": ""string"", ""exchange_id"": ""string"", ""asset_id"": ""string"", ""asset_id_external"": ""string"", ""chain_id"": ""string"", ""network_id"": ""string"" }][ { ""metric_id"": ""LIQUIDATION_TIME_IN_FORCE"", ""exchange_id"": ""BINANCEFTS"" }, { ""metric_id"": ""LIQUIDATION_ORDER_TYPE"", ""exchange_id"": ""BINANCEFTS"" }, { ""metric_id"": ""LIQUIDATION_ORDER_STATUS"", ""exchange_id"": ""BINANCEFTS"" }]SchemaExample (from schema)Example responseSchemaArray [metric_id string nullableGets or sets the metric ID.symbol_id string nullableGets or sets the symbol ID.symbol_id_external string nullableGets or sets the symbol ID from the exchange.exchange_id string nullableGets or sets the exchange ID.asset_id string nullableGets or sets the asset ID.asset_id_external string nullableGets or sets the asset ID from the exchange.chain_id string nullableGets or sets the chain id.network_id string nullableGets or sets the network id.][ { ""metric_id"": ""string"", ""symbol_id"": ""string"", ""symbol_id_external"": ""string"", ""exchange_id"": ""string"", ""asset_id"": ""string"", ""asset_id_external"": ""string"", ""chain_id"": ""string"", ""network_id"": ""string"" }][ { ""metric_id"": ""LIQUIDATION_TIME_IN_FORCE"", ""exchange_id"": ""BINANCEFTS"" }, { ""metric_id"": ""LIQUIDATION_ORDER_TYPE"", ""exchange_id"": ""BINANCEFTS"" }, { ""metric_id"": ""LIQUIDATION_ORDER_STATUS"", ""exchange_id"": ""BINANCEFTS"" }]SchemaExample (from schema)Example responseSchemaArray [metric_id string nullableGets or sets the metric ID.symbol_id string nullableGets or sets the symbol ID.symbol_id_external string nullableGets or sets the symbol ID from the exchange.exchange_id string nullableGets or sets the exchange ID.asset_id string nullableGets or sets the asset ID.asset_id_external string nullableGets or sets the asset ID from the exchange.chain_id string nullableGets or sets the chain id.network_id string nullableGets or sets the network id.][ { ""metric_id"": ""string"", ""symbol_id"": ""string"", ""symbol_id_external"": ""string"", ""exchange_id"": ""string"", ""asset_id"": ""string"", ""asset_id_external"": ""string"", ""chain_id"": ""string"", ""network_id"": ""string"" }][ { ""metric_id"": ""LIQUIDATION_TIME_IN_FORCE"", ""exchange_id"": ""BINANCEFTS"" }, { ""metric_id"": ""LIQUIDATION_ORDER_TYPE"", ""exchange_id"": ""BINANCEFTS"" }, { ""metric_id"": ""LIQUIDATION_ORDER_STATUS"", ""exchange_id"": ""BINANCEFTS"" }]SchemaExample (from schema)Example responseSchemaArray [metric_id string nullableGets or sets the metric ID.symbol_id string nullableGets or sets the symbol ID.symbol_id_external string nullableGets or sets the symbol ID from the exchange.exchange_id string nullableGets or sets the exchange ID.asset_id string nullableGets or sets the asset ID.asset_id_external string nullableGets or sets the asset ID from the exchange.chain_id string nullableGets or sets the chain id.network_id string nullableGets or sets the network id.][ { ""metric_id"": ""string"", ""symbol_id"": ""string"", ""symbol_id_external"": ""string"", ""exchange_id"": ""string"", ""asset_id"": ""string"", ""asset_id_external"": ""string"", ""chain_id"": ""string"", ""network_id"": ""string"" }][ { ""metric_id"": ""LIQUIDATION_TIME_IN_FORCE"", ""exchange_id"": ""BINANCEFTS"" }, { ""metric_id"": ""LIQUIDATION_ORDER_TYPE"", ""exchange_id"": ""BINANCEFTS"" }, { ""metric_id"": ""LIQUIDATION_ORDER_STATUS"", ""exchange_id"": ""BINANCEFTS"" }]Loading...Was this section helpful?12345PreviousListing of all supported metrics by CoinAPINextListing of all supported metrics for assetCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/metrics/listing-of-all-supported-exchange-metrics)"
179,i.io naas api ethereum Methods eth feeHistory,"i.io naas api ethereum Methods eth feeHistory.   eth_feeHistory | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_feeHistoryeth_createAccessListOverviewThe 'eth_feeHistory' method returns historical gas information, allowing users to track Ethereum gas trends over time.Requestshellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'content-type: application/json' \  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data '{ ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_feeHistory"", ""params"": [ 4, 4, 4 ]}'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"", ""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_feeHistory\"",\""params\"":[4,4,4]}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"",CURLOPT_RETURNTRANSFER => true,CURLOPT_ENCODING => """",CURLOPT_MAXREDIRS => 10,CURLOPT_TIMEOUT => 30,CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,CURLOPT_CUSTOMREQUEST => ""POST"",CURLOPT_POSTFIELDS => json_encode(['id' => 1,'jsonrpc' => '2.0','method' => 'eth_feeHistory','params' => [4,4,4]]),CURLOPT_HTTPHEADER => [""accept: application/json"",""content-type: application/json"",""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY""],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) {echo ""cURL Error #:"" . $err;} else {echo $response;}?> import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_feeHistory"", ""params"": [4, 4, 4]}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text)const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY' }, body: JSON.stringify({id: 1, jsonrpc: '2.0', method: 'eth_feeHistory', params: [4, 4, 4]})};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_feeHistory\"",\""params\"":[4,4,4]}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))} require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_feeHistory\"",\""params\"":[4,4,4]}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_feeHistory\"",\""params\"":[4,4,4]}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request ParametersblockCount: (integer) Specifies the number of blocks in the requested range. Users can request between 1 and 1024 blocks in a single query. If blocks in the specified block range are unavailable, the fee history for the available blocks will be returned.newestBlock: (string) This represents the highest number block of the requested range. It can be an integer or one of the string tags: latest, earliest, or pending.array of integers (optional): This is a monotonically increasing list of percentile values to sample from each block's effective priority fees per gas in ascending order, weighted by gas used.Response{ ""jsonrpc"": ""2.0"", ""id"": 0, ""result"": { ""oldestBlock"": ""0xfd6a75"", ""reward"": [  [""0x3b9aca00"", ""0x3b9aca00"", ""0x59682f00""],  [""0x3b9aca00"", ""0x3b9aca00"", ""0x77359400""],  [""0x3b9aca00"", ""0x3b9aca00"", ""0x3b9aca00""],  [""0x2e7ddb00"", ""0x3b9aca00"", ""0x77359400""],  [""0x3b9aca00"", ""0x3b9aca00"", ""0x59682f00""] ], ""baseFeePerGas"": [  ""0x4c9d974c3"",  ""0x4c38a847a"",  ""0x49206d475"",  ""0x47ac58b63"",  ""0x471e805d8"",  ""0x46f5f64a6"" ], ""gasUsedRatio"": [  0.4794155666666667, 0.3375966, 0.42049746666666665, 0.4690773,  0.49109343333333333 ] }}oldestBlock: This is the lowest number block of the returned range, expressed as a hexadecimal number.baseFeePerGas: An array of block base fees per gas. This includes an extra block value, which is the next block after the newest block in the returned range. Blocks created before EIP-1559 will return zeroes.gasUsedRatio: An array of block gas used ratios. These ratios are calculated as the ratio of 'gasUsed' and 'gasLimit'.reward: This is an array of effective priority fee per gas data points from a single block. If the block is empty, all zeroes are returned.Was this section helpful?12345Previouseth_estimateGasNexteth_gasPriceCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_feeHistory)"
180,i.io market data rest api metadata base url of the api,i.io market data rest api metadata base url of the api.   Base url of the API. | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIREST APIExchange RatesIndexesMetadataBase url of the API.List all asset iconsList all assets by asset IDList all assetsList all exchanges by exchange_idList all exchangesList all symbolsList of icons for the exchangesList of symbols for the exchangeList symbol mapping for the exchangeMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket APIFIX APIS3 APIJSON RPCEMS APIFAQCustomer PortalChangelogMarket Data APIREST APIMetadataBase url of the API.Base url of the API.GET /v1/metadataBase url of the API.Responses200SuccessLoading...Was this section helpful?12345PreviousMetadataNextList all asset iconsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/metadata/base-url-of-the-api)
181,i.io market data how to guides acquire exchange rates with different programming languages,"i.io market data how to guides acquire exchange rates with different programming languages.   Acquire exchange rates with different programming languages | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesAcquire exchange rates with different programming languagesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPIBuilding a cryptocurrency exchange comparison tool using Market Data APICreating a historical crypto price chart using CoinAPI and D3.jsFetching market data with KNIMEGet Historical OHLCV Data Using CoinAPIGet symbol funding rate metric data using CoinAPIImport API into PostmanImport data to Google Sheets/ExcelReal-time data visualization with javascriptReal-time trades stream using WebSocket with different languagesRetrieve and analyze crypto order book data using a cryptocurrency APITrading Essentials: QuickstartPerformance Testing GuideHow-to guidesAcquire exchange rates with different programming languagesOn this pageAcquire exchange rates with different programming languagesIntroduction​CoinAPI provides a powerful interface for interacting with multiple cryptocurrency markets, allowing for efficient data retrieval and processing. This tutorial walks you through the process of using CoinAPI's API to access exchange rate data using Python, Javascript, and Java. The objective here is to equip you with the necessary know-how to utilize our API for your crypto projects.Prerequisites​A CoinAPI key (obtainable by signing up on the CoinAPI website)Familiarity with RESTful APIs and JSON (JavaScript Object Notation)A basic understanding of at least one programming language: Python, Javascript or JavaAPI Key generation​Before we dive into code, it's crucial to understand that to use the CoinAPI, you need an API key. This key identifies your application and authorizes requests.Visit the CoinAPI websiteRegister an account or log in if you already have oneNavigate to the API Keys section and generate a new API keyRemember to store your key safely - it's your credential!Making an API Request with Python​To connect to CoinAPI in Python, we'll use the requests library. If you don't have the 'requests' library installed, you can add it using pip:pip install requestsHere's an example of the access-coinapi-data.py Python script:import requestsdef fetch_data():url = ""https://rest.coinapi.io/v1/exchangerate/BTC/USD""headers = { ""X-CoinAPI-Key"": ""YOUR-API-KEY"" # Replace with your API key}response = requests.get(url, headers=headers)return response.json()print(fetch_data())This script fetches the current exchange rate of Bitcoin (BTC) to USD. To execute the script, run python access-coinapi-data.py command.> python access-coinapi-data.py{ ""time"": ""2023-07-24T11:31:56.0000000Z"", ""asset_id_base"": ""BTC"", ""asset_id_quote"": ""USD"", ""rate"": 29295.929694597355}Note: Don't forget to replace YOUR-API-KEY with your actual API key.Making an API Request with Javascript​Make sure to install the nodejs runtime environment before. Add package.json with node-fetch module dependency.{ ""type"": ""module"", ""dependencies"": { ""node-fetch"": ""^3.3.1"" }}Create file access-coinapi-data.js with the following code:import fetch from 'node-fetch';fetch('https://rest.coinapi.io/v1/exchangerate/BTC/USD', {headers: { ""X-CoinAPI-Key"": ""YOUR_API_KEY"" // Replace with your API key }}).then(response => response.json()).then(data => console.log(data)).catch(error => console.error('Error:', error));This example fetches the current exchange rate from BTC to USD.Install dependencies via the npm install command. Execute your program in the nodejs runtime environment with the node access-coinapi-data.js command.> node access-coinapi-data.js{ ""time"": ""2023-07-24T11:31:56.0000000Z"", ""asset_id_base"": ""BTC"", ""asset_id_quote"": ""USD"", ""rate"": 29295.929694597355}Note: Don't forget to replace YOUR-API-KEY with your actual API key.Making an API Request with Java​Make sure to install Java Development Kit (JDK) as it includes a runtime environment (JRE) plus additional tools and utilities required for Java development. To check whether JRE and JDK are already installed on your system you may use the java -version command.Java offers multiple ways to send HTTP requests. Here we'll use the HttpURLConnection class. Create Main.java file with the following content:import java.net.HttpURLConnection;import java.net.URL;import java.io.BufferedReader;import java.io.InputStreamReader;public class Main { private static final String API_KEY = ""YOUR-API-KEY""; // Replace with your API key public static void main(String[] args) throws Exception {  URL url = new URL(""https://rest.coinapi.io/v1/exchangerate/BTC/USD"");  HttpURLConnection conn = (HttpURLConnection) url.openConnection();  conn.setRequestProperty(""X-CoinAPI-Key"", API_KEY);  BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()));  String inputLine;  StringBuffer content = new StringBuffer();  while ((inputLine = in.readLine()) != null) {   content.append(inputLine);  }  in.close();  conn.disconnect();  System.out.println(content.toString()); }}This script fetches the current exchange rate of Bitcoin (BTC) to USD. Use the javac Main.java command to compile the java source file into bytecode. The resulting bytecode file will be named Main.class. After the compilation step, you can execute the program using java Main to see the exchange rate output.> javac Main.Java> java Main{ ""time"": ""2023-07-24T11:31:56.0000000Z"", ""asset_id_base"": ""BTC"", ""asset_id_quote"": ""USD"", ""rate"": 29295.929694597355}Note: Don't forget to replace YOUR-API-KEY with your actual API key.Understanding the Response​CoinAPI returns data in JSON format, which we convert to a Python dictionary using response.json(). The /v1/exchangerate/BTC/USD endpoint response includes:time: The timestamp of the last data update.asset_id_base: The base asset (in our case, BTC).asset_id_quote: The quote asset (in our case, USD).rate: The current exchange rate from BTC to USD.Converting Between Cryptocurrencies​The /v1/exchangerate/BTC/USD endpoint retrieves the current exchange rate of BTC to USD. Additionally, the Exchange Rates endpoint provides the flexibility to obtain exchange rates between BTC and various other assets, allowing users to access the conversion rates for multiple asset pairs involving BTC.import requests url = 'https://rest.coinapi.io/v1/exchangerate/BTC' headers = {'X-CoinAPI-Key' : 'YOUR_API_KEY'} response = requests.get(url, headers=headers) print(response.json())Here's the response for the BTC exchange rate to various assets, e.g EUR, USD, ETH, XRP:{ ""asset_id_base"": ""BTC"", ""rates"": [  {   ""time"": ""2023-07-24T13:00:43.0000000Z"",   ""asset_id_quote"": ""EUR"",   ""rate"": 26371.195622912368  },  {   ""time"": ""2023-07-24T13:00:43.0000000Z"",   ""asset_id_quote"": ""USD"",   ""rate"": 29222.332203558577  },  {   ""time"": ""2023-07-24T13:00:43.0000000Z"",   ""asset_id_quote"": ""ETH"",   ""rate"": 15.780394091251145  },  {   ""time"": ""2023-07-24T13:00:43.0000000Z"",   ""asset_id_quote"": ""XRP"",   ""rate"": 41915.164263881525  },  // ...more BTC exchange rates with various other assets...}To perform a cryptocurrency conversion from one currency to another, simply multiply the given amount by the exchange rate of the target cryptocurrency. Here's an example of converting 1.5 BTC to ETH:import requests url = 'https://rest.coinapi.io/v1/exchangerate/BTC' headers = {'X-CoinAPI-Key' : ""YOUR_API_KEY""}response = requests.get(url, headers=headers) #exchange rates with BTC as base assetrates = response.json()['rates'] # finding exchange rate for ETH (quote asset)eth_rate = [x['rate'] for x in rates if x['asset_id_quote'] == 'ETH'][0] btc_amount = 1.5eth_amount = btc_amount * eth_rate # actual conversionprint(f'1.5 BTC is equivalent to {eth_amount} ETH')Below is the result of 1.5 BTC to ETH conversion:>python convert.py1.5 BTC is equivalent to 23.671802476675076 ETHThe exchange rates endpoint plays a critical role in providing real-time conversion rates for cryptocurrencies. The rate represents the conversion factor that determines the value of one unit of the base currency in terms of the target currency. It indicates how much of the target currency you would get in exchange for one unit of the base currency.For more information, you can check REST API Exchange Rates docs Best Practices​Security: never expose your API key publicly or commit it to version control. Store it in a secure and encrypted location and treat your API key as a password.Error Handling: CoinAPI can return various error codes (like 400, 403, 429) indicating issues such as invalid input or rate limit exceeding. Make sure to handle these potential errors in your code.Rate Limiting: Ensure your application gracefully handles rate limit errors by implementing retry logic. Refer to CoinAPI's Rate Limiting documentation for more details.Error Handling​Include robust error handling to account for potential issues such as network errors, API limits, or invalid responses. Here's a simple example:try: response = requests.get(url, headers=headers) response.raise_for_status() # Raises a HTTPError if the status is 4xx, 5xxexcept requests.exceptions.RequestException as err: print(f""An Error Occured: {err}"")else: data = response.json()Rate Limiting​Keep track of your API usage to avoid hitting rate limits. CoinAPI provides different request tiers based on your subscription level.print(response.headers.get(""X-RateLimit-Used""))print(response.headers.get(""X-RateLimit-Limit""))print(response.headers.get(""X-RateLimit-Remaining""))print(response.headers.get(""X-RateLimit-Request-Cost""))For more information about rate limiting check REST API Limits.API Key Security​Never expose your API key in a client-side application or a public code repository. Always keep it securely on your server.dangerOnce your API key falls into the wrong hands, it can be used to make requests within your subscription.Caching​To minimize API calls and maximize efficiency, consider implementing caching on your end.Troubleshooting​If you encounter any issues while connecting to CoinAPI, make sure to:Verify that your API key is correct.Check if you have reached the API rate limit.Confirm that you're using the right endpoint and method (GET, POST, etc.).Ensure you've installed the correct libraries and dependencies and are using a supported version of the programming language.You're now ready to use CoinAPI's API to access cryptocurrency data efficiently and effectively. For more information, you can check REST API Exchange Rates docs Happy coding!Was this section helpful?12345PreviousHow-to guidesNextBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPIIntroductionPrerequisitesAPI Key generationMaking an API Request with PythonCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/how-to-guides/acquire-exchange-rates-with-different-programming-languages)"
182,i.io market data rest api indexes retrieve historical index value timeseries,"i.io market data rest api indexes retrieve historical index value timeseries.   Retrieve Historical Index Value Timeseries | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIREST APIExchange RatesIndexesCreate indexGet index dataList of available indexesRetrieve Historical Composition Value Timeseries Retrieves historical timeseries for the specific composition value for an indexRetrieve Historical Index Value and CompositionRetrieve Historical Index Value TimeseriesUpdate indexMetadataMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket APIFIX APIS3 APIJSON RPCEMS APIFAQCustomer PortalChangelogMarket Data APIREST APIIndexesRetrieve Historical Index Value TimeseriesRetrieve Historical Index Value TimeseriesGET /v1/indexes/:index_id/timeseriesRetrieve Historical Index Value TimeseriesPath Parametersindex_id string requiredQuery Parameterstime_start date-timetime_end date-timelimit int32Default value: 100Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)SchemaArray [time_period_start date-timeThe start time of the time period.time_period_end date-timeThe end time of the time period.time_open date-time nullableThe time when the value opened.time_close date-time nullableThe time when the value closed.value_open double nullableThe opening value.value_high double nullableThe highest value during the time period.value_low double nullableThe lowest value during the time period.value_close double nullableThe closing value.value_count int64The number of values during the time period.][ { ""time_period_start"": ""2024-03-20T19:55:16.381Z"", ""time_period_end"": ""2024-03-20T19:55:16.381Z"", ""time_open"": ""2024-03-20T19:55:16.381Z"", ""time_close"": ""2024-03-20T19:55:16.381Z"", ""value_open"": 0, ""value_high"": 0, ""value_low"": 0, ""value_close"": 0, ""value_count"": 0 }]SchemaExample (from schema)SchemaArray [time_period_start date-timeThe start time of the time period.time_period_end date-timeThe end time of the time period.time_open date-time nullableThe time when the value opened.time_close date-time nullableThe time when the value closed.value_open double nullableThe opening value.value_high double nullableThe highest value during the time period.value_low double nullableThe lowest value during the time period.value_close double nullableThe closing value.value_count int64The number of values during the time period.][ { ""time_period_start"": ""2024-03-20T19:55:16.381Z"", ""time_period_end"": ""2024-03-20T19:55:16.381Z"", ""time_open"": ""2024-03-20T19:55:16.381Z"", ""time_close"": ""2024-03-20T19:55:16.381Z"", ""value_open"": 0, ""value_high"": 0, ""value_low"": 0, ""value_close"": 0, ""value_count"": 0 }]SchemaExample (from schema)SchemaArray [time_period_start date-timeThe start time of the time period.time_period_end date-timeThe end time of the time period.time_open date-time nullableThe time when the value opened.time_close date-time nullableThe time when the value closed.value_open double nullableThe opening value.value_high double nullableThe highest value during the time period.value_low double nullableThe lowest value during the time period.value_close double nullableThe closing value.value_count int64The number of values during the time period.][ { ""time_period_start"": ""2024-03-20T19:55:16.381Z"", ""time_period_end"": ""2024-03-20T19:55:16.381Z"", ""time_open"": ""2024-03-20T19:55:16.381Z"", ""time_close"": ""2024-03-20T19:55:16.381Z"", ""value_open"": 0, ""value_high"": 0, ""value_low"": 0, ""value_close"": 0, ""value_count"": 0 }]SchemaExample (from schema)SchemaArray [time_period_start date-timeThe start time of the time period.time_period_end date-timeThe end time of the time period.time_open date-time nullableThe time when the value opened.time_close date-time nullableThe time when the value closed.value_open double nullableThe opening value.value_high double nullableThe highest value during the time period.value_low double nullableThe lowest value during the time period.value_close double nullableThe closing value.value_count int64The number of values during the time period.][ { ""time_period_start"": ""2024-03-20T19:55:16.381Z"", ""time_period_end"": ""2024-03-20T19:55:16.381Z"", ""time_open"": ""2024-03-20T19:55:16.381Z"", ""time_close"": ""2024-03-20T19:55:16.381Z"", ""value_open"": 0, ""value_high"": 0, ""value_low"": 0, ""value_close"": 0, ""value_count"": 0 }]Loading...Was this section helpful?12345PreviousRetrieve Historical Index Value and CompositionNextUpdate indexCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/indexes/retrieve-historical-index-value-timeseries)"
183,i.io market data rest api exchange rates,"i.io market data rest api exchange rates.   Exchange Rates | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange Rates Get all current rates Timeseries data Timeseries periods Get specific rateIndexesMetadataMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIExchange RatesExchange RatesExchange rate is defined as (VWAP-24H) last 24 hour (rolling window over time) Volume Weighted Average Price across multiple data sources listed on our platform. We are selecting and managing the data sources that are used in the calculation based on multiple factors to provide data of highest quality.Algorithm is described below:Exchange rates are produced from quotes, trades, and metadata datasets.Symbols that are not data_type = ""SPOT"" are excluded from the calculation.Symbols from the data sources that were marked by us as not legitimate are excluded from the calculation.Quotes data where the spread is outside the range of <0$; 67%> are discarded. spreadPrc = (ask - bid) / ((ask + bid) / 2)The midpoint from the quote data is used as a pricing reference and it's weighted by the passive cumulative volume resting on the best prices.Volume from the trades is used to weight the midpoint prices in the VWAP24 algorithm.Midpoint data that has not been updated in the last 5 minutes and 1 second is discarded.The last 24-hour volume for each symbol is updated every 4 hours when approximately 20% of the data in the sliding window changes (also, the list of eligible markets is updated at the same time).Everywhere in the algorithm below, we are using asset pairs only from exchanges that have the highest legitimacy rank, and the rest of the exchanges are discarded. As we establish the highest-ranking exchanges that have this data for each asset pair, we ensure that the highest quality data is used for each of them. The rank used for asset pairing is carried over to the following steps.Every 1 second, we update VWAP24 data for every asset pair across all data sources.For each asset pair, we also discard data that is outside the 3 sigma range if there are at least 3 exchanges for this asset pair.From the VWAP24 data, we are creating a tree structure where node/vertex = asset and edge = rate.By traversing the tree structure using the BFS algorithm and our secret sauce, we are able to establish the final exchange rates.📄️ Get all current ratesGet the current exchange rate between requested asset and all other assets.📄️ Timeseries dataGet the historical exchange rates between two assets in the form of the timeseries.📄️ Timeseries periodsYou can also obtain historical exchange rates of any asset pair, grouped into time periods.📄️ Get specific rateRetrieves the exchange rate for a specific base and quote asset at a given time or the current rate.Was this section helpful?12345PreviousREST APINext Get all current ratesCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/exchange-rates)"
184,i.io market data rest api metadata #list all exchanges get,i.io market data rest api metadata #list all exchanges get.   Metadata | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataList all asset iconsList all assets by asset IDList all assetsList all exchanges by exchange_idList all exchangesList all symbolsList of icons for the exchangesList of symbols for the exchangeList symbol mapping for the exchangeMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIMetadataMetadata📄️ List all asset iconsGets the list of icons (of the given size) for all the assets.📄️ List all assets by asset IDList all assets by asset ID📄️ List all assetsRetrieves all assets.📄️ List all exchanges by exchange_idList all exchanges by exchange_id📄️ List all exchangesGet a detailed list of exchanges provided by the system.📄️ List all symbolsRetrieves all symbols with optional filtering.📄️ List of icons for the exchangesList of icons for the exchanges📄️ List of symbols for the exchangeList of symbols for the exchange📄️ List symbol mapping for the exchangeList symbol mapping for the exchangeWas this section helpful?12345PreviousTimeseries Index ValueNextList all asset iconsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/metadata/#list-all-exchanges-get)
185,i.io flat files api,"i.io flat files api.   Flat Files - Overview | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyFlat FilesBilling and UsageData & StructureS3 APIPush APIFlat FilesOn this pageFlat Files - OverviewWelcome to the CoinAPI Flat Files documentation. This API provides access to historical cryptocurrency market data in flat file format, allowing for efficient retrieval and analysis of large datasets.What is the Flat Files?​The Flat Files is a powerful tool for accessing comprehensive historical market data. It currently offers access via an S3-compatible API, allowing you to use familiar S3 operations and tools to retrieve data.Available Data Types​Our Flat Files provides access to the following types of data:Quotes: Best bid and ask prices with associated volumes.Trades: Executed trades with price, volume, and direction.Limit Book Data: Full order book snapshots and updates.Comming soon: OHLCV Data: Open, High, Low, Close, and Volume data for various time periods. Current and Future Access Methods​Currently, we offer a pull-based S3 API for accessing flat files. This allows you to retrieve data on-demand using S3-compatible tools and libraries.Coming Soon: Push APIWe're excited to announce that we'll soon be releasing a Push API feature. With this new capability, you'll be able to:Define specific data sets you needHave data automatically pushed to your designated S3 bucket on a daily basisStreamline your data pipeline by receiving updates without manual pollingStay tuned for more information about this upcoming feature!Getting Started​To start using the Flat Files:Sign up for a CoinAPI account if you haven't already.Obtain your API credentials from the dashboard.Choose an S3-compatible client or SDK.Configure your client with our endpoint and your credentials.Start retrieving historical market data!For detailed information on authentication, billing, and API usage, please refer to the articles from the menu.Standards and conventions​This section represents used standards and conventions across all documents and API's.infoThe keywords ""MUST"", ""MUST NOT"", ""REQUIRED"", ""SHALL"", ""SHALL NOT"", ""SHOULD"", ""SHOULD NOT"", ""RECOMMENDED"", ""MAY"", and ""OPTIONAL"" in this document are to be interpreted as described in RFC 2119.Variables naming​All variables are named using the Snake case (or snake_case) naming convention. This means that words are separated by a single underscore _ character, no spaces are used, and letters are lowercase.Asset codes​ISO 4217 currency code standard is used for fiat money identifications. Cryptocurrency assets are identified using codes used by the general public or adopted by the majority of exchanges.Exchange codes​Exchange on our platform is identified by the specific exchange API and the matching engine behind it. When the example exchange has multiple separate APIs, e.g., for different products SPOT, OPTIONS, or to cover other regions, we will expose these symbols from these respective APIs on different exchange identifiers. Below are examples of BINANCE (multiple APIs, multiple regions) and DERIBIT (single API, single region). A full listing of exchanges can be queried using the Market Data REST API.BINANCE Exchange IDsWebsiteDescriptionBINANCEhttps://www.binance.com/BinanceBINANCEDEXhttps://www.binance.org/Binance DEXBINANCEFTShttps://www.binance.com/Binance Futures (USDT/dapi)BINANCEFTSChttps://www.binance.com/Binance Futures (Coin/fapi)BINANCEFTSCUAThttps://www.binance.com/Binance Futures Testnet (Coin/fapi)BINANCEFTSUAThttps://www.binance.com/Binance Futures Testnet (USDT/dapi)BINANCEJEhttps://www.binance.je/Binance JerseyBINANCEJEXhttps://www.jex.com/enBinance JEXBINANCEKRhttps://www.binance.kr/Binance KoreaBINANCEOPTVhttps://www.binance.com/Binance Options Vanilla (vapi)BINANCEOPTVUAThttps://www.binance.com/Binance Options Vanilla Testnet (vapi)BINANCEUAThttps://www.binance.com/Binance TestnetBINANCEUGhttps://www.binance.co.ug/Binance UgandaBINANCEUShttps://www.binance.us/Binance USDERIBIT Exchange IDsWebsiteDescriptionDERIBIThttps://www.deribit.com/DeribitNumbers precision​Numbers in our platform can have a maximum of 19 digits overall, but no more than 9 decimal places. In cases when the number represents aggregate value then we allow 38 digits overall, but still no more than 9 decimal places.Time​For all input and output time values ISO 8601 standard is used.Format specifierDescriptionyyyyThe year is a four-digit number.MMThe month, from 01 through 12.ddThe day of the month, from 01 through 31.HHThe hour, using a 24-hour clock from 00 to 23.mmThe minute, from 00 through 59.ssThe second, from 00 through 59.fffThe milliseconds in a date and time value.fffffffThe ten-millionths of a second in a date and time value.Input time values are parsed using the following formats as far as possible:yyyy-MM-ddTHH:mm:ss.fffffffyyyy-MM-ddTHH:mm:ss.fffyyyy-MM-ddTHH:mm:ssyyyy-MM-ddTHH:mmyyyy-MM-ddTHHyyyy-MM-ddyyyyMMddTHHmmssfffffffyyyyMMddTHHmmssfffyyyyMMddTHHmmssyyyyMMddTHHmmyyyyMMddTHHyyyyMMddinfoWhen time zone information is not supplied, we will assume the UTC zone.Output time values are formatted using the following patterns:yyyy-MM-ddTHH:mm:ss.fffffffZyyyy-MM-ddinfoAll time values we provide are UTC zones. Do not assume otherwise.Was this section helpful?12345NextBilling and UsageWhat is the Flat Files?Available Data TypesCurrent and Future Access MethodsGetting StartedStandards and conventionsVariables namingAsset codesExchange codesNumbers precisionTimeCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/flat-files-api)"
186,i.io ems api #order status lifecycle,"i.io ems api #order status lifecycle.   EMS - Starter Guide | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIREST APIWebSocket APIFIX APISelf Hosted GuideEMS APIOn this pageEMS - Starter GuideThis section will provide general information about the Execution Management System API (EMS API) software product and enumerate a number of features that it provides.infoThe keywords ""MUST"", ""MUST NOT"", ""REQUIRED"", ""SHALL"", ""SHALL NOT"", ""SHOULD"", ""SHOULD NOT"", ""RECOMMENDED"", ""MAY"", and ""OPTIONAL"" in this document are to be interpreted as described in RFC 2119.What is EMS API?​Execution Management System (EMS) is a software that manages orders, executions, and exposure in an efficient, fast, cost-effective, and straightforward manner. An EMS allows you to route orders to multiple cryptocurrency exchanges simultaneously using a simple, robust, and unified Application Programming Interface (API).The software can be used in 2 different ways:Managed Cloud - Everything on our side. Hosted in the Cloud by CoinAPI. You manage the deployment using the REST API.Self-Hosted - Software on our side, on everything else.Dimension ComparisonManaged CloudSelf-HostedEase of use/installationVery easyHardTime to marketFastSlowDevOps team required to maintainNoYesOrder flow sent directly to the destinationNoYesWho manages the infrastructure (incl. monitoring)CoinAPIYouWho optimizes the latencyCoinAPIYou (CoinAPI only in software)How to installInstruct our Cloud Mgmt APIInstall on your infrastructurecautionWe recommend starting with the Managed Cloud and possibly upgrading to the Self-Hosted if the requirements of the integration/project will make that commercially reasonable.Architecture and components​A self-hosted EMS cluster can be deployed on a single server or multiple servers that will span multiple geographical locations, server sites, or cloud providers. In the Managed Cloud version, you did not care about that as we manage the server sites to be as close to the order destinations as possible.EMS consists of several components listed and ordered by dependency relationship:Exchange - Order destination, exchange, or broker.CoinAPI EMS Edge - Software that's responsible for communicating with the single specific order destination for which is deployed. This component exposes the EMS API for diagnostics purposes which functions visibility are limited to this single destination.CoinAPI EMS API - Software that's responsible for exposing fully functional the EMS API, maintaining the connection with all instances of CoinAPI EMS Edge.Customer Application - Customer software using the EMS API exposed by the CoinAPI EMS API component.Benefits and features​Low latency support​Specific projects usually involve High-Frequency Trading (HFT) or Market Making (MM) requiring low latency access to the order destination. EMS API was designed to have native support for this kind of activity.For every order destination in the cluster to which the submillisecond latency is required, these components should be deployed on a single server as close as possible to the order destination:CoinAPI EMS EdgeCoinAPI EMS APICustomer Application The closest proximity can be achieved using the:cloud region and/or availability zone the same as the destinationcollocation near the destinationcross-connect or direct-connect to the destination network infrastructureshortcutting the routers, SNAT/DNAT hosts, or proxies like CloudFlareThe cluster can naturally contain other order destinations at the same time in this setup, and this fact doesn't affect the latency to the locally provisioned destination(s).Normalized API abstraction​Our EMS API provides an abstraction layer that consolidates all supported third-party APIs into a single set of simple and robust data models and protocols. The Exchanges and the Assets are standardized using the Market Data REST API with which this product is compatible. More information about the exchanges and asset standardization can be found in the Documentation of the Market Data Product.Industry-standard protocols​Our API's can be accessed using multiple protocols widely adopted by the industry as a standard:RESTWebSocketFIX 4.4, 5.0FIXT 1.1Self-host or in Cloud​Deploy your property applications and trading algorithms in your company's collocated data centers or cloud providers if you need that, otherwise, let us manage the infrastructure and focus on using the API.Security & Privacy​Don't need to worry about the issues at the audit. Order flow, exchange API keys, or execution reports never leave your company infrastructure as the product is self-hosted.tipThe software complies with the ""SOC 2"" and ""ISO/IEC 27001 information security certifications.Multi-account support​Manage an unlimited number of exchange accounts in the cluster (for example, on behalf of your customers).SDK and samples for 40+ languages​We have the SDK libraries and code samples available for more than 40+ languages. The full list is available here: https://github.com/coinapi/coinapi-sdk/tree/masterComprehensive support​Leverage support for all market types and order types.High-quality integrations​Our integrations with third-party APIs are heavily tested and crafted with stability and latency in mind. For several third parties, we usually use multiple protocols simultaneously or tricks to acquire valuable pieces of information faster.Enterprise-grade support and maintenance​EMS product is fully supported and maintained to stay ahead of the curve. This approach offloads the often disliked responsibilities of the Software and DevOps Engineers in the organization and enables them to focus on the core business.High availability​The EMS software is designed to support high-availability deployments out of the box. For each order destination, we/you deploy multiple CoinAPI EMS Edge and CoinAPI EMS API components on different servers, availability zones, or cloud/infrastructure providers. Cluster using the service discovery backend, all components are automatically detected and interconnected.P&L and asset monitoring​Using the EMS, your organization can manage exposure and positions in real-time across all supported order destinations and build sophisticated risk management controls.Order lifecycle​This section will describe the lifecycle of the order in the EMS software.Order status description​This table describes how to interpret a specific order status.NameCan transit toStatus descriptionRECEIVEDREJECTEDROUTINGThe order is processed by the EMS.ROUTINGROUTEDThe order is (on the wire) between the EMS and the Exchange.ROUTEDREJECTEDNEWPARTIALLY_FILLEDFILLEDCANCELEDThe order has been sent to the exchange and not yet active in the order book.NEWPARTIALLY_FILLEDFILLEDPENDING_CANCELCANCELEDThe order is active in the book in its original state.PENDING_CANCELNEWPARTIALLY_FILLEDFILLEDCANCELEDThe order cancelation message has been sent to the Order destination.PARTIALLY_FILLEDFILLEDPENDING_CANCELCANCELEDThe order is partially filled and active in the order book.FILLEDThe order is filled and removed from the order book. This state is terminal.CANCELEDThe order is canceled and removed from the order book. This state is terminal.REJECTEDThe order is rejected. This state is terminal.Order status lifecycle​This table describes how to interpret transitions between order statuses and their initial values.Source StatusDestination statusDescriptionRECEIVEDEMS received a new order via the API.NEWEMS received an unseen new order from the Order destination. The order was relayed to the destination outside the EMS.PARTIALLY_FILLEDEMS received unseen partially filled order from the Order destination. The order was relayed to the destination outside the EMS.RECEIVEDREJECTEDEMS rejected the order.RECEIVEDROUTINGEMS delivering the order to the Order destination.ROUTINGROUTEDEMS sent the order to the Order destination.ROUTEDREJECTEDEMS received a message from the exchange that the order was rejected.ROUTEDNEWEMS received a message from the exchange that the order is active in the book in its original state.ROUTEDPARTIALLY_FILLEDEMS received a message from the exchange that part of the order was executed aggressively (removed liquidity). The remaining passive part is active in the book.ROUTEDFILLEDEMS received a message from the exchange that the order was executed aggressively (removed liquidity).ROUTEDCANCELEDEMS received a message from the exchange that the order is in the canceled state. The order has not been in the book as the conditions for the entry were not satisfied.NEWPARTIALLY_FILLEDEMS received a message from the exchange that part of the passive order was filled.NEWFILLEDEMS received a message from the exchange that the passive order is filled.NEWPENDING_CANCELEMS received cancel request for the order and successfully relayed it to the Order destination.NEWCANCELEDEMS received a message from the exchange that the passive order was canceled.PARTIALLY_FILLEDFILLEDEMS received a message from the exchange that the remaining part of the passive order is filled.PARTIALLY_FILLEDPENDING_CANCELEMS received cancel request for the remaining part of the passive order and successfully relayed it to the Order destination.PARTIALLY_FILLEDCANCELEDEMS received a message from the exchange that the remaining part of the passive order is canceled.PENDING_CANCELNEWEMS received a message from the exchange that updated the order before processing the cancellation request or the order cancellation request was rejected.PENDING_CANCELPARTIALLY_FILLEDEMS received a message from the exchange that updated the order before processing the cancellation request or the order cancellation request was rejected.PENDING_CANCELFILLEDEMS received a message from the exchange that updated the order before processing the cancellation request or the order cancellation request was rejected.PENDING_CANCELCANCELEDEMS received a message from exchange` that updated the order before processing the cancellation request or the order cancellation request was rejected.Order parameters​This section will describe parameters of the order in the EMS sofware.Order type​EMS supports only the LIMIT order type. Market orders don't have price protection, and because of that, they are not supported. As an alternative, you can use the Immediate or Cancel IOC order and provide the worst execution price to achieve the same result.Time in force​Time in force is a special instruction used when placing a trade to indicate how long an order will remain active before it expires.The table below describes how to interpret time in force parameter values.Time in forceShortcodeDescriptionGOOD_TILL_CANCELGTCA Good Till Cancel (GTC) is a default type of time-in-force. The order that lasts until is completed or canceled.GOOD_TILL_TIME_EXCHANGEGTTEThe Good Till Time Exchange (GTTE) time in force lets you set an expiration date and time up until which an order will be active in the book. The exchange handles the execution of the cancel originated from parameter.GOOD_TILL_TIME_OEMLGTTOThe Good Till Time OEML (GTTO) time in force lets you set an expiration date and time up until which an order will be active in the book. The CoinAPI EMS Edge sending the cancel request originated from the parameter. Worth mentioning that: (a) The cancellation request will not be sent if the software will be not be running at the time of expiration. (b) This parameter does not depend on the exchange. (c) The clock of the server running CoinAPI EMS Edge is used to trigger the cancelation request at the expiration.FILL_OR_KILLFOKFill or kill (FOK) is a type of time in force used to instruct an exchange to execute a transaction immediately and completely or not at all. This order will only remove liquidity from the order book. It must be filled in its entirety or canceled (killed).IMMEDIATE_OR_CANCELIOCAn immediate or cancel order (IOC) is a type of time in force used to instruct an exchange to execute all or part immediately and cancels any unfilled portion of the order. This order will only remove liquidity from the order book. It will fill whatever part of the order it can immediately and cancel any remaining amount so that no part of the order is added to the order book.The table below displays a breakdown of the EMS support of specific time in force values by the Order destination. Order destination idGTCGTTEGTTOFOKIOCBINANCEXXXXBINANCEUATXXXXBINANCEJEXXXXBINANCEUSXXXXBINANCEFTSXXXXBINANCEFTSUATXXXXBINANCEFTSCXXXXBINANCEFTSCUATXXXXBINANCEOPTVXXXXBINANCEOPTVUATXXXXBITFINEXXXXXXBITMEXXXXXBITMEXUATXXXXBITSTAMPXXXXBLOCKCHAINEXCHANGEXXXXCOINBASEXXXXGEMINIXXXXHITBTCXXXXXKRAKENXXXKRAKENFTSXXXPOLONIEXXXXXLMAXDIGITALXXXXLMAXDIGITALUATXXXXDERIBITXXXXDERIBITUATXXXXDYDXXXXXXLegend: X - supported.Execution instructions​Execution instruction puts restrictions on order handling at the matching engine. More than one instruction can apply to an order. The table below describes how to interpret execution instructions parameter values. Legend: X - supported.InstructionShortcodeDescriptionAUCTION_ONLYAOAn Auction Only (AO) instructs exchange that this order is for the auction only book for the next auction. The order may be cancelled up until the the auction locks, after which cancel requests will be rejected.INDICATION_OF_INTERESTIOIAn indication of interest (IOI) instructs exchange that this order should be processed as request for liquidity from block trading market markets.MAKER_OR_CANCELMOCA Maker or cancel (MOC) instructs exchange that this order will only add liquidity to the order book. If any part of the order could be filled immediately, the whole order will instead be rejected before any execution occurs. This instruction is also known as Post only or Participate don't initiate.CANCEL_ON_DISCONNECTCODCancel on System Failure (Cancel on disconnect)DO_NOT_CANCEL_ON_DISCONNECTNCODReinstate on System Failure (Do not cancel on disconnect)DO_NOT_INCREASEDNI(Reduce only) If part of a position is closed by any other means than the reduce-only order, the reduce-only order will be automatically adjusted downwards. If the trader decides to increase their position before the reduce-only order is executed, the quantity of the reduce-only order will not increase as well.The table below displays a breakdown of the EMS support of specific execution instructions by the Order destination. Order destination idMOCAOIOICODNCODDNIBINANCEXBINANCEUATXBINANCEJEXBINANCEUSXBINANCEFTSXBINANCEFTSUATXBINANCEFTSCXBINANCEFTSCUATXBINANCEOPTVXBINANCEOPTVUATXBITFINEXXBITMEXXBITMEXUATXBITSTAMPBLOCKCHAINEXCHANGEXCOINBASEXGEMINIXXXHITBTCKRAKENFTSXKRAKENXPOLONIEXXLMAXDIGITALXXLMAXDIGITALUATXXDERIBITXXDERIBITUATXXDYDXXXLegend: X - supported.Market Orders​While our API inherently supports limit orders, we understand the necessity for some clients to operate with market orders. This documentation provides a technical solution for simulating market orders using our limit order functionality with the Fill or Kill (FOK) option.Technical Solution​To mimic the behavior of a market order using our API, which inherently supports limit orders, clients can place a limit order with a Fill or Kill (FOK) condition. This approach effectively replicates the immediate execution characteristic of a market order while requiring the specification of a maximum (for buy orders) or minimum (for sell orders) price limit.Implementation Steps:Prepare the Order:Define the order as a limit order. Set the price limit to the maximum price the client is willing to pay for a buy order or the minimum price they are willing to accept for a sell order. Ensure that the order quantity meets the client's requirement for the transaction.Set the FOK Condition:Apply the Fill or Kill condition to the order. This condition mandates that the order must be executed immediately in its entirety or not executed at all. It ensures that partial fills do not occur, closely aligning with the nature of a market order.Execution and Validation:Upon submission, the EMS will attempt to fill the order immediately based on the specified price limits and the FOK condition. If the order cannot be filled immediately and completely within the defined price range, it will be automatically cancelled, ensuring no partial fills.Advantages and Considerations​Immediate Execution: The FOK condition ensures that the order, if executed, is filled immediately, mirroring the behavior of a market order.Price Control: Clients maintain control over the maximum or minimum price limits, adding a layer of price protection that standard market orders do not provide.Simplicity: This method avoids the need for additional development or integration, utilizing the existing infrastructure of our API.Using a limit order API can be considered simpler and more straightforward for several reasons, especially when compared to other types of trading orders. Here are some factors that contribute to the perceived simplicity:Predictability and Control:Price Certainty: Limit orders allow users to specify the maximum or minimum price at which they are willing to buy or sell an asset. This provides certainty about the price, which is not the case with market orders, where the execution price can vary.Control over Execution: Users have better control over their trades. They can decide not to execute a trade if the market does not reach their specified price, avoiding unwanted entries or exits in volatile market conditions.Consistent behaviour: Not all the order destinations support market orders or when they support it, usually they are implmeneted in form of limit orders.Straightforward Implementation:Simplicity in API Design: Limit order APIs are generally straightforward to implement and integrate because the parameters are clear and well-defined (quantity, price, and sometimes duration).Fewer Real-time Considerations: Unlike market orders, where getting the best available price in real-time is crucial, limit orders are placed based on predefined criteria. This can reduce the complexity associated with rapid decision-making and real-time data processing.Reduced Need for Immediate Market Data:Less Dependency on Real-time Pricing: Since the execution of a limit order is based on the user's specified price, there's less need for immediate or real-time market data, unlike market orders where knowing the current market price is crucial for order execution.Cost Predictability:Avoidance of Slippage: With limit orders, the risk of slippage (the difference between the expected price of a trade and the price at which the trade is executed) is eliminated. Users can be more confident about the cost of their trades, making financial planning and risk management more straightforward.Ease of Monitoring and Management:Set and Forget: Users can place limit orders and not worry about monitoring the market constantly. The order will only execute if the market price meets the user's criteria, making it a more passive form of trading.Batch Processing Friendly: For applications or trading strategies that place numerous orders, limit orders can be more manageable as they don't require immediate processing or constant monitoring of market prices.Reduced Impact on Market Price:Minimized Market Disruption: Limit orders can be less disruptive to the market price, especially for large orders. They are executed only at the user's specified price, avoiding large, sudden impacts on the market price that can occur with large market orders.In summary, a limit order API can offer a simpler and more controlled trading experience, with price certainty, reduced need for real-time market data, straightforward implementation, and predictable costs. These factors contribute to its appeal, especially for users or systems focusing on strategic, planned trading activities rather than immediate, real-time market engagement.Time​For all input and output time values ISO 8601 standard is used.Format specifierDescriptionyyyyThe year as a four-digit number.MMThe month, from 01 through 12.ddThe day of the month, from 01 through 31.HHThe hour, using a 24-hour clock from 00 to 23.mmThe minute, from 00 through 59.ssThe second, from 00 through 59.fffThe milliseconds in a date and time value.fffffffThe ten millionths of a second in a date and time value.Input time values are parsed using the following formats as far as possible:yyyy-MM-ddTHH:mm:ss.fffffffyyyy-MM-ddTHH:mm:ss.fffyyyy-MM-ddTHH:mm:ssyyyy-MM-ddTHH:mmyyyy-MM-ddTHHyyyy-MM-ddyyyyMMddTHHmmssfffffffyyyyMMddTHHmmssfffyyyyMMddTHHmmssyyyyMMddTHHmmyyyyMMddTHHyyyyMMddinfoWhen time zone information is not supplied, we will assume the UTC time zone.Output time values are formatted using the following patterns:yyyy-MM-ddTHH:mm:ss.fffffffZyyyy-MM-ddinfoAll time values we provide are UTC time zone. Do not assume otherwise.Was this section helpful?12345NextAuthenticationWhat is EMS API?Architecture and componentsBenefits and featuresLow latency supportNormalized API abstractionIndustry-standard protocolsSelf-host or in CloudSecurity & PrivacyMulti-account supportSDK and samples for 40+ languagesComprehensive supportHigh-quality integrationsEnterprise-grade support and maintenanceHigh availabilityP&L and asset monitoringOrder status descriptionOrder status lifecycleMarket OrdersTechnical SolutionAdvantages and ConsiderationsTimeCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/#order-status-lifecycle)"
187,i.io naas api bitcoin Methods analyzepsbt x,"i.io naas api bitcoin Methods analyzepsbt x.   analyzepsbt | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsanalyzepsbtOn this pageanalyzepsbtOverview​The 'analyzepsbt' method is used to inspect a PSBT (Partially Signed Bitcoin Transaction) and return information about its current state. It helps in understanding the transaction's inputs, estimated size, fee rate, and the role of the next person in the transaction process.Request​shellcsharpphppythonjavascriptgorubywget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""analyzepsbt"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""analyzepsbt\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""analyzepsbt"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""2.0"", ""method"": ""analyzepsbt"", ""params"": [], ""id"": 1})headers = { 'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type': 'application/json', 'accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""analyzepsbt"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""analyzepsbt"",""params"": [],""id"":1}`) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"") req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""method"": ""analyzepsbt"", ""params"": [], ""id"": 1})response = https.request(request)puts response.read_bodyRequest Parameters​psbt (string): The PSBT in base64 format that needs to be analyzed.Response​{ ""result"": null, ""error"": { ""code"": -1, ""message"": ""analyzepsbt \""psbt\"" Analyzes and provides information about the current status of a PSBT and its inputs Arguments: 1. psbt (string, required) A base64 string of a PSBT Result: {         (json object) \""inputs\"" : [      (json array, optional)  {        (json object)  \""has_utxo\"" : true|false,  (boolean) Whether a UTXO is provided  \""is_final\"" : true|false,  (boolean) Whether the input is finalized  \""missing\"" : {     (json object, optional) Things that are missing that are required to complete this input   \""pubkeys\"" : [    (json array, optional)   \""hex\"",     (string) Public key ID, hash160 of the public key, of a public key whose BIP 32 derivation path is missing   ...   ],   \""signatures\"" : [   (json array, optional)   \""hex\"",     (string) Public key ID, hash160 of the public key, of a public key whose signature is missing   ...   ],   \""redeemscript\"" : \""hex\"",  (string, optional) Hash160 of the redeemScript that is missing   \""witnessscript\"" : \""hex\""  (string, optional) SHA256 of the witnessScript that is missing  },  \""next\"" : \""str\""    (string, optional) Role of the next person that this input needs to go to  },  ... ], \""estimated_vsize\"" : n,   (numeric, optional) Estimated vsize of the final signed transaction \""estimated_feerate\"" : n,   (numeric, optional) Estimated feerate of the final signed transaction in BTC/kvB. Shown only if all UTXO slots in the PSBT have been filled \""fee\"" : n,      (numeric, optional) The transaction fee paid. Shown only if all UTXO slots in the PSBT have been filled \""next\"" : \""str\"",     (string) Role of the next person that this psbt needs to go to \""error\"" : \""str\""     (string, optional) Error message (if there is one) } Examples: > bitcoin-cli analyzepsbt \""psbt\"" "" }, ""id"": 1}Was this section helpful?12345PreviousaddnodeNextbumpfeeOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/analyzepsbt_x)"
188,i.io cdn cgi l email protection#1b686e6b6b74696f5b787472757a6b72357274,"i.io cdn cgi l email protection#1b686e6b6b74696f5b787472757a6b72357274.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 8aad269f9f984119 •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#1b686e6b6b74696f5b787472757a6b72357274)"
189,i.io,"i.io.   Welcome | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyOn this pageWelcomeWelcome to the CoinAPI documentation section. This is the perfect destination to explore CoinAPI's API collection, which includes tutorials, an overview, features, use cases we cover, and much more. You've come to the perfect place whether you have questions or simply want to learn more. Our documentation area serves as a valuable resource for understanding our API and how to make the most of its features.What is CoinAPI?​CoinAPI is a collection of cryptocurrency APIs that allows users to get the most out of cryptocurrency data. CoinAPI creates the most accessible and developer-friendly APIs for the world's software developers, analysts, and fintech-driven companies. CoinAPI streamlines crypto operations, trading, and data access on a large scale. It is the most popular option on the market due to its extensive documentation, minimal latency, simple integration, developer assistance, and SDK in a variety of languages. CoinAPI was created to make the crypto experience simpler for crypto developers, traders, and any other individuals invested in the crypto space. Customers choose CoinAPI because of our 5 years of proven experience, reliable and verified platform, service functions, and the highest frequency and aggregated data.Our mission​CoinAPI's goal is to provide all necessary APIs in one place. It eliminates the need to choose between various market vendors, making it easier for crypto users to access the data and tools they need for their use cases. Furthermore, CoinAPI helps users save time and resources, giving them more opportunities to use crypto APIs effectively. By providing a one-stop shop for all cryptocurrency needs, CoinAPI is making it easier than ever to unlock the full potential of digital currencies.CoinAPI product portfolio​CoinAPI's product portfolio includes Market data API, EMS trading API, and CryptoTick, a pay-per-service platform that is handy for researchers who are not very familiar with APIs. Market data API - CoinAPI is collecting an extensive amount of market data points, enabling users to gain useful insights. Our crypto raw data can be accessed by both individuals and businesses, allowing them to create innovative services. Thanks to CoinAPI, customers can access a wide variety of cryptocurrency historical and real-time data with ease. Many customers have expressed their appreciation for our services, calling it ""never easier to organize and analyze the data."" We guarantee reliable access to all sorts of cryptocurrency data.EMS Trading API - EMS Trading API makes it possible for clients to access multiple cryptocurrency exchanges from a single account, providing the most advantageous prices available, enabling trading operations, and recording the history of those operations. The API connects to exchanges and executes orders, either through REST or WebSocket API. CryptoTick - CryptoTick offers a ""pay as you go"" service, where customers pay for the exact usage of the service rather than a subscription. Customers can pre-purchase a certain amount of units and can use the service until their balance runs out, after which they can top up again. CryptoTick does not have an application programming interface (API), which allows applications to integrate. Instead, customers can go directly to the site to get the requested information; they just need to specify what they require, and the data will then be provided to them in the CSV format. This format ensures efficient storage and easy accessibility of the data. Therefore, CryptoTick is an ideal solution for customers needing historical data, as it is a user interface and not an application.Why choose CoinAPI?​CoinAPI provides a complete toolkit for your cryptocurrency assets:API access to real-time and historical market data. CoinAPI gives access to both historical and current market information. It supplies customers with the most current quotes and trades and presents them in real time, allowing them to incorporate the data into crypto projects. Low latency & quick response rate - our system is designed to process and deliver data with sub-millisecond accuracy, ensuring that you receive the most up-to-date information as quickly as possible. We have a fully managed and secure network connection with high-speed connectivity. This is specifically designed for price discovery and ensures that data is transferred quickly and efficiently.High quality & superior accuracy - we support non-standard items, including unusual order types of exchanges, along with all their functionality. This means that we can provide you with a wide range of data, ensuring that you have all the information you need to make informed decisions. Moreover, in CoinAPI, you obtain data from different exchanges in a standardized form, so you can compare them easily. Last but not least, we ensure accurate information by having human experts double-check all stock symbols and asset codes. This means that the data you receive from us is not only fast but also reliable and accurate.Every interface you need. We deliver three different protocols: REST, FIX, and WebSocket, so you don’t need to worry about what interface each exchange has, and what it supports. CoinAPI boasts a wide-reaching integration with 350 exchanges (and growing), enabling users to access comprehensive data such as order books, transactions, quotes, and metadata. Furthermore, our platform aggregates this information to generate metrics and metadata from different exchanges and interprets the data to create an understanding of it across exchanges. Additionally, we archive all the data to provide our users with access to historical figures and numbers.Redundancy. It's important to consider redundancy when selecting a dependable API partner, to make sure they provide server redundancy. This means that customers can access their nearest region by default, and in the case of any issues, a fallback region is automatically and immediately availableDeveloper-friendly interfaces. SDK in 40 languages. CoinAPI has you covered with multi-language SDKs and great documentation tailored to every endpoint. Our Software Development Kit (SDK) is available on GitHub at https://github.com/coinapi/coinapi-sdkCreate multiple API Keys for the subscription to create a virtual space used to safely test, train, and experiment with changes or configurations to a system. It allows users to replicate their production environment and make modifications without the risk of disrupting their current operations. This is an invaluable tool for exploring new features and troubleshooting potential issues.Data standardization. By standardizing data collection via CoinAPI, you are one step closer to having a complete and clean crypto data view that you can use.Order books of the highest quality. We offer detailed, real-time data on cryptocurrency buy and sell orders, including price levels, order counts, types, and timestamps, sourced from multiple exchanges for a broad market view. Such data helps you make informed trading decisions.OHLCV data. With CoinAPI you can retrieve Open, High, Low, Close, and Volume (OHLCV) data, historical quotes, and historical trades. You can easily specify the type of data you want to retrieve using query parameters. Companies can gain a range of advantages from CoinAPI, such as gaining essential information, straightforward integration, and automation. Clients can get all of their crypto APIs in one place, which makes it easier to manage large-scale crypto operations, trading, and data access.Still uncertain about how CoinAPI can help your business? Try out your use case and find out if CoinAPI meets your requirements. You can get your free API key here. Support​If you have any questions or need assistance, you can visit our support page and read the FAQ. Furthermore, you can contact our team if you require additional help. Systems Status​Keep informed of the operational status of CoinAPI and any reports of interruptions.CoinAPI Blog​Stay informed and keep up-to-date with the most recent news from CoinAPI by checking our blog.Was this section helpful?12345What is CoinAPI?Our missionCoinAPI product portfolioWhy choose CoinAPI?SupportSystems StatusCoinAPI BlogCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io)"
190,i.io market data websocket messages#orderbook l2 full  in,"i.io market data websocket messages#orderbook l2 full  in.   Messages | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1EndpointsGeneralMessagesWebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideWebSocket API V1MessagesOn this pageMessagesTrades IN​Trade message JSON is structured like this:{ ""type"": ""trade"", ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""sequence"": 2323346, ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""uuid"": ""770C7A3B-7258-4441-8182-83740F3E2457"", ""price"": 770.000000000, ""size"": 0.050000000, ""taker_side"": ""BUY""}Trade message is sent for every executed transaction (orderbook match).Message variables​VariableDescriptiontypeMessage type, always tradesymbol_idOur symbol identifier, format documented heresequenceSequence number per pair (type, symbol_id) which is valid only for the lifespan of the connection.time_exchangeTime of trade reported by exchangetime_coinapiTime when coinapi first received trade from exchangeuuidOur unique trade identifier in form of UUIDv4pricePrice of the transactionsizeBase asset amount traded in transaction (if a value is equal to zero, then transaction price just marking a data point eg. in the index time series)taker_sideAggressor side of the transaction (BUY/SELL/BUY_ESTIMATED/SELL_ESTIMATED/UNKNOWN)Possible taker_side values​If exchange has not reported who the aggressor side of the transaction was, then we will classNameify who it most probably was based on current market view.taker_sideDescriptionBUYExchange has reported that transaction aggressor was buyingSELLExchange has reported that transaction aggressor was sellingBUY_ESTIMATEDExchange has not reported transaction aggressor, we estimated that more likely it was buyingSELL_ESTIMATEDExchange has not reported transaction aggressor, we estimated that more likely it was sellingUNKNOWNExchange has not reported transaction aggressor and we have not estimated who it wastipTo classNameify who the aggressor of the transaction was, we use a proprietary algorithm that extends the method described in the paper ""Inferring trade direction from intraday data (1991) by Lee and Ready""Quotes IN​Quote message JSON is structured like this:{ ""type"": ""quote"", ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""sequence"": 2323346, ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770.000000000, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124}Quote message is sent for each update on orderbook first best bid or ask level.Message variables​VariableDescriptiontypeMessage type, always quotesymbol_idOur symbol identifier, format documented here.sequenceSequence number per pair (type, symbol_id) which is valid only for the lifespan of the connection.time_exchangeExchange time of orderbooktime_coinapiCoinAPI time when orderbook received from exchangeask_priceBest asking priceask_sizeVolume resting on best ask (if a value is equal to zero then size is unknown)bid_priceBest bidding pricebid_sizeVolume resting on best bid (if a value is equal to zero then size is unknown)Orderbook L2 (Full) IN​A Book message is sent for each snapshot or update of the order book. After subscription to this data type is initialized, we immediately start delivering updates to the order book and at least one snapshot will be provided as soon as possible with the nearest update of the book. Book message represents total ammount of bids and asks aggregated by price level.{ ""type"": ""book"", ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""sequence"": 2323346, ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""is_snapshot"": true, ""asks"": [ {  ""price"": 456.35,  ""size"": 123 }, {  ""price"": 456.36,  ""size"": 23 }, ... cut ... ], ""bids"": [ {  ""price"": 456.10,  ""size"": 42 }, {  ""price"": 456.09,  ""size"": 5 }, ... cut ... ]}Message variables​VariableDescriptiontypeMessage type, always booksymbol_idOur symbol identifier, format documented here.sequenceSequence number per pair (type, symbol_id) which is valid only for the lifespan of the connection.time_exchangeExchange time of orderbooktime_coinapiCoinAPI time when orderbook received from exchangeis_snapshotIs message a snapshot? If true then all bid and ask levels are listed, otherwise only changed since the last message.asksAll ask levels for snapshot message, otherwise only changed ask levels since the last message. Data will be in order from the best to the worst price.bidsAll bid levels for snapshot message, otherwise only changed bid levels since the last message. Data will be in order from the best to the worst price.pricePrice of bid/asksizeVolume resting on bid/ask level in base amountOrderbook L2 (max 2x5) IN​A Book5 message contain first 5 best bid or ask levels. infoUpdates in this data type can be aggregated, e.g., 1 update every 100ms or 1s if the book actually changed on the level covered. Aggregation time depends on the connection bandwidth. Please subscribe to the full order book stream if you need all updates.{ ""type"": ""book5"", ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""sequence"": 2323346, ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""asks"": [ {  ""price"": 456.35,  ""size"": 123 }, {  ""price"": 456.36,  ""size"": 23 }, ... cut ... ], ""bids"": [ {  ""price"": 456.10,  ""size"": 42 }, {  ""price"": 456.09,  ""size"": 5 }, ... cut ... ]}Message variables​VariableDescriptiontypeMessage type, always book5symbol_idOur symbol identifier, format documented here.sequenceSequence number per pair (type, symbol_id) which is valid only for the lifespan of the connection.time_exchangeExchange time of orderbooktime_coinapiCoinAPI time when orderbook received from exchangeasksBest 5 ask levels in order from best to worst.bidsBest 5 bid levels in order from best to worst.pricePrice of bid/asksizeVolume resting on bid/ask level in base amountOrderbook L2 (max 2x20) IN​A Book20 message contain first 20 best bid or ask levels. infoUpdates in this data type can be aggregated, e.g., 1 update every 100ms or 1s if the book actually changed on the level covered. Aggregation time depends on the connection bandwidth. Please subscribe to the full order book stream if you need all updates.{ ""type"": ""book20"", ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""sequence"": 2323346, ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""asks"": [ {  ""price"": 456.35,  ""size"": 123 }, {  ""price"": 456.36,  ""size"": 23 }, ... cut ... ], ""bids"": [ {  ""price"": 456.10,  ""size"": 42 }, {  ""price"": 456.09,  ""size"": 5 }, ... cut ... ]}Message variables​VariableDescriptiontypeMessage type, always book20symbol_idOur symbol identifier, format documented here.sequenceSequence number per pair (type, symbol_id) which is valid only for the lifespan of the connection.time_exchangeExchange time of orderbooktime_coinapiCoinAPI time when orderbook received from exchangeasksBest 20 ask levels in order from best to worst.bidsBest 20 bid levels in order from best to worst.pricePrice of bid/asksizeVolume resting on bid/ask level in base amountOrderbook L2 (max 2x50) IN​A Book50 message contain first 50 best bid or ask levels. infoUpdates in this data type can be aggregated, e.g., 1 update every 100ms or 1s if the book actually changed on the level covered. Aggregation time depends on the connection bandwidth. Please subscribe to the full order book stream if you need all updates.{ ""type"": ""book50"", ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""sequence"": 2323346, ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""asks"": [ {  ""price"": 456.35,  ""size"": 123 }, {  ""price"": 456.36,  ""size"": 23 }, ... cut ... ], ""bids"": [ {  ""price"": 456.10,  ""size"": 42 }, {  ""price"": 456.09,  ""size"": 5 }, ... cut ... ]}Message variables​VariableDescriptiontypeMessage type, always book50symbol_idOur symbol identifier, format documented here.sequenceSequence number per pair (type, symbol_id) which is valid only for the lifespan of the connection.time_exchangeExchange time of orderbooktime_coinapiCoinAPI time when orderbook received from exchangeasksBest 50 ask levels in order from best to worst.bidsBest 50 bid levels in order from best to worst.pricePrice of bid/asksizeVolume resting on bid/ask level in base amountOrderbook L3 (Full) IN​A book_l3 message is sent for each snapshot or update of the order book in the level 3 format (order-by-order). After subscription to this data type is initialized, we immediately start delivering updates to the order book and at least one snapshot will be provided as soon as possible with the nearest update of the book. Book L3 does not aggregate any data. Every ask and bid corresponds to passive order with information on the price and size of that order. The id can identify any order.infoIf the data source is providing the maximum resoluiont of the order book on level 2 then this data type will fallback to the Level 2, in that case the Order ID's will be null or not provided. You should treat Order without Id as Level 2 aggregated entry in the price queue.{ ""type"": ""book_l3"" ""symbol_id"": ""COINBASE_SPOT_BCH_USD"", ""sequence"": 2323346, ""time_exchange"": ""2020-08-26T12:36:04.3464706Z"", ""time_coinapi"": ""2020-08-26T12:36:04.2807750Z"", ""is_snapshot"": false, ""asks"": [ {  ""id"": ""520269d4-c085-47ed-8825-6d787af90800"",  ""price"": 273.01,  ""size"": 1.81940502,  ""update_type"":""ADD"" }, {  ""id"": ""0ac891c7-8360-462c-8d9a-d8b217d3fca2"",  ""price"": 273.02,  ""size"": 1.0,  ""update_type"":""DELETE"" }, ... cut ... ], ""bids"": [ {  ""id"": ""6340ec1e-8be8-404e-b9a4-a14120ec179e"",  ""price"": 272.94,  ""size"": 1.81940502,  ""update_type"":""UPDATE"" }, {  ""id"": ""7eaaa899-089f-4308-9fa2-e33737ae36ee"",  ""price"": 272.96,  ""size"": 1.85989855,  ""update_type"":""DELETE"" }, ... cut ... ]}Message variables​VariableDescriptiontypeMessage type, always book_l3symbol_idOur symbol identifier, format documented here.sequenceSequence number per pair (type, symbol_id) which is valid only for the lifespan of the connection.time_exchangeExchange time of orderbooktime_coinapiCoinAPI time when orderbook received from exchangeis_snapshotIs message a snapshot? If true then all bid and ask levels are listed, otherwise only changed since the last messageasksAll ask levels for snapshot message, otherwise only changed ask levels since the last message. Data will be in order from the best to the worst price.bidsAll bid levels for snapshot message, otherwise only changed bid levels since the last message. Data will be in order from the best to the worst price.idOrder identifierpricePrice of bid/asksizeBid/ask base asset amountupdate_typeType of update messagePossible update_type values​The snapshot message represents the initial collection of the orders in the order book. Further updates are modifying this collection. update_type determines the type of update for the order. Please note that the snapshot message has no defined update_type.update_typeDescriptionADDAdd order to the price queue.UPDATEUpdate the order size in the price queue.SUBTRACTSubtract the order size in the price queue.DELETEDelete the order from the price queue.MATCHSubtract the order size in the price queue (same as SUBTRACT but caused by the match).OHLCV IN​A OHLCV message is sent on the between 1SEC and 1DAY. We are sending message when the ohlcv period is closed (we saw timestamp belonging to the new period) or every 5 seconds if ohlcv period was updated but not yet closed. { ""type"": ""ohlcv"", ""symbol_id"": ""BITSTAMP_SPOT_XRP_USD"", ""sequence"": 511, ""time_period_start"": ""2019-06-11T15:26:00.0000000Z"", ""time_period_end"": ""2019-06-11T15:27:00.0000000Z"", ""time_open"": ""2019-06-11T15:26:07.0000000Z"", ""time_close"": ""2019-06-11T15:26:36.0000000Z"", ""price_open"": 0.3865, ""price_high"": 0.38706, ""price_low"": 0.3865, ""price_close"": 0.38706, ""volume_traded"": 1500.31419084, ""trades_count"": 5}Message variables​VariableDescriptiontypeMessage type, always ohlcvsymbol_idOur symbol identifier, format documented here.sequenceSequence number per pair (type, symbol_id) which is valid only for the lifespan of the connection.period_idIdentifier of timeseries period full list heretime_period_startPeriod starting time (range left inclusive)time_period_endPeriod ending time (range right exclusive)time_openTime of first trade inside period rangetime_closeTime of last trade inside period rangeprice_openFirst trade price inside period rangeprice_highHighest traded price inside period rangeprice_lowLowest traded price inside period rangeprice_closeLast trade price inside period rangevolume_tradedCumulative base amount traded inside period rangetrades_countAmount of trades executed inside period rangeAsset IN​A asset message is sent periodically to update last volume and other information. Feed is useful to keep track of the current assets metadata. Subscription to this message type triggers delivery of the snapshot.{ ""type"":""asset"", ""asset_id"":""FAKT"", ""name"":""FAKT"", ""type_is_crypto"":1, ""data_quote_start"":""2022-06-06T13:40:56.7147296Z"", ""data_quote_end"":""2022-11-09T00:00:00.0000000Z"", ""data_orderbook_start"":""2022-06-23T00:00:00.0000000Z"", ""data_orderbook_end"":""2022-11-09T00:00:00.0000000Z"", ""data_trade_start"":""2022-06-06T13:33:33.0000000Z"", ""data_trade_end"":""2022-11-09T00:00:00.0000000Z"", ""data_symbols_count"":6, ""volume_1hrs_usd"":577.30, ""volume_1day_usd"":23801.27, ""volume_1mth_usd"":559053.26, ""price_usd"":0.0189885151556305438646080756,}Message variables​VariableDescriptiontypeMessage type, always assetasset_idIdentifier of asset (full list available here)...For other fields please reffer to the asset model documented hereExchange IN​A exchange message is sent periodically to update last volume and other information. Feed is useful to keep track of the current exchanges metadata. Subscription to this message type triggers delivery of the snapshot.{ ""type"":""exchange"", ""exchange_id"":""BITMEX"", ""website"":""https://www.bitmex.com/"", ""name"":""BitMEX"", ""data_start"":""2014-11-22"", ""data_end"":""2022-11-09"", ""data_quote_start"":""2014-11-22T16:58:47.8820780Z"", ""data_quote_end"":""2022-11-09T00:00:00.0000000Z"", ""data_orderbook_start"":""2014-11-22T16:58:47.8820780Z"", ""data_orderbook_end"":""2022-11-09T00:00:00.0000000Z"", ""data_trade_start"":""2014-11-22T17:51:38.9484710Z"", ""data_trade_end"":""2022-11-09T00:00:00.0000000Z"", ""data_symbols_count"":411}Message variables​VariableDescriptiontypeMessage type, always exchangeexchange_idIdentifier of exchange (full list available here)...For other fields please reffer to the exchange model documented hereSymbol IN​A symbol message is sent periodically to update last volume and other information. Feed is useful to keep track of the current symbols metadata. Subscription to this message type triggers delivery of the snapshot.{ ""type"": ""symbol"", ""symbol_id"": ""KRAKENFTS_PERP_BTC_USD"", ""exchange_id"": ""KRAKENFTS"", ""symbol_type"": ""PERPETUAL"", ""asset_id_base"": ""BTC"", ""asset_id_quote"": ""USD"", ""asset_id_unit"": ""USD"", ""future_contract_unit"": 1.000000000, ""future_contract_unit_asset"": ""USD"", ""data_start"": ""2019-10-30"", ""data_end"": ""2021-03-03"", ""data_quote_start"": ""2019-10-30T16:53:10.3262317Z"", ""data_quote_end"": ""2021-03-03T13:51:45.6970000Z"", ""data_orderbook_start"": ""2019-10-30T16:53:10.3262317Z"", ""data_orderbook_end"": ""2020-08-05T14:37:32.0080000Z"", ""data_trade_start"": ""2019-10-30T16:38:52.1620000Z"", ""data_trade_end"": ""2021-03-03T13:46:25.7810000Z"", ""volume_1hrs"": 22897091.000000000, ""volume_1hrs_usd"": 22897091.00, ""volume_1day"": 459390289.000000000, ""volume_1day_usd"": 459390289.00, ""volume_1mth"": 12875674995.000000000, ""volume_1mth_usd"": 12875674995.00, ""price"": 51266, ""symbol_id_exchange"": ""pi_xbtusd"", ""asset_id_base_exchange"": ""XBT"", ""asset_id_quote_exchange"": ""USD"", ""price_precision"": 0.100000000, ""size_precision"": 1.000000000}Message variables​VariableDescriptiontypeMessage type, always symbolsymbol_idIdentifier of symbol (full list available here)...For other fields please reffer to the symbol model documented hereExchange Rate IN​Exchange rate is defined as (VWAP-24H) last 24 hour (rolling window over time) Volume Weighted Average Price across multiple data sources listed on our platform. We are selecting and managing the data sources that are used in the calculation based on multiple factors to provide data of highest quality.{ ""type"": ""exrate"", ""asset_id_base"": ""BTC"", ""asset_id_quote"": ""USD"", ""rate_type"":""BASE_ALL_CROSSES_TO_REF"", ""time"": ""2019-06-11T15:26:00.0000000Z"", ""rate"": 10065.0319541}Rate types​Rate can be several types, we explain what this mean in the table below.Rate typeDescriptionBASE_QUOTE_ISOLATEDTo produce rate value only assets in the asset_id_base or asset_id_quote quotes were used across multiple data sources.BASE_ALL_CROSSES_TO_REFTo produce the value of the rate all crosses that included asset_id_base across data sources were used and the value was quoted in the reference asset asset_id_quote. This means for example that BTC/USD component of the rate could be composed of the BTC/ETH * ETH/USDT * USDT/USD crosses. In this rate type, we want to express the true value of the asset by seeking markets that have volume/activity and not blinding ourselves only to the direct crosses that in the crypto industry will often not represent the majority of the price discovery activity. This is the same type of rate that is available through other of our APIs.BASE_AND_QUOTE_TO_REFThis is the same as BASE_ALL_CROSSES_TO_REF, but published only if your client subscribed to asset pair like BTC/EUR and the quote asset is not reference asset, then the rate is composed like this BTC/USD * USD/EUR in this example from the stream of BASE_ALL_CROSSES_TO_REF internally every 1 second.Message variables​VariableDescriptiontypeMessage type, always exrateasset_id_baseBase asset identifier. Full list available hereasset_id_quoteQuote asset identifier. Always USD.rate_typeRate calculation type it could be BASE_QUOTE_ISOLATED or BASE_ALL_CROSSES_TO_REF.timeTime of the exchange raterateExchange rate between pair of assets.infoThere is too much assets to deliver all crosses between them (assets_count^2), because of that if you need rate quoted in asset different than USD then you need to calculate it yourself on the client side eg. ""BTC/USD 1 / (USDC/USD) = BTC/USD USD/USDC = BTC/USDC""Reconnect IN​Reconnect message is sent by the server to all connected clients when the server will be restarted or shut down at the defined exact time included in the message content. After the period specified in message passes, the client must expect that the underlying WebSocket connection will be closed from the server-side. A new connection will automatically be established to a different server.The correct way of handling this event depends on the specific requirements of the integration, but we can define standard ways how to handle it:Wait for the connection to be closed and reconnectReconnect immediately after receiving the messageUpon receiving the message, establish a second connection, and subscribe to the same scope of data. When the first connection is disconnected, do not reconnect it and instead transparently switch the data streams between connections. This method requires more implementation as a transparent switch of the data stream must not break the sequence for streams published using the initial snapshot and update messages. To make sure the sequence is correct, the client must: (a) maintain a state by applying updates to snapshot or (b) buffer the data from the second connection and processing it at the transparent connection switch.Example JSON reconnect message is structured like this:{ ""type"": ""reconnect"" ""within_seconds"": 10, ""before_time"": ""2020-08-06T19:19:09.7035429Z"",}Message variables​VariableDescriptiontypeMessage type, always reconnectwithin_secondsSeconds within which reconnection should be performed.before_timeTime before which reconnection should be performed.Heartbeat IN​Heartbeat message JSON is structured like this:{ ""type"": ""hearbeat""}Heartbeat message is sent to you every time there is one second of silence in communication between us, if you agreed on this feature in Hello message.tipWebSocket working on TCP protocol which doesn’t have the feature indicating that the connection is broken without trying exchange data over it. As you will not be actively sending messages to us, with Heartbeat you can distinguish a situation where there are no market data updates for you (Heartbeat is delivered but no market data updates) or connection between us is broken (Heartbeat and market data updates are not delivered). Was this section helpful?12345PreviousGeneralNextWebSocket API DSTrades INMessage variablesPossible taker_side valuesQuotes INMessage variablesOrderbook L2 (Full) INMessage variablesOrderbook L2 (max 2x5) INMessage variablesOrderbook L2 (max 2x20) INMessage variablesOrderbook L2 (max 2x50) INMessage variablesOrderbook L3 (Full) INMessage variablesPossible update_type valuesOHLCV INMessage variablesAsset INMessage variablesExchange INMessage variablesSymbol INMessage variablesExchange Rate INRate typesMessage variablesReconnect INMessage variablesHeartbeat INCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/websocket/messages#orderbook-l2-full--in)"
191,i.io naas api bitcoin Methods getconnectioncount,"i.io naas api bitcoin Methods getconnectioncount.   getconnectioncount | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetconnectioncountOn this pagegetconnectioncountOverview​The 'getconnectioncount ' RPC method allows you to retrieve the current number of connections to other nodes in the Bitcoin network. This method is essential for monitoring the network status and ensuring the node's proper functionality.Request​shellcsharpphppythonjavascriptgorubyjavacurl --location 'https://bitcoin-mainnet.node.coinapi.io' \--header 'x-coinapi-key: '73034021-THIS-IS-SAMPLE-KEY' \--header 'Content-Type: application/json' \--header 'accept: application/json' \--data '{""jsonrpc"":""2.0"",""method"":""getconnectioncount"",""params"": [],""id"":1}'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""getconnectioncount\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""getchaintxstats"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({""jsonrpc"": ""2.0"",""method"": ""getconnectioncount"",""params"": [],""id"": 1})headers = {'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY','Content-Type': 'application/json','accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""getconnectioncount"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""getconnectioncount"",""params"": [],""id"":1}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"")req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({""jsonrpc"": ""2.0"",""method"": ""getconnectioncount"",""params"": [],""id"": 1})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""getconnectioncount\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​This method does not require any parameters.Response​{ ""result"": 10, ""error"": null, ""id"": 1}n: Represents the total number of connections to other nodes, encompassing both inbound and outbound connections. error: Contains the error message, if any, that occurred while attempting to retrieve the connection count.Was this section helpful?12345PreviousgetchaintxstatsNextgetdifficultyOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getconnectioncount)"
192,i.io naas api ethereum Methods eth newBlockFilter,"i.io naas api ethereum Methods eth newBlockFilter.   eth_newBlockFilter | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_newBlockFilterOn this pageeth_newBlockFilterOverview​The 'eth_newBlockFilter' method creates a filter in the node to notify when a new block arrives. To check if the state has changed, call 'eth_getFilterChanges'.'Duration':Filter IDs will be valid for up to fifteen minutes.'Usage*':Filter IDs can be polled by any connection using the same YOUR-COINAPI-KEY.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://eth-mainnet.g.alchemy.com/v2/docs-demo \  --header 'accept: application/json' \  --header 'content-type: application/json' \  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data '{ ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_newBlockFilter""}'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_newBlockFilter\""}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"",CURLOPT_RETURNTRANSFER => true,CURLOPT_ENCODING => """",CURLOPT_MAXREDIRS => 10,CURLOPT_TIMEOUT => 30,CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,CURLOPT_CUSTOMREQUEST => ""POST"",CURLOPT_POSTFIELDS => json_encode(['id' => 1,'jsonrpc' => '2.0','method' => 'eth_newBlockFilter']),CURLOPT_HTTPHEADER => [""accept: application/json"",""content-type: application/json"",""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY""],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) {echo ""cURL Error #:"" . $err;} else {echo $response;} ?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_newBlockFilter"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json""}response = requests.post(url, json=payload, headers=headers)print(response.text) const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({id: 1, jsonrpc: '2.0', method: 'eth_newBlockFilter'})};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_newBlockFilter\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_newBlockFilter\""}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_newBlockFilter\""}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​None.Response​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": ""0x44d29f10bae3cb79e4b5503ad282991f""}filter ID: A hexadecimal denoting the newly created filter ID.Was this section helpful?12345Previouseth_miningNexteth_newFilterOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_newBlockFilter)"
193,i.io general faq billing and subscriptions Can I cancel my subscription anytime,"i.io general faq billing and subscriptions Can I cancel my subscription anytime.   Can I cancel my subscription anytime? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIBilling and SubscriptionsCan I cancel my subscription anytime?Can I still use my API key if I cancel my subscription?How to reactivate my canceled subscription?How to subscribe to the API?How to upgrade/downgrade my subscription?Security and PrivacyGlossaryChangelogFAQBilling and SubscriptionsCan I cancel my subscription anytime?Can I cancel my subscription anytime?Yes, as stated on our legal terms under Customer Agreement section 2.4:""You may terminate your initial Order of the applicable Software or Cloud Services under this Agreement, for no reason or any reason, by providing notice of termination. At your request (which may be made through your Account or by contacting us), we may disable the license key that allowed the Software to operate or disable access to the Cloud Services. All fees paid are non-refundable.""More information can be found here: https://www.coinapi.io/legalWas this section helpful?12345PreviousBilling and SubscriptionsNextCan I still use my API key if I cancel my subscription?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/billing-and-subscriptions/Can-I-cancel-my-subscription-anytime)"
194,i.io market data rest api indexes list of available indexes,"i.io market data rest api indexes list of available indexes.   List of available indexes | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIREST APIExchange RatesIndexesCreate indexGet index dataList of available indexesRetrieve Historical Composition Value Timeseries Retrieves historical timeseries for the specific composition value for an indexRetrieve Historical Index Value and CompositionRetrieve Historical Index Value TimeseriesUpdate indexMetadataMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket APIFIX APIS3 APIJSON RPCEMS APIFAQCustomer PortalChangelogMarket Data APIREST APIIndexesList of available indexesList of available indexesGET /v1/indexesList of available indexesResponses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)SchemaArray [index_id string nullableGets or sets the index ID associated with the index.name string nullableGets or sets the name associated with the index.description string nullableGets or sets the descripion of the index.][ { ""index_id"": ""string"", ""name"": ""string"", ""description"": ""string"" }]SchemaExample (from schema)SchemaArray [index_id string nullableGets or sets the index ID associated with the index.name string nullableGets or sets the name associated with the index.description string nullableGets or sets the descripion of the index.][ { ""index_id"": ""string"", ""name"": ""string"", ""description"": ""string"" }]SchemaExample (from schema)SchemaArray [index_id string nullableGets or sets the index ID associated with the index.name string nullableGets or sets the name associated with the index.description string nullableGets or sets the descripion of the index.][ { ""index_id"": ""string"", ""name"": ""string"", ""description"": ""string"" }]SchemaExample (from schema)SchemaArray [index_id string nullableGets or sets the index ID associated with the index.name string nullableGets or sets the name associated with the index.description string nullableGets or sets the descripion of the index.][ { ""index_id"": ""string"", ""name"": ""string"", ""description"": ""string"" }]Loading...Was this section helpful?12345PreviousGet index dataNextRetrieve Historical Composition Value Timeseries Retrieves historical timeseries for the specific composition value for an indexCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/indexes/list-of-available-indexes)"
195,i.io faq general I forgot my paid subscription API key,"i.io faq general I forgot my paid subscription API key.   I forgot my paid subscription API key | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralI forgot my paid subscription API keyI forgot my paid subscription API keyYou should also be able to see your API key in the Customer Support portal when logged in.1. Log in to the Customer Portal using the email address you used for your subscription.2. Go to the Metrics section.3. You will be able to see your key under Filters > API keys.Reference: [1] https://customerportal.coinapi.io/metricsWas this section helpful?12345PreviousI didn't receive an emailNextI hardly use the REST API, why is my usage so high?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/I-forgot-my-paid-subscription-API-key)"
196,i.io #list all symbols get,"i.io #list all symbols get.   Welcome | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyOn this pageWelcomeWelcome to the CoinAPI documentation section. This is the perfect destination to explore CoinAPI's API collection, which includes tutorials, an overview, features, use cases we cover, and much more. You've come to the perfect place whether you have questions or simply want to learn more. Our documentation area serves as a valuable resource for understanding our API and how to make the most of its features.What is CoinAPI?​CoinAPI is a collection of cryptocurrency APIs that allows users to get the most out of cryptocurrency data. CoinAPI creates the most accessible and developer-friendly APIs for the world's software developers, analysts, and fintech-driven companies. CoinAPI streamlines crypto operations, trading, and data access on a large scale. It is the most popular option on the market due to its extensive documentation, minimal latency, simple integration, developer assistance, and SDK in a variety of languages. CoinAPI was created to make the crypto experience simpler for crypto developers, traders, and any other individuals invested in the crypto space. Customers choose CoinAPI because of our 5 years of proven experience, reliable and verified platform, service functions, and the highest frequency and aggregated data.Our mission​CoinAPI's goal is to provide all necessary APIs in one place. It eliminates the need to choose between various market vendors, making it easier for crypto users to access the data and tools they need for their use cases. Furthermore, CoinAPI helps users save time and resources, giving them more opportunities to use crypto APIs effectively. By providing a one-stop shop for all cryptocurrency needs, CoinAPI is making it easier than ever to unlock the full potential of digital currencies.CoinAPI product portfolio​CoinAPI's product portfolio includes Market data API, EMS trading API, and CryptoTick, a pay-per-service platform that is handy for researchers who are not very familiar with APIs. Market data API - CoinAPI is collecting an extensive amount of market data points, enabling users to gain useful insights. Our crypto raw data can be accessed by both individuals and businesses, allowing them to create innovative services. Thanks to CoinAPI, customers can access a wide variety of cryptocurrency historical and real-time data with ease. Many customers have expressed their appreciation for our services, calling it ""never easier to organize and analyze the data."" We guarantee reliable access to all sorts of cryptocurrency data.EMS Trading API - EMS Trading API makes it possible for clients to access multiple cryptocurrency exchanges from a single account, providing the most advantageous prices available, enabling trading operations, and recording the history of those operations. The API connects to exchanges and executes orders, either through REST or WebSocket API. CryptoTick - CryptoTick offers a ""pay as you go"" service, where customers pay for the exact usage of the service rather than a subscription. Customers can pre-purchase a certain amount of units and can use the service until their balance runs out, after which they can top up again. CryptoTick does not have an application programming interface (API), which allows applications to integrate. Instead, customers can go directly to the site to get the requested information; they just need to specify what they require, and the data will then be provided to them in the CSV format. This format ensures efficient storage and easy accessibility of the data. Therefore, CryptoTick is an ideal solution for customers needing historical data, as it is a user interface and not an application.Why choose CoinAPI?​CoinAPI provides a complete toolkit for your cryptocurrency assets:API access to real-time and historical market data. CoinAPI gives access to both historical and current market information. It supplies customers with the most current quotes and trades and presents them in real time, allowing them to incorporate the data into crypto projects. Low latency & quick response rate - our system is designed to process and deliver data with sub-millisecond accuracy, ensuring that you receive the most up-to-date information as quickly as possible. We have a fully managed and secure network connection with high-speed connectivity. This is specifically designed for price discovery and ensures that data is transferred quickly and efficiently.High quality & superior accuracy - we support non-standard items, including unusual order types of exchanges, along with all their functionality. This means that we can provide you with a wide range of data, ensuring that you have all the information you need to make informed decisions. Moreover, in CoinAPI, you obtain data from different exchanges in a standardized form, so you can compare them easily. Last but not least, we ensure accurate information by having human experts double-check all stock symbols and asset codes. This means that the data you receive from us is not only fast but also reliable and accurate.Every interface you need. We deliver three different protocols: REST, FIX, and WebSocket, so you don’t need to worry about what interface each exchange has, and what it supports. CoinAPI boasts a wide-reaching integration with 350 exchanges (and growing), enabling users to access comprehensive data such as order books, transactions, quotes, and metadata. Furthermore, our platform aggregates this information to generate metrics and metadata from different exchanges and interprets the data to create an understanding of it across exchanges. Additionally, we archive all the data to provide our users with access to historical figures and numbers.Redundancy. It's important to consider redundancy when selecting a dependable API partner, to make sure they provide server redundancy. This means that customers can access their nearest region by default, and in the case of any issues, a fallback region is automatically and immediately availableDeveloper-friendly interfaces. SDK in 40 languages. CoinAPI has you covered with multi-language SDKs and great documentation tailored to every endpoint. Our Software Development Kit (SDK) is available on GitHub at https://github.com/coinapi/coinapi-sdkCreate multiple API Keys for the subscription to create a virtual space used to safely test, train, and experiment with changes or configurations to a system. It allows users to replicate their production environment and make modifications without the risk of disrupting their current operations. This is an invaluable tool for exploring new features and troubleshooting potential issues.Data standardization. By standardizing data collection via CoinAPI, you are one step closer to having a complete and clean crypto data view that you can use.Order books of the highest quality. We offer detailed, real-time data on cryptocurrency buy and sell orders, including price levels, order counts, types, and timestamps, sourced from multiple exchanges for a broad market view. Such data helps you make informed trading decisions.OHLCV data. With CoinAPI you can retrieve Open, High, Low, Close, and Volume (OHLCV) data, historical quotes, and historical trades. You can easily specify the type of data you want to retrieve using query parameters. Companies can gain a range of advantages from CoinAPI, such as gaining essential information, straightforward integration, and automation. Clients can get all of their crypto APIs in one place, which makes it easier to manage large-scale crypto operations, trading, and data access.Still uncertain about how CoinAPI can help your business? Try out your use case and find out if CoinAPI meets your requirements. You can get your free API key here. Support​If you have any questions or need assistance, you can visit our support page and read the FAQ. Furthermore, you can contact our team if you require additional help. Systems Status​Keep informed of the operational status of CoinAPI and any reports of interruptions.CoinAPI Blog​Stay informed and keep up-to-date with the most recent news from CoinAPI by checking our blog.Was this section helpful?12345What is CoinAPI?Our missionCoinAPI product portfolioWhy choose CoinAPI?SupportSystems StatusCoinAPI BlogCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/#list-all-symbols-get)"
197,i.io general faq general Can I use the API commercially to show prices on my website,"i.io general faq general Can I use the API commercially to show prices on my website.   Can I use the API commercially to show prices on my website? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralCan I use the API commercially to show prices on my website?Can I use the API commercially to show prices on my website?Yes, CoinAPI can be used commercially.As per our legal policy, the following is a non-exhaustive list of practices that would not be considered ""Legitimate Use"":Using our services for unreasonable workloads we determine (in our sole discretion) to be unrelated to the deployment and maintenance of your own services;Re-selling our services or parts thereof to another party;Using our services in a manner we determine (in our sole discretion) could cause harm to our services or another party; orUnusual usage patterns inconsistent with those we reasonably consider as normal use when compared to other customers.More information can be found in our legal information here: https://www.coinapi.io/legalWas this section helpful?12345PreviousCan I participate in the CoinAPI GitHub repository?NextCan I use the API to show graphs, charts or tables?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/Can-I-use-the-API-commercially-to-show-prices-on-my-website)"
198,i.io market data how to guides trading essentials quickstart#bitmex,"i.io market data how to guides trading essentials quickstart#bitmex.   Trading Essentials: Quickstart | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesAcquire exchange rates with different programming languagesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPIBuilding a cryptocurrency exchange comparison tool using Market Data APICreating a historical crypto price chart using CoinAPI and D3.jsFetching market data with KNIMEGet Historical OHLCV Data Using CoinAPIGet symbol funding rate metric data using CoinAPIImport API into PostmanImport data to Google Sheets/ExcelReal-time data visualization with javascriptReal-time trades stream using WebSocket with different languagesRetrieve and analyze crypto order book data using a cryptocurrency APITrading Essentials: QuickstartPerformance Testing GuideHow-to guidesTrading Essentials: QuickstartOn this pageTrading Essentials: QuickstartIntroduction​In this tutorial, you'll learn how to leverage our crypto trading API to automate and streamline your trading across multiple exchanges. Discover how to connect your accounts, execute trades, and efficiently manage your portfolio with just a few clicks.With our solution, you gain the power to control trades on various exchanges using just one API. Background​The EMS Trading API lets you manage multiple trading accounts on different exchanges all in one place, making trading easier with combined and consistent data. It gives you up-to-date market info, past data, and options to use it through the cloud or on your systems. Perfect for traders, big companies, and experts like developers and analysts, this API is fast, efficient, and reliable, providing a complete trading solution with easy access to unique insights and information.On the Agenda​Obtain a Free API Key: Secure your gateway to multi-exchange trading with a free API key from our site.Check available exchanges: Verify the list of supported exchanges via EMS APIConnect your Exchanges: Quickly integrate your accounts with exchanges like BITMEX and KRAKEN.Execute BUY on KRAKEN: Check your balance, initiate the BUY order, and confirm the status of the orderExecute SELL on KRAKEN: Initiate SELL order and check the order status reportGetting started​To execute the EMS Trading API, you'll need a Free API Key from our website.Check available exchanges​To access a list of supported exchanges that can be connected via the EMS API, execute the following:import requestsurl = ""https://ems-mgmt.coinapi.io/v1/exchanges""payload={}headers = { 'Accept': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-COINAPI-KEY'}response = requests.request(""GET"", url, headers=headers, data=payload)print(response.text)Here's a snippet extracted from the server's reply:[ {  ""exchange_id"": ""BITMEX"",  ""location_id"": ""aws-eu-west-1-prd"",  ""required_parameters"": [   ""PrivateApiKey"",   ""PublicApiKey""  ] }, {  ""exchange_id"": ""COINBASE"",  ""location_id"": ""aws-us-east-1-prd"",  ""required_parameters"": [   ""PassPhrase"",   ""PrivateApiKey"",   ""PublicApiKey""  ] },  {  ""exchange_id"": ""GEMINI"",  ""location_id"": ""aws-us-east-1-prd"",  ""required_parameters"": [   ""PrivateApiKey"",   ""PublicApiKey""  ] }, {  ""exchange_id"": ""KRAKEN"",  ""location_id"": ""aws-us-west-2-prd"",  ""required_parameters"": [   ""PrivateApiKey"",   ""PublicApiKey""  ] }]// other exchanges and their parameters...infoTo access the full list of supported exchanges, you can execute the endpoint https://ems-mgmt.coinapi.io/v1/exchanges. Above, we only showcase a partial list as an example.Connect your Exchanges​To begin trading on cryptocurrency exchanges, you'll need to connect your accounts. Below are examples of integrating with two popular exchanges:BITMEX exampleKRAKEN exampleinfoWhile the examples in this quickstart provided are focused on integrating with BITMEX and KRAKEN, the process is quite similar for various exchanges.BITMEX​BITMEX stands as a premier cryptocurrency exchange, offering a robust platform for traders and investors worldwide.Obtain Public key​To begin trading on BITMEX, you'll need to obtain your public and private keys from BITMEX.Connect your account​After acquiring keys, the initial step includes sharing your exchange keys through the account creation process for the designated exchange.import requestsimport jsonurl = ""https://ems-mgmt.coinapi.io/v1/accounts""payload = { ""exchange_id"": ""BITMEX/JOHN"", ""parameters"": [  {   ""key"": ""PublicApiKey"",   ""value"": ""73034021-THIS-IS-SAMPLE-PUBLIC-KEY-FROM-BITMEX""  },    {   ""key"": ""PrivateApiKey"",   ""value"": ""73034021-THIS-IS-SAMPLE-PRIVATE-KEY-FROM-BITMEX""  } ]}headers = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Convert payload to JSON stringjson_payload = json.dumps(payload)# Make the requestresponse = requests.post(url, data=json_payload, headers=headers)# Print the responseprint(""Response Code:"", response.status_code)Once the update is successful, you'll receive an HTTP status code of 200.KRAKEN​Obtain Public key​To begin trading on KRAKEN, you'll need to obtain your public and private keys from KRAKEN.Connect your account​After acquiring keys, the initial step includes sharing your exchange keys through the account creation process for the designated exchange.import requestsimport jsonurl = ""https://ems-mgmt.coinapi.io/v1/accounts""payload = { ""exchange_id"": ""KRAKEN/JOHN"", ""parameters"": [  {   ""key"": ""PublicApiKey"",   ""value"": ""73034021-THIS-IS-SAMPLE-PUBLIC-KEY-FROM-KRAKEN""  },    {   ""key"": ""PrivateApiKey"",   ""value"": ""73034021-THIS-IS-SAMPLE-PRIVATE-KEY-FROM-KRAKEN""  } ]}headers = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Convert payload to JSON stringjson_payload = json.dumps(payload)# Make the requestresponse = requests.post(url, data=json_payload, headers=headers)# Print the responseprint(""Response Code:"", response.status_code)Get the list of Connected Exchanges​To check which accounts have been created on our side, execute the following code:import requestsimport jsonurl = ""https://ems-mgmt.coinapi.io/v1/accounts""headers = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY""}# Make the requestresponse = requests.get(url, headers=headers)if response.status_code == 200: accounts_json = response.json() print(json.dumps(accounts_json, indent=4))else: print(""Error:"", response.status_code)Here's an example response, listing all accounts created with your API KEY:[ {  ""exchange_id"": ""BITMEX/JOHN"",  ""parameters"": [   {    ""key"": ""PublicApiKey"",    ""value"": ""73034021-THIS-IS-SAMPLE-PUBLIC-KEY-FROM-BITMEX""   },   {    ""key"": ""PrivateApiKey"",    ""value"": ""73034021-THIS-IS-SAMPLE-PRIVATE-KEY-FROM-BITMEX""   }  ] }, {  ""exchange_id"": ""KRAKEN/JOHN"",  ""parameters"": [   {    ""key"": ""PublicApiKey"",    ""value"": ""73034021-THIS-IS-SAMPLE-PUBLIC-KEY-FROM-KRAKEN""     },   {    ""key"": ""PrivateApiKey"",    ""value"": ""73034021-THIS-IS-SAMPLE-PRIVATE-KEY-FROM-KRAKEN""   }  ] }]Trades execution​Placing an order on an exchange involves providing instructions for executing a trade at a designated price and quantity.Check balance (Optional)​Before diving into trading, it's a good idea to check the balance on your account(s). Here's an example of checking the account balance for all of the exchanges associated with the account.import requestsimport jsonurl = ""https://global.ems.coinapi.net/v1/balances""payload={}headers = { 'Accept': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-COINAPI-KEY'}# Make the requestresponse = requests.get(url, headers=headers)if response.status_code == 200: accounts_json = response.json() print(json.dumps(accounts_json, indent=4))else: print(""Error:"", response.status_code)The response may be as follows (for BITMEX/JOHN and KRAKEN/JOHN accounts):[ {  ""type"": ""BALANCE_SNAPSHOT"",  ""exchange_id"": ""BITMEX/JOHN"",  ""data"": [   {    ""id"": ""XBT"",    ""asset_id_exchange"": ""XBT"",    ""asset_id_coinapi"": ""BTC"",    ""balance"": 0.02164794,    ""available"": 0.02164794,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",      ""rate_usd"": 52357.18111158658     },   {    ""id"": ""BMEx"",    ""asset_id_exchange"": ""BMEx"",    ""asset_id_coinapi"": ""BMEX"",    ""balance"": 300000.0,    ""available"": 300000.0,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",      ""rate_usd"": 0.2521371329127946     }  ] }, {  ""type"": ""BALANCE_SNAPSHOT"",  ""exchange_id"": ""KRAKEN/JOHN"",  ""data"": [   {    ""id"": ""ETHW"",    ""asset_id_exchange"": ""ETHW"",    ""asset_id_coinapi"": ""ETHW"",    ""balance"": 1.73e-05,    ""available"": 1.73e-05,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 2.9136466899640077   },   {    ""id"": ""BCH"",    ""asset_id_exchange"": ""BCH"",    ""asset_id_coinapi"": ""BCH"",    ""balance"": 2.9e-09,    ""available"": 2.9e-09,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 265.7082181877394   },   {    ""id"": ""ZCAD"",    ""asset_id_exchange"": ""ZCAD"",    ""asset_id_coinapi"": ""CAD"",    ""balance"": 0.7905,    ""available"": 0.7905,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 0.7405719177575096   },   {    ""id"": ""ZEUR"",    ""asset_id_exchange"": ""ZEUR"",    ""asset_id_coinapi"": ""EUR"",    ""balance"": 0.0098,    ""available"": 0.0098,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 1.0809450373867444   },   {    ""id"": ""ADA"",    ""asset_id_exchange"": ""ADA"",    ""asset_id_coinapi"": ""ADA"",    ""balance"": 2e-08,    ""available"": 2e-08,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 0.6244338769954291   },   {    ""id"": ""ZUSD"",    ""asset_id_exchange"": ""ZUSD"",    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": null   },   {    ""id"": ""XXBT"",    ""asset_id_exchange"": ""XXBT"",    ""asset_id_coinapi"": ""BTC"",    ""balance"": 8.58e-08,    ""available"": 8.58e-08,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 52320.9229657045   }  ] }]Submit Order (SELL)​Here's an example of submitting a SELL order on the KRAKEN exchange with the following details: Desired amount of USD to sell: 10Expected price to be executed at: 150Initial balance of USD: 77.3669Save down somewhere the YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001 identifier to track the status of the orderimport requestsimport jsonfrom datetime import datetime, timedeltaurl = ""https://global.ems.coinapi.net/v1/orders""payload = json.dumps({ ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_USD_JPY"", ""amount_order"": 10, ""price"": 150, ""side"": ""SELL"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""exec_inst"": [ ""MAKER_OR_CANCEL"" ]})# Headersheaders = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Make the requesttry: response = requests.post(url, data=payload, headers=headers) # Check status code if response.status_code == 200:  print(""Response JSON:"", response.json()) else:  print(""Response Code:"", response.status_code) except Exception as e: print(""An error occurred:"", e)Examples of Possible Responses:Successful RoutingInvalid Volume ErrorInsufficient Funds ErrorThe order has been sent to the exchange:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""client_order_id_format_exchange"": ""74733759"", ""exchange_order_id"": ""OX6EKO-67KDQ-KGNYFI"", ""amount_open"": 10.0, ""amount_filled"": 0.0, ""status"": ""ROUTED"", ""status_history"": [ [""RECEIVED"", ""2024-02-22T23:55:31.5424443Z""], [""ROUTING"", ""2024-02-22T23:55:31.5439512Z""], [""ROUTED"", ""2024-02-22T23:55:31.8127436Z""] ], ""error_message"": null, ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""symbol_id_exchange"": ""USDJPY"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_USD_JPY"", ""amount_order"": 10.0, ""price"": 150.0, ""avg_px"": 0.0, ""side"": ""SELL"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}If you encounter a volume error due to a mismatch with the minimum order size:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""client_order_id_format_exchange"": ""74733759"", ""exchange_order_id"": null, ""amount_open"": 5e-15, ""amount_filled"": 0.0, ""status"": ""REJECTED"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T00:04:36.8301287Z""], [""ROUTING"", ""2024-02-23T00:04:36.8315182Z""], [""REJECTED"", ""2024-02-23T00:04:36.9940661Z""] ], ""error_message"": ""EGeneral:Invalid arguments:volume"", ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""symbol_id_exchange"": ""USDJPY"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_USD_JPY"", ""amount_order"": 5e-15, ""price"": 150.0, ""avg_px"": 0.0, ""side"": ""SELL"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}If you encounter an insufficient funds error due to insufficient balance in your account:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""client_order_id_format_exchange"": ""74733759"", ""exchange_order_id"": null, ""amount_open"": 555555555555555.0, ""amount_filled"": 0.0, ""status"": ""REJECTED"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T00:05:34.6909879Z""], [""ROUTING"", ""2024-02-23T00:05:34.6918765Z""], [""REJECTED"", ""2024-02-23T00:05:34.8518753Z""] ], ""error_message"": ""EGeneral:Invalid arguments:volume"", ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""symbol_id_exchange"": ""USDJPY"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_USD_JPY"", ""amount_order"": 555555555555555.0, ""price"": 150.0, ""avg_px"": 0.0, ""side"": ""SELL"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}infoHere you can check the comprehensive list of execution instructions for the exec_inst parameterYou can find available values for the time_in_force parameter hereEMS exclusively supports the LIMIT order_type.The supported values for symbol_id_coinapi can be found by executing the endpoint provided here.The meaning of the order status in the response (ROUTED, REJECTED, etc.) can be found hereTo view the possible values for the order lifecycle, click hereInstead of utilizing CoinAPI's symbol_id_coinapi, you can opt for the symbol provided by the exchange through symbol_id_exchangeHere are some of the most common codes that may be returned for order creation:Http Status CodeDescription200 (ok)Order accepted400 (bad request)Incorrect input parameters.490 (unreachable)Exchange cannot be reached.504 (timeout)Exchange didn't respond in the defined timeout.Verify order status​Ensure that you've saved the client_order_id parameter associated with your specific order. This identifier will be necessary to check its status.import requestsimport jsonfrom datetime import datetime, timedeltaurl = ""https://global.ems.coinapi.net/v1/orders/status/YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001""# Headersheaders = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Make the requesttry: response = requests.get(url, headers=headers) # Check status code if response.status_code == 200:  print(""Response JSON:"", response.json()) else:  print(""Response Code:"", response.status_code)   for header, value in response.headers.items():  print(header + ': ' + value) except Exception as e: print(""An error occurred:"", e)An example order status report that was executed with YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001 identifier and which was CANCELED.{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""client_order_id_format_exchange"": ""1945919824"", ""exchange_order_id"": ""OUQMAY-ODBWL-AXG4ZE"", ""amount_open"": 10.0, ""amount_filled"": 0.0, ""status"": ""CANCELED"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T00:16:20.2139293Z""], [""ROUTING"", ""2024-02-23T00:16:20.2389572Z""], [""ROUTED"", ""2024-02-23T00:16:20.4016779Z""], [""NEW"", ""2024-02-23T00:16:20.4021975Z""], [""CANCELED"", ""2024-02-23T00:16:20.4026337Z""] ], ""error_message"": null, ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""symbol_id_exchange"": ""USDJPY"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_USD_JPY"", ""amount_order"": 10.0, ""price"": 150.0, ""avg_px"": 0.0, ""side"": ""SELL"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}Check all open orders​You can also check all of the open orders.import requestsimport jsonfrom datetime import datetime, timedeltaurl = "" https://global.ems.coinapi.net/v1/orders""# Headersheaders = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Make the requesttry: response = requests.get(url, headers=headers) # Check status code if response.status_code == 200:  print(""Response JSON:"", response.json()) else:  print(""Response Code:"", response.status_code)   for header, value in response.headers.items():  print(header + ': ' + value) except Exception as e: print(""An error occurred:"", e)infoAfter an order is closed/finalized, it will no longer be visible through the endpoint mentioned above.Submit Order (BUY)​Here's an example of submitting a BUY order on the KRAKEN exchange with the following details: Desired amount of OXT to buy: 100Expected price to be executed at: 0.11Save down somewhere the YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007 identifier to track the status of the orderimport requestsimport jsonfrom datetime import datetime, timedeltaurl = ""https://global.ems.coinapi.net/v1/orders""payload = json.dumps({ ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_OXT_USD"", ""amount_order"": 100, ""price"": 0.11, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""exec_inst"": [ ""MAKER_OR_CANCEL"" ]})# Headersheaders = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Make the requesttry: response = requests.post(url, data=payload, headers=headers) # Check status code if response.status_code == 200:  print(""Response JSON:"", response.json()) else:  print(""Response Code:"", response.status_code)   for header, value in response.headers.items():  print(header + ': ' + value) except Exception as e: print(""An error occurred:"", e)Successfully routed order Response:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""client_order_id_format_exchange"": ""1946142760"", ""exchange_order_id"": ""OJCPEO-PO7WD-VTPUF2"", ""amount_open"": 100.0, ""amount_filled"": 0.0, ""status"": ""ROUTED"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T01:13:15.6096269Z""], [""ROUTING"", ""2024-02-23T01:13:15.6102840Z""], [""ROUTED"", ""2024-02-23T01:13:15.7772494Z""] ], ""error_message"": null, ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""symbol_id_exchange"": ""OXTUSD"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_OXT_USD"", ""amount_order"": 100.0, ""price"": 0.11, ""avg_px"": 0.0, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}Below is the order status report response for a BUY operation with the client_order_id set as YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""client_order_id_format_exchange"": ""1946142760"", ""exchange_order_id"": ""OJCPEO-PO7WD-VTPUF2"", ""amount_open"": 100.0, ""amount_filled"": 0.0, ""status"": ""NEW"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T01:13:15.6096269Z""], [""ROUTING"", ""2024-02-23T01:13:15.6102840Z""], [""ROUTED"", ""2024-02-23T01:13:15.7772494Z""], [""NEW"", ""2024-02-23T01:13:15.8077026Z""] ], ""error_message"": null, ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""symbol_id_exchange"": ""OXTUSD"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_OXT_USD"", ""amount_order"": 100.0, ""price"": 0.11, ""avg_px"": 0.0, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}Cancelling all open orders​To cancel all open orders associated with the KRAKEN/JOHN:import requestsimport jsonfrom datetime import datetime, timedeltaurl = ""https://global.ems.coinapi.net/v1/orders/cancel/all""payload = json.dumps({""exchange_id "": ""KRAKEN/JOHN""})# Headersheaders = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Make the requesttry: response = requests.post(url, data=payload, headers=headers) # Check status code if response.status_code == 200:  print(""Response JSON:"", response.json()) else:  print(""Response Code:"", response.status_code)   for header, value in response.headers.items():  print(header + ': ' + value) except Exception as e: print(""An error occurred:"", e)Here's a sample order report for a canceled BUY order via the EMS API:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""client_order_id_format_exchange"": ""1946142760"", ""exchange_order_id"": ""OJCPEO-PO7WD-VTPUF2"", ""amount_open"": 100.0, ""amount_filled"": 0.0, ""status"": ""CANCELED"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T01:13:15.6096269Z""], [""ROUTING"", ""2024-02-23T01:13:15.6102840Z""], [""ROUTED"", ""2024-02-23T01:13:15.7772494Z""], [""NEW"", ""2024-02-23T01:13:15.8077026Z""], [""PENDING_CANCEL"", ""2024-02-23T01:18:49.2279836Z""], [""CANCELED"", ""2024-02-23T01:18:49.4245926Z""] ], ""error_message"": null, ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""symbol_id_exchange"": ""OXTUSD"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_OXT_USD"", ""amount_order"": 100.0, ""price"": 0.11, ""avg_px"": 0.0, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}The explanations and practical code examples provided should let you have a better understanding of how to leverage the EMS API for cryptocurrency trading across multiple exchanges.Was this section helpful?12345PreviousRetrieve and analyze crypto order book data using a cryptocurrency APINextPerformance Testing GuideIntroductionBackgroundOn the AgendaGetting startedCheck available exchangesConnect your ExchangesBITMEXObtain Public keyConnect your accountKRAKENObtain Public keyConnect your accountGet the list of Connected ExchangesTrades executionCheck balance (Optional)Submit Order (SELL)Verify order statusCheck all open ordersSubmit Order (BUY)Cancelling all open ordersCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/how-to-guides/trading-essentials-quickstart#bitmex)"
199,i.io faq general Crossed books bid ask,"i.io faq general Crossed books bid ask.   Crossed books / bid >= ask | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralCrossed books / bid >= askCrossed books / bid >= askWe are providing the data as delivered from the data source and many exchanges providing crossed books (bid==ask or negative spread), this depends on the internal matching engine design of the data source, eg. exchange matching orders at interval eg per 100ms or under high load accept the order, but not match immediately it by design.Was this section helpful?12345PreviousCan I use the API to show graphs, charts or tables?NextDid you have market data in flat files?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/Crossed-books-bid-ask)"
200,i.io market data rest api#http errors,"i.io market data rest api#http errors.   REST API | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIOn this pageVersion: v1REST APIRESTful endpoint provides the widest range of data, based on HTTP protocol which works in Request-Reply scheme.Implemented Standards:HTTP1.0HTTP1.1HTTP2.0OpenAPI v3Note: We adhere to the OpenAPI standards for documenting our API.OpenAPI Specification​To access our API's OpenAPI specification, you can use the following link: OpenAPI v3If you need to import the OpenAPI file into software like Postman, simply copy and paste the link below:https://raw.githubusercontent.com/coinapi/coinapi-sdk/master/data-api/coinapi-marketdata-rest.yamlEndpoints​EnviromentEncryptionValueProductionYeshttps://rest.coinapi.io/ProductionNohttp://rest.coinapi.io/infoFor real-time market data streaming, you should use WebSockets. REST API only supports pooling, meaning you can periodically request the current market data state. In streaming, you subscribe and data or updates are delivered to you continuously.General​If you want to learn how to authenticate to this API, you can find detailed instructions and guidance in authentication section of this documentation.HTTP Requests​Each HTTP request must contain the header Accept: application/json as all our responses are in JSON format.We encourage you to use the HTTP request header Accept-Encoding: deflate, gzip for all requests. This will indicate to us that we can deliver compressed data to you which on your side should be decompressed transparently.tipBy allowing data compression you are lowering bandwidth requirements by approximately 80%. This is important for requesting large amounts of data or using WebSocket Streaming API, as we can deliver data to you faster and more effectively.HTTP Success​Successful HTTP responses have the status code 200 and the body in a format according to documentation of the requested resource.infoYou should always check that your HTTP response status code is equal to 200, otherwise the requested was not successful.HTTP Errors​Error message is returned in JSON structured like this:{ ""error"": ""Invalid API key""}All HTTP requests with response status codes different to 200 must be considered as failed and you should expect additional JSON inside the body of the response with the error message encapsulated inside it as shown in the example. We use the following error codes:Error CodeMeaning400Bad Request -- There is something wrong with your request401Unauthorized -- Your API key is wrong403Forbidden -- Your API key doesnt't have enough privileges to access this resource429Too many requests -- You have exceeded your API key rate limits550No data -- You requested specific single item that we don't have at this moment.infoGood practice is to store all error messages somewhere along with request data for further manual review.Output data format​By default we are using JSON output data format for all of our endpoints, you can control format of data by using output_format variable in query string parameters.URL Parameters​ParameterTypeDescriptionoutput_formatstringOutput data format (optional, default value is json, possible values are json, xml or csv)csv_include_headerboolIgnore header line in CSV output? (optional, default value is true, true to include CSV header line, false otherwise)csv_include_quotesboolEncapsulate strings with quotes in CSV output? (optional, default value is false, true to encapsulate all strings with "", false to leave them unquoted)csv_exclude_colstringComma delimited list of column names to ignore in CSV output (optional, by default all columns are included)csv_set_delimiterstringCharacter that will be used as column delimiter in CSV output (optional, default value is ;)csv_set_dec_markstringCharacter that will be used as decimal separator in CSV output (optional, default value is .)csv_set_timeformatstringFormat for datetime type in CSV output or unix for unix timestamp (optional, default value is yyyy-MM-ddTHH:mm:ss.fffffffZ)csv_set_newlinestringNew line type (optional, default value is unix, possible values win, mac, unix)Excel / G-Sheets​There are several ways to use data from our REST API inside the Excel, Google Sheets, or similar calculation sheet application. This section will do as best as possible to keep all information up to date on how you could load the data into these applications. Feel free to contact support if we are missing an option.CSV download, import:​Open the data in the CSV format from the browser eg. https://rest.coinapi.io/v1/exchangerate/USD?apikey=YOUR_API_KEY&invert=true&output_format=csvSave the data to the file with the .csv extension.Use the file saved and import it into the software.When configuring import, refer to the parameters like delimiter from the Output data formatThe platform-independent way described above is based on CSV but could also be used in other formats like JSON and XML as long as the software support it, but the import procedure needs to be adjusted accordingly.Microsoft Excel​Use PowerQuery to load the URL directly into the CSV import without saving the file locally. Use the =WEBSERVICE function to load the API response directly into the sheet, but this will not parse the data; additional processing is required.Google Sheets​Use =IMPORT function to load the REST API endpoint and automatically parse the CSV format data into the cells. eg. =IMPORTDATA(""https://rest.coinapi.io/v1/exchangerate/USD?apikey=YOUR_API_KEY&invert=true&output_format=csvOpenOffice Calc​Select the menu Insert -> Sheet From File, 2. In the Insert dialog, put the URL eg. https://rest.coinapi.io/v1/exchangerate/USD?apikey=YOUR_API_KEY&invert=true&output_format=csv in the File Name box at the bottom. Set the drop-down list next to that to Web Page Query and click Open. The Text Import dialog opens where you can change the defaults if needed. Authentication​API Key: ApiKeyCoinApi API key needed to access the endpointsSecurity Scheme Type:apiKeyHeader parameter name:X-CoinAPI-KeyContactCOINAPI LTD: [email protected]URL: https://www.coinapi.ioLicenseMIT LicenseWas this section helpful?12345PreviousAPI limits and billingNextExchange RatesOpenAPI SpecificationEndpointsGeneralHTTP RequestsOutput data formatExcel / G-SheetsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api#http-errors)"
201,i.io naas api ethereum,"i.io naas api ethereum.   Ethereum | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodsEthereumOn this pageEthereumTo access the ethereum blockchain documentation, please visit ethereum.org.Clients​Clients are software implementations that enable nodes to participate in the network.In our infrastructure, we currently support two major Ethereum clients: Geth and Erigon. Users can interact with these clients through dedicated endpoints.Our support extends to both the archived and current versions of Geth. The archived variant encapsulates historical data, while the current version mirrors the latest state of the Ethereum network.For users leveraging Erigon, we provide access to archived versionsThe archived mode clients are tailored for historical analysis and research, while the current mode clients deliver real-time data for applications requiring the latest Ethereum network state.infoWhen interacting with the Ethereum network using the endpoint mainnet-ethereum.node.coinapi.io, it's important to note that queries may be directed to either geth or erigon based on our infrastructure's load balancing.Endpoints​The following lists all the Ethereum network endpoints supported by NaaS API.ChainNetworkNode URLProtocolSoftwareSoftware VersionModeEthereumMainnethttps://ethereum-mainnet.node.coinapi.iohttpsEthereumMainnetwss://ethereum-mainnet.node.coinapi.iowsEthereumMainnethttps://ethereum-mainnet-erigon.node.coinapi.iohttpserigonv.2.48.1archivedEthereumMainnetwss://ethereum-mainnet-erigon.node.coinapi.iowserigonv.2.48.1archivedEthereumMainnethttps://ethereum-mainnet-geth-archive.node.coinapi.iohttpserigonv.2.48.1archivedEthereumMainnetwss://ethereum-mainnet-geth-archive.node.coinapi.iowserigonv.2.48.1archivedEthereumMainnethttps://ethereum-mainnet-geth-current.node.coinapi.iohttpsgethv.1.12.0currentEthereumMainnetwss://ethereum-mainnet-geth-current.node.coinapi.iowssgethv.1.12.0currentEthereumMainnethttps://ethereum-mainnet-quicknode.node.coinapi.iohttpsgethv.1.12.0archivedEthereumMainnetwss://ethereum-mainnet-quicknode.node.coinapi.iowssgethv.1.12.0archivedWas this section helpful?12345PreviouslisttransactionsNexteth_blockNumberClientsEndpointsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum)"
202,i.io market data how to guides creating historical crypto price chart using CoinAPI and D3 js.,"i.io market data how to guides creating historical crypto price chart using CoinAPI and D3 js..   Creating a historical crypto price chart using CoinAPI and D3.js | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesAcquire exchange rates with different programming languagesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPIBuilding a cryptocurrency exchange comparison tool using Market Data APICreating a historical crypto price chart using CoinAPI and D3.jsFetching market data with KNIMEGet Historical OHLCV Data Using CoinAPIGet symbol funding rate metric data using CoinAPIImport API into PostmanImport data to Google Sheets/ExcelReal-time data visualization with javascriptReal-time trades stream using WebSocket with different languagesRetrieve and analyze crypto order book data using a cryptocurrency APITrading Essentials: QuickstartPerformance Testing GuideHow-to guidesCreating a historical crypto price chart using CoinAPI and D3.jsOn this pageCreating a historical crypto price chart using CoinAPI and D3.jsIn this tutorial, you'll learn how to build a historical cryptocurrency price chart.On the agenda 🔥:​Fetch cryptocurrency data using CoinAPI and JavaScript.Transform and prepare the data for visualization.Create a historical price chart using D3.js.Style your chartCoinAPI: Comprehensive Cryptocurrency Data Solution 🚀​Just a quick background about us. CoinAPI is your one-stop solution for cryptocurrency data. We offer seamless access to real-time and historical financial data from hundreds of exchanges. Whether you're looking for raw trading data, OHLCV, or specific events, we've got you covered.We support multiple data delivery methods like REST, WebSocket, and more. Perfect for developers looking to build anything from trading algorithms to financial visualizations.Let's set it up 🚀​CoinAPI is your go-to platform for obtaining real-time and historical cryptocurrency data, featuring comprehensive API solutions suitable for developers and financial analysts alike. Coupled with D3.js, a javascript library for data visualization, you have the perfect toolkit for crafting sophisticated, real-time financial dashboards or trading algorithms. In this tutorial, you'll learn how to utilize CoinAPI's RESTful API in a web environment to fetch cryptocurrency data. You'll also learn how to visualize data using D3.js.Getting Started​First, create a new project folder on your computer and name it crypto_price_chart. Inside this folder, create three files: index.html, style.css, and script.js.Setting Up the API Request​To fetch data from CoinAPI, we'll first need to make an API request. This will require an API key, which you can obtain by registering at the CoinAPI website.Code Snippet: Prepare index.html​Here's the basic structure of a web page designed to visualize cryptocurrency closing prices over a specified period using D3.js.<!doctype html><html> <head> <title>Coinapi</title> <script src=""https://d3js.org/d3.v6.min.js""></script> <script src=""script.js""></script> <link rel=""stylesheet"" href=""style.css""> </head> <h1>BTC Closing Prices Over Time</h1> <h3>(Data Period: 1 Day, Starting from January 1st, 2021, for 360 Days)</h3> <svg width=""800"" height=""600""></svg></html>Code Snippet: Fetching Data from CoinAPI​Create a function in your script.js to fetch historical data.const API_KEY = ""YOUR_API_KEY_HERE"";const url = `https://rest.coinapi.io/v1/ohlcv/BITSTAMP_SPOT_BTC_USD/history?apikey=${API_KEY}&period_id=1DAY&time_start=2021-01-01T00:00:00&limit=360`;async function fetchData() { try { const response = await fetch(url); if (!response.ok) {  throw new Error('Network response was not ok'); } const data = await response.json(); return data; } catch (error) { console.error('Error fetching data:', error); throw error; }}Preparing the Data​After fetching the data, it needs to be prepared for charting. We'll create a simple function to transform the data into a format that D3.js can easily interpret. Add it to the end of script.js.Code Snippet: Data Transformation​function transformData(data) { return data.map(entry => ({ date: new Date(entry.time_period_start), price: entry.price_close }));}Now let's dive into building the chart.Code Snippet: building chart with D3.js​Add this code at the end of your script.js file.document.addEventListener('DOMContentLoaded', () => { const svg = d3.select(""svg""); // Select the existing SVG element in the HTML fetchData() .then(data => {  const transformedData = transformData(data);  // Define chart dimensions  const width = 800;  const height = 600;  const margin = { top: 50, right: 50, bottom: 50, left: 50 };  // Create a group for the chart elements  const chartGroup = svg.append(""g"")  .attr(""transform"", `translate(${margin.left}, ${margin.top})`);  // Create scales  const xScale = d3.scaleUtc()  .domain(d3.extent(transformedData, d => d.date))  .range([0, width - margin.left - margin.right]);  const yScale = d3.scaleLinear()  .domain([0, d3.max(transformedData, d => d.price)])  .range([height - margin.bottom - margin.top, 0]);  // Create a line generator  const line = d3.line()  .x(d => xScale(d.date))  .y(d => yScale(d.price));  // Draw the line  chartGroup.append(""path"")  .datum(transformedData)  .attr(""class"", ""line"")  .attr(""d"", line);  // Add axes  chartGroup.append(""g"")  .attr(""class"", ""x-axis"")  .attr(""transform"", `translate(0, ${height - margin.bottom - margin.top})`)  .call(d3.axisBottom(xScale));  chartGroup.append(""g"")  .attr(""class"", ""y-axis"")  .call(d3.axisLeft(yScale)); }) .catch(error => console.log(error));});Code snippet: styling the chart​Now, let's style your chart using the provided CSS. Add the following CSS to your style.css file:body, h1, h2, h3, p, ul, li { margin: 5; padding: 0; color: white;}/* Set a gradient background for the body */body { background: linear-gradient(to bottom, #080059, #6C4CFC);}/* Style the SVG container */svg { background-color: transparent; /* Transparent background for the chart */}/* Style the chart line */.line { fill: none; stroke: #6C4CFC; /* Purple color for the line */ stroke-width: 2;}/* Style the x-axis */.x-axis path,.x-axis line { fill: none; stroke: #ccc; /* Light gray color for x-axis lines */ shape-rendering: crispEdges;}.x-axis text { font-size: 12px; fill: white; /* Text color for the x-axis labels */}/* Style the y-axis */.y-axis path,.y-axis line { fill: none; stroke: #ccc; /* Light gray color for y-axis lines */ shape-rendering: crispEdges;}.y-axis text { font-size: 12px; fill: white; /* Text color for the y-axis labels */}/* Style the legend */.legend { font-size: 16px; text-align: right; color: white; /* Text color for the legend text */}Testing Your Chart​Save all your files and open index.html in a web browser. You should see a beautiful historical crypto price chart generated from real data!Was this section helpful?12345PreviousBuilding a cryptocurrency exchange comparison tool using Market Data APINextFetching market data with KNIMEOn the agenda 🔥:CoinAPI: Comprehensive Cryptocurrency Data Solution 🚀Let's set it up 🚀Getting StartedSetting Up the API RequestCode Snippet: Prepare index.htmlCode Snippet: Fetching Data from CoinAPIPreparing the DataCode Snippet: Data TransformationCode Snippet: building chart with D3.jsCode snippet: styling the chartTesting Your ChartCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/how-to-guides/creating-historical-crypto-price-chart-using-CoinAPI-and-D3-js.)"
203,i.io general faq general How to handle payment errors during sign up,"i.io general faq general How to handle payment errors during sign up.   How to handle payment errors during sign up | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralHow to handle payment errors during sign upHow to handle payment errors during sign upYou may encounter different types of errors such as:balance_insufficientcard_decline_rate_limit_exceededemail_invalidTo handle these scenarios, you may refer to Stripe’s documentation [1][2], our payment gateway partner. This will help you identify the error and determine the necessary steps to take.If you have further questions, you may also contact CoinAPI support team here: https://support.coinapi.io/hc/en-us/requests/new References:[1] https://stripe.com/docs/error-codes#email-invalid [2] https://stripe.com/docs/declines/codesWas this section helpful?12345PreviousHow to handle order book flat files can go back in time?NextI didn't receive an emailCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/How-to-handle-payment-errors-during-sign-up)"
204,i.io cdn cgi l email protection#9deee8ededf2efe9ddfef2f4f3fcedf4b3f4f2,"i.io cdn cgi l email protection#9deee8ededf2efe9ddfef2f4f3fcedf4b3f4f2.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 8aad25a3b8096e99 •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#9deee8ededf2efe9ddfef2f4f3fcedf4b3f4f2)"
205,i.io flat files api billing,"i.io flat files api billing.   Billing and Usage | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyFlat FilesBilling and UsageData & StructureS3 APIPush APIBilling and UsageOn this pageFlat Files - Billing and UsageThe Flat Files uses a consumption-based billing model. Charges are calculated based on two dimensions: API requests made and data downloaded.Billing Dimensions​API Requests: This includes GET and LIST operations.Data Downloaded: The volume of data retrieved, varying by data type.Pricing​API Requests​Request typePrice per 1,000 requestsGET10 CULIST10 CUHEAD10 CUData Downloaded​Data TypePrice per GBLimit Book Data1 CUQuotes1 CUTrades3 CUConsumption Units​In the current version of the pricing 1 CU is flat priced at 1 USD.Detailed Data Volumes​The following table shows the breakdown of data volumes for 2024-06-20 across major exchanges. Please note that these volumes are representative of a single day and may vary for different dates.Data TypeExchangeSize (MB)FilesLimit Book DataKRAKEN9,651694Limit Book DataBINANCE8,6271,282Limit Book DataCOINBASE4,978401Limit Book DataBITSTAMP1,893203Limit Book DataGEMINI671110Limit Book DataLMAXDIGITAL6316QuotesKRAKEN2,506702QuotesBINANCE1,8331,282QuotesCOINBASE1,100401QuotesBITSTAMP525205QuotesGEMINI192110QuotesLMAXDIGITAL5016TradesBINANCE1,8231,281TradesCOINBASE225391TradesKRAKEN21697TradesBITSTAMP4178TradesGEMINI3109TradesLMAXDIGITAL116Realistic Usage Scenarios​Let's explore some realistic usage scenarios based on the data volumes from 2024-06-20, assuming users typically access a subset of available data, focusing on specific symbols or a portion of an exchange's data.Scenario 1: Daily Download of Top Cryptocurrencies from Multiple Exchanges​A user downloads data for the top 10 cryptocurrencies (approximately 25% of the data) from BINANCE, COINBASE, and KRAKEN each day:API Requests:LIST requests: 9 (one for each data type per exchange)GET requests: 670 (estimated 25% of files for these exchanges)Total requests: 679CU for requests: (679 / 1,000) * 10 = 6.79 CUData Downloaded (25% of total volume):Limit Book: (8,627 + 4,978 + 9,651) 0.25 MB 1 CU/GB = 5.78 CUQuotes: (1,833 + 1,100 + 2,506) 0.25 MB 1 CU/GB = 1.36 CUTrades: (1,823 + 225 + 21) 0.25 MB 3 CU/GB = 1.55 CUTotal CU for data: 8.69 CUTotal CU for this scenario (per day): 6.79 + 8.69 = 15.48 CU Estimated monthly cost (30 days): 15.48 * 30 = 464.40 CUScenario 2: Weekly Analysis of Specific Trading Pairs​A user downloads data for 5 specific trading pairs (approximately 10% of the data) from BINANCE and COINBASE once a week:API Requests (per week):LIST requests: 6 (one for each data type per exchange)GET requests: 168 (estimated 10% of files for these exchanges)Total requests: 174CU for requests: (174 / 1,000) * 10 = 1.74 CUData Downloaded (10% of total volume, for 7 days):Limit Book: (8,627 + 4,978) 0.10 MB 1 CU/GB * 7 = 9.52 CUQuotes: (1,833 + 1,100) 0.10 MB 1 CU/GB * 7 = 2.05 CUTrades: (1,823 + 225) 0.10 MB 3 CU/GB * 7 = 4.31 CUTotal CU for data: 15.88 CUTotal CU for this scenario (per week): 1.74 + 15.88 = 17.62 CU Estimated monthly cost (4 weeks): 17.62 * 4 = 70.48 CUScenario 3: Monthly Deep Dive on a Single Exchange​A user performs a comprehensive analysis of KRAKEN data (100% of KRAKEN data) for the past month:API Requests (per month):LIST requests: 3 (one for each data type)GET requests: 2,093 (all KRAKEN files)Total requests: 2,096CU for requests: (2,096 / 1,000) * 10 = 20.96 CUData Downloaded (100% of KRAKEN volume, for 30 days):Limit Book: 9,651 MB 1 CU/GB 30 = 289.53 CUQuotes: 2,506 MB 1 CU/GB 30 = 75.18 CUTrades: 21 MB 3 CU/GB 30 = 1.89 CUTotal CU for data: 366.60 CUTotal CU for this scenario (per month): 20.96 + 366.60 = 387.56 CUScenario 4: Daily Monitoring of Emerging Cryptocurrencies​A user tracks 20 emerging cryptocurrencies (approximately 5% of the data) across all exchanges daily:API Requests (per day):LIST requests: 18 (one for each data type per exchange)GET requests: 355 (estimated 5% of total files)Total requests: 373CU for requests: (373 / 1,000) * 10 = 3.73 CUData Downloaded (5% of total volume):Limit Book: (9,651 + 8,627 + 4,978 + 1,893 + 671 + 63) 0.05 MB 1 CU/GB = 1.27 CUQuotes: (2,506 + 1,833 + 1,100 + 525 + 192 + 50) 0.05 MB 1 CU/GB = 0.30 CUTrades: (1,823 + 225 + 21 + 4 + 3 + 1) 0.05 MB 3 CU/GB = 0.31 CUTotal CU for data: 1.88 CUTotal CU for this scenario (per day): 3.73 + 1.88 = 5.61 CU Estimated monthly cost (30 days): 5.61 * 30 = 168.30 CUBest Practices for Cost Optimization​Focus on specific symbols or trading pairs relevant to your analysis to reduce data volume and costs.Use efficient querying to minimize unnecessary API calls, especially when checking for new data.Implement delta downloads to retrieve only new or updated data since your last download.Consider the frequency of data downloads based on your analysis needs. Daily downloads may not always be necessary.Cache downloaded data locally to avoid re-downloading unchanged historical data.Regularly review your data usage patterns and adjust your download strategy to optimize costs.Use LIST operations judiciously to minimize API requests when you know the exact files you need.Remember, data volumes and file counts may vary from day to day based on market activity and other factors. The scenarios presented here are based on the data from 2024-06-20 and should be considered as examples. Your actual usage and costs may differ.For more information on optimizing your usage and understanding your bill, please contact our support team.Was this section helpful?12345PreviousFlat FilesNextData & StructureBilling DimensionsPricingAPI RequestsData DownloadedConsumption UnitsDetailed Data VolumesRealistic Usage ScenariosScenario 1: Daily Download of Top Cryptocurrencies from Multiple ExchangesScenario 2: Weekly Analysis of Specific Trading PairsScenario 3: Monthly Deep Dive on a Single ExchangeScenario 4: Daily Monitoring of Emerging CryptocurrenciesBest Practices for Cost OptimizationCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/flat-files-api/billing)"
206,i.io market data jsonrpc api,"i.io market data jsonrpc api.   JSON RPC | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideJSON RPCOn this pageJSON RPCMarket Data - JSON RPCIntroduction​Our market data API provides versatile access through JSON-RPC, and our REST endpoints are fully compatible with it, offering flexibility for developers.By specifying resource paths (such as /v1/exchanges or /v1/exchangerates/BTC) in the method property of the JSON-RPC, you can access all of our market data resources.Additionally, the params property allows for the inclusion of query parameters.JSON-RPC​JSON-RPC is a lightweight remote procedure call protocol encoded in JSON. It allows for efficient and straightforward communication between a client and a server over various transport protocols. JSON-RPC is widely used in web services and APIs due to its simplicity and ease of use.JSON-RPC 2.0 Standard​Before diving into the details of using JSON-RPC with the Market Data API, it's important to understand the JSON-RPC standard. You can find detailed information about the JSON-RPC specification on the official JSON-RPC website.Endpoint​To access market data using JSON-RPC, you need to use following URL:EnviromentEncryptionValueProductionYeshttps://rest.coinapi.io/jsonrpcAuthentication​If you want to learn how to authenticate to this API, you can find detailed instructions and guidance in authentication section of this documentation.Examples​Here are a few examples demonstrating how the Market Data API is accessed through JSON-RPC, along with their corresponding responses.Get exchanges​Requesthttps://rest.coinapi.io/jsonrpc?apikey=YOUR-API-KEY{ ""jsonrpc"": ""2.0"", ""method"": ""v1/exchanges"", ""params"": [], ""id"": ""my-tracking-id-001""}Response{ ""jsonrpc"": ""2.0"", ""result"": [  {   ""exchange_id"": ""BINANCE"",   ""website"": ""https://www.binance.com/"",   ""name"": ""Binance"",   ""data_quote_start"": ""2017-12-18T00:00:00.0000000Z"",   ""data_quote_end"": ""2023-10-29T00:00:00.0000000Z"",   ""data_orderbook_start"": ""2017-12-18T21:50:58.3910192Z"",   ""data_orderbook_end"": ""2023-07-07T00:00:00.0000000Z"",   ""data_trade_start"": ""2017-07-14T00:00:00.0000000Z"",   ""data_trade_end"": ""2023-10-30T00:00:00.0000000Z"",   ""data_symbols_count"": 2349,   ""volume_1hrs_usd"": 484530018.57,   ""volume_1day_usd"": 7696242910.91,   ""volume_1mth_usd"": 227749609430.91  },  //other result entries ], ""id"": ""my-tracking-id-001""}Get BTC exchange rates​Requesthttps://rest.coinapi.io/jsonrpc/apikey-YOUR-API-KEY{ ""jsonrpc"": ""2.0"", ""method"": ""v1/exchangerate/BTC"", ""params"": [], ""id"": ""my-tracking-id-001""}Response{ ""jsonrpc"": ""2.0"", ""result"": {  ""asset_id_base"": ""BTC"",  ""rates"": [   {    ""time"": ""2023-10-31T09:19:36.0000000Z"",    ""asset_id_quote"": ""USDC"",    ""rate"": 34393.502957271553532525456547   },   //other result entries  ] }, ""id"": ""my-tracking-id-001""}Get symbols (filtered)​Requesthttps://rest.coinapi.io/jsonrpc/apikey-YOUR-API-KEY{ ""jsonrpc"": ""2.0"", ""method"": ""v1/symbols"", ""params"": [{""exchange_id"" : ""BITSTAMP"" }, {""filter_symbol_id"" : ""BITSTAMP_""}, {""filter_asset_id"" : ""XRP""}], ""id"": ""my-tracking-id-001""}Response{ ""jsonrpc"": ""2.0"", ""result"": [  {   ""symbol_id"": ""BITSTAMP_SPOT_XRP_EUR"",   ""exchange_id"": ""BITSTAMP"",   ""symbol_type"": ""SPOT"",   ""asset_id_base"": ""XRP"",   ""asset_id_quote"": ""EUR"",   ""data_start"": ""2017-01-25"",   ""data_end"": ""2023-10-30"",   ""data_quote_start"": ""2017-01-26T00:00:00.0000000Z"",   ""data_quote_end"": ""2023-10-29T00:00:00.0000000Z"",   ""data_orderbook_start"": ""2017-01-25T19:41:55.0000000Z"",   ""data_orderbook_end"": ""2023-07-06T00:00:00.0000000Z"",   ""data_trade_start"": ""2017-01-25T00:00:00.0000000Z"",   ""data_trade_end"": ""2023-10-30T00:00:00.0000000Z"",   ""volume_1hrs"": 8781306.97576001,   ""volume_1hrs_usd"": 5031705.13,   ""volume_1day"": 35365544.1431782,   ""volume_1day_usd"": 20264522.16,   ""volume_1mth"": 929524888.659593,   ""volume_1mth_usd"": 532619479.27,   ""price"": 0.538365,   ""symbol_id_exchange"": ""XRPEUR"",   ""asset_id_base_exchange"": ""XRP"",   ""asset_id_quote_exchange"": ""EUR"",   ""price_precision"": 0.000010000,   ""size_precision"": 0.000000010  },  //other result entries ], ""id"": ""my-tracking-id-001""}Error Responses​An incorrectly defined request may result in the following error response:{ ""jsonrpc"": ""2.0"", ""id"": ""my-tracking-id-001"" ""error"": {  ""code"": 400,  ""message"": ""Bad request (failed to parse json rpc)"" }}If a resource is not found, you can expect the following error response:{ ""jsonrpc"": ""2.0"", ""id"": ""my-tracking-id-001"" ""error"": {  ""code"": 404,  ""message"": ""Resource not found"" }}Was this section helpful?12345PreviousMessagesNextFIX APIIntroductionJSON-RPCJSON-RPC 2.0 StandardEndpointAuthenticationExamplesError ResponsesCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/jsonrpc-api)"
207,i.io ems api managed cloud rest api certificate get authentication certificate,"i.io ems api managed cloud rest api certificate get authentication certificate.   Get authentication certificate | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIAccountCertificateGet authentication certificateEndpointsExchangeLocationREST APIWebSocket APIFIX APISelf Hosted GuideManaged Cloud REST APICertificateGet authentication certificateGet authentication certificateGET /v1/certificate/pemProviding PEM file with the Private Key, Public Key and the Certificate to authenticate to the EMS API.Responses200OKtext/plainSchemaSchemastringLoading...Was this section helpful?12345PreviousCertificateNextEndpointsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/managed-cloud-rest-api/certificate/get-authentication-certificate)"
208,i.io naas api ethereum Methods trace replayBlockTransactions,"i.io naas api ethereum Methods trace replayBlockTransactions.   trace_replayBlockTransactions | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodstrace_replayBlockTransactionsOn this pagetrace_replayBlockTransactionsOverview​The 'trace_replayBlockTransactions' methodallows users to replay transactions in a specific block. This is particularly useful for debugging and understanding transaction outcomes.Request​{ ""method"": ""trace_replayBlockTransactions"", ""params"": [""blockNumber"", ""traceTypes""], ""id"": 1, ""jsonrpc"": ""2.0""}Request Parameters​blockNumber: The block number you want to replay transactions for.traceTypes: The types of traces you want to retrieve. This can include values like ""trace"", ""vmTrace"", and ""stateDiff"".Response​{ ""id"": 1, ""jsonrpc"": ""2.0"", ""result"": [ {  ""output"": ""0x..."",  ""stateDiff"": {},  ""trace"": [],  ""vmTrace"": {} } // ... other transactions ]}Errors​Invalid Request: This error is returned if the request format is incorrect.Internal Error: This error is returned if there's a server-side issue processing the request.Rate Limits​Please note that there are rate limits applied to the API to ensure fair usage. Free-tier users are limited to 100 requests per day, while premium users can make up to 1000 or more requests per day.Support​If you encounter any issues or have further questions regarding the eth_getBlockByHash method, please contact our support team at [email protected].Was this section helpful?12345Previoustrace_rawTransactionNexttrace_replayTransactionOverviewRequestRequest ParametersResponseErrorsRate LimitsSupportCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/trace_replayBlockTransactions)"
209,i.io naas api#endpoints,"i.io naas api#endpoints.   NaaS API | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumNaaS APIOn this pageNaaS APIIntroduction​The NaaS API is a software product that provides a set of tools for developers to interact with the blockchain.It make it easier to interface with blockchains, allowing developers to concentrate on creating apps rather than maintaining the supporting infrastructure. Technical design​We provide public nodes that act as gateways to popular blockchains, including Bitcoin, Ethereum and more. These nodes are accessible through a range of HTTP API endpoints, allowing developers and applications to interact with blockchain data effortlessly.For a full list of available endpoints click here.Essentials​Node serves as both a server and software component responsible for exposing an API to interact with the blockchain.Chain or Blockchain, is a distributed and immutable ledger that records all transactions across a decentralized network.Network refers to the entire ecosystem of blockchain participants, including nodes, users, and miners, connected via a specific blockchain protocol.Endpoints​The list of endpoints is available in the documentation for each exchange.Getting started​To begin using the NaaS API, you'll need:CoinAPI key (obtainable by signing up on our website).Access an operational Node via any of our endpoints Familiarity with HTTP & JSON-RPCFamiliarity with the methods exposed by the blockchain you want to interact with such as Bitcoin, Ethereum or any other of your choiceGeneral information​NaaS API is dedicated to developers who wish to integrate their applications with the various blockchains and their ecosystems. The NaaS API facilitates interaction with nodes connected to different blockchains, allowing access to on-chain data and enabling the transmission of transactions onto the network. JSON-RPC Standard​The NaaS API operates on the JSON-RPC protocol. JSON-RPC is a lightweight and stateless remote procedure call (RPC) protocol widely used in communicating with blockchain nodes. All queries and responses in this API are formatted in JSON.Authentication & Security​Depending on your preference, you can either utilize an API key or enhance security by combining an API key with JWT token.For more details go to our Authentication section.Best PracticesNever expose your API key in a client-side application or a public code repository. Always keep it securely on your server.Always communicate with the CoinAPI NaaS API over HTTPS (SSL/TLS) to encrypt data transmitted between your application and CoinAPI's serversWhen possible, avoid sending personally identifiable information (PII)Monitor for updates as our API can evolve, regularly check for updates to ensure compatibilitydangerOnce your API key falls into the wrong hands, it can be used to make requests within your subscription.infoIf your key has been compromised, you have the option to delete it at any time and generate a new oneLimits​Your Subscription might have rate limits in place. Ensure you're making requests within the allowed limits to avoid being interruption in access.Http Status Codes​When the status code is not 200, it indicates a lack of response from the node.Even if a 200 status code is received, there may still be a JSON-RPC error at the node level.A status code different from 200 implies that the response is not a JSON-RPC response.Successful JSON-RPC Responses​200 OK, valid response:{ ""jsonrpc"": ""2.0"", ""id"": ""tracking-id-001"", ""result"": ""0x11baedc""}JSON-RPC Error Responses​200 OK, includes error code from the node:{ ""jsonrpc"": ""2.0"", ""id"": ""tracking-id-001"", ""error"": {  ""code"": -32602,  ""message"": ""too many arguments, want at most 0"" }}Non-JSON-RPC Error Responses (other than 200)​401, unauthorized:{ ""error"": ""Invalid API key""}Possible HTTP status codes and their meaning are listed below:Status CodeMeaning200Your request has been successfully processed by the server. However, it's essential to examine the response data as there might be JSON-RPC errors within the node's response.400Your request is malformed or contains incorrect parameters. There is an issue with the request itself.401Your request lacks proper authentication. It is typically due to an incorrect API key.403Your API key lacks the necessary permissions to access the requested resource.429Your request has exceeded the rate limits associated with your API key.550Server cannot provide the requested data at the moment. This may occur when requesting specific single items that are temporarily unavailable.Making API Calls​Json-RPC provides a structured and straightforward approach to sending and receiving data, making it accessible for developers using a wide range of programming languages and tools.curlYou can use the curl command-line tool to make requests. Here's an example of how to make a POST request to the Ethereum JSON-RPC API using curl:curl -X POST \ ""https://ethereum-mainnet-geth-archive.node.coinapi.io?apiKey=YOUR_API_KEY"" \ -H ""Content-Type: application/json"" \ -d '{ ""jsonrpc"": ""2.0"", ""method"": ""eth_getTransactionReceipt"", ""params"": [""0x2444a649cd7fcd50ccb8c52c4159515fdf311eeb5dc02cf1b2c397b833fde012""], ""id"": 1 }'web3.jsIf you prefer to use JavaScript and the web3.js library to interact with NaaS API, you can make request like this:const axios = require('axios');const url = 'https://ethereum-mainnet-geth-archive.node.coinapi.io?apiKey=YOUR_API_KEY';const data = { jsonrpc: '2.0', method: 'eth_getTransactionReceipt', params: ['0x2444a649cd7fcd50ccb8c52c4159515fdf311eeb5dc02cf1b2c397b833fde012'], id: 1,};axios.post(url, data, { headers: { 'Content-Type': 'application/json', },}) .then(response => { console.log(response.data); }) .catch(error => { console.error(error); });PythonYou can also use Python to make HTTP POST requests to the NaaS API using the requests library. Here's an example:import requestsurl = 'https://ethereum-mainnet-geth-archive.node.coinapi.io?apiKey=YOUR_API_KEY'data = { 'jsonrpc': '2.0', 'method': 'eth_getTransactionReceipt', 'params': ['0x2444a649cd7fcd50ccb8c52c4159515fdf311eeb5dc02cf1b2c397b833fde012'], 'id': 1,}headers = {'Content-Type': 'application/json'}response = requests.post(url, json=data, headers=headers)if response.status_code == 200: result = response.json() print(result)else: print(f""Request failed with status code {response.status_code}"")Batch requests | Multi-Call​Multiple requests can be sent simultaneously in an array when using the NaaS API, allowing for efficient handling of multiple operations. In such a scenario, each request within the array is processed before all the requests are returned.When requests are sent in a batch, they will only be returned after every request has been processed. This behavior is particularly useful when you need to perform multiple operations and want to wait for all of them to complete before proceeding.Example of a Batch Request[ {""jsonrpc"": ""2.0"", ""id"": ""tracking-id-001"", ""method"": ""eth_blockNumber"", ""params"": []}, {""jsonrpc"": ""2.0"", ""id"": ""tracking-id-002"", ""method"": ""eth_chainId"", ""params"": []}]In this batch request, we have two distinct JSON-RPC requests bundled togethe:The first request, identified by tracking-id-001 invokes the eth_blockNumber, aiming to retrieve the current block number.The second request, with the identifier tracking-id-002 calls the eth_chainId to fetch the current chain ID.Response to the Batch Request[ {  ""jsonrpc"": ""2.0"",  ""id"": ""tracking-id-001"",  ""result"": ""0x11bb158"" }, {  ""jsonrpc"": ""2.0"",  ""id"": ""tracking-id-002"",  ""result"": ""0x1"" }]Data Streaming​TODOSupport​If you encounter any issues or have further questions regarding the Ethereum API, please contact our support team at [email protected].Summary​With the NaaS API, you can fully leverage the potential of the different blockchains in your applications. This documentation covers all the necessary information to start utilizing this API and creating innovative blockchain-based solutions. Was this section helpful?12345NextAuthenticationIntroductionTechnical designEssentialsEndpointsGetting startedGeneral informationJSON-RPC StandardAuthentication & SecurityLimitsHttp Status CodesMaking API CallsBatch requests | Multi-CallData StreamingSupportSummaryCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api#endpoints)"
210,i.io general faq api Why are there no Exchange Rates data for some assets for a given period,"i.io general faq api Why are there no Exchange Rates data for some assets for a given period.   Why are there no Exchange Rates data for some assets for a given period? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer EMS Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What is the rate limit for EMS Trading API?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQAPIWhy are there no Exchange Rates data for some assets for a given period?Why are there no Exchange Rates data for some assets for a given period?Some assets can be supported at a particular date but not have Exchange Rates data available for a given period. This is because our Exchange Rates data is produced from Quotes, Trades, and Metadata datasets. Quotes and Trades data are symbol-based (e.g BINANCE_SPOT_BTC_USDT), and some assets may not have symbols available yet for the queried period.For example, the asset CVX was supported starting from 2020-05-05, but it returns zero price data from 2020-05-05 to 2021-06-06. If you check the symbols for the CVX asset with the v1/symbols endpoint, most of them start only in the year 2021. Exchange rates in this case works as intended. That is why there is no Exchange Rates data for this asset for this period.To learn more about the algorithm for Exchange Rates, we have a comprehensive explanation in our documentation here: https://docs.coinapi.io/market-data/rest-api/exchange-ratesWas this section helpful?12345PreviousWhy are limit headers not always showing on a request?NextWhy do some symbols have additional prefix?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/api/Why-are-there-no-Exchange-Rates-data-for-some-assets-for-a-given-period)"
211,i.io market data rest api metadata list all exchanges by exchange id,"i.io market data rest api metadata list all exchanges by exchange id.   List all exchanges by exchange_id | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataList all asset iconsList all assets by asset IDList all assetsList all exchanges by exchange_idList all exchangesList all symbolsList of icons for the exchangesList of symbols for the exchangeList symbol mapping for the exchangeMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIMetadataList all exchanges by exchange_idList all exchanges by exchange_idGET /v1/exchanges/:exchange_idList all exchanges by exchange_idPath Parametersexchange_id string requiredThe ID of the exchange.Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [exchange_id string nullableGets or sets the exchange ID.website string nullableGets or sets the website URL of the exchange.name string nullableGets or sets the name of the exchange.data_start string nullabledata_end string nullabledata_quote_start date-time nullableGets or sets the start date of quote data.data_quote_end date-time nullableGets or sets the end date of quote data.data_orderbook_start date-time nullableGets or sets the start date of order book data.data_orderbook_end date-time nullableGets or sets the end date of order book data.data_trade_start date-time nullableGets or sets the start date of trade data.data_trade_end date-time nullableGets or sets the end date of trade data.data_trade_count int64 nullableGets or sets the number of trades.data_symbols_count int64 nullableGets or sets the number of symbols.volume_1hrs_usd double nullableGets or sets the USD volume in the last 1 hour.volume_1day_usd double nullableGets or sets the USD volume in the last 1 day.volume_1mth_usd double nullableGets or sets the USD volume in the last 1 month.metric_id string[] nullableGets or sets the list of metric IDs.icons object[] nullableGets or sets the list of icons for the exchange.Array [exchange_id string nullableGets or sets the exchange ID associated with the icon.asset_id string nullableGets or sets the asset ID associated with the icon.url string nullableGets or sets the URL of the icon.]][ { ""exchange_id"": ""string"", ""website"": ""string"", ""name"": ""string"", ""data_start"": ""string"", ""data_end"": ""string"", ""data_quote_start"": ""2024-07-16T12:55:05.247Z"", ""data_quote_end"": ""2024-07-16T12:55:05.247Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.247Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.247Z"", ""data_trade_start"": ""2024-07-16T12:55:05.247Z"", ""data_trade_end"": ""2024-07-16T12:55:05.247Z"", ""data_trade_count"": 0, ""data_symbols_count"": 0, ""volume_1hrs_usd"": 0, ""volume_1day_usd"": 0, ""volume_1mth_usd"": 0, ""metric_id"": [  ""string"" ], ""icons"": [  {  ""exchange_id"": ""string"",  ""asset_id"": ""string"",  ""url"": ""string""  } ] }][ { ""exchange_id"": ""OKCOIN_CNY"", ""website"": ""https://www.okcoin.cn/"", ""name"": ""OKCoin CNY"", ""data_quote_start"": ""2015-02-15T12:53:50.3430000Z"", ""data_quote_end"": ""2018-03-09T23:34:52.5800000Z"", ""data_orderbook_start"": ""2015-02-15T12:53:50.3430000Z"", ""data_orderbook_end"": ""2018-03-09T23:34:52.5800000Z"", ""data_trade_start"": ""2013-06-12T14:24:24.0000000Z"", ""data_trade_end"": ""2017-11-01T16:30:39.7077259Z"", ""data_symbols_count"": 2, ""volume_1hrs_usd"": 0, ""volume_1day_usd"": 0, ""volume_1mth_usd"": 0 }, { ""exchange_id"": ""HUOBI"", ""website"": ""https://www.huobi.com/"", ""name"": ""Huobi (HBUS)"", ""data_quote_start"": ""2015-03-29T21:46:06.2630000Z"", ""data_quote_end"": ""2019-11-03T18:22:29.1837496Z"", ""data_orderbook_start"": ""2015-03-29T21:46:06.2630000Z"", ""data_orderbook_end"": ""2019-11-03T18:23:53.2859878Z"", ""data_trade_start"": ""2015-03-29T21:46:08.7030000Z"", ""data_trade_end"": ""2019-11-03T18:21:48.2770000Z"", ""data_symbols_count"": 403, ""volume_1hrs_usd"": 1605.8, ""volume_1day_usd"": 59957.44, ""volume_1mth_usd"": 1259508.43 }]SchemaExample (from schema)Example responseSchemaArray [exchange_id string nullableGets or sets the exchange ID.website string nullableGets or sets the website URL of the exchange.name string nullableGets or sets the name of the exchange.data_start string nullabledata_end string nullabledata_quote_start date-time nullableGets or sets the start date of quote data.data_quote_end date-time nullableGets or sets the end date of quote data.data_orderbook_start date-time nullableGets or sets the start date of order book data.data_orderbook_end date-time nullableGets or sets the end date of order book data.data_trade_start date-time nullableGets or sets the start date of trade data.data_trade_end date-time nullableGets or sets the end date of trade data.data_trade_count int64 nullableGets or sets the number of trades.data_symbols_count int64 nullableGets or sets the number of symbols.volume_1hrs_usd double nullableGets or sets the USD volume in the last 1 hour.volume_1day_usd double nullableGets or sets the USD volume in the last 1 day.volume_1mth_usd double nullableGets or sets the USD volume in the last 1 month.metric_id string[] nullableGets or sets the list of metric IDs.icons object[] nullableGets or sets the list of icons for the exchange.Array [exchange_id string nullableGets or sets the exchange ID associated with the icon.asset_id string nullableGets or sets the asset ID associated with the icon.url string nullableGets or sets the URL of the icon.]][ { ""exchange_id"": ""string"", ""website"": ""string"", ""name"": ""string"", ""data_start"": ""string"", ""data_end"": ""string"", ""data_quote_start"": ""2024-07-16T12:55:05.247Z"", ""data_quote_end"": ""2024-07-16T12:55:05.247Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.247Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.247Z"", ""data_trade_start"": ""2024-07-16T12:55:05.247Z"", ""data_trade_end"": ""2024-07-16T12:55:05.247Z"", ""data_trade_count"": 0, ""data_symbols_count"": 0, ""volume_1hrs_usd"": 0, ""volume_1day_usd"": 0, ""volume_1mth_usd"": 0, ""metric_id"": [  ""string"" ], ""icons"": [  {  ""exchange_id"": ""string"",  ""asset_id"": ""string"",  ""url"": ""string""  } ] }][ { ""exchange_id"": ""OKCOIN_CNY"", ""website"": ""https://www.okcoin.cn/"", ""name"": ""OKCoin CNY"", ""data_quote_start"": ""2015-02-15T12:53:50.3430000Z"", ""data_quote_end"": ""2018-03-09T23:34:52.5800000Z"", ""data_orderbook_start"": ""2015-02-15T12:53:50.3430000Z"", ""data_orderbook_end"": ""2018-03-09T23:34:52.5800000Z"", ""data_trade_start"": ""2013-06-12T14:24:24.0000000Z"", ""data_trade_end"": ""2017-11-01T16:30:39.7077259Z"", ""data_symbols_count"": 2, ""volume_1hrs_usd"": 0, ""volume_1day_usd"": 0, ""volume_1mth_usd"": 0 }, { ""exchange_id"": ""HUOBI"", ""website"": ""https://www.huobi.com/"", ""name"": ""Huobi (HBUS)"", ""data_quote_start"": ""2015-03-29T21:46:06.2630000Z"", ""data_quote_end"": ""2019-11-03T18:22:29.1837496Z"", ""data_orderbook_start"": ""2015-03-29T21:46:06.2630000Z"", ""data_orderbook_end"": ""2019-11-03T18:23:53.2859878Z"", ""data_trade_start"": ""2015-03-29T21:46:08.7030000Z"", ""data_trade_end"": ""2019-11-03T18:21:48.2770000Z"", ""data_symbols_count"": 403, ""volume_1hrs_usd"": 1605.8, ""volume_1day_usd"": 59957.44, ""volume_1mth_usd"": 1259508.43 }]SchemaExample (from schema)Example responseSchemaArray [exchange_id string nullableGets or sets the exchange ID.website string nullableGets or sets the website URL of the exchange.name string nullableGets or sets the name of the exchange.data_start string nullabledata_end string nullabledata_quote_start date-time nullableGets or sets the start date of quote data.data_quote_end date-time nullableGets or sets the end date of quote data.data_orderbook_start date-time nullableGets or sets the start date of order book data.data_orderbook_end date-time nullableGets or sets the end date of order book data.data_trade_start date-time nullableGets or sets the start date of trade data.data_trade_end date-time nullableGets or sets the end date of trade data.data_trade_count int64 nullableGets or sets the number of trades.data_symbols_count int64 nullableGets or sets the number of symbols.volume_1hrs_usd double nullableGets or sets the USD volume in the last 1 hour.volume_1day_usd double nullableGets or sets the USD volume in the last 1 day.volume_1mth_usd double nullableGets or sets the USD volume in the last 1 month.metric_id string[] nullableGets or sets the list of metric IDs.icons object[] nullableGets or sets the list of icons for the exchange.Array [exchange_id string nullableGets or sets the exchange ID associated with the icon.asset_id string nullableGets or sets the asset ID associated with the icon.url string nullableGets or sets the URL of the icon.]][ { ""exchange_id"": ""string"", ""website"": ""string"", ""name"": ""string"", ""data_start"": ""string"", ""data_end"": ""string"", ""data_quote_start"": ""2024-07-16T12:55:05.247Z"", ""data_quote_end"": ""2024-07-16T12:55:05.247Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.247Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.247Z"", ""data_trade_start"": ""2024-07-16T12:55:05.247Z"", ""data_trade_end"": ""2024-07-16T12:55:05.247Z"", ""data_trade_count"": 0, ""data_symbols_count"": 0, ""volume_1hrs_usd"": 0, ""volume_1day_usd"": 0, ""volume_1mth_usd"": 0, ""metric_id"": [  ""string"" ], ""icons"": [  {  ""exchange_id"": ""string"",  ""asset_id"": ""string"",  ""url"": ""string""  } ] }][ { ""exchange_id"": ""OKCOIN_CNY"", ""website"": ""https://www.okcoin.cn/"", ""name"": ""OKCoin CNY"", ""data_quote_start"": ""2015-02-15T12:53:50.3430000Z"", ""data_quote_end"": ""2018-03-09T23:34:52.5800000Z"", ""data_orderbook_start"": ""2015-02-15T12:53:50.3430000Z"", ""data_orderbook_end"": ""2018-03-09T23:34:52.5800000Z"", ""data_trade_start"": ""2013-06-12T14:24:24.0000000Z"", ""data_trade_end"": ""2017-11-01T16:30:39.7077259Z"", ""data_symbols_count"": 2, ""volume_1hrs_usd"": 0, ""volume_1day_usd"": 0, ""volume_1mth_usd"": 0 }, { ""exchange_id"": ""HUOBI"", ""website"": ""https://www.huobi.com/"", ""name"": ""Huobi (HBUS)"", ""data_quote_start"": ""2015-03-29T21:46:06.2630000Z"", ""data_quote_end"": ""2019-11-03T18:22:29.1837496Z"", ""data_orderbook_start"": ""2015-03-29T21:46:06.2630000Z"", ""data_orderbook_end"": ""2019-11-03T18:23:53.2859878Z"", ""data_trade_start"": ""2015-03-29T21:46:08.7030000Z"", ""data_trade_end"": ""2019-11-03T18:21:48.2770000Z"", ""data_symbols_count"": 403, ""volume_1hrs_usd"": 1605.8, ""volume_1day_usd"": 59957.44, ""volume_1mth_usd"": 1259508.43 }]SchemaExample (from schema)Example responseSchemaArray [exchange_id string nullableGets or sets the exchange ID.website string nullableGets or sets the website URL of the exchange.name string nullableGets or sets the name of the exchange.data_start string nullabledata_end string nullabledata_quote_start date-time nullableGets or sets the start date of quote data.data_quote_end date-time nullableGets or sets the end date of quote data.data_orderbook_start date-time nullableGets or sets the start date of order book data.data_orderbook_end date-time nullableGets or sets the end date of order book data.data_trade_start date-time nullableGets or sets the start date of trade data.data_trade_end date-time nullableGets or sets the end date of trade data.data_trade_count int64 nullableGets or sets the number of trades.data_symbols_count int64 nullableGets or sets the number of symbols.volume_1hrs_usd double nullableGets or sets the USD volume in the last 1 hour.volume_1day_usd double nullableGets or sets the USD volume in the last 1 day.volume_1mth_usd double nullableGets or sets the USD volume in the last 1 month.metric_id string[] nullableGets or sets the list of metric IDs.icons object[] nullableGets or sets the list of icons for the exchange.Array [exchange_id string nullableGets or sets the exchange ID associated with the icon.asset_id string nullableGets or sets the asset ID associated with the icon.url string nullableGets or sets the URL of the icon.]][ { ""exchange_id"": ""string"", ""website"": ""string"", ""name"": ""string"", ""data_start"": ""string"", ""data_end"": ""string"", ""data_quote_start"": ""2024-07-16T12:55:05.248Z"", ""data_quote_end"": ""2024-07-16T12:55:05.248Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.248Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.248Z"", ""data_trade_start"": ""2024-07-16T12:55:05.248Z"", ""data_trade_end"": ""2024-07-16T12:55:05.248Z"", ""data_trade_count"": 0, ""data_symbols_count"": 0, ""volume_1hrs_usd"": 0, ""volume_1day_usd"": 0, ""volume_1mth_usd"": 0, ""metric_id"": [  ""string"" ], ""icons"": [  {  ""exchange_id"": ""string"",  ""asset_id"": ""string"",  ""url"": ""string""  } ] }][ { ""exchange_id"": ""OKCOIN_CNY"", ""website"": ""https://www.okcoin.cn/"", ""name"": ""OKCoin CNY"", ""data_quote_start"": ""2015-02-15T12:53:50.3430000Z"", ""data_quote_end"": ""2018-03-09T23:34:52.5800000Z"", ""data_orderbook_start"": ""2015-02-15T12:53:50.3430000Z"", ""data_orderbook_end"": ""2018-03-09T23:34:52.5800000Z"", ""data_trade_start"": ""2013-06-12T14:24:24.0000000Z"", ""data_trade_end"": ""2017-11-01T16:30:39.7077259Z"", ""data_symbols_count"": 2, ""volume_1hrs_usd"": 0, ""volume_1day_usd"": 0, ""volume_1mth_usd"": 0 }, { ""exchange_id"": ""HUOBI"", ""website"": ""https://www.huobi.com/"", ""name"": ""Huobi (HBUS)"", ""data_quote_start"": ""2015-03-29T21:46:06.2630000Z"", ""data_quote_end"": ""2019-11-03T18:22:29.1837496Z"", ""data_orderbook_start"": ""2015-03-29T21:46:06.2630000Z"", ""data_orderbook_end"": ""2019-11-03T18:23:53.2859878Z"", ""data_trade_start"": ""2015-03-29T21:46:08.7030000Z"", ""data_trade_end"": ""2019-11-03T18:21:48.2770000Z"", ""data_symbols_count"": 403, ""volume_1hrs_usd"": 1605.8, ""volume_1day_usd"": 59957.44, ""volume_1mth_usd"": 1259508.43 }]Loading...Was this section helpful?12345PreviousList all assetsNextList all exchangesCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/metadata/list-all-exchanges-by-exchange-id)"
212,i.io naas api ethereum Methods eth getBlockByNumber,"i.io naas api ethereum Methods eth getBlockByNumber.   eth_getBlockByNumber | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_getBlockByNumberOn this pageeth_getBlockByNumberOverview​The 'eth_getBlockByNumber' method returns information about a block by its number.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data '{ ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_getBlockByNumber"", ""params"": [ ""finalized"", ""finalized"" ]}'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"", ""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getBlockByNumber\"",\""params\"":[\""finalized\"",\""finalized\""]}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"",CURLOPT_RETURNTRANSFER => true,CURLOPT_ENCODING => """",CURLOPT_MAXREDIRS => 10,CURLOPT_TIMEOUT => 30,CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,CURLOPT_CUSTOMREQUEST => ""POST"",CURLOPT_POSTFIELDS => json_encode(['id' => 1,'jsonrpc' => '2.0','method' => 'eth_getBlockByNumber','params' => ['finalized','finalized']]),CURLOPT_HTTPHEADER => [""accept: application/json"",""content-type: application/json"",""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY""],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) {echo ""cURL Error #:"" . $err;} else {echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_getBlockByNumber"", ""params"": [""finalized"", ""finalized""]}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text) const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({ id: 1, jsonrpc: '2.0', method: 'eth_getBlockByNumber', params: ['finalized', 'finalized'] })};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getBlockByNumber\"",\""params\"":[\""finalized\"",\""finalized\""]}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))} require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getBlockByNumber\"",\""params\"":[\""finalized\"",\""finalized\""]}""response = http.request(request)puts response.read_body OkHttpClient client = new OkHttpClient();{MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getBlockByNumber\"",\""params\"":[\""finalized\"",\""finalized\""]}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();}Request Parameters​'block parameter': [Required] A hexadecimal block number, or the string 'latest', 'earliest' or 'pending'. Refer to the default block parameter.'show transaction details flag': [Required] If set to 'true', returns the full transaction objects. If 'false', returns only the hashes of the transactions.Response{ ""jsonrpc"": ""2.0"", ""id"": 0, ""result"": { ""number"": ""0xfd2ff7"", ""hash"": ""0x7de9c923b2eab68a6a750fbe321638387911e9d02bda4671fa89e38999adbab1"", ""transactions"": [  ""0x5ef7a16854a865e9b23ddc20162bd5de95f2d00bd8049e19bafe54b1faf83dbe"",  ""0x2375160fcf98d944393f3ed5f32e592cde0744f8bae4e067ead362cbf0e30600"",  ""0x15e24a6116a6ab83318755bcf24b61ab893150fab720d930867510ae936ee94a"",  ""0x61be6237d1b6a4bd8e85f90a11370c9e9b88b5befa0fe8e061eb637e03eb3283"",  ""0xb8a056bfb2bebb7f5aa3ba3190f9cc3e541500cfcc2353323988c2d3f03b545e"",  ""0xb48cf97147cf598503c65c56d1b24360f2fd5907cf7bd059046c0cf1d2c32d50"",  ""0x3f89662ca3eed8756350b5fd371a905eca77ac7847c7a7e4d57d0ed574232095"",  ""0x86aa75ded10e74f555f92b36a910b0a8b89dbf7031a8547455f8a4fc8bdbb959"",  ""0x0434360c5d00b6d9f035c3dc46a6c6b244f9d73c5204469afd4d07aa06d6e05e"",  ""0x98c4bee5092d0515145b989fe05646462012f75887935a411b87834a9d1badd0"",  ""0x1b9e55da3b0895d0d3d38433cb1aab0137010781407c5ce684a1ea2433255c8f"",  ""0x9a883c8f1cddc0b157873996b9d93ea992516fcd08575bff575866d437ade261"",  ""0xbd4ba4b061241e2c832c9c3f8dd8840b669edd904a9d7f469fc5696c75097d2f"",  ""0xac2a8770f6dff665c05656ab6c23c07f787dd67ed36baa186d45c0d2c5fc75a3"",  ""0xb772449e118039fd1c23e5a5496458fc58eeb0dc86c23ddf73642080bfc9f396"",  ""0xdb15e8d1547ac7236ed7651fc30d4ff9b84feef4c296f4a8e757a3fd94847390"",  ""0xffc484ea4dc64bfa564e8385b037f9aa4e91336efb1e296a3f9a96f7b3e5d62c"",  ""0x154a164ce1231f5bebb731000dc2ae71c7c7ed202b30edc555342cdbca95841b"",  ""0x6b7cff7b01fa6f2b6733f22e990a47ee38c7881dee4570a81847b7c195bec1c5"",  ""0xd60ac2787ab0763c2d3a1ba843abdea010693b9ab21943cd0cdf462babccfcc8"",  ""0x5364376ab0bcd562e4855d7008fc8e51126a91d38e7675f88cef21ed67ce9782"",  ""0x52c97ba1c217065b0d817a3fdb31ddf2388587110e11cbdd4040ce8e58ad5e75"",  ""0x17b293e5bc0df7b70f223090b9db2efa34b930852a7880b676c258100347324f"",  ""0xe9d761ae0868e85d9be233db83da7ff369054130405e284e324e29a3f1877fd8"",  ""0xaedec65ecec35567d86198c019e3cedc21c9180709df5894036880a445a4d00d"",  ""0x4c8384e5231553ae5dd1f3009e4f0b16ee0e66128b9aa64ec2140de2aff931bc"",  ""0xb80c9c256c5999e0b19202fe9dd53f6ace46cc45b91e6c2b0232fba524c77694"",  ""0xb0a594a39ca16a00713f6a69610e94b9109f72283bd5e9f5562df4c736a85e60"",  ""0xdc8e6073e05fb9f07e8785c8fc024ad869fa12bbd3af139990c1c5b5d36fa148"",  ""0x1132ba664b5e70d50d1d724665620ee5f8535e41dbfde257b3cef44bbb4d677f"",  ""0x5e9c5e27f30f635bf323c4d8fa0cdc96af71157bad0e040bc15c304480eb978b"",  ""0xecdb5eca4b543393d9556467ab83c62fd56772175d4260495c10ae05a3813b0c"",  ""0xb99df146e291550db2ddfd757b912726be84e2ca2f8e52b87a3e297ff1c858f2"",  ""0x07108cc985c5e8609cdd9b159205ac0120a53b6f50384a5ac38441e7e779544b"",  ""0x2919b22b1d9cb9097ee8ffda4350bc4df300130ff9f772baf89a1b9fe324025d"",  ""0x3151778fd2eeff55c0b0ce517c231451f192dabcf95d049273f5940f104aa683"",  ""0xd38f7e032cb46e0d45d23d761a79b935b0e75bbf95a9f8b672435965be42d4f9"",  ""0x89f551c80a4483b68d98bc5649b6864d6398e4aa3bb84b3663f788604f4cb50e"",  ""0x5cb5e0185842f155ca0081e199c926d34e0ea04db4605aee95653f62969ef000"",  ""0xac418446c571331b9b7d2e9f054188a5d5500b37c40ecbf1843915151e67c4fe"",  ""0x8be7c1de80a2d6b35ce6436a6bade11f05cb1dbf18a0a4512bdb0a330ba77a4e"",  ""0x0df92f3a8595bad77b8126892cbbd53a20a18ca8bd2cf6e2ef134eb057e6b946"",  ""0xe825326abe360ce1ab0e578c60c265422155b2800cbdcadb5655013594027d05"",  ""0xd8eb9ce3b054a93cb7d72c6838f52101d294a60033b5a5be6e3fc95e5e24b581"",  ""0x8154296da735de7599c3e722abd1b8f59574c0c68d415e8336116eb0639f70e8"",  ""0xb631f6fc4627801b5e27f25427ddc82a27e673e8846c6e52a1aeaa52fea5a70a"",  ""0x583070021ecda366a2528df7f8997ef9d83970c774b86d620b8feb8540b15868"",  ""0x62f56c791e641571ddba9fab307aedf9e5ac450b4dec6f7dce4ec2c84923f4ce"",  ""0x2db22f4140a5efe5888a19b1f951b55fb63dc422cd1c96f7c8c46f9cbcd5c156"",  ""0x86d0377c418dfac6b7b68b849516701f4a8970974624ba72307b1bbf55ea7d5f"",  ""0xe2c41fea29efde93377413759752c90f06f5588611d93e1dac08da0ee7b21c1a"",  ""0xde077c5db3b02fc112d1f1f4e0ddc0921b1877e67bacd7d70a836a6f53b1b7d2"",  ""0x29629a3d613dd6001cf372d1b3b78bd282920f7ff841ababe47ed07185b20e78"",  ""0xa0f920f890373e2eadbc62f416de85ad1c176020658f9acd01d606562433158e"",  ""0x7c6cbad39fb53c8c5e9116c30ca4a4a8149c722b7f38d465f4229c51a1713b08"",  ""0x63b5fc7dbaec3f5efeab83d65c65a0d16b04861494c882bbb1ab3acf914a2b4f"",  ""0x936057a4ca0df9f68cc99b2946668e561ce20da17a6ce11fd650d53fff036387"",  ""0x2e07d1f9ecff190dcc7fa26d01ac0c5fa52b491866f0d01e53f677957bafbebc"",  ""0xf217c798876f724f7e717d97c5a7d4fac57f12835015954bd59505ccb2540651"",  ""0xb948475e7a69fb3baff273bc3c0f82c06d8ffee27b9257dd5af7315c6e06fb9d"",  ""0xe66b96af88fa9ebf776e0d76396c232085eec6a87c31d1d3c73cd88382acc233"",  ""0x1a092224f2bc78542e03e2109942f77b6505be901c88b59301d84c187f474869"",  ""0x616ce7c137dd42e8d74b1a71d1c3f710d77ee476b64630af9aa578040c673fc6"",  ""0xfa3a71ead49f7d33f90c688c65eae3b4c97ef7c2939bad9ef9542c90d8a520ab"",  ""0xcd2c66955a34adf03f9f2ab61e25a23df8f46d32cb191eff0aff0b130b3e8f3a"",  ""0xc8dc0e621967852290004d1a0100119e9ad07f991b9ac27a495d73ef6d5ec362"",  ""0x51b0df9351c492797a7ecd45a83e23db8edf2d9af99f7a8eb55b07bb6265e130"",  ""0xf4da6d54bfb330286fd171a6df91dcf49b3b7e6a8e1f5c97c24d6de93b1f8849"",  ""0x773782c7fa4c3c2068ef52c1526eb35318eb1ba80703dd6049a0c4c1b8c1ec52"",  ""0x43aac532b488f7b5cf4d5432096b755f9fd41edc48b74d9948281ec4d687f9d7"",  ""0x9d5eed4c7d165d2966d08f840cc73083931875ceece94f4f99503671507ca8f6"",  ""0x27f0b266d0250780f2b4a69ab56d95e670acbad6a4cce55ce6b98e7ffa7098a8"",  ""0xbf10d5592f072d8cafc471d569acddbbb5bae414096dbb283746f3520bd7a705"",  ""0xadf5125e98d3a89c1a96c002ac0d21e54dfa3c5bd28444310c7e55ba7968fb1b"",  ""0x3edd96fbc8efc46fdd83759a2236c220c880662e8c9ebd6ba98b5591d5f99540"",  ""0xdd591f37dd661a56890b45af77cafe5599ae501c8258dc0ba25b1150a540b894"",  ""0x8f269da6d10c62163678543a937559fcd0d821a61c1a2e50317943a630e794f7"",  ""0xcf02af1b4ce278ea7e60de23440249b1370e36452cc5cc5d5b342e05016ab7a8"",  ""0x321e27efec157799993f1b423b45852fea954ce690944d8a1cf10f3e9ec6da1a"",  ""0xf0e4e7302e960a982661396a789b03447d9090ef0fda2baf25a7f4cc64291680"",  ""0x630290112c2e23f7237255bf1d2f00680338f8ed27c58a231cde8912c9622963"",  ""0x537e8fb57be0dbdb18172085aa9a7d1fadbdc941c19e213c481d007984d2312b"",  ""0x716a2b4d87f4f4905707e305fd48fdfec142ad9001edfe9055d0b92e3e4731be"",  ""0x7985fd28ee75590ca17abcef39acfd7572ea533629d735fcbc553875e75dc279"",  ""0x0b8ce62605de616b4259b3855132fefd4e54d8f8a5f7be2b8c413125841ffaa6"",  ""0x34afe95fc45615578273e644e30542002ee67d63a14b00b17f8d693a1a819b1d"",  ""0x822d5825c9d6af2d5052ea82443238a5e51b869fa9c44256b196bbf9c64a801b"",  ""0xc088eae280ee3ee92dc27661e58955717052e41342addc7b85279d35a0d225dc"",  ""0x8136d771e25f16821f4e917ea50714d09a1a95f8b7ec12db4ccb48494a153858"",  ""0xe811d264c8327280434a8e08d210c1c8d4aeca0f1c7ee4e6059d6d0a80233bc6"",  ""0x02ba41537fdfc4fa40a074da7ad3191c67978c6ecd96045a2f812bc98eb9a403"",  ""0xc1199a03e472a7656c2f0554d2924c56cf85027d4bad6666fdf1a042555ad4d2"",  ""0x67f47ed37a844e29d2a842e24893c1ec8cf4fecd580416e63c2fb729dce055af"",  ""0x280c108993984f0f782ccf0f12492b9e0ba0fb86c47556d20e9541e2f201c6c8"",  ""0x014be7f1b148508cdb6539b657ea545a683fcf5ff0b9c523b1272b9d840dadb4"",  ""0xd0680f3ab906995e5aeba7bec4e44cf9e2da3d9ef5382d99075870e9fea22979"",  ""0xef6332d1192e411a82792c0198dc45f4ad0091defa3028a2a8c299cbd43abddf"",  ""0xcf5b9e45c19510125857c3e563b457ee62396a50f1af90136349281821fa6c90"",  ""0xbddfb9d3f26389ada212e2336edb4ca73be183830231376727c2cb40894b5b3a"",  ""0x8780abcbfae42f2468acd4e306b02cb6b8043bdc7c2db0f8e68f873048e59abb"",  ""0x3fea86657164c98324299cfa8bc97436af531e42dfa565b9d6992f460a6f62dd"",  ""0x0c1c38c6a6a9e9b9fd41221c1f1d366f310d8da55366daf6eeb6ff529c4266fd"",  ""0x70fc2bdb1a88ad5f2d3923db4ce669ebc4d774e4f09796627133626f7549cc6f"",  ""0xe5a82deb1d7a8fc0a7b728717a6cf381c33a5278c27454be2738c7b6da50caed"",  ""0x796aff156d6b31441085167f752cecf49573f857e7cdd2510ec75b0625e7f3d7"",  ""0x39c0c61bab408118c34f1779933541ee1bfd77d4bc966209c05c22d9c625db37"",  ""0xdba9172649edbddddd527c8e4753dc901d81ddfd9ac02e4f2ab39f54c42be155"",  ""0x4b20c0e431121577038f900312a1ff4fb7db82693bef615432a3272754efa7b5"",  ""0x7af243172a64fb168f9e0a7ec7f9689fad37a33ef2a9ab38f2d99dfc198aa65c"",  ""0x93a1f449d2ebb401aac875bd7a6d33333d51039d6b7ff414be89aa1413b8f832"",  ""0xfa594ef4d1fbde2f95f5cdcb3586c602d773049c507aaba046d38544200abfc9"",  ""0xfa9aa04c374286648efe0f4e8ecccebeda80458bba5e650f830e23e6c5469e6f"",  ""0x2b2fd61a6fc1798e6185fbd7e3ccf5e4709cac2e4490d10ccae90f4a7af89a59"",  ""0x9eb284d3ddef9fb8b253d5739ecb61f37791309e48b201b83c39c30d36301245"",  ""0xa4ad2607dd621a05c6e834e9ddffa93b753a6f8acf77bef929a7d560eb5c56ba"",  ""0xedb71f387dcbf24a4a0d3fbfe7d83094d163d5f2d4d3e0be7791a317730c5a69"",  ""0xcf8263887b2651a5e5c54a82e3f03845ad5f3637f94004e740af3c334341789d"",  ""0x173819e7fc06c601c91600e72db71bf9b0e668f16d6ce0e3fa341ab22d6275d2"",  ""0x067d71bd57d83d4ed7ca13193e2c5c6c74aefe2fae0cbc852cfdc009fc2793e3"",  ""0x4dc5f11b6b82d0aa00d9efde578b6c465f5954b1e93428d9b0b98079108b1a8c"",  ""0xffc890c290afd0ba7b8bd64254a0ab9465e9f0eb20c90572d12909104735af35"",  ""0xec3d4f252a9c0031a34443b50e7bdeb9cc1541f22568c2f2009682adf2d8c8c9"",  ""0xe6ccd2ef8339ae6c9f875dc22154b5657f9748cb22add25938c6b5080ff7c8f5"",  ""0x7d7491d17f005c96c2fc27fea3dc45cc384c2d2e7db59bc2be129b67aae12640"",  ""0x0c5062dc7084f0cf21616f654d2ec4e595c4da36bb3694b505242cec1076291c"",  ""0x4d3dae949cfbefcffa7904f7b25eaa837692ac51df20919f2219da40e7db4087"",  ""0x46838953c2b6136eafcbe3db9bf4a852e61c400a57f5e8780e5ff54f450f1baf"",  ""0x09c0e6d2f37ec85a3cded264c03c50e37b326916314ed27e1adfb05a0c8fbf52"",  ""0xb0c1c427d35702e39e63f516ba2e1aa9611afbf39d98e95aa28d81878090ca9c"",  ""0x81f0179706708dfa0a021b54f073847a6bfdc51806f3da34df6bf03b77065279"",  ""0x203a0a172e3fb98bac947f615c6ed23b662a9a280572da370391c8d12602874d"",  ""0x1adbcb3c83dc4c2121ca2f0932f8ccbb7b02f50ffe324eb6fc1799a3bd132cac"",  ""0x902f78c49a953da4065ba81443a6041934a7b82909b9aa6f80664fc0f6d3747b"",  ""0x4c090e5dd25fcdbb18592e0e36ab284a8262c145df8b344d22fb1542789f928a"",  ""0x0e60f81949852644b55fc71c64cb38ba34b8063753651fb293bbcee2cbb7de18"",  ""0x48657c3fbd3651dd558617ec3dbeb2721db645d6acad754b72defc0e0dba2e71"",  ""0xa65e2c4cd74da914034e865a3872008b8bc003dc2371f85db996e3345e9a8d4f"",  ""0xe9f0d14895c2cdfaef85d81efba9cb856a9686026580e173dd8a77fd93e668a9"",  ""0x335dabe9cf4743219f7e46cf56fb93b2bc391aaf3490244757f95baa0f5cb3ee"",  ""0x53184e8914333ccfa5cbd79104381dc8b0970425b37647d933f6fded0cd20512"",  ""0xdcb8c4b03eeb541fcf62b27339bfd7887a9072fdad2604fe8c201e42396a8c1c"",  ""0x92cc5b4c23c52ccb7e13e696131140f8123e3e084042cddbd4589269f7bcad73"",  ""0x8c51a81f08f88a9a4fead2fa44b4d2d01afd8df88ae5b9aed48836109998977e"",  ""0xa3cda8c96c9d6744b4e41478cfeed3b1ea8e59d0e02925d81796db222ed0322d"",  ""0x5b766fe54639a3f44fef92a5d2a1543fdd64da9417dd0ead97fa59ac19b4271d"",  ""0x8e8135278dd8bff8bc00ab5060e8f99d2fd7c6c3913cedc74d0599babb793a86"",  ""0x92d703b46d8a631b24f9407ea840cb24909f3f51c2e3352d848a4a7f1c2aea0b"",  ""0x10c5f8dcaf6539dcceeaa40cd1f2a179fe9107f17d7bd26b7da8c24175a780a6"",  ""0x347d5f17889d8f8cf2653791bfb55808df04b74450481e96b9221ba8933394ca"",  ""0xc258a2fa2fbcb770b09f7cc67da2844b7d4cfbfe66e22fc16675f8068ac59570"",  ""0x04cded61939429fc52f73b47e364920e56d8e884035dfb3f1cc2bd299150c577"",  ""0x8c898b5ca0fd1f50a1ec9b98137031c55db88ec2ce63fdcd146f8cfe13c67905"",  ""0xaaeae1a476621d0c759c42fbe054b064820b6d5474118a25cd033ccaebbd66be"" ], ""difficulty"": ""0x0"", ""extraData"": ""0x506f776572656420627920626c6f58726f757465"", ""gasLimit"": ""0x1c9c380"", ""gasUsed"": ""0x1c92f0c"", ""logsBloom"": ""0x02b429414c945297cb070e118446c367d7330231d91882e75081760002280108d0dd65740001018a325e8408692c0a1e42120382294820010e64170820b681c4851806b10105e33c201efcb885b1257ebd1129bb996288090814848010482a3913104120cb0a714c4405042129084861c37e28858c808440474084ba810cc89c905a2a063143730f20591321610e0a43a90534dea25050fc9920a870293810a88f21bf908858c51c8062c8f271168111ca535e808ed18ca36c023082d682d8e4e64181270670302a4924f8435805521a005e20e60dc89014af2a886e5de56b76dc1fa3ea3943a220021c300747414c1009ba48220ad81c4082859290206115c1"", ""miner"": ""0x388c818ca8b9251b393131c08a736a67ccb19297"", ""mixHash"": ""0x844a8382c76346a82e69c8f81a0fdb10f9a6c57a5de95df42857184593e675be"", ""nonce"": ""0x0000000000000000"", ""parentHash"": ""0x6f207bcfe8afb73f9b21fc8bb2ad36724d4f46aedf63bc6f0341002688493c99"", ""receiptsRoot"": ""0x36bc53a918e7a802324af5f76380536caaeb52c3a6d6c0ab6a73ab7d1643a773"", ""sha3Uncles"": ""0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347"", ""size"": ""0x6520"", ""stateRoot"": ""0x51b6d009dbd487d279a2efdc3385ef38cec4124e5a700da200d01062fad3bb16"", ""timestamp"": ""0x63e536bb"", ""totalDifficulty"": ""0xc70d815d562d3cfa955"", ""transactionsRoot"": ""0xb131c71d64da16a3ac789decc230fe6d565571b8c6d89991582e338711bee223"", ""uncles"": [], ""baseFeePerGas"": ""0x120e61b4c1"" }}A block object, or null when no block was found. The returned block object contains the following keys and their values:'difficulty': A hexadecimal representation of the difficulty for this block.'extraData': The ""extra data"" field of this block.'gasLimit': Maximum gas allowed in this block.'gasUsed': Total gas used by all transactions in this block.'hash': 32 bytes. Hash of the block. Null when the returned block is the pending block.'logsBloom': 256 bytes. The bloom filter for the logs of the block. Null when the returned block is the pending block.'miner': 20 bytes. Address of the beneficiary to whom the mining rewards were given.'nonce': 8 bytes. Hash of the generated proof-of-work. Null when the returned block is the pending block.'number': Block number. Null when the returned block is the pending block.'parentHash': 32 bytes. Hash of the parent block.'receiptsRoot': 32 bytes. The root of the receipts trie of the block.'sha3Uncles': 32 bytes. The SHA3 of the uncles data in the block.'size': A hexadecimal representation of the size of this block in bytes.'stateRoot': 32 bytes. The root of the final state trie of the block.'timestamp': The unix timestamp for when the block was collated.'totalDifficulty': A hexadecimal representation of the total difficulty of the chain until this block.'transactions': [Array] An array of transaction objects, or 32 bytes transaction hashes depending on the last given parameter.'transactionsRoot': 32 bytes. The root of the transaction trie of the block.'uncles': [Array] An array of uncle hashes.Was this section helpful?12345Previouseth_getBlockByHashNexteth_getBlockReceiptsOverviewRequestRequest ParametersCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_getBlockByNumber)"
213,i.io how to guides get symbol funding rate metric data,"i.io how to guides get symbol funding rate metric data.   Get symbol funding rate metric data using CoinAPI | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesAcquire exchange rates with different programming languagesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPICreating a historical crypto price chart using CoinAPI and D3.jsFetching market data with KNIMEGet Historical OHLCV Data Using CoinAPIGet symbol funding rate metric data using CoinAPIImport API into PostmanImport data to Google Sheets/ExcelReal-time data visualization with javascriptReal-time trades stream using WebSocket with different languagesRetrieve and analyze crypto order book data using a cryptocurrency APITrading Essentials: QuickstartMarket Data APIEMS APIFAQCustomer PortalChangelogHow-to guidesGet symbol funding rate metric data using CoinAPIOn this pageGet symbol funding rate metric data using CoinAPIThis comprehensive tutorial guides you through the process of retrieving current metric data from the example exchange using an API. Whether you're a developer, data analyst, or trader, having access to real-time metrics is crucial for making informed decisions.Introduction​The API we'll be working with provides access to a wide range of real-time metrics for various symbols and exchanges. You can use this API to fetch current metrics for specific metric identifiers, symbol identifiers, and exchange identifiers.Understanding the API Endpoints​Let's dive into the details of the API endpoints that allow you to access current metric data:/v1/metrics/symbol/listing​HTTP Method: GETSummary: Listing of all supported metrics for symbolDescription: This endpoint enables you to retrieve a comprehensive listing of all the supported metrics available for a specific symbol. It's a valuable resource to understand the types of metrics you can access.Parameters:metric_id (query): Metric identifier (type: string)exchange_id (query): Exchange identifier (type: string)symbol_id (query): Symbol identifier (type: string)Responses:200: Successful operationtext/plain, application/json, text/json, application/x-msgpack: Array of ListingItemExample Request:GET /v1/metrics/symbol/listing?exchange_id=BINANCEFTSCThe above command returns JSON structured like this:[ {  ""metric_id"": ""DERIVATIVES_MARK_PRICE"",  ""symbol_id"": ""BINANCEFTSC_PERP_ETH_USD"",  ""symbol_id_external"": ""ETHUSD_PERP"",  ""exchange_id"": ""BINANCEFTSC"" }, {  ""metric_id"": ""DERIVATIVES_FUNDING_RATE_CURRENT"",  ""symbol_id"": ""BINANCEFTSC_PERP_LTC_USD"",  ""symbol_id_external"": ""LTCUSD_PERP"",  ""exchange_id"": ""BINANCEFTSC"" }, {  ""metric_id"": ""LIQUIDATION_AVERAGE_PRICE"",  ""symbol_id"": ""BINANCEFTSC_PERP_OP_USD"",  ""symbol_id_external"": ""OPUSD_PERP"",  ""exchange_id"": ""BINANCEFTSC"" }, {  ""metric_id"": ""LIQUIDATION_ORDER_STATUS"",  ""symbol_id"": ""BINANCEFTSC_FTS_BCH_USD_231229"",  ""symbol_id_external"": ""BCHUSD_231229"",  ""exchange_id"": ""BINANCEFTSC"" }]/v1/metrics/symbol/current​HTTP Method: GETSummary: Current metrics for a given symbolDescription: Use this endpoint to fetch real-time metrics for a specific symbol. Whether you're interested in price, volume, or other key metrics, this endpoint provides up-to-the-minute data.Parameters:metric_id (query): Metric identifier (type: string)symbol_id (query): Symbol identifier (type: string)exchange_id (query): Exchange identifier (type: string)Responses:200: Successful operationtext/plain, application/json, text/json, application-x-msgpack: Array of GeneralDataExample Request:GET /v1/metrics/symbol/current?metric_id=DERIVATIVES_FUNDING_RATE_CURRENT&symbol_id=BINANCEFTSC_PERP_ETH_USD&exchange_id=BINANCEFTSCThe above command returns JSON structured like this:[ {  ""entry_time"": ""2023-10-17T14:59:00.0828571Z"",  ""recv_time"": ""2023-10-17T14:59:00.0819390Z"",  ""exchange_id"": ""BINANCEFTSC"",  ""symbol_id"": ""BINANCEFTSC_PERP_ETH_USD"",  ""metric_id"": ""DERIVATIVES_FUNDING_RATE_CURRENT"",  ""value_decimal"": 0.00000269 }]/v1/metrics/symbol/history​HTTP Method: GETSummary: Historical metrics for a symbolDescription: If you need historical metric data for a symbol, this endpoint has you covered. You can specify the time range, format, and limit the number of data points returned.Parameters:metric_id (query, required): Metric identifier (type: string)symbol_id (query, required): Symbol identifier (type: string)time_start (query): Starting time in ISO 8601 format (type: string, format: date-time)time_end (query): Ending time in ISO 8601 format (type: string, format: date-time)time_format (query): If set, returned values will be in the Unix timestamp format (valid values: unix_sec, unix_millisec, unix_microsec, unix_nanosec) (type: string)period_id (query): Identifier of the requested time series period (e.g., 5SEC or 2MTH) (type: string)limit (query): Amount of items to return (optional, the minimum is 1, the maximum is 100000, the default value is 100, if the parameter is used then every 100 output items are counted as one request) (type: integer, format: int32, default: 100)Responses:200: Successful operationtext/plain, application/json, text/json, application-x-msgpack: Array of MetricDataExample Request:GET /v1/metrics/symbol/history?metric_id=DERIVATIVES_FUNDING_RATE_CURRENT&symbol_id=BINANCEFTSC_PERP_ETH_USD&time_start=2023-03-01T00:00:00&time_end=2023-03-10T00:00:00&time_format=unix_sec&period_id=1HRS&limit=100The above command returns JSON structured like this:[ {  ""time_period_start"": 1677628800,  ""time_period_end"": 1677632400,  ""time_open"": 1677628800,  ""time_close"": 1677632340,  ""first"": -0.00013075,  ""last"": -0.00011917,  ""min"": -0.00013373,  ""max"": -0.00011458,  ""count"": 57,  ""sum"": -0.00702479 }, {  ""time_period_start"": 1677632400,  ""time_period_end"": 1677636000,  ""time_open"": 1677632400,  ""time_close"": 1677635940,  ""first"": -0.00011952,  ""last"": -9.289E-05,  ""min"": -0.0001221,  ""max"": -9.267E-05,  ""count"": 57,  ""sum"": -0.006305099999999999 }, {  ""time_period_start"": 1677636000,  ""time_period_end"": 1677639600,  ""time_open"": 1677636003,  ""time_close"": 1677639540,  ""first"": -9.265E-05,  ""last"": -5.219E-05,  ""min"": -9.265E-05,  ""max"": -5.219E-05,  ""count"": 56,  ""sum"": -0.004191260000000001 }, {  ""time_period_start"": 1677639600,  ""time_period_end"": 1677643200,  ""time_open"": 1677639600,  ""time_close"": 1677643143,  ""first"": -5.016E-05,  ""last"": 4.839E-05,  ""min"": -5.016E-05,  ""max"": 4.839E-05,  ""count"": 57,  ""sum"": -4.3300000000000144E-06 }, {  ""time_period_start"": 1677643200,  ""time_period_end"": 1677646800,  ""time_open"": 1677643260,  ""time_close"": 1677645000,  ""first"": 5.084E-05,  ""last"": 0.0001,  ""min"": 5.084E-05,  ""max"": 0.0001,  ""count"": 29,  ""sum"": 0.00223415 }]Best Practices​To ensure a smooth experience while using this API, consider the following best practices:Secure Your API Keys: Always store API keys securely and avoid hard-coding them in your code.Rate Limiting: Be aware of rate limits and handle rate limit-exceeded responses (HTTP 429) gracefully.Efficient Data Fetching: Use query parameters effectively to retrieve the data you need without unnecessary requests.Troubleshooting​If you encounter any issues while working with this API, here are some troubleshooting tips:API Key: Ensure your API key is correct and has the necessary permissions.Rate Limits: Stay within the rate limits for your account type to avoid rate limit exceeded responses.Endpoint and Headers: Use the correct endpoint and provide proper request headers.Parameter Validity: Verify the validity and format of symbol and period IDs.Dependencies: Ensure you have the required libraries or dependencies installed.For more detailed information, refer to the API documentation.Was this section helpful?12345PreviousGet Historical OHLCV Data Using CoinAPINextImport API into PostmanIntroductionUnderstanding the API Endpoints/v1/metrics/symbol/listing/v1/metrics/symbol/historyBest PracticesTroubleshootingCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/how-to-guides/get-symbol-funding-rate-metric-data)"
214,i.io how to guides real time trades stream using websocket with different languages,i.io how to guides real time trades stream using websocket with different languages.   Page Not Found | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyPage Not FoundWe could not find what you were looking for.Please contact the owner of the site that linked you to the original URL and let them know their link is broken.Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/how-to-guides/real-time-trades-stream-using-websocket-with-different-languages)
215,i.io naas api ethereum Methods eth gasPrice,"i.io naas api ethereum Methods eth gasPrice.   eth_gasPrice | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_gasPriceOn this pageeth_createAccessListOverview​The 'eth_gasPrice' method returns price per gas in wei currently.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'content-type: application/json' \  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data '{ ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_gasPrice""}'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_gasPrice\""}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [ CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"", CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => """", CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 30, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => ""POST"", CURLOPT_POSTFIELDS => json_encode([ 'id' => 1, 'jsonrpc' => '2.0', 'method' => 'eth_gasPrice' ]), CURLOPT_HTTPHEADER => [ ""accept: application/json"", ""content-type: application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" ],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) { echo ""cURL Error #:"" . $err;} else { echo $response;} ?> import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_gasPrice""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text) const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({id: 1, jsonrpc: '2.0', method: 'eth_gasPrice'})};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_gasPrice\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))} require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_gasPrice\""}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();{MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_gasPrice\""}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();}Request Parameters​None.Response​result: Returns integer of the current gas price in wei.Was this section helpful?12345Previouseth_feeHistoryNexteth_createAccessListOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_gasPrice)"
216,i.io cdn cgi l email protection#d0a3a5a0a0bfa2a490b3bfb9beb1a0b9feb9bf,"i.io cdn cgi l email protection#d0a3a5a0a0bfa2a490b3bfb9beb1a0b9feb9bf.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 8aad26eaac9ab33f •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#d0a3a5a0a0bfa2a490b3bfb9beb1a0b9feb9bf)"
217,i.io ems api fix messages,"i.io ems api fix messages.   Messages | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIREST APIWebSocket APIFIX APIMessagesSelf Hosted GuideFIX APIMessagesOn this pageMessagesThis section will provide necessary documentation for the FIX protocol messages.New Order Single 35=D​FIX Field NameWebSocket Field NameDescriptionClOrdIDclient_order_idThe unique identifier of the order assigned by the client.ClOrdLinkIDclient_order_idThe same value as for ClOrdID.ExDestinationexchange_idExchange identifier used to identify the routing destination.SecurityIDsymbol_coinapi or symbol_exchangeCoinAPI or Exchange symbol, depends on the value of SecurityIDSource <22> typeSecurityIDSourceN/AIdentifies source of the SecurityID <48> value. 8 = EXCHANGE, 101 = COINAPISymbolThe same value as for SecurityID.TransactTimeN/ATime this order request was initiated/released by the trader, trading system, or intermediary.OrdTypeorder_typeOrder types are documented in the separate section: EMS / Starter Guide / Order parameters / Order typeSidesideSide of order.PricepriceOrder price.OrderQtyamount_orderOrder quantity.TimeInForcetime_in_forceOrder time in force options are documented in the separate section: EMS / Starter Guide / Order parameters / Time in forceExpireTimeexpire_timeExpiration time. Conditionaly required if TimeInForce <59> = GTDExecInstexec_instOrder execution instructions are documented in the separate section: EMS / Starter Guide / Order parameters / Execution instructionsOrder Cancel Request 35=F​FIX Field NameWebSocket Field NameDescriptionClOrdIDN/AUnique ID of cancel request as assigned by the client.OrigClOrdIDclient_order_idThe unique identifier of the order assigned by the client. One of the properties (OrigClOrdID, OrderID) is required to identify the order.OrderIDexchange_order_idUnique identifier of the order assigned by the exchange or executing system. One of the properties (OrigClOrdID, OrderID) is required to identify the order.SecurityExchangeexchange_idExchange identifier used to identify the routing destination.TransactTimeN/ATime this order request was initiated/released by the trader, trading system, or intermediary.SideN/AThis value is ignored.SymbolN/AThis value is ignored.Order Mass Cancel Request 35=q​FIX Field NameWebSocket Field NameDescriptionClOrdIDN/AUnique ID of Order Mass Cancel Request <q> as assigned by the client.MassCancelRequestTypeN/A7 = Cancel all ordersSecurityExchangeexchange_idExchange identifier used to identify routing destination.Execution Report 35=8​FIX Field NameWebSocket Field NameDescriptionOrderIDclient_order_idUnique identifier of the order as assigned by client.SecondaryOrderIDexchange_order_idUnique identifier of the order assigned by the exchange or executing system.ExecIDN/AUnique identifier of execution message as assigned by sell-side.ExecTypeN/AI = Order Status. Describes the purpose of the execution report.OrdStatusstatusOrder statuses and the lifecycle are documented in the separate section: EMS / Starter Guide / Order LifecycleSecurityIDsymbol_coinapi or symbol_exchangeCoinAPI or Exchange symbol, depends on the value of SecurityIDSource <22> typeSecurityIDSourceN/AIdentifies source of the SecurityID <48> value. 8 = EXCHANGE, 101 = COINAPISymbolThe same value as for SecurityID.SecurityExchangeexchange_idExchange identifier used to identify the routing destination.SidesideSide of order.OrderQtyamount_orderQuantity ordered.CumQtyamount_filledTotal quantity filled.LeavesQtyamount_openQuantity open for further execution. LeavesQty <151> = OrderQty <38> - CumQty <14>.Was this section helpful?12345PreviousFIX APINextSelf Hosted GuideNew Order Single 35=DOrder Cancel Request 35=FOrder Mass Cancel Request 35=qExecution Report 35=8Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/fix/messages)"
218,i.io naas api ethereum Methods eth syncing,"i.io naas api ethereum Methods eth syncing.   eth_syncing | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_syncingOn this pageeth_syncingOverview​The ""eth_syncing"" returns an object with data about the sync status or false.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'content-type: application/json' \  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data ' {  ""id"": 1,  ""jsonrpc"": ""2.0"",  ""method"": ""eth_syncing"" }'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_syncing\""}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [ CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"", CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => """", CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 30, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => ""POST"", CURLOPT_POSTFIELDS => json_encode([ 'id' => 1, 'jsonrpc' => '2.0', 'method' => 'eth_syncing' ]), CURLOPT_HTTPHEADER => [ ""accept: application/json"", ""content-type: application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" ],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) { echo ""cURL Error #:"" . $err;} else { echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_syncing""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text)const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({id: 1, jsonrpc: '2.0', method: 'eth_syncing'})};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_syncing\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_syncing\""}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_syncing\""}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​Response​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": false}Was this section helpful?12345PrevioussubscribePendingTransactionsNexteth_uninstallFilterOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_syncing)"
219,i.io naas api ethereum Methods eth getCode,"i.io naas api ethereum Methods eth getCode.   eth_getCode | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_getCodeOn this pageeth_getCodeOverview​The 'eth_getCode' method returns the compiled byte code of a smart contract, if any, at a given address.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'content-type: application/json' \  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data '{ ""id"": 1, ""jsonrpc"": ""2.0"", ""params"": [ ""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8"", ""latest"" ], ""method"": ""eth_getCode""}'using RestSharp;var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8\"",\""latest\""],\""method\"":\""eth_getCode\""}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content);<?php$curl = curl_init();curl_setopt_array($curl, [CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"",CURLOPT_RETURNTRANSFER => true,CURLOPT_ENCODING => """",CURLOPT_MAXREDIRS => 10,CURLOPT_TIMEOUT => 30,CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,CURLOPT_CUSTOMREQUEST => ""POST"",CURLOPT_POSTFIELDS => json_encode(['id' => 1,'jsonrpc' => '2.0','params' => ['0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8','latest'],'method' => 'eth_getCode']),CURLOPT_HTTPHEADER => [""accept: application/json"",""content-type: application/json"",""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY""],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) {echo ""cURL Error #:"" . $err;} else {echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""params"": [""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8"", ""latest""], ""method"": ""eth_getCode""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text)const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({ id: 1, jsonrpc: '2.0', params: ['0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8', 'latest'], method: 'eth_getCode' })};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8\"",\""latest\""],\""method\"":\""eth_getCode\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8\"",\""latest\""],\""method\"":\""eth_getCode\""}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8\"",\""latest\""],\""method\"":\""eth_getCode\""}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​address: [ Required ] A string representing the address (20 bytes) of the smart contract, from which the compiled byte code will be obtained.block number: [ Required ] A hexadecimal block number, or the string 'latest', 'earliest' or 'pending'. Refer to the default block parameter section for more details.Response​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": ""0x""}The compiled byte code of the smart contract at the given address.Was this section helpful?12345Previouseth_getBlockTransactionCountByNumberNexteth_getFilterChangesOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_getCode)"
220,i.io naas api bitcoin Methods getmempoolentry,"i.io naas api bitcoin Methods getmempoolentry.   getmempoolentry | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetmempoolentryOn this pagegetmempoolentryOverview​The ' getmempoolentry ' method allows you to retrieve detailed information about a transaction in the memory pool. The response includes various details such as transaction size, weight, fees, and more.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --body-data '{""jsonrpc"":""1.0"",""id"":1,""method"":""getmempoolentry"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\""jsonrpc\"":\""1.0\"",\""id\"":1,\""method\"":\""getmempoolentry\"",\""params\"": [ ]}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""1.0"", ""id"": 1, ""method"": ""getmempoolentry"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection(""mainnet-bitcoin.node.coinapi.io"")payload = json.dumps({""jsonrpc"": ""1.0"",""id"": 1,""method"": ""getmempoolentry"",""params"": []})headers = {'Content-Type': 'application/json','accept': 'application/json','X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}conn.request(""POST"", ""/"", payload, headers)res = conn.getresponse()data = res.read()print(data.decode(""utf-8""))var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""1.0"", ""id"": 1, ""method"": ""getmempoolentry"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""1.0"",""id"":1,""method"":""getmempoolentry"",""params"": [ ]}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({""jsonrpc"": ""1.0"",""id"": 1,""method"": ""getmempoolentry"",""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""jsonrpc\"":\""1.0\"",\""id\"":1,\""method\"":\""getmempoolentry\"",\""params\"": [ ]}"");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​transaction_id (string): The ID of the transaction you want to retrieve information for.Response​{ ""vsize"": ""numeric"", ""weight"": ""numeric"", ""fee"": ""numeric (DEPRECATED)"", ""modifiedfee"": ""numeric (DEPRECATED)"", ""time"": ""numeric"", ""height"": ""numeric"", ""descendantcount"": ""numeric"", ""descendantsize"": ""numeric"", ""descendantfees"": ""numeric (DEPRECATED)"", ""ancestorcount"": ""numeric"", ""ancestorsize"": ""numeric"", ""ancestorfees"": ""numeric (DEPRECATED)"", ""wtxid"": ""string"", ""fees"": { ""base"": ""numeric"", ""modified"": ""numeric"", ""ancestor"": ""numeric"", ""descendant"": ""numeric"" }, ""depends"": [""string""], ""spentby"": [""string""], ""bip125-replaceable"": ""boolean"", ""unbroadcast"": ""boolean""}Was this section helpful?12345PreviousgetmempooldescendantsNextgetmempoolinfoOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getmempoolentry)"
221,i.io market data rest api order book,"i.io market data rest api order book.   Order Book | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcvOrder BookGet current order book Current depth of the order book Historical data Latest dataOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIOrder BookOrder BookThis section describes calls related to order book data, also known as books or passive level 2 data.infoWhen requesting current data for a specific symbol, output is not encapsulated into JSON array as only one item is returned.infoGET /v1/orderbooks/current endpoint is charged one request per 100 data points returned after applying a filter defined by filter_symbol_id parameter. If filter symbols target more than one exchange, error is returned.infoWhen requesting current order book data limited to a single level, then quotes are actually used. This information is important from the perspective that quotes data could be faster than order book data (behavior is dependent solely one the data source) and they can have the size equal to 0 when the size is unknown. Some data sources publish order books and separately quote data (without the sizes) at a higher frequency. In that case, we will merge the order book feed with quotes feed to make sure that our updates are as fast as possible. The quotes will have the size equal to 0 as the value is unknown and the customer can decide if these higher frequency updates without the sizes are valuable or if not then can discard them or ask for at least 2 order book levels (in case of a REST API call). For the data sources that publish order books only or order books and quotes with the sizes then this will not happen.📄️ Get current order bookRetrieves the current order book for the specified symbol.📄️ Current depth of the order bookRetrieves the current depth of the order book for the specified symbol.📄️ Historical dataGet historical order book snapshots for a specific symbol within time range, returned in time ascending order.📄️ Latest dataGet latest order book snapshots for a specific symbol, returned in time descending order.Was this section helpful?12345Previous List all periodsNextGet current order bookCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/order-book)"
222,i.io general faq account How I can update my credit card or billing information,"i.io general faq account How I can update my credit card or billing information.   How I can update my credit card / billing information? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountHow I can update my credit card / billing information?How can I change my CoinAPI account's email address?How can I get an invoice or receipt?How do I make an account?I want to change my account's name?Managing Team MembersCan I add other users to my account?How do I get an additional API key?APIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQCustomer AccountHow I can update my credit card / billing information?How I can update my credit card / billing information?Using our Customer Portal - Payment methods you can:Add a new credit cardRemove the attached credit cardSet one credit card as the default payment methodIf we need to charge your company account, then we will use the payment method marked as the default first. In the event that we are unable to complete the charge using the default payment method, then we will retry it using all other credit cards attached to the Account. After logging in to the Customer Portal (https://customerportal.coinapi.io/login) navigate to Payment Methods section. Only emails related to active or canceled paid subscriptions can log into the Customer Portal unless the Product Support Team created the Account.Was this section helpful?12345PreviousCustomer AccountNextHow can I change my CoinAPI account's email address?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/account/How-I-can-update-my-credit-card-or-billing information)"
223,i.io ems api #ems order params tif,"i.io ems api #ems order params tif.   EMS - Starter Guide | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIREST APIWebSocket APIFIX APISelf Hosted GuideEMS APIOn this pageEMS - Starter GuideThis section will provide general information about the Execution Management System API (EMS API) software product and enumerate a number of features that it provides.infoThe keywords ""MUST"", ""MUST NOT"", ""REQUIRED"", ""SHALL"", ""SHALL NOT"", ""SHOULD"", ""SHOULD NOT"", ""RECOMMENDED"", ""MAY"", and ""OPTIONAL"" in this document are to be interpreted as described in RFC 2119.What is EMS API?​Execution Management System (EMS) is a software that manages orders, executions, and exposure in an efficient, fast, cost-effective, and straightforward manner. An EMS allows you to route orders to multiple cryptocurrency exchanges simultaneously using a simple, robust, and unified Application Programming Interface (API).The software can be used in 2 different ways:Managed Cloud - Everything on our side. Hosted in the Cloud by CoinAPI. You manage the deployment using the REST API.Self-Hosted - Software on our side, on everything else.Dimension ComparisonManaged CloudSelf-HostedEase of use/installationVery easyHardTime to marketFastSlowDevOps team required to maintainNoYesOrder flow sent directly to the destinationNoYesWho manages the infrastructure (incl. monitoring)CoinAPIYouWho optimizes the latencyCoinAPIYou (CoinAPI only in software)How to installInstruct our Cloud Mgmt APIInstall on your infrastructurecautionWe recommend starting with the Managed Cloud and possibly upgrading to the Self-Hosted if the requirements of the integration/project will make that commercially reasonable.Architecture and components​A self-hosted EMS cluster can be deployed on a single server or multiple servers that will span multiple geographical locations, server sites, or cloud providers. In the Managed Cloud version, you did not care about that as we manage the server sites to be as close to the order destinations as possible.EMS consists of several components listed and ordered by dependency relationship:Exchange - Order destination, exchange, or broker.CoinAPI EMS Edge - Software that's responsible for communicating with the single specific order destination for which is deployed. This component exposes the EMS API for diagnostics purposes which functions visibility are limited to this single destination.CoinAPI EMS API - Software that's responsible for exposing fully functional the EMS API, maintaining the connection with all instances of CoinAPI EMS Edge.Customer Application - Customer software using the EMS API exposed by the CoinAPI EMS API component.Benefits and features​Low latency support​Specific projects usually involve High-Frequency Trading (HFT) or Market Making (MM) requiring low latency access to the order destination. EMS API was designed to have native support for this kind of activity.For every order destination in the cluster to which the submillisecond latency is required, these components should be deployed on a single server as close as possible to the order destination:CoinAPI EMS EdgeCoinAPI EMS APICustomer Application The closest proximity can be achieved using the:cloud region and/or availability zone the same as the destinationcollocation near the destinationcross-connect or direct-connect to the destination network infrastructureshortcutting the routers, SNAT/DNAT hosts, or proxies like CloudFlareThe cluster can naturally contain other order destinations at the same time in this setup, and this fact doesn't affect the latency to the locally provisioned destination(s).Normalized API abstraction​Our EMS API provides an abstraction layer that consolidates all supported third-party APIs into a single set of simple and robust data models and protocols. The Exchanges and the Assets are standardized using the Market Data REST API with which this product is compatible. More information about the exchanges and asset standardization can be found in the Documentation of the Market Data Product.Industry-standard protocols​Our API's can be accessed using multiple protocols widely adopted by the industry as a standard:RESTWebSocketFIX 4.4, 5.0FIXT 1.1Self-host or in Cloud​Deploy your property applications and trading algorithms in your company's collocated data centers or cloud providers if you need that, otherwise, let us manage the infrastructure and focus on using the API.Security & Privacy​Don't need to worry about the issues at the audit. Order flow, exchange API keys, or execution reports never leave your company infrastructure as the product is self-hosted.tipThe software complies with the ""SOC 2"" and ""ISO/IEC 27001 information security certifications.Multi-account support​Manage an unlimited number of exchange accounts in the cluster (for example, on behalf of your customers).SDK and samples for 40+ languages​We have the SDK libraries and code samples available for more than 40+ languages. The full list is available here: https://github.com/coinapi/coinapi-sdk/tree/masterComprehensive support​Leverage support for all market types and order types.High-quality integrations​Our integrations with third-party APIs are heavily tested and crafted with stability and latency in mind. For several third parties, we usually use multiple protocols simultaneously or tricks to acquire valuable pieces of information faster.Enterprise-grade support and maintenance​EMS product is fully supported and maintained to stay ahead of the curve. This approach offloads the often disliked responsibilities of the Software and DevOps Engineers in the organization and enables them to focus on the core business.High availability​The EMS software is designed to support high-availability deployments out of the box. For each order destination, we/you deploy multiple CoinAPI EMS Edge and CoinAPI EMS API components on different servers, availability zones, or cloud/infrastructure providers. Cluster using the service discovery backend, all components are automatically detected and interconnected.P&L and asset monitoring​Using the EMS, your organization can manage exposure and positions in real-time across all supported order destinations and build sophisticated risk management controls.Order lifecycle​This section will describe the lifecycle of the order in the EMS software.Order status description​This table describes how to interpret a specific order status.NameCan transit toStatus descriptionRECEIVEDREJECTEDROUTINGThe order is processed by the EMS.ROUTINGROUTEDThe order is (on the wire) between the EMS and the Exchange.ROUTEDREJECTEDNEWPARTIALLY_FILLEDFILLEDCANCELEDThe order has been sent to the exchange and not yet active in the order book.NEWPARTIALLY_FILLEDFILLEDPENDING_CANCELCANCELEDThe order is active in the book in its original state.PENDING_CANCELNEWPARTIALLY_FILLEDFILLEDCANCELEDThe order cancelation message has been sent to the Order destination.PARTIALLY_FILLEDFILLEDPENDING_CANCELCANCELEDThe order is partially filled and active in the order book.FILLEDThe order is filled and removed from the order book. This state is terminal.CANCELEDThe order is canceled and removed from the order book. This state is terminal.REJECTEDThe order is rejected. This state is terminal.Order status lifecycle​This table describes how to interpret transitions between order statuses and their initial values.Source StatusDestination statusDescriptionRECEIVEDEMS received a new order via the API.NEWEMS received an unseen new order from the Order destination. The order was relayed to the destination outside the EMS.PARTIALLY_FILLEDEMS received unseen partially filled order from the Order destination. The order was relayed to the destination outside the EMS.RECEIVEDREJECTEDEMS rejected the order.RECEIVEDROUTINGEMS delivering the order to the Order destination.ROUTINGROUTEDEMS sent the order to the Order destination.ROUTEDREJECTEDEMS received a message from the exchange that the order was rejected.ROUTEDNEWEMS received a message from the exchange that the order is active in the book in its original state.ROUTEDPARTIALLY_FILLEDEMS received a message from the exchange that part of the order was executed aggressively (removed liquidity). The remaining passive part is active in the book.ROUTEDFILLEDEMS received a message from the exchange that the order was executed aggressively (removed liquidity).ROUTEDCANCELEDEMS received a message from the exchange that the order is in the canceled state. The order has not been in the book as the conditions for the entry were not satisfied.NEWPARTIALLY_FILLEDEMS received a message from the exchange that part of the passive order was filled.NEWFILLEDEMS received a message from the exchange that the passive order is filled.NEWPENDING_CANCELEMS received cancel request for the order and successfully relayed it to the Order destination.NEWCANCELEDEMS received a message from the exchange that the passive order was canceled.PARTIALLY_FILLEDFILLEDEMS received a message from the exchange that the remaining part of the passive order is filled.PARTIALLY_FILLEDPENDING_CANCELEMS received cancel request for the remaining part of the passive order and successfully relayed it to the Order destination.PARTIALLY_FILLEDCANCELEDEMS received a message from the exchange that the remaining part of the passive order is canceled.PENDING_CANCELNEWEMS received a message from the exchange that updated the order before processing the cancellation request or the order cancellation request was rejected.PENDING_CANCELPARTIALLY_FILLEDEMS received a message from the exchange that updated the order before processing the cancellation request or the order cancellation request was rejected.PENDING_CANCELFILLEDEMS received a message from the exchange that updated the order before processing the cancellation request or the order cancellation request was rejected.PENDING_CANCELCANCELEDEMS received a message from exchange` that updated the order before processing the cancellation request or the order cancellation request was rejected.Order parameters​This section will describe parameters of the order in the EMS sofware.Order type​EMS supports only the LIMIT order type. Market orders don't have price protection, and because of that, they are not supported. As an alternative, you can use the Immediate or Cancel IOC order and provide the worst execution price to achieve the same result.Time in force​Time in force is a special instruction used when placing a trade to indicate how long an order will remain active before it expires.The table below describes how to interpret time in force parameter values.Time in forceShortcodeDescriptionGOOD_TILL_CANCELGTCA Good Till Cancel (GTC) is a default type of time-in-force. The order that lasts until is completed or canceled.GOOD_TILL_TIME_EXCHANGEGTTEThe Good Till Time Exchange (GTTE) time in force lets you set an expiration date and time up until which an order will be active in the book. The exchange handles the execution of the cancel originated from parameter.GOOD_TILL_TIME_OEMLGTTOThe Good Till Time OEML (GTTO) time in force lets you set an expiration date and time up until which an order will be active in the book. The CoinAPI EMS Edge sending the cancel request originated from the parameter. Worth mentioning that: (a) The cancellation request will not be sent if the software will be not be running at the time of expiration. (b) This parameter does not depend on the exchange. (c) The clock of the server running CoinAPI EMS Edge is used to trigger the cancelation request at the expiration.FILL_OR_KILLFOKFill or kill (FOK) is a type of time in force used to instruct an exchange to execute a transaction immediately and completely or not at all. This order will only remove liquidity from the order book. It must be filled in its entirety or canceled (killed).IMMEDIATE_OR_CANCELIOCAn immediate or cancel order (IOC) is a type of time in force used to instruct an exchange to execute all or part immediately and cancels any unfilled portion of the order. This order will only remove liquidity from the order book. It will fill whatever part of the order it can immediately and cancel any remaining amount so that no part of the order is added to the order book.The table below displays a breakdown of the EMS support of specific time in force values by the Order destination. Order destination idGTCGTTEGTTOFOKIOCBINANCEXXXXBINANCEUATXXXXBINANCEJEXXXXBINANCEUSXXXXBINANCEFTSXXXXBINANCEFTSUATXXXXBINANCEFTSCXXXXBINANCEFTSCUATXXXXBINANCEOPTVXXXXBINANCEOPTVUATXXXXBITFINEXXXXXXBITMEXXXXXBITMEXUATXXXXBITSTAMPXXXXBLOCKCHAINEXCHANGEXXXXCOINBASEXXXXGEMINIXXXXHITBTCXXXXXKRAKENXXXKRAKENFTSXXXPOLONIEXXXXXLMAXDIGITALXXXXLMAXDIGITALUATXXXXDERIBITXXXXDERIBITUATXXXXDYDXXXXXXLegend: X - supported.Execution instructions​Execution instruction puts restrictions on order handling at the matching engine. More than one instruction can apply to an order. The table below describes how to interpret execution instructions parameter values. Legend: X - supported.InstructionShortcodeDescriptionAUCTION_ONLYAOAn Auction Only (AO) instructs exchange that this order is for the auction only book for the next auction. The order may be cancelled up until the the auction locks, after which cancel requests will be rejected.INDICATION_OF_INTERESTIOIAn indication of interest (IOI) instructs exchange that this order should be processed as request for liquidity from block trading market markets.MAKER_OR_CANCELMOCA Maker or cancel (MOC) instructs exchange that this order will only add liquidity to the order book. If any part of the order could be filled immediately, the whole order will instead be rejected before any execution occurs. This instruction is also known as Post only or Participate don't initiate.CANCEL_ON_DISCONNECTCODCancel on System Failure (Cancel on disconnect)DO_NOT_CANCEL_ON_DISCONNECTNCODReinstate on System Failure (Do not cancel on disconnect)DO_NOT_INCREASEDNI(Reduce only) If part of a position is closed by any other means than the reduce-only order, the reduce-only order will be automatically adjusted downwards. If the trader decides to increase their position before the reduce-only order is executed, the quantity of the reduce-only order will not increase as well.The table below displays a breakdown of the EMS support of specific execution instructions by the Order destination. Order destination idMOCAOIOICODNCODDNIBINANCEXBINANCEUATXBINANCEJEXBINANCEUSXBINANCEFTSXBINANCEFTSUATXBINANCEFTSCXBINANCEFTSCUATXBINANCEOPTVXBINANCEOPTVUATXBITFINEXXBITMEXXBITMEXUATXBITSTAMPBLOCKCHAINEXCHANGEXCOINBASEXGEMINIXXXHITBTCKRAKENFTSXKRAKENXPOLONIEXXLMAXDIGITALXXLMAXDIGITALUATXXDERIBITXXDERIBITUATXXDYDXXXLegend: X - supported.Market Orders​While our API inherently supports limit orders, we understand the necessity for some clients to operate with market orders. This documentation provides a technical solution for simulating market orders using our limit order functionality with the Fill or Kill (FOK) option.Technical Solution​To mimic the behavior of a market order using our API, which inherently supports limit orders, clients can place a limit order with a Fill or Kill (FOK) condition. This approach effectively replicates the immediate execution characteristic of a market order while requiring the specification of a maximum (for buy orders) or minimum (for sell orders) price limit.Implementation Steps:Prepare the Order:Define the order as a limit order. Set the price limit to the maximum price the client is willing to pay for a buy order or the minimum price they are willing to accept for a sell order. Ensure that the order quantity meets the client's requirement for the transaction.Set the FOK Condition:Apply the Fill or Kill condition to the order. This condition mandates that the order must be executed immediately in its entirety or not executed at all. It ensures that partial fills do not occur, closely aligning with the nature of a market order.Execution and Validation:Upon submission, the EMS will attempt to fill the order immediately based on the specified price limits and the FOK condition. If the order cannot be filled immediately and completely within the defined price range, it will be automatically cancelled, ensuring no partial fills.Advantages and Considerations​Immediate Execution: The FOK condition ensures that the order, if executed, is filled immediately, mirroring the behavior of a market order.Price Control: Clients maintain control over the maximum or minimum price limits, adding a layer of price protection that standard market orders do not provide.Simplicity: This method avoids the need for additional development or integration, utilizing the existing infrastructure of our API.Using a limit order API can be considered simpler and more straightforward for several reasons, especially when compared to other types of trading orders. Here are some factors that contribute to the perceived simplicity:Predictability and Control:Price Certainty: Limit orders allow users to specify the maximum or minimum price at which they are willing to buy or sell an asset. This provides certainty about the price, which is not the case with market orders, where the execution price can vary.Control over Execution: Users have better control over their trades. They can decide not to execute a trade if the market does not reach their specified price, avoiding unwanted entries or exits in volatile market conditions.Consistent behaviour: Not all the order destinations support market orders or when they support it, usually they are implmeneted in form of limit orders.Straightforward Implementation:Simplicity in API Design: Limit order APIs are generally straightforward to implement and integrate because the parameters are clear and well-defined (quantity, price, and sometimes duration).Fewer Real-time Considerations: Unlike market orders, where getting the best available price in real-time is crucial, limit orders are placed based on predefined criteria. This can reduce the complexity associated with rapid decision-making and real-time data processing.Reduced Need for Immediate Market Data:Less Dependency on Real-time Pricing: Since the execution of a limit order is based on the user's specified price, there's less need for immediate or real-time market data, unlike market orders where knowing the current market price is crucial for order execution.Cost Predictability:Avoidance of Slippage: With limit orders, the risk of slippage (the difference between the expected price of a trade and the price at which the trade is executed) is eliminated. Users can be more confident about the cost of their trades, making financial planning and risk management more straightforward.Ease of Monitoring and Management:Set and Forget: Users can place limit orders and not worry about monitoring the market constantly. The order will only execute if the market price meets the user's criteria, making it a more passive form of trading.Batch Processing Friendly: For applications or trading strategies that place numerous orders, limit orders can be more manageable as they don't require immediate processing or constant monitoring of market prices.Reduced Impact on Market Price:Minimized Market Disruption: Limit orders can be less disruptive to the market price, especially for large orders. They are executed only at the user's specified price, avoiding large, sudden impacts on the market price that can occur with large market orders.In summary, a limit order API can offer a simpler and more controlled trading experience, with price certainty, reduced need for real-time market data, straightforward implementation, and predictable costs. These factors contribute to its appeal, especially for users or systems focusing on strategic, planned trading activities rather than immediate, real-time market engagement.Time​For all input and output time values ISO 8601 standard is used.Format specifierDescriptionyyyyThe year as a four-digit number.MMThe month, from 01 through 12.ddThe day of the month, from 01 through 31.HHThe hour, using a 24-hour clock from 00 to 23.mmThe minute, from 00 through 59.ssThe second, from 00 through 59.fffThe milliseconds in a date and time value.fffffffThe ten millionths of a second in a date and time value.Input time values are parsed using the following formats as far as possible:yyyy-MM-ddTHH:mm:ss.fffffffyyyy-MM-ddTHH:mm:ss.fffyyyy-MM-ddTHH:mm:ssyyyy-MM-ddTHH:mmyyyy-MM-ddTHHyyyy-MM-ddyyyyMMddTHHmmssfffffffyyyyMMddTHHmmssfffyyyyMMddTHHmmssyyyyMMddTHHmmyyyyMMddTHHyyyyMMddinfoWhen time zone information is not supplied, we will assume the UTC time zone.Output time values are formatted using the following patterns:yyyy-MM-ddTHH:mm:ss.fffffffZyyyy-MM-ddinfoAll time values we provide are UTC time zone. Do not assume otherwise.Was this section helpful?12345NextAuthenticationWhat is EMS API?Architecture and componentsBenefits and featuresLow latency supportNormalized API abstractionIndustry-standard protocolsSelf-host or in CloudSecurity & PrivacyMulti-account supportSDK and samples for 40+ languagesComprehensive supportHigh-quality integrationsEnterprise-grade support and maintenanceHigh availabilityP&L and asset monitoringOrder status descriptionOrder status lifecycleMarket OrdersTechnical SolutionAdvantages and ConsiderationsTimeCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/#ems-order-params-tif)"
224,i.io naas api bitcoin Methods getrpcinfo,"i.io naas api bitcoin Methods getrpcinfo.   getrpcinfo | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetrpcinfoOn this pagegetrpcinfoOverview​The 'getrpcinfo' method provides detailed information about the active RPC commands in the Bitcoin network. It returns a JSON object containing an array of active commands and the path to the debug log.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""getrpcinfo"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""getrpcinfo\"",\""params\"": [ ]}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getrpcinfo"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection(""mainnet-bitcoin.node.coinapi.io"")payload = json.dumps({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""getrpcinfo"",""params"": []})headers = {'Content-Type': 'application/json','accept': 'application/json','X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}conn.request(""POST"", ""/"", payload, headers)res = conn.getresponse()data = res.read()print(data.decode(""utf-8""))var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getrpcinfo"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""id"":1,""method"":""getrpcinfo"",""params"": [ ]}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""getrpcinfo"",""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""getrpcinfo\"",\""params\"": [ ]}"");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​The 'getrpcinfo' method does not require any parameters. Simply include an empty array in the params field.\Response​{ ""result"": { ""active_commands"": [  {  ""method"": ""string"",  ""duration"": ""numeric""  },  ... ], ""logpath"": ""string"" }, ""error"": null, ""id"": 1}Was this section helpful?12345PreviousgetreceivedbylabelNextgettransactionOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getrpcinfo)"
225,i.io naas api bitcoin Methods getmemoryinfo,"i.io naas api bitcoin Methods getmemoryinfo.   getmemoryinfo | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetmemoryinfoOn this pagegetmemoryinfoOverview​The 'getmemoryinfo' RPC Method returns an object that contains information regarding memory usage.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""getmemoryinfo"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""getmemoryinfo\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""getmemoryinfo"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""2.0"", ""method"": ""getmemoryinfo"", ""params"": [], ""id"": 1})headers = { 'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type': 'application/json', 'accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""getmemoryinfo"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) {console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""getmemoryinfo"",""params"": [],""id"":1}`) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"") req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""method"": ""getmemoryinfo"", ""params"": [], ""id"": 1})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""getmemoryinfo\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​mode (string): It determines what kind of information is returned. ""stats"" returns general statistics about memory usage in the daemon and ""mallocinfo"" returns an XML string describing low-level heap stateResponse​{ ""result"": { ""locked"": {  ""used"": 240,  ""free"": 65296,  ""total"": 65536,  ""locked"": 65536,  ""chunks_used"": 1,  ""chunks_free"": 1 } }, ""error"": null, ""id"": 1}locked: Information about locked memory manager used: Number of bytes used free: Number of bytes available in current arenas total: Total number of bytes managed locked: Amount of bytes that succeeded locking. If this number is smaller than total, locking pages failed at some point and key data could be swapped to disk chunks_used: Number allocated chunks chunks_free: Number of unused chunksWas this section helpful?12345PreviousgetindexinfoNextgetmempoolancestorsOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getmemoryinfo)"
226,i.io ems api managed cloud rest api account delete account,i.io ems api managed cloud rest api account delete account.   Delete account | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIAccountDelete accountDelete all accountsGet accountsAdd or update accountCertificateEndpointsExchangeLocationREST APIWebSocket APIFIX APISelf Hosted GuideManaged Cloud REST APIAccountDelete accountDelete accountDELETE /v1/accountsDelete specific exchange account maintained by the EMS API for your subscription.Query Parametersexchange_id any requiredExchange identifier of the account to deleteResponses404Exchange account not foundLoading...Was this section helpful?12345PreviousAccountNextDelete all accountsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/managed-cloud-rest-api/account/delete-account)
227,i.io naas api bitcoin Methods getnetworkhashps,"i.io naas api bitcoin Methods getnetworkhashps.   getnetworkhashps | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetnetworkhashpsOn this pagegetnetworkhashpsOverview​The 'getnetworkhashps' method returns the estimated network hashes per second based on the last n blocks.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KE' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""getnetworkhashps"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KE"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""getnetworkhashps\"",\""params\"": [ ]}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KE'];$body = '{ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getnetworkhashps"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection(""mainnet-bitcoin.node.coinapi.io"")payload = json.dumps({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""getnetworkhashps"",""params"": []})headers = {'Content-Type': 'application/json','accept': 'application/json','X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KE'}conn.request(""POST"", ""/"", payload, headers)res = conn.getresponse()data = res.read()print(data.decode(""utf-8""))var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KE"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getnetworkhashps"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""id"":1,""method"":""getnetworkhashps"",""params"": [ ]}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KE"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KE""request.body = JSON.dump({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""getnetworkhashps"",""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""getnetworkhashps\"",\""params\"": [ ]}"");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KE"") .build();Response response = client.newCall(request).execute();Request Parameters​nblocks (numeric, optional, default=120): The number of blocks, or -1 for blocks since last difficulty change.height (numeric, optional, default=-1): To estimate at the time of the given height.Response​{ ""result"": [ ""n"", ... ], ""error"": null, ""id"": 1}Was this section helpful?12345PreviousgetnettotalsNextgetnetworkinfoOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getnetworkhashps)"
228,i.io faq general Why am I receiving message Forbidden,"i.io faq general Why am I receiving message Forbidden.   Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralWhy am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?This occurs on WebSocket whenever a certain data type is being accessed that is not included in your current subscription tier.Example:{ ""type"": ""hello"", ""apikey"": ""73034021-SAMPLE-STARTUP-KEY"", ""heartbeat"": false, ""subscribe_data_type"": [""quote""] }You will receive:{ ""message"": ""Forbidden - Your API key don't have privileges to data type 'quote'."", ""type"": ""error"" }This is because the Quote data type is not available for the Startup Subscription via WebSocket. If you'd like to upgrade your account, submit a request here: https://support.coinapi.io/hc/en-us/requests/newWas this section helpful?12345PreviousWhich assets or currencies are listed?NextCustomer AccountCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/Why-am-I-receiving-message-Forbidden)"
229,i.io general faq api How can I get OHLCV data by asset pair,"i.io general faq api How can I get OHLCV data by asset pair.   How can I get OHLCV data by asset pair? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer EMS Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What is the rate limit for EMS Trading API?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQAPIHow can I get OHLCV data by asset pair?How can I get OHLCV data by asset pair?Our OHLCV endpoint is symbol based (e.g BINANCE_SPOT_BTC_USDT). If you need OHLC data by asset pairs (e.g BTC/USD), you may use our Exchange Rates endpoint instead: https://docs.coinapi.io/market-data/rest-api/exchange-rates You can also create your own aggregation by querying for multiple OHLCV symbols and summing the data, or aggregate only OHLCV symbol based data for the volume and use Exchange Rates for pricing.Was this section helpful?12345PreviousHow are exchange rates calculated?NextHow can I get the USD price for multiple assets at the same time?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/api/How-can-I-get-OHLCV-data-by-asset-pair)"
230,i.io general faq general How does SOR determine the best exchange for order execution,"i.io general faq general How does SOR determine the best exchange for order execution.   How does SOR determine the best exchange for order execution? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralHow does SOR determine the best exchange for order execution?How does SOR determine the best exchange for order execution?It depends on the algorithmic order used. There are different inputs to the algorithm. We will document that soon.Was this section helpful?12345PreviousHow do I enable overage?NextHow does the full orderbook stream work?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/How-does-SOR-determine-the-best-exchange-for-order-execution)"
231,i.io faq api What happens if I exceed my plan REST API daily request limit,"i.io faq api What happens if I exceed my plan REST API daily request limit.   What happens if I exceed my plan’s REST API daily request limit? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQAPIWhat happens if I exceed my plan’s REST API daily request limit?What happens if I exceed my plan’s REST API daily request limit?If your plan is subject to the hard limit on REST API, then you will get an HTTP 429 [1] response status code along with an error message if you exceed your daily limit. For the soft-limited agreements if you exceed your limit on a regular basis, then we will contact you and kindly ask you to upgrade.You may check our Subscription Management API for proper tracking of your usage. [2]References:[1] https://docs.coinapi.io/market-data/rest-api#http-errors [2] https://docs.coinapi.io/management/subscriptionsWas this section helpful?12345PreviousWhat are the time periods I can use for Exchange Rates and OHLCV?NextWhat languages do you support?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/api/What-happens-if-I-exceed-my-plan-REST-API-daily-request-limit)"
232,i.io naas api ethereum Methods eth getBlockTransactionCountByNumber,"i.io naas api ethereum Methods eth getBlockTransactionCountByNumber.   eth_getBlockTransactionCountByNumber | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_getBlockTransactionCountByNumberOn this pageeth_getBlockTransactionCountByNumberOverwiev​The 'eth_getBlockTransactionCountByNumber' method returns the number of transactions in the block with the given block number.Request​shellcsharpphppythonjavascriptgorubyjava  curl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'content-type: application/json' \  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data '{ ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_getBlockTransactionCountByNumber"", ""params"": ""finalized""}'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"", ""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getBlockTransactionCountByNumber\"",\""params\"":\""finalized\""}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [ CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"", CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => """", CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 30, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => ""POST"", CURLOPT_POSTFIELDS => json_encode([ 'id' => 1, 'jsonrpc' => '2.0', 'method' => 'eth_getBlockTransactionCountByNumber', 'params' => 'finalized' ]), CURLOPT_HTTPHEADER => [ ""accept: application/json"", ""content-type: application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" ],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) { echo ""cURL Error #:"" . $err;} else { echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_getBlockTransactionCountByNumber"", ""params"": ""finalized""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text)const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({ id: 1, jsonrpc: '2.0', method: 'eth_getBlockTransactionCountByNumber', params: 'finalized' })};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getBlockTransactionCountByNumber\"",\""params\"":\""finalized\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri' {require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getBlockTransactionCountByNumber\"",\""params\"":\""finalized\""}""response = http.request(request)puts response.read_body }OkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getBlockTransactionCountByNumber\"",\""params\"":\""finalized\""}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​Block number: [Required] A hexadecimal block number, or the string 'latest', 'earliest' or 'pending'. See the default block parameter.Response​{""jsonrpc"": ""2.0"",""id"": 1,""result"": ""0x73""}'Block transaction count': A hexadecimal equivalent of the integer representing the number of transactions in the block.Was this section helpful?12345Previouseth_getBlockTransactionCountByHashNexteth_getCodeOverwievRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_getBlockTransactionCountByNumber)"
233,i.io market data rest api order book order book latest data,"i.io market data rest api order book order book latest data.   Latest data | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcvOrder BookGet current order book Current depth of the order book Historical data Latest dataOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIOrder Book Latest data Latest dataGET /v1/orderbooks/:symbol_id/latestGet latest order book snapshots for a specific symbol, returned in time descending order.infoThe historical order book data via the REST API is currently limited by a number of updates and to the maximum number of 20 levels.Path Parameterssymbol_id string requiredSymbol identifier of requested timeseries (from the Metadata -> Symbols)Query Parameterslimit int32Default value: 100Amount of items to return (optional, mininum is 1, maximum is 100000, default value is 100, if the parameter is used then every 100 output items are counted as one request)limit_levels int32Maximum amount of levels from each side of the book to include in response (optional)Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the order book.time_coinapi date-timeThe CoinAPI time when the order book was received.asks nullableThe asks made by market makers.bids nullableThe bids made by market makers.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.266Z"", ""time_coinapi"": ""2024-07-16T12:55:05.266Z"" }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""asks"": [  {  ""price"": 456.35,  ""size"": 123  },  {  ""price"": 456.36,  ""size"": 23  } ], ""bids"": [  {  ""price"": 456.1,  ""size"": 42  },  {  ""price"": 456.09,  ""size"": 5  } ] }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the order book.time_coinapi date-timeThe CoinAPI time when the order book was received.asks nullableThe asks made by market makers.bids nullableThe bids made by market makers.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.266Z"", ""time_coinapi"": ""2024-07-16T12:55:05.266Z"" }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""asks"": [  {  ""price"": 456.35,  ""size"": 123  },  {  ""price"": 456.36,  ""size"": 23  } ], ""bids"": [  {  ""price"": 456.1,  ""size"": 42  },  {  ""price"": 456.09,  ""size"": 5  } ] }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the order book.time_coinapi date-timeThe CoinAPI time when the order book was received.asks nullableThe asks made by market makers.bids nullableThe bids made by market makers.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.266Z"", ""time_coinapi"": ""2024-07-16T12:55:05.266Z"" }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""asks"": [  {  ""price"": 456.35,  ""size"": 123  },  {  ""price"": 456.36,  ""size"": 23  } ], ""bids"": [  {  ""price"": 456.1,  ""size"": 42  },  {  ""price"": 456.09,  ""size"": 5  } ] }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the order book.time_coinapi date-timeThe CoinAPI time when the order book was received.asks nullableThe asks made by market makers.bids nullableThe bids made by market makers.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.266Z"", ""time_coinapi"": ""2024-07-16T12:55:05.266Z"" }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""asks"": [  {  ""price"": 456.35,  ""size"": 123  },  {  ""price"": 456.36,  ""size"": 23  } ], ""bids"": [  {  ""price"": 456.1,  ""size"": 42  },  {  ""price"": 456.09,  ""size"": 5  } ] }]Loading...Was this section helpful?12345Previous Historical dataNextOrder Book L3Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/order-book/order-book-latest-data)"
234,i.io general faq general,"i.io general faq general.   General | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralGeneralWas this section helpful?12345PreviousFAQNextAPI Usage LimitsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general)"
235,i.io market data rest api exchange rates exchange rates timeseries data,"i.io market data rest api exchange rates exchange rates timeseries data.   Timeseries data | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange Rates Get all current rates Timeseries data Timeseries periods Get specific rateIndexesMetadataMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIExchange Rates Timeseries data Timeseries dataGET /v1/exchangerate/:asset_id_base/:asset_id_quote/historyGet the historical exchange rates between two assets in the form of the timeseries.Path Parametersasset_id_base string requiredRequested exchange rates base asset identifier (from the Metadata -> Assets)asset_id_quote string requiredRequested exchange rates base asset identifier (from the Metadata -> Assets)Query Parametersperiod_id stringIdentifier of requested timeseries period (required, e.g. 5SEC or 1HRS)time_start stringTimeseries starting time in ISO 8601 (required)time_end stringTimeseries ending time in ISO 8601 (required)limit int32Default value: 100Amount of items to return (optional, mininum is 1, maximum is 100000, default value is 100, if the parameter is used then every 100 output items are counted as one request)Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [time_period_start date-timeGets or sets the start time of the period.time_period_end date-timeGets or sets the end time of the period.time_open date-time nullableGets or sets the opening time of the period.time_close date-time nullableGets or sets the closing time of the period.rate_open double nullableGets or sets the opening rate for the period.rate_high double nullableGets or sets the highest rate for the period.rate_low double nullableGets or sets the lowest rate for the period.rate_close double nullableGets or sets the closing rate for the period.][ { ""time_period_start"": ""2024-07-16T12:55:05.243Z"", ""time_period_end"": ""2024-07-16T12:55:05.243Z"", ""time_open"": ""2024-07-16T12:55:05.243Z"", ""time_close"": ""2024-07-16T12:55:05.243Z"", ""rate_open"": 0, ""rate_high"": 0, ""rate_low"": 0, ""rate_close"": 0 }][ { ""time_period_start"": ""2016-01-01T00:00:00.0000000Z"", ""time_period_end"": ""0001-01-01T00:00:00.0000000Z"", ""time_open"": ""2016-01-01T00:00:00.0000000Z"", ""time_close"": ""2016-01-01T00:00:00.0000000Z"", ""rate_open"": 430.586617904731, ""rate_high"": 430.586617904731, ""rate_low"": 430.586617904731, ""rate_close"": 430.586617904731 }, { ""time_period_start"": ""2016-01-01T00:01:00.0000000Z"", ""time_period_end"": ""2016-01-01T00:02:00.0000000Z"", ""time_open"": ""2016-01-01T00:01:00.0000000Z"", ""time_close"": ""2016-01-01T00:01:00.0000000Z"", ""rate_open"": 430.38999999999993, ""rate_high"": 430.38999999999993, ""rate_low"": 430.38999999999993, ""rate_close"": 430.38999999999993 }, { ""time_period_start"": ""2016-01-01T00:02:00.0000000Z"", ""time_period_end"": ""2016-01-01T00:03:00.0000000Z"", ""time_open"": ""2016-01-01T00:02:00.0000000Z"", ""time_close"": ""2016-01-01T00:02:00.0000000Z"", ""rate_open"": 430.6522189770523, ""rate_high"": 430.6522189770523, ""rate_low"": 430.6522189770523, ""rate_close"": 430.6522189770523 }]SchemaExample (from schema)Example responseSchemaArray [time_period_start date-timeGets or sets the start time of the period.time_period_end date-timeGets or sets the end time of the period.time_open date-time nullableGets or sets the opening time of the period.time_close date-time nullableGets or sets the closing time of the period.rate_open double nullableGets or sets the opening rate for the period.rate_high double nullableGets or sets the highest rate for the period.rate_low double nullableGets or sets the lowest rate for the period.rate_close double nullableGets or sets the closing rate for the period.][ { ""time_period_start"": ""2024-07-16T12:55:05.244Z"", ""time_period_end"": ""2024-07-16T12:55:05.244Z"", ""time_open"": ""2024-07-16T12:55:05.244Z"", ""time_close"": ""2024-07-16T12:55:05.244Z"", ""rate_open"": 0, ""rate_high"": 0, ""rate_low"": 0, ""rate_close"": 0 }][ { ""time_period_start"": ""2016-01-01T00:00:00.0000000Z"", ""time_period_end"": ""0001-01-01T00:00:00.0000000Z"", ""time_open"": ""2016-01-01T00:00:00.0000000Z"", ""time_close"": ""2016-01-01T00:00:00.0000000Z"", ""rate_open"": 430.586617904731, ""rate_high"": 430.586617904731, ""rate_low"": 430.586617904731, ""rate_close"": 430.586617904731 }, { ""time_period_start"": ""2016-01-01T00:01:00.0000000Z"", ""time_period_end"": ""2016-01-01T00:02:00.0000000Z"", ""time_open"": ""2016-01-01T00:01:00.0000000Z"", ""time_close"": ""2016-01-01T00:01:00.0000000Z"", ""rate_open"": 430.38999999999993, ""rate_high"": 430.38999999999993, ""rate_low"": 430.38999999999993, ""rate_close"": 430.38999999999993 }, { ""time_period_start"": ""2016-01-01T00:02:00.0000000Z"", ""time_period_end"": ""2016-01-01T00:03:00.0000000Z"", ""time_open"": ""2016-01-01T00:02:00.0000000Z"", ""time_close"": ""2016-01-01T00:02:00.0000000Z"", ""rate_open"": 430.6522189770523, ""rate_high"": 430.6522189770523, ""rate_low"": 430.6522189770523, ""rate_close"": 430.6522189770523 }]SchemaExample (from schema)Example responseSchemaArray [time_period_start date-timeGets or sets the start time of the period.time_period_end date-timeGets or sets the end time of the period.time_open date-time nullableGets or sets the opening time of the period.time_close date-time nullableGets or sets the closing time of the period.rate_open double nullableGets or sets the opening rate for the period.rate_high double nullableGets or sets the highest rate for the period.rate_low double nullableGets or sets the lowest rate for the period.rate_close double nullableGets or sets the closing rate for the period.][ { ""time_period_start"": ""2024-07-16T12:55:05.244Z"", ""time_period_end"": ""2024-07-16T12:55:05.244Z"", ""time_open"": ""2024-07-16T12:55:05.244Z"", ""time_close"": ""2024-07-16T12:55:05.244Z"", ""rate_open"": 0, ""rate_high"": 0, ""rate_low"": 0, ""rate_close"": 0 }][ { ""time_period_start"": ""2016-01-01T00:00:00.0000000Z"", ""time_period_end"": ""0001-01-01T00:00:00.0000000Z"", ""time_open"": ""2016-01-01T00:00:00.0000000Z"", ""time_close"": ""2016-01-01T00:00:00.0000000Z"", ""rate_open"": 430.586617904731, ""rate_high"": 430.586617904731, ""rate_low"": 430.586617904731, ""rate_close"": 430.586617904731 }, { ""time_period_start"": ""2016-01-01T00:01:00.0000000Z"", ""time_period_end"": ""2016-01-01T00:02:00.0000000Z"", ""time_open"": ""2016-01-01T00:01:00.0000000Z"", ""time_close"": ""2016-01-01T00:01:00.0000000Z"", ""rate_open"": 430.38999999999993, ""rate_high"": 430.38999999999993, ""rate_low"": 430.38999999999993, ""rate_close"": 430.38999999999993 }, { ""time_period_start"": ""2016-01-01T00:02:00.0000000Z"", ""time_period_end"": ""2016-01-01T00:03:00.0000000Z"", ""time_open"": ""2016-01-01T00:02:00.0000000Z"", ""time_close"": ""2016-01-01T00:02:00.0000000Z"", ""rate_open"": 430.6522189770523, ""rate_high"": 430.6522189770523, ""rate_low"": 430.6522189770523, ""rate_close"": 430.6522189770523 }]SchemaExample (from schema)Example responseSchemaArray [time_period_start date-timeGets or sets the start time of the period.time_period_end date-timeGets or sets the end time of the period.time_open date-time nullableGets or sets the opening time of the period.time_close date-time nullableGets or sets the closing time of the period.rate_open double nullableGets or sets the opening rate for the period.rate_high double nullableGets or sets the highest rate for the period.rate_low double nullableGets or sets the lowest rate for the period.rate_close double nullableGets or sets the closing rate for the period.][ { ""time_period_start"": ""2024-07-16T12:55:05.244Z"", ""time_period_end"": ""2024-07-16T12:55:05.244Z"", ""time_open"": ""2024-07-16T12:55:05.244Z"", ""time_close"": ""2024-07-16T12:55:05.244Z"", ""rate_open"": 0, ""rate_high"": 0, ""rate_low"": 0, ""rate_close"": 0 }][ { ""time_period_start"": ""2016-01-01T00:00:00.0000000Z"", ""time_period_end"": ""0001-01-01T00:00:00.0000000Z"", ""time_open"": ""2016-01-01T00:00:00.0000000Z"", ""time_close"": ""2016-01-01T00:00:00.0000000Z"", ""rate_open"": 430.586617904731, ""rate_high"": 430.586617904731, ""rate_low"": 430.586617904731, ""rate_close"": 430.586617904731 }, { ""time_period_start"": ""2016-01-01T00:01:00.0000000Z"", ""time_period_end"": ""2016-01-01T00:02:00.0000000Z"", ""time_open"": ""2016-01-01T00:01:00.0000000Z"", ""time_close"": ""2016-01-01T00:01:00.0000000Z"", ""rate_open"": 430.38999999999993, ""rate_high"": 430.38999999999993, ""rate_low"": 430.38999999999993, ""rate_close"": 430.38999999999993 }, { ""time_period_start"": ""2016-01-01T00:02:00.0000000Z"", ""time_period_end"": ""2016-01-01T00:03:00.0000000Z"", ""time_open"": ""2016-01-01T00:02:00.0000000Z"", ""time_close"": ""2016-01-01T00:02:00.0000000Z"", ""rate_open"": 430.6522189770523, ""rate_high"": 430.6522189770523, ""rate_low"": 430.6522189770523, ""rate_close"": 430.6522189770523 }]Loading...Was this section helpful?12345Previous Get all current ratesNext Timeseries periodsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/exchange-rates/exchange-rates-timeseries-data)"
236,i.io general faq general Can you trade on both CEX and DEX exchanges from a single EMS Trading API account,"i.io general faq general Can you trade on both CEX and DEX exchanges from a single EMS Trading API account.   Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralCan you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Yes, you can!Was this section helpful?12345PreviousCan I use the API to show graphs, charts or tables?NextCrossed books / bid >= askCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/Can-you-trade-on-both-CEX-and-DEX-exchanges-from-a-single-EMS-Trading-API-account)"
237,i.io general faq api Why are limit headers not always showing on a request,"i.io general faq api Why are limit headers not always showing on a request.   Why are limit headers not always showing on a request? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer EMS Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What is the rate limit for EMS Trading API?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQAPIWhy are limit headers not always showing on a request?Why are limit headers not always showing on a request?The reason why response headers are not always present in the API responses is that, in some cases, we are unaware of their specific usage or requirements. To ensure that we promptly respond to your API calls and avoid unnecessary delays, we choose to provide a response without including the response headers. This decision is made with the intention of optimizing the operation of our API. By selectively excluding the inclusion of response headers in every request, we can enhance the overall performance and efficiency of the API.It takes a while to verify the current usage as for the very first call for a given client we do not have a rate limit then yet. Once the request is made, we start the rate limit verification process In the background. We may then in the meantime process many requests for this client and at some point we append the result of current usage to the header. All requests that were made during that process are also included in the limit after some time.For example (each bullet point representing a request made):Request (no info about clients usage)What's the usage? Starting the verificationRequestRequest5 requests used today (those 3 above are not counted yet), appended to the headerRequest (5 used)Request (5 used)Request (5 used)Request (5 used)Request (10 requests used today)To provide clarity and transparency regarding the absence of response headers, we have documented this behavior on our official documentation page, which can be found at https://docs.coinapi.io/market-data/rest-api#request-limit--apikeyWas this section helpful?12345PreviousWhere can I find examples and SDK source codes for API?NextWhy are there no Exchange Rates data for some assets for a given period?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/api/Why-are-limit-headers-not-always-showing-on-a-request)"
238,i.io customer portal customer portal metrics explained,"i.io customer portal customer portal metrics explained.   Metrics tab explained | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQCustomer PortalMetrics tab explainedChangelogCustomer PortalMetrics tab explainedOn this pageMetrics tab explainedThis section is dedicated to provide you with a comprehensive understanding of the Metrics Tab within the customer portal. In this section, we will delve into the various metric parameters, offering detailed explanations and corresponding descriptions to better understand your historical usage.What is Usage Metric?​Usage metric is record that we log when from our perspective usage of our products occured. We will name here few examples of the usage:Performing API calls, connections, subscriptions or other operations against our APIReceiving or sending data to us in various forms (flat files, streaming, API calls)Having active API Keys or defined accountsMetric parameters​Each metric can contain any amount of parameters and a single value. Parameters are used to identify where the usage occured. For example we will use parameters to separate the usage by API Key, Protocol or the Product that was accessed. Below we will list complete list of the parameters that can occur:ParameterDescriptionAPIKeyAPI Key that initiated specific usage metricDataCenterLocation where the usage metric was created (e.g. AWS-EU-EAST-1 etc)DataSourceIdentification of the specific data source which was related to usage metric (e.g. BINANCE, COINBASE, ETHEREUM-MAINNET etc.)OperationNameThe ID which identifies the operations within the ServiceName and ProtocolName, usually Data Type (DTO) otherwise id of the operation like method in the JSON-PRC calls. (e.g. QUOTES_SYMBOL_HISTORY, eth_call)ProtocolNameThe name of the protocol that was used to generate the metric (e.g. REST, WebSocket, FIX, S3)ServiceNameThe name of the product (e.g. MarketData)Grouping data​In the customer portal you can group the metrics by any parameter to inspect the usage in that dimension. For example by selecting metric COINAPI_DATA_MSGS_SENT and grouping by ProtocolName you can inspect how much bytes we delivered to your application by every protocol in requested time period.Metrics​MetricParametersUnitValue RepresentationCOINAPI_DATA_MSGS_SENTAPIKey DataSource OperationName ProtocolName ServiceNameEntitiesAmount of the data points/entities/messages sent by the API to the client.COINAPI_DATA_BYTES_SENTAPIKey DataSource OperationName ProtocolName ServiceNameBytesNumber of bytes sent by the API to the client.COINAPI_DATA_MSGS_RECEIVEDAPIKey DataSource OperationName ProtocolName ServiceNameEntitiesAmount of the data points/entities/messages received by the API from the customer.COINAPI_DATA_BYTES_RECEIVEDAPIKey DataSource OperationName ProtocolName ServiceNameBytesNumber of bytes received by the API from the customer.COINAPI_CALLS_RECEIVEDAPIKey DataSource OperationName ProtocolName ServiceNameCallsNumber of API calls received from client by the API.COINAPI_CALLS_SENTAPIKey DataSource OperationName ProtocolName ServiceNameCallsNumber of API calls delivered from API to client.COINAPI_REST_CREDITSAPIKey ServiceNameCreditsNumber of credits used by the API calls. This is useful for the Market Data REST API where each API Call can be counted as more than single credit.COINAPI_REST_APICALLSAPIKey ServiceNameCalls(Deprecated) Number of REST API calls used, regardless of the credits used for each call. Please migrato the COINAPI_CALLS_SENTCOINAPI_APICALLS_COUNTAPIKey OperationName ProtocolName ServiceNameCalls(Deprecated) Number of API calls used. Please migrate to the COINAPI_CALLS_SENTCOINAPI_APIKEY_DAYSAPIKeyAPI Key DaysCouting the number of the API Keys for the customer. We will report for each API Key active single unit for each day.COINAPI_NAAS_UNITSAPIKey DataSource OperationName ProtocolName ServiceNameCreditsNumber of credits used by the Node As A Service products.COINAPI_JWT_VALIDATION_COUNTAPIKeyOccurencesNumber of occurences where we needed to fully validate JWT Secret.COINAPI_JWT_CACHE_HITAPIKeyOccurencesNumber of occurences where we do not needed to fully validate JWT Secret.COINAPI_CONNECTION_SECONDSAPIKey DataSource OperationName ProtocolName ServiceNameConnection SecondsNumber of connection-seconds where the connection was established with the API.COINAPI_APICALLS_RESPONSE_MILLISECONDSAPIKey DataSource OperationName ProtocolName ServiceNameMillisecondsNumber of milliseconds that we spent generating the response to the API call for the customer.EMSX_EXCHANGE_RUNTIME_SECONDSAPIKey DataSource OperationName ProtocolName ServiceNameAccount SecondsNumber of account-seconds counted from the accounts managed by the EMS API.*_USDSame as for the source metricUSD CentsMetrics that we are using to convert overage or paying metrics to the USD value that will be added to the next invoice. For example the COINAPI_DATA_BYTES_SENT metric can generate USD overages by posting to the COINAPI_DATA_BYTES_SENT_USD metric.By understanding the Metrics Tab and its parameters, you can make informed decisions to utilize your usage better.Was this section helpful?12345PreviousCustomer PortalNextChangelogWhat is Usage Metric?Metric parametersGrouping dataMetricsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/customer-portal/customer-portal-metrics-explained)"
239,i.io #list all symbols,"i.io #list all symbols.   Welcome | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQCustomer PortalChangelogWelcomeOn this pageWelcomeWelcome to the CoinAPI documentation section. This is the perfect destination to explore CoinAPI's API collection, which includes tutorials, an overview, features, use cases we cover, and much more. You've come to the perfect place whether you have questions or simply want to learn more. Our documentation area serves as a valuable resource for understanding our API and how to make the most of its features.What is CoinAPI?​CoinAPI is a collection of cryptocurrency APIs that allows users to get the most out of cryptocurrency data. CoinAPI creates the most accessible and developer-friendly APIs for the world's software developers, analysts, and fintech-driven companies. CoinAPI streamlines crypto operations, trading, and data access on a large scale. It is the most popular option on the market due to its extensive documentation, minimal latency, simple integration, developer assistance, and SDK in a variety of languages. CoinAPI was created to make the crypto experience simpler for crypto developers, traders, and any other individuals invested in the crypto space. Customers choose CoinAPI because of our 5 years of proven experience, reliable and verified platform, service functions, and the highest frequency and aggregated data.Our mission​CoinAPI's goal is to provide all necessary APIs in one place. It eliminates the need to choose between various market vendors, making it easier for crypto users to access the data and tools they need for their use cases. Furthermore, CoinAPI helps users save time and resources, giving them more opportunities to use crypto APIs effectively. By providing a one-stop shop for all cryptocurrency needs, CoinAPI is making it easier than ever to unlock the full potential of digital currencies.CoinAPI product portfolio​CoinAPI's product portfolio includes Market data API, EMS trading API, and CryptoTick, a pay-per-service platform that is handy for researchers who are not very familiar with APIs. Market data API - CoinAPI is collecting an extensive amount of market data points, enabling users to gain useful insights. Our crypto raw data can be accessed by both individuals and businesses, allowing them to create innovative services. Thanks to CoinAPI, customers can access a wide variety of cryptocurrency historical and real-time data with ease. Many customers have expressed their appreciation for our services, calling it ""never easier to organize and analyze the data."" We guarantee reliable access to all sorts of cryptocurrency data.EMS Trading API - EMS Trading API makes it possible for clients to access multiple cryptocurrency exchanges from a single account, providing the most advantageous prices available. This API allows for the connection of up to 45 different accounts, enabling trading operations and recording the history of those operations. It is possible to trade on various exchanges with the API and it provides a way to connect to exchanges and execute orders, either through REST or WebSocket API. As an example, one client has access to 1000 accounts and they can do things like view orders, and funds, and create new orders through the API.CryptoTick - CryptoTick offers a ""pay as you go"" service, where customers pay for the exact usage of the service rather than a subscription. Customers can pre-purchase a certain amount of units and can use the service until their balance runs out, after which they can top up again. CryptoTick does not have an application programming interface (API), which allows applications to integrate. Instead, customers can go directly to the site to get the requested information; they just need to specify what they require, and the data will then be provided to them. Therefore, CryptoTick is an ideal solution for customers needing historical data, as it is a user interface and not an application.Why choose CoinAPI?​CoinAPI provides a complete toolkit for your cryptocurrency assets:API access to real-time and historical market data. CoinAPI gives access to both historical and current market information. It supplies customers with the most current quotes and trades and presents them in real time, allowing them to incorporate the data into crypto projects. Low latency and high quality. Quick response times and superior accuracy. Human experts double-check stock symbols and asset codes to guarantee accuracy. Every interface you need. We deliver three different protocols: REST, FIX, and WebSocket, so you don’t need to worry about what interface each exchange has, and what it supports. CoinAPI is integrated with almost all exchanges. CoinAPI boasts a wide-reaching integration with up to 350 exchanges, enabling users to access comprehensive data such as order books, transactions, quotes, and metadata. Furthermore, our platform aggregates this information to generate metrics and metadata from different exchanges and interprets the data to create an understanding of it across exchanges. Additionally, we archive all the data to provide our users with access to the exchanges and the data they contain.Redundancy. It's important to consider redundancy when selecting a dependable API partner, to make sure they provide server redundancy. This means that customers can access their nearest region by default, and in the case of any issues, a redundant region is automatically and immediately available. Developer-friendly interfaces. SDK in 40 languages. CoinAPI has you covered with multi-language SDKs and great documentation tailored to every endpoint. Our Software Development Kit (SDK) is available on GitHub at https://github.com/coinapi/coinapi-sdkCreate multiple API Keys for the subscription to create a virtual space used to safely test, train, and experiment with changes or configurations to a system. It allows users to replicate their production environment and make modifications without the risk of disrupting their current operations. This is an invaluable tool for exploring new features and troubleshooting potential issues.Data standardization. By standardizing data collection via CoinAPI, you are one step closer to having a complete and clean crypto data view that you can use.Order books of the highest quality. A market order is an order to buy or sell an asset at the current best available price in the market. Moreover, they guarantee immediate execution but do not guarantee a specific price.OHLCV data. With CoinAPI you can retrieve Open-High-Low-Close (OHLC) data, historical quotes, and historical trades. You can easily specify the type of data you want to retrieve using query parameters. Companies can gain a range of advantages from CoinAPI, such as gaining essential information, straightforward integration, and automation. Clients can get all of their crypto APIs in one place, which makes it easier to manage large-scale crypto operations, trading, and data access.Still uncertain about how CoinAPI can help your business? Try out your use case and find out if CoinAPI meets your requirements. You can get your free API key here. Support​If you have any questions or need assistance, you can visit our support page and read the FAQ. Furthermore, you can contact our team if you require additional help. Systems Status​Keep informed of the operational status of CoinAPI and any reports of interruptions.CoinAPI Blog​Stay informed and keep up-to-date with the most recent news from CoinAPI by checking our blog.Was this section helpful?12345NextAuthenticationWhat is CoinAPI?Our missionCoinAPI product portfolioWhy choose CoinAPI?SupportSystems StatusCoinAPI BlogCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/#list-all-symbols)"
240,i.io general customer portal,"i.io general customer portal.   Customer Portal | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalMetrics tab explainedTraces view explainedFAQGlossaryChangelogCustomer PortalOn this pageCustomer PortalCoinAPI Customer Portal​Overview​The CoinAPI Customer Portal is your centralized hub for managing all aspects of your CoinAPI account. Designed with user convenience in mind, this portal allows you to efficiently oversee your subscription, monitor your API usage, manage your API keys, and access essential support resources.Key Features​Subscription Management​View and Update Subscription Plans: Easily view your current subscription details and upgrade or downgrade your plan as needed.Billing Information: Access and update your billing information, view invoices, and manage payment methods.API Usage Monitoring​Real-Time Usage Stats: Track your API calls in real-time to ensure you stay within your plan’s limits.Usage Reports: Generate detailed reports on your API usage over specific periods to analyze and optimize your consumption.API Key Management​Create and Manage API Keys: Generate new API keys, deactivate old ones, and manage permissions to ensure your data is secure.Key Usage Statistics: Monitor the usage of individual API keys to identify any anomalies or optimize performance.Support Resources​Knowledge Base: Access a comprehensive knowledge base with detailed articles and guides to help you get the most out of CoinAPI.Ticketing System: Submit support tickets directly through the portal and track their status.Contact Support: Find various ways to contact our support team for personalized assistance.Benefits​Efficiency: Centralized control over all account-related activities saves time and reduces administrative overhead.Transparency: Clear visibility into your API usage and billing helps you manage costs and prevent overages.Security: Advanced API key management features ensure your data and resources are protected.Getting Started​To access the CoinAPI Customer Portal, simply log in at Customer Portal Login and start managing your API services today.Was this section helpful?12345PreviousAuthenticationNextMetrics tab explainedCoinAPI Customer PortalOverviewKey FeaturesBenefitsGetting StartedCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/customer-portal)"
241,i.io faq account How I can update my credit card or billing information,"i.io faq account How I can update my credit card or billing information.   How I can update my credit card / billing information? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountHow I can update my credit card / billing information?How can I change my CoinAPI account's email address?How can I get an invoice or receipt?How do I make an account?I want to change my account's name?Managing Team MembersCan I add other users to my account?How do I get an additional API key?APIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQCustomer AccountHow I can update my credit card / billing information?How I can update my credit card / billing information?Using our Customer Portal - Payment methods you can:Add a new credit cardRemove the attached credit cardSet one credit card as the default payment methodIf we need to charge your company account, then we will use the payment method marked as the default first. In the event that we are unable to complete the charge using the default payment method, then we will retry it using all other credit cards attached to the Account. After logging in to the Customer Portal (https://customerportal.coinapi.io/login) navigate to Payment Methods section. Only emails related to active or canceled paid subscriptions can log into the Customer Portal unless the Product Support Team created the Account.Was this section helpful?12345PreviousCustomer AccountNextHow can I change my CoinAPI account's email address?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/account/How-I-can-update-my-credit-card-or-billing information)"
242,i.io faq general How does the full orderbook stream work,"i.io faq general How does the full orderbook stream work.   How does the full orderbook stream work? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralHow does the full orderbook stream work?How does the full orderbook stream work?WebSocket API (data type = 'book')To maintain full order book visibility you need to first process snapshot (message with is_snapshot = true), after that when you have the full order book state, then you need to apply updates to that order book (message with is_snapshot = false).We can at our discretion provide a snapshot in the middle of the connection. If you receive a snapshot in the middle of the connection, then you must invalidate the previous order book state and apply the snapshot as the current state of the book.You could process updates to the book only if you received a snapshot for that book.Snapshot will be delivered instead of the first order book change after establishing a WebSocket API subscription. More information: https://docs.coinapi.io/market-data/websocket/messages#orderbook-l2-full--inWas this section helpful?12345PreviousHow do I enable overage?NextHow granular is your data?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/How-does-the-full-orderbook-stream-work)"
243,i.io general faq general What is the max number of accounts an Enterprise plan can have,"i.io general faq general What is the max number of accounts an Enterprise plan can have.   What is the max number of accounts an Enterprise plan can have? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralWhat is the max number of accounts an Enterprise plan can have?What is the max number of accounts an Enterprise plan can have?There is no limit, and we have no additional fees for high volume usage.Was this section helpful?12345PreviousWhat is CoinAPI?NextWhat market symbol types are supported by CoinAPI?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/What-is-the-max-number-of-accounts-an-Enterprise-plan-can-have)"
244,i.io general glossary Satoshi,"i.io general glossary Satoshi.   Satoshi | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGlossaryBlockchain Address and OutputBlockchain NodeChain (Blockchain)EndpointJSONNetworkSatoshiTransactionWalletBlockchain BlockChangelogGlossarySatoshiOn this pageSatoshiSatoshi​A Satoshi is the smallest unit of Bitcoin, named after its creator. One Bitcoin is equal to 100,000,000 Satoshis. The concept of Satoshis allows for fine-grained transactions and microtransactions within the Bitcoin network.Key Characteristics​Divisibility: Satoshis enable Bitcoin to be divided into very small units, facilitating transactions of all sizes.Naming: Named in honor of Satoshi Nakamoto, the pseudonymous creator of Bitcoin.Importance​Microtransactions: Satoshis make it possible to conduct very small transactions, which is essential for various applications and services that require micro-payments.Adoption and Usability: The divisibility into Satoshis enhances the usability of Bitcoin, allowing it to be used for a wider range of transactions.Was this section helpful?12345PreviousNetworkNextTransactionSatoshiCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/glossary/Satoshi)"
245,i.io market data rest api quotes quotes latest data,"i.io market data rest api quotes quotes latest data.   Latest data | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcvOrder BookOrder Book L3Quotes Current data Current quotes for a specific symbol Historical data Latest data Latest quote updates for a specific symbolTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIQuotes Latest data Latest dataGET /v1/quotes/latestGet latest updates of the quotes up to 1 minute ago. Latest data is always returned in time descending order.Query Parametersfilter_symbol_id stringComma or semicolon delimited parts of symbol identifier used to filter response. (optional)limit int32Default value: 100Amount of items to return (optional, mininum is 1, maximum is 100000, default value is 100, if the parameter is used then every 100 output items are counted as one request)Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the quote.time_coinapi date-timeThe CoinAPI time when the quote was received.ask_price double nullableThe best asking price.ask_size double nullableThe volume resting on the best ask. If the value is equal to zero, then the size is unknown.bid_price double nullableThe best bidding price.bid_size double nullableThe volume resting on the best bid. If the value is equal to zero, then the size is unknown.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.273Z"", ""time_coinapi"": ""2024-07-16T12:55:05.273Z"", ""ask_price"": 0, ""ask_size"": 0, ""bid_price"": 0, ""bid_size"": 0 }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124 }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124 }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the quote.time_coinapi date-timeThe CoinAPI time when the quote was received.ask_price double nullableThe best asking price.ask_size double nullableThe volume resting on the best ask. If the value is equal to zero, then the size is unknown.bid_price double nullableThe best bidding price.bid_size double nullableThe volume resting on the best bid. If the value is equal to zero, then the size is unknown.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.273Z"", ""time_coinapi"": ""2024-07-16T12:55:05.273Z"", ""ask_price"": 0, ""ask_size"": 0, ""bid_price"": 0, ""bid_size"": 0 }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124 }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124 }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the quote.time_coinapi date-timeThe CoinAPI time when the quote was received.ask_price double nullableThe best asking price.ask_size double nullableThe volume resting on the best ask. If the value is equal to zero, then the size is unknown.bid_price double nullableThe best bidding price.bid_size double nullableThe volume resting on the best bid. If the value is equal to zero, then the size is unknown.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.273Z"", ""time_coinapi"": ""2024-07-16T12:55:05.273Z"", ""ask_price"": 0, ""ask_size"": 0, ""bid_price"": 0, ""bid_size"": 0 }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124 }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124 }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the quote.time_coinapi date-timeThe CoinAPI time when the quote was received.ask_price double nullableThe best asking price.ask_size double nullableThe volume resting on the best ask. If the value is equal to zero, then the size is unknown.bid_price double nullableThe best bidding price.bid_size double nullableThe volume resting on the best bid. If the value is equal to zero, then the size is unknown.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.273Z"", ""time_coinapi"": ""2024-07-16T12:55:05.273Z"", ""ask_price"": 0, ""ask_size"": 0, ""bid_price"": 0, ""bid_size"": 0 }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124 }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124 }]Loading...Was this section helpful?12345Previous Historical dataNext Latest quote updates for a specific symbolCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/quotes/quotes-latest-data)"
246,i.io naas api bitcoin Methods listlabels,"i.io naas api bitcoin Methods listlabels.   listlabels | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodslistlabelsOn this pagelistlabelsOverview​The 'listlabels' Returns the list of all labels, or labels that are assigned to addresses with a specific purpose.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""listlabels"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""listlabels\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""listlabels"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""2.0"", ""method"": ""listlabels"", ""params"": [], ""id"": 1})headers = { 'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type': 'application/json', 'accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""listlabels"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""bumpfee"",""params"": [],""id"":1}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"")req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({""jsonrpc"": ""2.0"",""method"": ""bumpfee"",""params"": [],""id"": 1})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""bumpfee\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​purpose: Address purpose to list labels for (‘send’,’receive’). An empty string is the same as not providing this argument.Response​{ ""result"": null, ""error"": { ""code"": -18, ""message"": ""No wallet is loaded. Load a wallet using loadwallet or create a new one with createwallet. (Note: A default wallet is no longer automatically created)"" }, ""id"": 1}Was this section helpful?12345PreviouslistbannedNextlistlockunspentOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/listlabels)"
247,i.io cdn cgi l email protection#b8cbcdc8c8d7caccf8dbd7d1d6d9c8d196d1d7,"i.io cdn cgi l email protection#b8cbcdc8c8d7caccf8dbd7d1d6d9c8d196d1d7.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 8aad29ba4d77b347 •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#b8cbcdc8c8d7caccf8dbd7d1d6d9c8d196d1d7)"
248,i.io general faq api I received a reconnect message from using Websocket,"i.io general faq api I received a reconnect message from using Websocket.   I received a reconnect message from Websocket | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer EMS Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What is the rate limit for EMS Trading API?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQAPII received a reconnect message from WebsocketI received a reconnect message from WebsocketReconnect message is sent by the server to all connected clients when the server will be restarted or shut down at the defined exact time included in the message content. After the period specified in message passes, the client must expect that the underlying WebSocket connection will be closed from the server-side. A new connection will automatically be established to a different server.The correct way of handling this event depends on the specific requirements of the integration, but we can define standard ways how to handle it:Wait for the connection to be closed and reconnectReconnect immediately after receiving the messageUpon receiving the message, establish a second connection, and subscribe to the same scope of data. When the first connection is disconnected, do not reconnect it and instead transparently switch the data streams between connections. This method requires more implementation as a transparent switch of the data stream must not break the sequence for streams published using the initial snapshot and update messages. To make sure the sequence is correct, the client must: (a) maintain a state by applying updates to snapshot or (b) buffer the data from the second connection and processing it at the transparent connection switch.Example JSON reconnect message is structured like this:{ ""type"": ""reconnect"", ""within_seconds"": 10, ""before_time"": ""2020-08-06T19:19:09.7035429Z"",}Was this section helpful?12345PreviousHow to use CoinAPI from Matlab?NextWhat are the restrictions on usage of real-time protocols?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/api/I-received-a-reconnect-message-from-using-Websocket)"
249,i.io naas api bitcoin Methods getmininginfo,"i.io naas api bitcoin Methods getmininginfo.   getmininginfo | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetmininginfoOn this pagegetmininginfoOverview​The 'getmininginfo' method returns a json object containing mining-related information.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""bumpfee"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KE"");var content = new StringContent(""{\""jsonrpc\"":\""1.0\"",\""id\"":1,\""method\"":\""getmininginfo\"",\""params\"": [ ]}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KE'];$body = '{ ""jsonrpc"": ""1.0"", ""id"": 1, ""method"": ""getmininginfo"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection(""mainnet-bitcoin.node.coinapi.io"")payload = json.dumps({""jsonrpc"": ""1.0"",""id"": 1,""method"": ""getmininginfo"",""params"": []})headers = {'Content-Type': 'application/json','accept': 'application/json','X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KE'}conn.request(""POST"", ""/"", payload, headers)res = conn.getresponse()data = res.read()print(data.decode(""utf-8""))var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KE"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""1.0"", ""id"": 1, ""method"": ""getmininginfo"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""1.0"",""id"":1,""method"":""getmininginfo"",""params"": [ ]}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KE"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KE""request.body = JSON.dump({""jsonrpc"": ""1.0"",""id"": 1,""method"": ""getmininginfo"",""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""jsonrpc\"":\""1.0\"",\""id\"":1,\""method\"":\""getmininginfo\"",\""params\"": [ ]}"");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KE"") .build();Response response = client.newCall(request).execute();Request Parameters​Response​{ ""result"": [ ""blocks"", ""currentblockweight"", ""currentblocktx"", ""difficulty"", ""networkhashps"", ""pooledtx"", ""chain"", ""warnings"", ... ], ""error"": null, ""id"": ""unique_id"", ""jsonrpc"": ""2.0""}Was this section helpful?12345PreviousgetmempoolinfoNextgetnettotalsOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getmininginfo)"
250,i.io faq general What market symbol types are supported by CoinAPI,"i.io faq general What market symbol types are supported by CoinAPI.   What market symbol types are supported by CoinAPI? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralWhat market symbol types are supported by CoinAPI?What market symbol types are supported by CoinAPI?TypeNameDescriptionSPOTFX SpotAgreement to exchange one asset for another one (e.g. Buy BTC for USD)FUTURESFutures contractFX Spot derivative contract where traders agree to trade fx spot at predetermined future timeOPTIONOption contractFX Spot derivative contract where traders agree to trade right to require buy or sell of fx spot at agreed price on exercise datePERPETUALPerpetual contractFX Spot derivative contract where traders agree to trade fx spot continously without predetermined future delivery timeINDEXIndexStatistical composite that measures changes in the economy or markets.CREDITCredit/FundingMargin funding contract. Order book displays lending offers and borrow bids. Price represents the daily rate.CONTRACTContractRepresents other types of financial instruments(e.g. spreads, interest rate swap)Our symbols identifiers are created using a pattern that depends on the symbol type:Typesymbol_id patternSPOT{exchange_id}_SPOT_{asset_id_base}_{asset_id_quote}FUTURES{exchange_id}_FTS_{asset_id_base}_{asset_id_quote}_{YYMMDD of future_delivery_time}OPTION{exchange_id}_OPT_{asset_id_base}_{asset_id_quote}_{YYMMDD of option_expiration_time}_{option_strike_price}_{option_type_is_call as C/P}PERPETUAL{exchange_id}_PERP_{asset_id_base}_{asset_id_quote}INDEX{exchange_id}_IDX_{index_id}CREDIT{exchange_id}_CRE_{asset_id_base}CONTRACT{exchange_id}_COT_{contract_id}To get a list of all symbols, you can use this request: https://rest.coinapi.io/v1/symbols To see a list of symbols related to a specific exchange, market, or asset, please see this article: https://docs.coinapi.io/faq/api/How-can-I-see-a-list-of-symbols-related-to-a-specific-exchange-market-or-assetFor more information, please see our documentation: https://docs.coinapi.io/market-data/rest-api/metadata#symbol-identifierWas this section helpful?12345PreviousWhat is CoinAPI?NextWhat types of data does CoinAPI provide?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/What-market-symbol-types-are-supported-by-CoinAPI)"
251,i.io faq general How is trade volume calculated,"i.io faq general How is trade volume calculated.   How is trade volume calculated? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralHow is trade volume calculated?How is trade volume calculated?Volumes are calculated from the trades recorded through the API provided by the data source. We do not use the aggregated values provided by the source; all aggregations are performed using raw market data.Was this section helpful?12345PreviousHow granular is your data?NextHow long does it take to integrate CoinAPI?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/How-is-trade-volume-calculated)"
252,i.io naas api #node,"i.io naas api #node.   NaaS API | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumNaaS APIOn this pageNaaS APIIntroduction​The NaaS API is a software product that provides a set of tools for developers to interact with the blockchain.It make it easier to interface with blockchains, allowing developers to concentrate on creating apps rather than maintaining the supporting infrastructure. Technical design​We provide public nodes that act as gateways to popular blockchains, including Bitcoin, Ethereum and more. These nodes are accessible through a range of HTTP API endpoints, allowing developers and applications to interact with blockchain data effortlessly.For a full list of available endpoints click here.Essentials​Node serves as both a server and software component responsible for exposing an API to interact with the blockchain.Chain or Blockchain, is a distributed and immutable ledger that records all transactions across a decentralized network.Network refers to the entire ecosystem of blockchain participants, including nodes, users, and miners, connected via a specific blockchain protocol.Endpoints​The list of endpoints is available in the documentation for each exchange.Getting started​To begin using the NaaS API, you'll need:CoinAPI key (obtainable by signing up on our website).Access an operational Node via any of our endpoints Familiarity with HTTP & JSON-RPCFamiliarity with the methods exposed by the blockchain you want to interact with such as Bitcoin, Ethereum or any other of your choiceGeneral information​NaaS API is dedicated to developers who wish to integrate their applications with the various blockchains and their ecosystems. The NaaS API facilitates interaction with nodes connected to different blockchains, allowing access to on-chain data and enabling the transmission of transactions onto the network. JSON-RPC Standard​The NaaS API operates on the JSON-RPC protocol. JSON-RPC is a lightweight and stateless remote procedure call (RPC) protocol widely used in communicating with blockchain nodes. All queries and responses in this API are formatted in JSON.Authentication & Security​Depending on your preference, you can either utilize an API key or enhance security by combining an API key with JWT token.For more details go to our Authentication section.Best PracticesNever expose your API key in a client-side application or a public code repository. Always keep it securely on your server.Always communicate with the CoinAPI NaaS API over HTTPS (SSL/TLS) to encrypt data transmitted between your application and CoinAPI's serversWhen possible, avoid sending personally identifiable information (PII)Monitor for updates as our API can evolve, regularly check for updates to ensure compatibilitydangerOnce your API key falls into the wrong hands, it can be used to make requests within your subscription.infoIf your key has been compromised, you have the option to delete it at any time and generate a new oneLimits​Your Subscription might have rate limits in place. Ensure you're making requests within the allowed limits to avoid being interruption in access.Http Status Codes​When the status code is not 200, it indicates a lack of response from the node.Even if a 200 status code is received, there may still be a JSON-RPC error at the node level.A status code different from 200 implies that the response is not a JSON-RPC response.Successful JSON-RPC Responses​200 OK, valid response:{ ""jsonrpc"": ""2.0"", ""id"": ""tracking-id-001"", ""result"": ""0x11baedc""}JSON-RPC Error Responses​200 OK, includes error code from the node:{ ""jsonrpc"": ""2.0"", ""id"": ""tracking-id-001"", ""error"": {  ""code"": -32602,  ""message"": ""too many arguments, want at most 0"" }}Non-JSON-RPC Error Responses (other than 200)​401, unauthorized:{ ""error"": ""Invalid API key""}Possible HTTP status codes and their meaning are listed below:Status CodeMeaning200Your request has been successfully processed by the server. However, it's essential to examine the response data as there might be JSON-RPC errors within the node's response.400Your request is malformed or contains incorrect parameters. There is an issue with the request itself.401Your request lacks proper authentication. It is typically due to an incorrect API key.403Your API key lacks the necessary permissions to access the requested resource.429Your request has exceeded the rate limits associated with your API key.550Server cannot provide the requested data at the moment. This may occur when requesting specific single items that are temporarily unavailable.Making API Calls​Json-RPC provides a structured and straightforward approach to sending and receiving data, making it accessible for developers using a wide range of programming languages and tools.curlYou can use the curl command-line tool to make requests. Here's an example of how to make a POST request to the Ethereum JSON-RPC API using curl:curl -X POST \ ""https://ethereum-mainnet-geth-archive.node.coinapi.io?apiKey=YOUR_API_KEY"" \ -H ""Content-Type: application/json"" \ -d '{ ""jsonrpc"": ""2.0"", ""method"": ""eth_getTransactionReceipt"", ""params"": [""0x2444a649cd7fcd50ccb8c52c4159515fdf311eeb5dc02cf1b2c397b833fde012""], ""id"": 1 }'web3.jsIf you prefer to use JavaScript and the web3.js library to interact with NaaS API, you can make request like this:const axios = require('axios');const url = 'https://ethereum-mainnet-geth-archive.node.coinapi.io?apiKey=YOUR_API_KEY';const data = { jsonrpc: '2.0', method: 'eth_getTransactionReceipt', params: ['0x2444a649cd7fcd50ccb8c52c4159515fdf311eeb5dc02cf1b2c397b833fde012'], id: 1,};axios.post(url, data, { headers: { 'Content-Type': 'application/json', },}) .then(response => { console.log(response.data); }) .catch(error => { console.error(error); });PythonYou can also use Python to make HTTP POST requests to the NaaS API using the requests library. Here's an example:import requestsurl = 'https://ethereum-mainnet-geth-archive.node.coinapi.io?apiKey=YOUR_API_KEY'data = { 'jsonrpc': '2.0', 'method': 'eth_getTransactionReceipt', 'params': ['0x2444a649cd7fcd50ccb8c52c4159515fdf311eeb5dc02cf1b2c397b833fde012'], 'id': 1,}headers = {'Content-Type': 'application/json'}response = requests.post(url, json=data, headers=headers)if response.status_code == 200: result = response.json() print(result)else: print(f""Request failed with status code {response.status_code}"")Batch requests | Multi-Call​Multiple requests can be sent simultaneously in an array when using the NaaS API, allowing for efficient handling of multiple operations. In such a scenario, each request within the array is processed before all the requests are returned.When requests are sent in a batch, they will only be returned after every request has been processed. This behavior is particularly useful when you need to perform multiple operations and want to wait for all of them to complete before proceeding.Example of a Batch Request[ {""jsonrpc"": ""2.0"", ""id"": ""tracking-id-001"", ""method"": ""eth_blockNumber"", ""params"": []}, {""jsonrpc"": ""2.0"", ""id"": ""tracking-id-002"", ""method"": ""eth_chainId"", ""params"": []}]In this batch request, we have two distinct JSON-RPC requests bundled togethe:The first request, identified by tracking-id-001 invokes the eth_blockNumber, aiming to retrieve the current block number.The second request, with the identifier tracking-id-002 calls the eth_chainId to fetch the current chain ID.Response to the Batch Request[ {  ""jsonrpc"": ""2.0"",  ""id"": ""tracking-id-001"",  ""result"": ""0x11bb158"" }, {  ""jsonrpc"": ""2.0"",  ""id"": ""tracking-id-002"",  ""result"": ""0x1"" }]Data Streaming​TODOSupport​If you encounter any issues or have further questions regarding the Ethereum API, please contact our support team at [email protected].Summary​With the NaaS API, you can fully leverage the potential of the different blockchains in your applications. This documentation covers all the necessary information to start utilizing this API and creating innovative blockchain-based solutions. Was this section helpful?12345NextAuthenticationIntroductionTechnical designEssentialsEndpointsGetting startedGeneral informationJSON-RPC StandardAuthentication & SecurityLimitsHttp Status CodesMaking API CallsBatch requests | Multi-CallData StreamingSupportSummaryCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/#node)"
253,i.io ems api managed cloud rest api account delete account all,i.io ems api managed cloud rest api account delete account all.   Delete all accounts | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIAccountDelete accountDelete all accountsGet accountsAdd or update accountCertificateEndpointsExchangeLocationREST APIWebSocket APIFIX APISelf Hosted GuideManaged Cloud REST APIAccountDelete all accountsDelete all accountsDELETE /v1/accounts/allDelete all exchange accounts maintained by the EMS API for your subscription.Responses200OKLoading...Was this section helpful?12345PreviousDelete accountNextGet accountsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/managed-cloud-rest-api/account/delete-account-all)
254,i.io naas api bitcoin Methods getrawtransaction,"i.io naas api bitcoin Methods getrawtransaction.   getrawtransaction | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetrawtransactionOn this pagegetrawtransactionOverview​The 'getrawtransaction' RPC method is utilized to retrieve raw transaction data from the Bitcoin blockchain.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""getrawtransaction"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""getrawtransaction\"",\""params\"": [ ]}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getrawtransaction"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection(""mainnet-bitcoin.node.coinapi.io"")payload = json.dumps({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""getrawtransaction"",""params"": []})headers = {'Content-Type': 'application/json','accept': 'application/json','X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}conn.request(""POST"", ""/"", payload, headers)res = conn.getresponse()data = res.read()print(data.decode(""utf-8""))var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getrawtransaction"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""id"":1,""method"":""getrawtransaction"",""params"": [ ]}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""getrawtransaction"",""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""getrawtransaction\"",\""params\"": [ ]}"");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​txid (String) (Required):Description: Identifies the transaction.verbose (Integer):Default: 0Description: Determines the format of the response.0: Returns hex-encoded data.1: Returns a JSON object.2: Returns a JSON object inclusive of fee and prevout details.blockhash (String):Description: Specifies the block to search for the transaction.Response​Response when verbose is true:{ ""result"": { ""in_active_chain"": true, ""hex"": ""01000000014fe3a69..."", ""txid"": ""4d3c3bf037d4a1e8598b5d..."", ""hash"": ""9a3bb560407fe8659c4e..."", ""size"": 225, ""vsize"": 144, ""weight"": 573, ""version"": 2, ""locktime"": 0, ""vin"": [  {  ""txid"": ""e29c7c3997a9f7c67c..."",  ""vout"": 0,  ""scriptSig"": {   ""asm"": ""3045022100d29d8a651edf7..."",   ""hex"": ""473044022051d81...""  },  ""sequence"": 4294967295,  ""txinwitness"": [   {   ""hex"": ""3045022100d29d8...""   }  ]  } ], ""vout"": [  {  ""value"": 0.8995,  ""n"": 0,  ""scriptPubKey"": {   ""asm"": ""OP_DUP OP_HASH160 7f9b1a..."",   ""hex"": ""76a9147f9b1a7e..."",   ""desc"": ""pkh([dab5b6a1/44'/0'/0'/0]03...)"",   ""type"": ""pubkeyhash"",   ""address"": {   ""str"": ""1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa""   }  }  } ], ""blockhash"": ""0000000000000bae09a7a393e0..."", ""confirmations"": 536, ""blocktime"": 1611718263, ""time"": 1611718263 }, ""error"": null, ""id"": ""curltest""}If verbose is unset or set to 0:str: Returns the serialized, hex-encoded data corresponding to the 'txid'.If verbose is set to 1 or 2:in_active_chain: Indicates if the specified block is in the active chain (only available when 'blockhash' parameter is utilized).hex: Serialized, hex-encoded data for the 'txid'.txid: Identifies the transaction.hash: The hash of the transaction (differs from txid for witness transactions).size: Indicates the transaction size.vsize: Represents the virtual transaction size (differs for witness transactions).weight: Specifies the transaction weight, calculated between 'vsize*4 - 3' and 'vsize*4'.version: Indicates the block version.locktime: Represents the transaction locktime.vin: A JSON array representing the input vectors of the transaction, comprising of:txid: Transaction id.vout: Output number.scriptSig: Script's signature details, including:asm: Script's public key as a string.hex: Hex-encoded witness data.sequence: Script's sequence number.txinwitness: An array of JSON objects containing hex-encoded witness data.vout: A JSON array with transaction output details, including:value: Value in BTC.n: Output index.scriptPubKey: A JSON object with PubKey script information, encompassing:asm: Script public key as a string.hex: Hex representation of the script's public key.desc: Inferred descriptor for the output.type: Script type, such as pubkeyhash or multisig.address: Details of the Bitcoin address, featuring:str: Bitcoin address as a string.blockhash: The hash of the block.confirmations: The count of confirmed transactions in the block.blocktime: Block time, represented in UNIX epoch time.time: Echoes 'blocktime'.Was this section helpful?12345PreviousgetrawmempoolNextgetreceivedbyaddressOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getrawtransaction)"
255,i.io naas api ethereum Methods eth getTransactionByHash,"i.io naas api ethereum Methods eth getTransactionByHash.   eth_getTransactionByHash | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_getTransactionByHashOn this pageeth_getTransactionByHashOverview​The 'eth_getTransactionByHash' method returns information about a transaction for a given hash.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'content-type: application/json' \  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data '{ ""id"": 1, ""jsonrpc"": ""2.0"", ""params"": [ ""0x88df016429689c079f3b2f6ad39fa052532c56795b733da78a91ebe6a713944b"" ], ""method"": ""eth_getTransactionByHash""}'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0x88df016429689c079f3b2f6ad39fa052532c56795b733da78a91ebe6a713944b\""],\""method\"":\""eth_getTransactionByHash\""}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"",CURLOPT_RETURNTRANSFER => true,CURLOPT_ENCODING => """",CURLOPT_MAXREDIRS => 10,CURLOPT_TIMEOUT => 30,CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,CURLOPT_CUSTOMREQUEST => ""POST"",CURLOPT_POSTFIELDS => json_encode(['id' => 1,'jsonrpc' => '2.0','params' => ['0x88df016429689c079f3b2f6ad39fa052532c56795b733da78a91ebe6a713944b'],'method' => 'eth_getTransactionByHash']),CURLOPT_HTTPHEADER => [""accept: application/json"",""content-type: application/json"",""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY""],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) {echo ""cURL Error #:"" . $err;} else {echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""params"": [""0x88df016429689c079f3b2f6ad39fa052532c56795b733da78a91ebe6a713944b""], ""method"": ""eth_getTransactionByHash""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text) const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({ id: 1, jsonrpc: '2.0', params: ['0x88df016429689c079f3b2f6ad39fa052532c56795b733da78a91ebe6a713944b'], method: 'eth_getTransactionByHash' })};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0x88df016429689c079f3b2f6ad39fa052532c56795b733da78a91ebe6a713944b\""],\""method\"":\""eth_getTransactionByHash\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0x88df016429689c079f3b2f6ad39fa052532c56795b733da78a91ebe6a713944b\""],\""method\"":\""eth_getTransactionByHash\""}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0x88df016429689c079f3b2f6ad39fa052532c56795b733da78a91ebe6a713944b\""],\""method\"":\""eth_getTransactionByHash\""}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​'transaction hash': [Required] A string representing the hash (32 bytes) of a transaction.Response​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": { ""blockHash"": ""0x1d59ff54b1eb26b013ce3cb5fc9dab3705b415a67127a003c3e61eb445bb8df2"", ""blockNumber"": ""0x5daf3b"", ""hash"": ""0x88df016429689c079f3b2f6ad39fa052532c56795b733da78a91ebe6a713944b"", ""from"": ""0xa7d9ddbe1f17865597fbd27ec712455208b6b76d"", ""gas"": ""0xc350"", ""gasPrice"": ""0x4a817c800"", ""input"": ""0x68656c6c6f21"", ""nonce"": ""0x15"", ""r"": ""0x1b5e176d927f8e9ab405058b2d2457392da3e20f328b16ddabcebc33eaac5fea"", ""s"": ""0x4ba69724e8f69de52f0125ad8b3c5c2cef33019bac3249e2c0a2192766d1721c"", ""to"": ""0xf02c1c8e6114b1dbe8937a39260b5b0a374432bb"", ""transactionIndex"": ""0x41"", ""type"": ""0x0"", ""v"": ""0x25"", ""value"": ""0xf3dbb76162000"" }}A transaction object, or 'null' when no transaction was found. The transaction object will consist of the following keys and their values:'accessList': [Optional] A list of addresses and storage keys accessed by the transaction. See access list transactions.'blockHash': 32 bytes. A hash of the block including this transaction. 'null' when it's pending.'blockNumber': The number of the block including this transaction. 'null' when it's pending.'chainID': [Optional] Chain ID specifying the network. Returned only for EIP-1559 transactions.'from': 20 bytes. The address of the sender.'gas': Gas provided by the sender.'gasPrice': Gas price provided by the sender in Wei.'hash': 32 bytes. The hash of the transaction.'input': The data sent along with the transaction.'maxPriorityFeePerGas': [Optional] Maximum fee, in Wei, the sender is willing to pay per gas above the base fee. See EIP-1559 transactions.'maxFeePerGas': [Optional] Maximum total fee (base fee + priority fee), in Wei, the sender is willing to pay per gas. See EIP-1559 transactions.'nonce': The number of transactions made by the sender prior to this one.'r': 32 bytes. The ECDSA signature 'r'.'s': 32 bytes. The ECDSA signature 's'.'to': 20 bytes. The address of the receiver. 'null' when it's a contract creation transaction.'transactionIndex': The transaction's index position in the block, in hexadecimal. 'null' when it's pending.'type': The transaction type.'v': The ECDSA recovery ID.'value': The value transferred in Wei.Was this section helpful?12345Previouseth_getTransactionByBlockNumberAndIndexNexteth_getTransactionCountOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_getTransactionByHash)"
256,i.io naas api bitcoin Methods getchaintips,"i.io naas api bitcoin Methods getchaintips.   getchaintips | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetchaintipsOn this pagegetchaintipsOverview​The 'getchaintips' RPC method provided by CoinAPI offers detailed insights into all recognized chaintips in the block tree. This encompasses information on the main chain as well as any orphaned branches.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""getchaintips"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""getchaintips\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""getchaintips"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""2.0"", ""method"": ""getchaintips"", ""params"": [], ""id"": 1})headers = { 'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type': 'application/json', 'accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""getchaintips"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) {console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""getchaintips"",""params"": [],""id"":1}`) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"") req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""method"": ""getchaintips"", ""params"": [], ""id"": 1})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""getchaintips\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​This method does not require any parameters.Response​{ ""result"": [ {  ""height"": 810528,  ""hash"": ""00000000000000000004749a1d06c52c2442a7bec69ace34edb9a0d6e9102182"",  ""branchlen"": 0,  ""status"": ""active"" }, {  ""height"": 792379,  ""hash"": ""000000000000000000032956cbfd8721abe0572d81542e75e38e6185312bee09"",  ""branchlen"": 1,  ""status"": ""valid-fork"" }, {  ""height"": 791130,  ""hash"": ""00000000000000000000e66ee68d93839fbff6f01482562737c05d5be5db033e"",  ""branchlen"": 1,  ""status"": ""valid-headers"" } ], ""error"": null, ""id"": 1}The method returns the following data:height: Represents the height of the chain tip.hash: Indicates the block hash of the tip.branchlen: This is zero for the main chain. For other branches, it indicates the length of the branch connecting the tip to the main chain.status: Describes the status of the chain. The ""active"" status is assigned to the main chain.Other potential statuses include:invalid: This status is assigned when the branch contains at least one block that is invalid.headers-only: This status is assigned when only the headers are valid, but not all blocks for this branch are present.valid-headers: This status is assigned when the branch contains all blocks, but they haven't been fully validated.valid-fork: This status is assigned when the branch has been fully validated but is not part of the active chain.active: This status is assigned when the branch represents the tip of the active main chain, which is definitively valid.Was this section helpful?12345PreviousgetblocktemplateNextgetchaintxstatsOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getchaintips)"
257,i.io naas api ethereum Methods eth getTransactionByBlockNumberAndIndex,"i.io naas api ethereum Methods eth getTransactionByBlockNumberAndIndex.   eth_getTransactionByBlockNumberAndIndex | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_getTransactionByBlockNumberAndIndexOn this pageeth_getTransactionByBlockNumberAndIndexOverview​The 'eth_getTransactionByBlockNumberAndIndex' method returns information about a transaction by block number and transaction index position.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data '{ ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_getTransactionByBlockNumberAndIndex""}'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getTransactionByBlockNumberAndIndex\""}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"",CURLOPT_RETURNTRANSFER => true,CURLOPT_ENCODING => """",CURLOPT_MAXREDIRS => 10,CURLOPT_TIMEOUT => 30,CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,CURLOPT_CUSTOMREQUEST => ""POST"",CURLOPT_POSTFIELDS => json_encode(['id' => 1,'jsonrpc' => '2.0','method' => 'eth_getTransactionByBlockNumberAndIndex']),CURLOPT_HTTPHEADER => [""accept: application/json"",""content-type: application/json"",""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY""],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) {echo ""cURL Error #:"" . $err;} else {echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_getTransactionByBlockNumberAndIndex""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text) const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({id: 1, jsonrpc: '2.0', method: 'eth_getTransactionByBlockNumberAndIndex'})};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getTransactionByBlockNumberAndIndex\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getTransactionByBlockNumberAndIndex\""}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getTransactionByBlockNumberAndIndex\""}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();## Request Parametersblock parameter: [ Required ] A hexadecimal block number, or the string latest, earliest or pending.transaction index position: [ Required ] A hexadecimal of the integer representing the position in the block.Response​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""error"": { ""code"": -32602, ""message"": ""expected 'params' array of at least 2 arguments"" }}A transaction object, or null when no transaction was found. The transaction object will consist of the following keys and their values:blockHash: 32 bytes. A hash of the block including this transaction. 'null' when it's pending.accessList: [ optional ] A list of addresses and storage keys accessed by the transaction.blockNumber: The number of the block including this transaction. 'null' when it's pending.chainID: [ optional ] chain ID specifying the network. Returned only for EIP-1559 transactions.from: 20 bytes. The address of the sender.gas: Gas provided by the sender.gasPrice: Gas price provided by the sender in Wei.hash: 32 bytes. The hash of the transaction.input: The data sent along with the transaction.maxPriorityFeePerGas: [ optional ] Maximum fee, in Wei, the sender is willing to pay per gas above the base fee.maxFeePerGas: [ optional ] Maximum total fee (base fee + priority fee), in Wei, the sender is willing to pay per gas.nonce: The number of transactions made by the sender prior to this one.r: 32 bytes. The ECDSA signature 'r'.s: 32 bytes. The ECDSA signature 's'.to: 20 bytes. The address of the receiver. 'null' when it's a contract creation transaction.transactionIndex: The transaction's index position in the block, in hexadecimal. 'null' when it's pending.v: The ECDSA recovery ID.type: The transaction type.value: The value transferred in Wei.Was this section helpful?12345Previouseth_getTransactionByBlockHashAndIndexNexteth_getTransactionByHashOverviewRequestResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_getTransactionByBlockNumberAndIndex)"
258,i.io market data rest api#output data format,"i.io market data rest api#output data format.   REST API | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIOn this pageVersion: v1REST APIRESTful endpoint provides the widest range of data, based on HTTP protocol which works in Request-Reply scheme.Implemented Standards:HTTP1.0HTTP1.1HTTP2.0OpenAPI v3Note: We adhere to the OpenAPI standards for documenting our API.OpenAPI Specification​To access our API's OpenAPI specification, you can use the following link: OpenAPI v3If you need to import the OpenAPI file into software like Postman, simply copy and paste the link below:https://raw.githubusercontent.com/coinapi/coinapi-sdk/master/data-api/coinapi-marketdata-rest.yamlEndpoints​EnviromentEncryptionValueProductionYeshttps://rest.coinapi.io/ProductionNohttp://rest.coinapi.io/infoFor real-time market data streaming, you should use WebSockets. REST API only supports pooling, meaning you can periodically request the current market data state. In streaming, you subscribe and data or updates are delivered to you continuously.General​If you want to learn how to authenticate to this API, you can find detailed instructions and guidance in authentication section of this documentation.HTTP Requests​Each HTTP request must contain the header Accept: application/json as all our responses are in JSON format.We encourage you to use the HTTP request header Accept-Encoding: deflate, gzip for all requests. This will indicate to us that we can deliver compressed data to you which on your side should be decompressed transparently.tipBy allowing data compression you are lowering bandwidth requirements by approximately 80%. This is important for requesting large amounts of data or using WebSocket Streaming API, as we can deliver data to you faster and more effectively.HTTP Success​Successful HTTP responses have the status code 200 and the body in a format according to documentation of the requested resource.infoYou should always check that your HTTP response status code is equal to 200, otherwise the requested was not successful.HTTP Errors​Error message is returned in JSON structured like this:{ ""error"": ""Invalid API key""}All HTTP requests with response status codes different to 200 must be considered as failed and you should expect additional JSON inside the body of the response with the error message encapsulated inside it as shown in the example. We use the following error codes:Error CodeMeaning400Bad Request -- There is something wrong with your request401Unauthorized -- Your API key is wrong403Forbidden -- Your API key doesnt't have enough privileges to access this resource429Too many requests -- You have exceeded your API key rate limits550No data -- You requested specific single item that we don't have at this moment.infoGood practice is to store all error messages somewhere along with request data for further manual review.Output data format​By default we are using JSON output data format for all of our endpoints, you can control format of data by using output_format variable in query string parameters.URL Parameters​ParameterTypeDescriptionoutput_formatstringOutput data format (optional, default value is json, possible values are json, xml or csv)csv_include_headerboolIgnore header line in CSV output? (optional, default value is true, true to include CSV header line, false otherwise)csv_include_quotesboolEncapsulate strings with quotes in CSV output? (optional, default value is false, true to encapsulate all strings with "", false to leave them unquoted)csv_exclude_colstringComma delimited list of column names to ignore in CSV output (optional, by default all columns are included)csv_set_delimiterstringCharacter that will be used as column delimiter in CSV output (optional, default value is ;)csv_set_dec_markstringCharacter that will be used as decimal separator in CSV output (optional, default value is .)csv_set_timeformatstringFormat for datetime type in CSV output or unix for unix timestamp (optional, default value is yyyy-MM-ddTHH:mm:ss.fffffffZ)csv_set_newlinestringNew line type (optional, default value is unix, possible values win, mac, unix)Excel / G-Sheets​There are several ways to use data from our REST API inside the Excel, Google Sheets, or similar calculation sheet application. This section will do as best as possible to keep all information up to date on how you could load the data into these applications. Feel free to contact support if we are missing an option.CSV download, import:​Open the data in the CSV format from the browser eg. https://rest.coinapi.io/v1/exchangerate/USD?apikey=YOUR_API_KEY&invert=true&output_format=csvSave the data to the file with the .csv extension.Use the file saved and import it into the software.When configuring import, refer to the parameters like delimiter from the Output data formatThe platform-independent way described above is based on CSV but could also be used in other formats like JSON and XML as long as the software support it, but the import procedure needs to be adjusted accordingly.Microsoft Excel​Use PowerQuery to load the URL directly into the CSV import without saving the file locally. Use the =WEBSERVICE function to load the API response directly into the sheet, but this will not parse the data; additional processing is required.Google Sheets​Use =IMPORT function to load the REST API endpoint and automatically parse the CSV format data into the cells. eg. =IMPORTDATA(""https://rest.coinapi.io/v1/exchangerate/USD?apikey=YOUR_API_KEY&invert=true&output_format=csvOpenOffice Calc​Select the menu Insert -> Sheet From File, 2. In the Insert dialog, put the URL eg. https://rest.coinapi.io/v1/exchangerate/USD?apikey=YOUR_API_KEY&invert=true&output_format=csv in the File Name box at the bottom. Set the drop-down list next to that to Web Page Query and click Open. The Text Import dialog opens where you can change the defaults if needed. Authentication​API Key: ApiKeyCoinApi API key needed to access the endpointsSecurity Scheme Type:apiKeyHeader parameter name:X-CoinAPI-KeyContactCOINAPI LTD: [email protected]URL: https://www.coinapi.ioLicenseMIT LicenseWas this section helpful?12345PreviousAPI limits and billingNextExchange RatesOpenAPI SpecificationEndpointsGeneralHTTP RequestsOutput data formatExcel / G-SheetsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api#output-data-format)"
259,i.io naas api bitcoin Methods gettxout,"i.io naas api bitcoin Methods gettxout.   gettxout | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgettxoutOn this pagegettxoutOverview​The 'gettxout' RPC method allows you to retrieve details about an unspent transaction output in the Bitcoin networkRequest​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""gettxout"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'--<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""gettxout"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection(""mainnet-bitcoin.node.coinapi.io"")payload = json.dumps({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""gettxout"",""params"": []})headers = {'Content-Type': 'application/json','accept': 'application/json','X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}conn.request(""POST"", ""/"", payload, headers)res = conn.getresponse()data = res.read()print(data.decode(""utf-8""))var settings = {""url"": ""https://bitcoin-mainnet.node.coinapi.io"",""method"": ""POST"",""timeout"": 0,""headers"": {""Content-Type"": ""application/json"",""accept"": ""application/json"",""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY""},""data"": JSON.stringify({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""gettxout"",""params"": []}),};$.ajax(settings).done(function (response) {console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""gettxout"",""params"": [],""id"":1}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"")req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({""jsonrpc"": ""2.0"",""method"": ""gettxout"",""params"": [],""id"": 1})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""gettxout\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​txidType: stringRequired: YesDescription: The identifier for the transaction you are querying.nType: numericRequired: YesDescription: The output number (vout) of the transaction.include_mempoolType: booleanDefault: trueDescription: Specifies whether to include the mempool in the query.Response​bestblockDescription: The hash of the block at the tip of the blockchain.confirmationsDescription: The number of confirmations received for the transaction.valueDescription: The value of the transaction, denominated in BTC.scriptPubKeyDescription: A JSON object containing details about the public key script associated with the transaction.asmDescription: The script public key, represented as a string.hexDescription: The hexadecimal representation of the transaction.reqSigsDescription: The number of signatures required to validate the transaction.typeDescription: The type of script used in the transaction, such as pubkeyhash or multisig.addressesDescription: A JSON array containing the Bitcoin addresses involved in the transaction.strDescription: A string representation of a Bitcoin address associated with the transaction.coinbaseDescription: A boolean value indicating whether the transaction output is part of a coinbase transaction. Returns true for coinbase transactions and false for all others.Was this section helpful?12345PreviousgettransactionNextgettxoutproofOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/gettxout)"
260,i.io naas api bitcoin Methods dumpprivkey,"i.io naas api bitcoin Methods dumpprivkey.   dumpprivkey | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsdumpprivkeyOn this pagedumpprivkeyOverview​The 'dumpprivkey' Reveals the private key corresponding to ‘address’.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --body-data '{ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""dumpprivkey"", ""params"": []}' \'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""dumpprivkey\"",\r \""params\"": []\r }\r "", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""dumpprivkey"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection(""mainnet-bitcoin.node.coinapi.io"")payload = json.dumps({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""dumpprivkey"", ""params"": []})headers = { 'Content-Type': 'application/json', 'accept': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}conn.request(""POST"", ""/"", payload, headers)res = conn.getresponse()data = res.read()print(data.decode(""utf-8""))var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""dumpprivkey"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainpackage mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{`+""""+` ""jsonrpc"": ""1.0"",`+""""+` ""id"": ""1"",`+""""+` ""method"": ""dumpprivkey"",`+""""+` ""params"": []`+""""+`}`+""""+``)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""dumpprivkey"", ""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder().build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""dumpprivkey\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​address: The bitcoin address for the private keyResponse​Was this section helpful?12345PreviousdisconnectnodeNextestimatesmartfeeOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/dumpprivkey)"
261,i.io market data rest api ohlcv ohlcv historical data by exchange,"i.io market data rest api ohlcv ohlcv historical data by exchange.   Historical data by exchange | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcv Historical data by exchange Historical data Latest data List all periodsOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIOhlcv Historical data by exchange Historical data by exchangeGET /v1/ohlcv/exchanges/:exchange_id/historyGet OHLCV timeseries data returned in time ascending order. Data can be requested by the period and for the specific exchange eg BITSTAMPinfoThe OHLCV Historical endpoint data can be delayed a few seconds. The difference between time_end and time_start cannot be higher than 1 day. The period_id cannot be higher than 1DAY.Path Parametersexchange_id string requiredExchange identifier of requested timeseries (from the Metadata -> Exchanges)Query Parametersperiod_id string requiredIdentifier of requested timeseries period (e.g. 5SEC or 1DAY)time_start string requiredTimeseries starting time in ISO 8601time_end string requiredTimeseries ending time in ISO 8601Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)SchemaArray [time_period_start date-timeThe start time of the time period.time_period_end date-timeThe end time of the time period.time_open date-time nullableThe time when the price opened.time_close date-time nullableThe time when the price closed.price_open double nullableThe opening price.price_high double nullableThe highest price during the time period.price_low double nullableThe lowest price during the time period.price_close double nullableThe closing price.volume_traded doubleThe total volume traded during the time period.trades_count int64The number of trades executed during the time period.symbol_id_exchange string nullablesymbol_id_coinapi string nullable][ { ""time_period_start"": ""2024-07-16T12:55:05.287Z"", ""time_period_end"": ""2024-07-16T12:55:05.287Z"", ""time_open"": ""2024-07-16T12:55:05.287Z"", ""time_close"": ""2024-07-16T12:55:05.287Z"", ""price_open"": 0, ""price_high"": 0, ""price_low"": 0, ""price_close"": 0, ""volume_traded"": 0, ""trades_count"": 0, ""symbol_id_exchange"": ""string"", ""symbol_id_coinapi"": ""string"" }]SchemaExample (from schema)SchemaArray [time_period_start date-timeThe start time of the time period.time_period_end date-timeThe end time of the time period.time_open date-time nullableThe time when the price opened.time_close date-time nullableThe time when the price closed.price_open double nullableThe opening price.price_high double nullableThe highest price during the time period.price_low double nullableThe lowest price during the time period.price_close double nullableThe closing price.volume_traded doubleThe total volume traded during the time period.trades_count int64The number of trades executed during the time period.symbol_id_exchange string nullablesymbol_id_coinapi string nullable][ { ""time_period_start"": ""2024-07-16T12:55:05.287Z"", ""time_period_end"": ""2024-07-16T12:55:05.287Z"", ""time_open"": ""2024-07-16T12:55:05.287Z"", ""time_close"": ""2024-07-16T12:55:05.287Z"", ""price_open"": 0, ""price_high"": 0, ""price_low"": 0, ""price_close"": 0, ""volume_traded"": 0, ""trades_count"": 0, ""symbol_id_exchange"": ""string"", ""symbol_id_coinapi"": ""string"" }]SchemaExample (from schema)SchemaArray [time_period_start date-timeThe start time of the time period.time_period_end date-timeThe end time of the time period.time_open date-time nullableThe time when the price opened.time_close date-time nullableThe time when the price closed.price_open double nullableThe opening price.price_high double nullableThe highest price during the time period.price_low double nullableThe lowest price during the time period.price_close double nullableThe closing price.volume_traded doubleThe total volume traded during the time period.trades_count int64The number of trades executed during the time period.symbol_id_exchange string nullablesymbol_id_coinapi string nullable][ { ""time_period_start"": ""2024-07-16T12:55:05.287Z"", ""time_period_end"": ""2024-07-16T12:55:05.287Z"", ""time_open"": ""2024-07-16T12:55:05.287Z"", ""time_close"": ""2024-07-16T12:55:05.287Z"", ""price_open"": 0, ""price_high"": 0, ""price_low"": 0, ""price_close"": 0, ""volume_traded"": 0, ""trades_count"": 0, ""symbol_id_exchange"": ""string"", ""symbol_id_coinapi"": ""string"" }]SchemaExample (from schema)SchemaArray [time_period_start date-timeThe start time of the time period.time_period_end date-timeThe end time of the time period.time_open date-time nullableThe time when the price opened.time_close date-time nullableThe time when the price closed.price_open double nullableThe opening price.price_high double nullableThe highest price during the time period.price_low double nullableThe lowest price during the time period.price_close double nullableThe closing price.volume_traded doubleThe total volume traded during the time period.trades_count int64The number of trades executed during the time period.symbol_id_exchange string nullablesymbol_id_coinapi string nullable][ { ""time_period_start"": ""2024-07-16T12:55:05.287Z"", ""time_period_end"": ""2024-07-16T12:55:05.287Z"", ""time_open"": ""2024-07-16T12:55:05.287Z"", ""time_close"": ""2024-07-16T12:55:05.287Z"", ""price_open"": 0, ""price_high"": 0, ""price_low"": 0, ""price_close"": 0, ""volume_traded"": 0, ""trades_count"": 0, ""symbol_id_exchange"": ""string"", ""symbol_id_coinapi"": ""string"" }]Loading...Was this section helpful?12345PreviousOhlcvNext Historical dataCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/ohlcv/ohlcv-historical-data-by-exchange)"
262,i.io faq api What are the restrictions on usage of real time protocols,"i.io faq api What are the restrictions on usage of real time protocols.   What are the restrictions on usage of real-time protocols? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQAPIWhat are the restrictions on usage of real-time protocols?What are the restrictions on usage of real-time protocols?Real-time streaming protocols (WebSocket and FIX) are restricted by the data types available and the maximum number of connections/sessions that can be established concurrently. More information about the specific limits on each plan you can find on our Pricing page [1] and API Documentation [2].What are the risks of having multiple concurrent connections for Websocket?  Currently, subscriptions have a soft limit of a single concurrent connection for Websocket. If you are using multiple concurrent connections, the risk is in the fact that the credentials are shared between environments, and this could lead to misuse of the key or leakage affecting the production environment. If the key is misused, it could trigger some of the hard limits regarding concurrency that could affect the production.References:[1] https://www.coinapi.io/Pricing [2] https://docs.coinapi.io/market-data/websocket/general#limitsWas this section helpful?12345PreviousI received a reconnect message from WebsocketNextWhat are the time periods I can use for Exchange Rates and OHLCV?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/api/What-are-the-restrictions-on-usage-of-real-time-protocols)"
263,i.io ems api managed cloud rest api exchange,i.io ems api managed cloud rest api exchange.   Exchange | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIAccountCertificateEndpointsExchangeGet exchange configurationLocationREST APIWebSocket APIFIX APISelf Hosted GuideManaged Cloud REST APIExchangeExchangeIn the exchange section we provide information about the exchanges supported in the EMS API.📄️ Get exchange configurationGet information about the required parameters or server site location of the exchanges supported in the EMS API.Was this section helpful?12345PreviousGet API endpointsNextGet exchange configurationCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/managed-cloud-rest-api/exchange)
264,i.io faq billing and subscriptions How to upgrade downgrade my subscription,"i.io faq billing and subscriptions How to upgrade downgrade my subscription.   How to upgrade/downgrade my subscription? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIBilling and SubscriptionsCan I cancel my subscription anytime?Can I still use my API key if I cancel my subscription?How to reactivate my canceled subscription?How to subscribe to the API?How to upgrade/downgrade my subscription?Security and PrivacyCustomer PortalChangelogFAQBilling and SubscriptionsHow to upgrade/downgrade my subscription?How to upgrade/downgrade my subscription?You may upgrade/downgrade your subscription via the Customer Portal (https://customerportal.coinapi.io/login). After logging in, please navigate to Subscriptions > Manage Subscriptions > Update Plan. We can upgrade or downgrade your subscription as well based on the support ticket request.Upgrading and downgrading operations are prorated, the remaining amount on your subscription at the moment of the change will be credited towards future liabilities. Your billing period cycle is not affected by plan change.Example 1:If you have a Streamer subscription with a billing date of 2018-07-15 and it's 2018-07-05 and you want to upgrade your Streamer plan to the Professional, then: - Unused Streamer subscriptions between 2018-07-05 and 2018-07-15 will be credited - Professional subscriptions between 2018-07-05 and 2018-07-15 will be debited.Example 2:You have the Professional subscription with billing date 2018-07-15, and it's 2018-07-05, and you want to downgrade to the Streamer plan, then: - Unused Professional subscriptions between 2018-07-05 and 2018-07-15 will be credited - Streamer subscriptions between 2018-07-05 and 2018-07-15 will be debited. - The remaining credit will be applied to future invoicesTo execute the request, kindly submit a request here: https://support.coinapi.io/hc/en-us/requests/newWas this section helpful?12345PreviousHow to subscribe to the API?NextSecurity and PrivacyCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/billing-and-subscriptions/How-to-upgrade-downgrade-my-subscription)"
265,i.io general authentication,"i.io general authentication.   Authentication Process | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGlossaryChangelogAuthenticationOn this pageCoinAPI Authorization ProcessOverview​CoinAPI offers a range of products and services for cryptocurrency data and trading. Our sophisticated authorization process ensures secure and fair access across all CoinAPI products, including but not limited to market data, trading APIs, and analytics tools. This document outlines the key aspects of our authorization flow, focusing on quota management, pay-as-you-go functionality, and advanced authentication methods that apply uniformly across our product suite.Authorization Flow​API Key ValidationOrganization ValidationJWT Token Processing (if applicable)Quota Checks and Pay-As-You-Go Handling1. API Key Validation​We verify the API key's validity and its association with the requested CoinAPI product (if specified).2. Organization Validation​We ensure the API key is linked to an active organization.3. JWT Token Processing​For API keys with JWT authentication enabled:a. Token Extraction and ValidationWe extract and decode the JWT from the Authorization header.We verify the token's signature and expiration.b. CachingValid tokens are cached to optimize performance on subsequent requests.4. Quota Checks and Pay-As-You-Go Handling​Our quota system is designed to provide flexible usage control at both the API key and organization levels, with special considerations for pay-as-you-go accounts.a. API Key-Specific QuotasThese quotas are set by the customer through our Customer Portal for each API key.Examples include:Maximum number of requests per dayRate limits (e.g., requests per minute)Access restrictions to specific endpoints or data typesThese quotas are always checked, regardless of the organization's pay-as-you-go status.b. Organization-Wide QuotasThese quotas apply across all API keys associated with an organization and are determined by the organization's subscriptions and committed-use plans.They are independent of individual API keys and reflect the overall service level acquired by the organization.Typical quota types include:Total data volume limitsAggregate request limits across all keysAccess to premium features or data setsc. Pay-As-You-Go and Quota EnforcementWhen pay-as-you-go is enabled for an organization:Only API Key-specific quotas are strictly enforced.Organization-wide quotas are monitored but not strictly enforced.Requests are allowed to exceed organization quotas if the account is in good standing.Account standing is determined by:Current account balanceAvailable post-paid credit limitThis allows organizations to continue using CoinAPI services beyond their base subscription limits, providing flexibility for unexpected spikes in usage or growing needs.d. Billing and Credit ChecksFor organizations with pay-as-you-go enabled:We check the organization's current account balance and available credit.Usage is allowed to continue as long as the account remains in good standing.If the account reaches its credit limit or has outstanding unpaid balances:Further requests may be restricted until the account is brought back into good standing.e. Autocharge FeaturePay-as-you-go customers can enable the autocharge feature to maintain continuous good standing.When enabled, this feature automatically charges the customer's payment method when their balance falls below a specified threshold.Benefits of autocharge:Ensures uninterrupted access to CoinAPI servicesPrevents sudden service interruptions due to exceeding credit limitsSimplifies account management for high-volume usersCustomers can set and adjust autocharge thresholds and limits through the Customer Portal.Special Cases​Email + Token Authentication​We support email-based authentication using a Bearer token:If API key validation fails, we attempt to authenticate using the email extracted from the Bearer token.We verify the email's association with the organization linked to the provided identifier.This method enables organization-level authentication without requiring a specific API key, useful for certain administrative or bulk operations across CoinAPI products.Dynamic Quota Adjustment​Our system supports real-time quota adjustments:Customers can modify API key quotas through the Customer Portal, with changes reflected immediately across all CoinAPI products.Organization quotas are automatically adjusted when subscription changes or committed-use plan modifications are processed.Pay-as-you-go status can be enabled or disabled, affecting how organization quotas are enforced across all services.Quota Overage Handling​Quota overage handling depends on the pay-as-you-go status:For API key quotas:Requests are typically rejected with a specific error code when exceeded, regardless of pay-as-you-go status.For organization quotas:With pay-as-you-go enabled:Usage can continue beyond organization quotas as long as the account is in good standing.Usage is monitored and billed according to the organization's plan rates.If autocharge is enabled, the account is automatically topped up to maintain good standing.Without pay-as-you-go:All API keys for the organization will be restricted when quotas are exceeded.Service resumes when the quota resets (e.g., start of a new billing cycle) or the subscription is upgraded.Monitoring and Notifications​We maintain comprehensive monitoring of our authorization layer to ensure system health and optimal performance across all CoinAPI products. This includes tracking various aspects of the authorization process, quota utilization, and account status. Our monitoring system generates notifications for both internal teams and customers when certain thresholds are reached or unusual patterns are detected. This proactive approach allows us to address potential issues quickly and helps customers stay informed about their API usage and account status across all CoinAPI services.Conclusion​Our authorization process is designed to provide secure, flexible, and scalable access to all CoinAPI products. By implementing multi-layered validation, sophisticated quota management based on subscriptions and committed-use plans, and flexible pay-as-you-go options with autocharge capabilities, we ensure that our services remain protected while offering customers the ability to scale their usage according to their needs. The combination of API key-specific controls, organization-wide quotas, and pay-as-you-go flexibility provides a powerful toolset for managing API access and usage across diverse use cases and organizational structures, ensuring uninterrupted service for accounts in good standing across the entire CoinAPI product suite.Was this section helpful?12345NextCustomer PortalOverviewAuthorization Flow1. API Key Validation2. Organization Validation3. JWT Token Processing4. Quota Checks and Pay-As-You-Go HandlingSpecial CasesEmail + Token AuthenticationDynamic Quota AdjustmentQuota Overage HandlingMonitoring and NotificationsConclusionCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/authentication)"
266,i.io ems api managed cloud rest api account,i.io ems api managed cloud rest api account.   Account | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIAccountDelete accountDelete all accountsGet accountsAdd or update accountCertificateEndpointsExchangeLocationREST APIWebSocket APIFIX APISelf Hosted GuideManaged Cloud REST APIAccountAccountIn the account section you can manage the accounts on the exchanges (order destinations).📄️ Delete accountDelete specific exchange account maintained by the EMS API for your subscription.📄️ Delete all accountsDelete all exchange accounts maintained by the EMS API for your subscription.📄️ Get accountsGet all accounts maintained for your subscription in the EMS API.📄️ Add or update accountAdd new or update existing exchange account for your subscription in the EMS API.Was this section helpful?12345PreviousManaged Cloud REST APINextDelete accountCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/managed-cloud-rest-api/account)
267,i.io naas api bitcoin Methods getbestblockhash,"i.io naas api bitcoin Methods getbestblockhash.   getbestblockhash | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetbestblockhashOn this pagegetbestblockhashOverview​The 'getbestblockhash ' RPC method is a vital tool in the CoinAPI suite, allowing users to obtain the hash of the tip block in the most-work fully-validated chain. This method is an essential part of ensuring the integrity and consistency of data in the blockchain network.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""getbestblockhash"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""getbestblockhash\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""getbestblockhash"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""2.0"", ""method"": ""getbestblockhash"", ""params"": [], ""id"": 1})headers = { 'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type': 'application/json', 'accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""getbestblockhash"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""getbestblockhash"",""params"": [],""id"":1}`) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"") req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""method"": ""getbestblockhash"", ""params"": [], ""id"": 1})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder().build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""2.0\"",\r \""id\"": \""1\"",\r \""method\"": \""getbestblockhash\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​This method does not require any parameters.Response​{ ""result"": """", ""error"": null, ""id"": 1}Type: hexDescription: The method returns a string that contains serialized, hex-encoded data representing the block hash.Was this section helpful?12345PreviousgetbalancesNextgetblockOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getbestblockhash)"
268,i.io faq general Can I use the API to show graphs charts or tables,"i.io faq general Can I use the API to show graphs charts or tables.   Can I use the API to show graphs, charts or tables? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralCan I use the API to show graphs, charts or tables?Can I use the API to show graphs, charts or tables?Yes, you can use our data to display graphs, charts, or tables. The simplest way is to plug our data into any third-party charting library, for example:https://www.highcharts.com/https://www.amcharts.com/https://www.vobcocharts.com/demos/getting-startedhttps://plot.ly/javascript/box-plots/https://canvasjs.com/javascript-charts/candlestick-line-chart/http://techanjs.org/http://recharts.orghttps://uber.github.io/react-vis/examples/showcases/plotshttps://developers.google.com/chart/interactive/docs/galleryWas this section helpful?12345PreviousCan I use the API commercially to show prices on my website?NextCrossed books / bid >= askCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/Can-I-use-the-API-to-show-graphs-charts-or-tables)"
269,i.io market data rest api order book l3,"i.io market data rest api order book l3.   Order Book L3 | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcvOrder BookOrder Book L3 Current order book by symbol_id Current order booksQuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIOrder Book L3Order Book L3This section describes calls related to order book data, also known as books or passive level 3 data.📄️ Current order book by symbol_idRetrieves the current order book for the specified symbol.📄️ Current order books Current order booksWas this section helpful?12345Previous Latest dataNext Current order book by symbol_idCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/order-book-l3)"
270,i.io general glossary Transaction,"i.io general glossary Transaction.   Transaction | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGlossaryBlockchain Address and OutputBlockchain NodeChain (Blockchain)EndpointJSONNetworkSatoshiTransactionWalletBlockchain BlockChangelogGlossaryTransactionOn this pageTransactionTransaction​A Transaction is a transfer of value between wallets that is included in the blockchain. Transactions are the fundamental operations in a blockchain network, representing the movement of assets from one party to another.Key Characteristics​Inputs and Outputs: Each transaction has one or more inputs (sources of funds) and one or more outputs (destinations of funds).Validation: Transactions are validated by nodes in the network to ensure that the sender has sufficient balance and that the transaction adheres to the network's rules.Inclusion in Blocks: Once validated, transactions are grouped into blocks, which are then added to the blockchain.Importance​Value Transfer: Transactions enable the transfer of value in a secure and transparent manner.Record Keeping: Each transaction is permanently recorded on the blockchain, providing an immutable history of all transfers.Was this section helpful?12345PreviousSatoshiNextWalletTransactionCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/glossary/Transaction)"
271,i.io ems api api limits and billing metrics,"i.io ems api api limits and billing metrics.   API limits and billing metrics | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIREST APIWebSocket APIFIX APISelf Hosted GuideAPI limits and billingOn this pageAPI limits and billing metricsAPI limits are a crucial aspect of any API product, and they exist for several important reasons. They are designed to ensure fair usage and maintain the quality of service for all users. By implementing these limits, we can prevent any single user from overloading the system, which could potentially degrade the performance for others. This is a standard practice across the industry and is essential for maintaining a high level of service.One of the key limits we have in place is the Concurrency limit. This limit is specifically designed to protect our infrastructure. It controls the number of simultaneous API calls/requests that can be executed at any given moment. Each API call/request increases the Concurrency limit against your quota, and it decreases when the call/request finishes. This ensures that our servers are not overwhelmed by too many simultaneous requests, thereby ensuring smooth and efficient operation.The specific limits that apply to you depend on several factors. These include the plan you have subscribed to, the product you are using, and the protocol you are utilizing. Different products and protocols may have different limits, reflecting their varying requirements and capabilities.We understand that different users may have different needs, and we try to accommodate these requests whenever possible. Therefore, some limits, such as the Concurrency limit, can be requested to be increased through our support team. We review these requests on a case-by-case basis, taking into account factors such as your usage history and the capacity of our infrastructure.There are also limits that depend on your plan, such as the Request limit or the Node as a Service units limit. If you exceed these limits, you can continue to use our services by paying an overage fee. This allows us to maintain a high level of service for all users, even during periods of high demand.In conclusion, API limits are a necessary and important part of our service. They ensure that all users can enjoy a high-quality, reliable service, and they protect our infrastructure from being overwhelmed.Limits applied to our products​Product nameLimitsEMS API Cloud MgmtConcurrency limit / APIKeyEMS API REST APINo limitsEMS API WebSokcet APINo limitsEMS FIX APISession / APIKeyEach API Key can have one session, and when next session is stablished then current is disconnectedMultiple API keys for a subscription​At CoinAPI, we understand that our customers may have diverse needs and may require multiple API keys for a single subscription. We have designed our system to accommodate this requirement, allowing you to add additional API keys to your subscription. These keys operate within the confines of a single limit, ensuring that you have the flexibility you need without compromising on control.Each API key can be further customized with a more precise limit. This feature allows you to manage your usage effectively, ensuring that each key is used optimally and within its designated limit. This level of control can be particularly useful in managing resources and preventing overuse.In addition to these features, we also offer the ability for API calls using a specific API key to generate overage, i.e., exceed the quota. This can be particularly useful in situations where you anticipate a higher volume of calls. However, it's important to note that if the limit is exceeded, the API calls may be rejected to prevent overuse and maintain system integrity. All these settings, including the limits and the ability to set overage, can be managed from the Customer Portal. This ensures that you have complete control over your subscription and can make adjustments as and when needed.Customizing Limits for API Keys within a Subscription​If both API keys, each with a limit of 500, exhaust their allotted limits, reaching a combined total of 1000, further requests made using either key will be rejected until the limit resets. This ensures that the total usage across all keys within the subscription does not exceed the subscription limit.Exceeding Limits for API Keys within a Subscription​If one API key within the subscription exceeds its limit of 500, while the other key is still within its limit, requests made using the exceeded key will be rejected until the limit resets. However, requests made using the other key, which is still within its limit, will continue to be processed without interruption.infoIn summary, managing limits within a subscription involves ensuring that the usage across all API keys and services remains within the specified limits, with mechanisms in place to handle potential overages and maintain service availability and quality.Was this section helpful?12345PreviousAuthenticationNextManaged Cloud REST APILimits applied to our productsMultiple API keys for a subscriptionCustomizing Limits for API Keys within a SubscriptionExceeding Limits for API Keys within a SubscriptionCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/api-limits-and-billing-metrics)"
272,i.io naas api ethereum Methods eth maxPriorityFeePerGas,"i.io naas api ethereum Methods eth maxPriorityFeePerGas.   eth_maxPriorityFeePerGas | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_maxPriorityFeePerGasOn this pageeth_maxPriorityFeePerGasOverview​The 'eth_maxPriorityFeePerGas' method returns an estimate of how much priority fee, in wei, you need to be included in a block.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'content-type: application/json' \  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data ' {  ""id"": 1,  ""jsonrpc"": ""2.0"",  ""method"": ""eth_maxPriorityFeePerGas"" }'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_maxPriorityFeePerGas\""}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [ CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"", CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => """", CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 30, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => ""POST"", CURLOPT_POSTFIELDS => json_encode([ 'id' => 1, 'jsonrpc' => '2.0', 'method' => 'eth_maxPriorityFeePerGas' ]), CURLOPT_HTTPHEADER => [ ""accept: application/json"", ""content-type: application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" ],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) { echo ""cURL Error #:"" . $err;} else { echo $response;} ?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_maxPriorityFeePerGas""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text) const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({id: 1, jsonrpc: '2.0', method: 'eth_maxPriorityFeePerGas'})};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_maxPriorityFeePerGas\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_maxPriorityFeePerGas\""}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_maxPriorityFeePerGas\""}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​None.Response​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": ""0x2b4ae54""}result: A hexadecimal value of the priority fee, in wei, needed to be included in a block.Was this section helpful?12345Previouseth_hashrateNexteth_miningOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_maxPriorityFeePerGas)"
273,i.io general faq general What is CoinAPI,"i.io general faq general What is CoinAPI.   What is CoinAPI? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralWhat is CoinAPI?What is CoinAPI?CoinAPI is a platform that provides a fast, reliable, and unified API to access real-time or historical data from cryptocurrency markets. We are integrating all cryptocurrency exchanges, and delivering acquired data in both raw and preprocessed forms to our customers using a single, simple API.Was this section helpful?12345PreviousWhat exchanges are supported?NextWhat is the max number of accounts an Enterprise plan can have?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/What-is-CoinAPI)"
274,i.io naas api ethereum Methods txpool contentFrom,"i.io naas api ethereum Methods txpool contentFrom.   txpool_contentFrom | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodstxpool_contentFromOn this pagetxpool_contentFromOverview​The 'txpool_contentFrom' method retrieves the transactions contained within the txpool. It returns both pending and queued transactions of a specific address, grouped by nonce.Request​{ ""method"": ""txpool_contentFrom"", ""params"": [""address""]}Request Parameters​'address': The Ethereum address for which you want to retrieve the pending and queued transactions.Response​{ ""pending"": { ""nonce"": ""transaction details"" }, ""queued"": { ""nonce"": ""transaction details"" }}Was this section helpful?12345Previoustxpool_contentNexttxpool_inspectOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/txpool_contentFrom)"
275,i.io ems api #oeml order params exec,"i.io ems api #oeml order params exec.   EMS - Starter Guide | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIREST APIWebSocket APIFIX APISelf Hosted GuideEMS APIOn this pageEMS - Starter GuideThis section will provide general information about the Execution Management System API (EMS API) software product and enumerate a number of features that it provides.infoThe keywords ""MUST"", ""MUST NOT"", ""REQUIRED"", ""SHALL"", ""SHALL NOT"", ""SHOULD"", ""SHOULD NOT"", ""RECOMMENDED"", ""MAY"", and ""OPTIONAL"" in this document are to be interpreted as described in RFC 2119.What is EMS API?​Execution Management System (EMS) is a software that manages orders, executions, and exposure in an efficient, fast, cost-effective, and straightforward manner. An EMS allows you to route orders to multiple cryptocurrency exchanges simultaneously using a simple, robust, and unified Application Programming Interface (API).The software can be used in 2 different ways:Managed Cloud - Everything on our side. Hosted in the Cloud by CoinAPI. You manage the deployment using the REST API.Self-Hosted - Software on our side, on everything else.Dimension ComparisonManaged CloudSelf-HostedEase of use/installationVery easyHardTime to marketFastSlowDevOps team required to maintainNoYesOrder flow sent directly to the destinationNoYesWho manages the infrastructure (incl. monitoring)CoinAPIYouWho optimizes the latencyCoinAPIYou (CoinAPI only in software)How to installInstruct our Cloud Mgmt APIInstall on your infrastructurecautionWe recommend starting with the Managed Cloud and possibly upgrading to the Self-Hosted if the requirements of the integration/project will make that commercially reasonable.Architecture and components​A self-hosted EMS cluster can be deployed on a single server or multiple servers that will span multiple geographical locations, server sites, or cloud providers. In the Managed Cloud version, you did not care about that as we manage the server sites to be as close to the order destinations as possible.EMS consists of several components listed and ordered by dependency relationship:Exchange - Order destination, exchange, or broker.CoinAPI EMS Edge - Software that's responsible for communicating with the single specific order destination for which is deployed. This component exposes the EMS API for diagnostics purposes which functions visibility are limited to this single destination.CoinAPI EMS API - Software that's responsible for exposing fully functional the EMS API, maintaining the connection with all instances of CoinAPI EMS Edge.Customer Application - Customer software using the EMS API exposed by the CoinAPI EMS API component.Benefits and features​Low latency support​Specific projects usually involve High-Frequency Trading (HFT) or Market Making (MM) requiring low latency access to the order destination. EMS API was designed to have native support for this kind of activity.For every order destination in the cluster to which the submillisecond latency is required, these components should be deployed on a single server as close as possible to the order destination:CoinAPI EMS EdgeCoinAPI EMS APICustomer Application The closest proximity can be achieved using the:cloud region and/or availability zone the same as the destinationcollocation near the destinationcross-connect or direct-connect to the destination network infrastructureshortcutting the routers, SNAT/DNAT hosts, or proxies like CloudFlareThe cluster can naturally contain other order destinations at the same time in this setup, and this fact doesn't affect the latency to the locally provisioned destination(s).Normalized API abstraction​Our EMS API provides an abstraction layer that consolidates all supported third-party APIs into a single set of simple and robust data models and protocols. The Exchanges and the Assets are standardized using the Market Data REST API with which this product is compatible. More information about the exchanges and asset standardization can be found in the Documentation of the Market Data Product.Industry-standard protocols​Our API's can be accessed using multiple protocols widely adopted by the industry as a standard:RESTWebSocketFIX 4.4, 5.0FIXT 1.1Self-host or in Cloud​Deploy your property applications and trading algorithms in your company's collocated data centers or cloud providers if you need that, otherwise, let us manage the infrastructure and focus on using the API.Security & Privacy​Don't need to worry about the issues at the audit. Order flow, exchange API keys, or execution reports never leave your company infrastructure as the product is self-hosted.tipThe software complies with the ""SOC 2"" and ""ISO/IEC 27001 information security certifications.Multi-account support​Manage an unlimited number of exchange accounts in the cluster (for example, on behalf of your customers).SDK and samples for 40+ languages​We have the SDK libraries and code samples available for more than 40+ languages. The full list is available here: https://github.com/coinapi/coinapi-sdk/tree/masterComprehensive support​Leverage support for all market types and order types.High-quality integrations​Our integrations with third-party APIs are heavily tested and crafted with stability and latency in mind. For several third parties, we usually use multiple protocols simultaneously or tricks to acquire valuable pieces of information faster.Enterprise-grade support and maintenance​EMS product is fully supported and maintained to stay ahead of the curve. This approach offloads the often disliked responsibilities of the Software and DevOps Engineers in the organization and enables them to focus on the core business.High availability​The EMS software is designed to support high-availability deployments out of the box. For each order destination, we/you deploy multiple CoinAPI EMS Edge and CoinAPI EMS API components on different servers, availability zones, or cloud/infrastructure providers. Cluster using the service discovery backend, all components are automatically detected and interconnected.P&L and asset monitoring​Using the EMS, your organization can manage exposure and positions in real-time across all supported order destinations and build sophisticated risk management controls.Order lifecycle​This section will describe the lifecycle of the order in the EMS software.Order status description​This table describes how to interpret a specific order status.NameCan transit toStatus descriptionRECEIVEDREJECTEDROUTINGThe order is processed by the EMS.ROUTINGROUTEDThe order is (on the wire) between the EMS and the Exchange.ROUTEDREJECTEDNEWPARTIALLY_FILLEDFILLEDCANCELEDThe order has been sent to the exchange and not yet active in the order book.NEWPARTIALLY_FILLEDFILLEDPENDING_CANCELCANCELEDThe order is active in the book in its original state.PENDING_CANCELNEWPARTIALLY_FILLEDFILLEDCANCELEDThe order cancelation message has been sent to the Order destination.PARTIALLY_FILLEDFILLEDPENDING_CANCELCANCELEDThe order is partially filled and active in the order book.FILLEDThe order is filled and removed from the order book. This state is terminal.CANCELEDThe order is canceled and removed from the order book. This state is terminal.REJECTEDThe order is rejected. This state is terminal.Order status lifecycle​This table describes how to interpret transitions between order statuses and their initial values.Source StatusDestination statusDescriptionRECEIVEDEMS received a new order via the API.NEWEMS received an unseen new order from the Order destination. The order was relayed to the destination outside the EMS.PARTIALLY_FILLEDEMS received unseen partially filled order from the Order destination. The order was relayed to the destination outside the EMS.RECEIVEDREJECTEDEMS rejected the order.RECEIVEDROUTINGEMS delivering the order to the Order destination.ROUTINGROUTEDEMS sent the order to the Order destination.ROUTEDREJECTEDEMS received a message from the exchange that the order was rejected.ROUTEDNEWEMS received a message from the exchange that the order is active in the book in its original state.ROUTEDPARTIALLY_FILLEDEMS received a message from the exchange that part of the order was executed aggressively (removed liquidity). The remaining passive part is active in the book.ROUTEDFILLEDEMS received a message from the exchange that the order was executed aggressively (removed liquidity).ROUTEDCANCELEDEMS received a message from the exchange that the order is in the canceled state. The order has not been in the book as the conditions for the entry were not satisfied.NEWPARTIALLY_FILLEDEMS received a message from the exchange that part of the passive order was filled.NEWFILLEDEMS received a message from the exchange that the passive order is filled.NEWPENDING_CANCELEMS received cancel request for the order and successfully relayed it to the Order destination.NEWCANCELEDEMS received a message from the exchange that the passive order was canceled.PARTIALLY_FILLEDFILLEDEMS received a message from the exchange that the remaining part of the passive order is filled.PARTIALLY_FILLEDPENDING_CANCELEMS received cancel request for the remaining part of the passive order and successfully relayed it to the Order destination.PARTIALLY_FILLEDCANCELEDEMS received a message from the exchange that the remaining part of the passive order is canceled.PENDING_CANCELNEWEMS received a message from the exchange that updated the order before processing the cancellation request or the order cancellation request was rejected.PENDING_CANCELPARTIALLY_FILLEDEMS received a message from the exchange that updated the order before processing the cancellation request or the order cancellation request was rejected.PENDING_CANCELFILLEDEMS received a message from the exchange that updated the order before processing the cancellation request or the order cancellation request was rejected.PENDING_CANCELCANCELEDEMS received a message from exchange` that updated the order before processing the cancellation request or the order cancellation request was rejected.Order parameters​This section will describe parameters of the order in the EMS sofware.Order type​EMS supports only the LIMIT order type. Market orders don't have price protection, and because of that, they are not supported. As an alternative, you can use the Immediate or Cancel IOC order and provide the worst execution price to achieve the same result.Time in force​Time in force is a special instruction used when placing a trade to indicate how long an order will remain active before it expires.The table below describes how to interpret time in force parameter values.Time in forceShortcodeDescriptionGOOD_TILL_CANCELGTCA Good Till Cancel (GTC) is a default type of time-in-force. The order that lasts until is completed or canceled.GOOD_TILL_TIME_EXCHANGEGTTEThe Good Till Time Exchange (GTTE) time in force lets you set an expiration date and time up until which an order will be active in the book. The exchange handles the execution of the cancel originated from parameter.GOOD_TILL_TIME_OEMLGTTOThe Good Till Time OEML (GTTO) time in force lets you set an expiration date and time up until which an order will be active in the book. The CoinAPI EMS Edge sending the cancel request originated from the parameter. Worth mentioning that: (a) The cancellation request will not be sent if the software will be not be running at the time of expiration. (b) This parameter does not depend on the exchange. (c) The clock of the server running CoinAPI EMS Edge is used to trigger the cancelation request at the expiration.FILL_OR_KILLFOKFill or kill (FOK) is a type of time in force used to instruct an exchange to execute a transaction immediately and completely or not at all. This order will only remove liquidity from the order book. It must be filled in its entirety or canceled (killed).IMMEDIATE_OR_CANCELIOCAn immediate or cancel order (IOC) is a type of time in force used to instruct an exchange to execute all or part immediately and cancels any unfilled portion of the order. This order will only remove liquidity from the order book. It will fill whatever part of the order it can immediately and cancel any remaining amount so that no part of the order is added to the order book.The table below displays a breakdown of the EMS support of specific time in force values by the Order destination. Order destination idGTCGTTEGTTOFOKIOCBINANCEXXXXBINANCEUATXXXXBINANCEJEXXXXBINANCEUSXXXXBINANCEFTSXXXXBINANCEFTSUATXXXXBINANCEFTSCXXXXBINANCEFTSCUATXXXXBINANCEOPTVXXXXBINANCEOPTVUATXXXXBITFINEXXXXXXBITMEXXXXXBITMEXUATXXXXBITSTAMPXXXXBLOCKCHAINEXCHANGEXXXXCOINBASEXXXXGEMINIXXXXHITBTCXXXXXKRAKENXXXKRAKENFTSXXXPOLONIEXXXXXLMAXDIGITALXXXXLMAXDIGITALUATXXXXDERIBITXXXXDERIBITUATXXXXDYDXXXXXXLegend: X - supported.Execution instructions​Execution instruction puts restrictions on order handling at the matching engine. More than one instruction can apply to an order. The table below describes how to interpret execution instructions parameter values. Legend: X - supported.InstructionShortcodeDescriptionAUCTION_ONLYAOAn Auction Only (AO) instructs exchange that this order is for the auction only book for the next auction. The order may be cancelled up until the the auction locks, after which cancel requests will be rejected.INDICATION_OF_INTERESTIOIAn indication of interest (IOI) instructs exchange that this order should be processed as request for liquidity from block trading market markets.MAKER_OR_CANCELMOCA Maker or cancel (MOC) instructs exchange that this order will only add liquidity to the order book. If any part of the order could be filled immediately, the whole order will instead be rejected before any execution occurs. This instruction is also known as Post only or Participate don't initiate.CANCEL_ON_DISCONNECTCODCancel on System Failure (Cancel on disconnect)DO_NOT_CANCEL_ON_DISCONNECTNCODReinstate on System Failure (Do not cancel on disconnect)DO_NOT_INCREASEDNI(Reduce only) If part of a position is closed by any other means than the reduce-only order, the reduce-only order will be automatically adjusted downwards. If the trader decides to increase their position before the reduce-only order is executed, the quantity of the reduce-only order will not increase as well.The table below displays a breakdown of the EMS support of specific execution instructions by the Order destination. Order destination idMOCAOIOICODNCODDNIBINANCEXBINANCEUATXBINANCEJEXBINANCEUSXBINANCEFTSXBINANCEFTSUATXBINANCEFTSCXBINANCEFTSCUATXBINANCEOPTVXBINANCEOPTVUATXBITFINEXXBITMEXXBITMEXUATXBITSTAMPBLOCKCHAINEXCHANGEXCOINBASEXGEMINIXXXHITBTCKRAKENFTSXKRAKENXPOLONIEXXLMAXDIGITALXXLMAXDIGITALUATXXDERIBITXXDERIBITUATXXDYDXXXLegend: X - supported.Market Orders​While our API inherently supports limit orders, we understand the necessity for some clients to operate with market orders. This documentation provides a technical solution for simulating market orders using our limit order functionality with the Fill or Kill (FOK) option.Technical Solution​To mimic the behavior of a market order using our API, which inherently supports limit orders, clients can place a limit order with a Fill or Kill (FOK) condition. This approach effectively replicates the immediate execution characteristic of a market order while requiring the specification of a maximum (for buy orders) or minimum (for sell orders) price limit.Implementation Steps:Prepare the Order:Define the order as a limit order. Set the price limit to the maximum price the client is willing to pay for a buy order or the minimum price they are willing to accept for a sell order. Ensure that the order quantity meets the client's requirement for the transaction.Set the FOK Condition:Apply the Fill or Kill condition to the order. This condition mandates that the order must be executed immediately in its entirety or not executed at all. It ensures that partial fills do not occur, closely aligning with the nature of a market order.Execution and Validation:Upon submission, the EMS will attempt to fill the order immediately based on the specified price limits and the FOK condition. If the order cannot be filled immediately and completely within the defined price range, it will be automatically cancelled, ensuring no partial fills.Advantages and Considerations​Immediate Execution: The FOK condition ensures that the order, if executed, is filled immediately, mirroring the behavior of a market order.Price Control: Clients maintain control over the maximum or minimum price limits, adding a layer of price protection that standard market orders do not provide.Simplicity: This method avoids the need for additional development or integration, utilizing the existing infrastructure of our API.Using a limit order API can be considered simpler and more straightforward for several reasons, especially when compared to other types of trading orders. Here are some factors that contribute to the perceived simplicity:Predictability and Control:Price Certainty: Limit orders allow users to specify the maximum or minimum price at which they are willing to buy or sell an asset. This provides certainty about the price, which is not the case with market orders, where the execution price can vary.Control over Execution: Users have better control over their trades. They can decide not to execute a trade if the market does not reach their specified price, avoiding unwanted entries or exits in volatile market conditions.Consistent behaviour: Not all the order destinations support market orders or when they support it, usually they are implmeneted in form of limit orders.Straightforward Implementation:Simplicity in API Design: Limit order APIs are generally straightforward to implement and integrate because the parameters are clear and well-defined (quantity, price, and sometimes duration).Fewer Real-time Considerations: Unlike market orders, where getting the best available price in real-time is crucial, limit orders are placed based on predefined criteria. This can reduce the complexity associated with rapid decision-making and real-time data processing.Reduced Need for Immediate Market Data:Less Dependency on Real-time Pricing: Since the execution of a limit order is based on the user's specified price, there's less need for immediate or real-time market data, unlike market orders where knowing the current market price is crucial for order execution.Cost Predictability:Avoidance of Slippage: With limit orders, the risk of slippage (the difference between the expected price of a trade and the price at which the trade is executed) is eliminated. Users can be more confident about the cost of their trades, making financial planning and risk management more straightforward.Ease of Monitoring and Management:Set and Forget: Users can place limit orders and not worry about monitoring the market constantly. The order will only execute if the market price meets the user's criteria, making it a more passive form of trading.Batch Processing Friendly: For applications or trading strategies that place numerous orders, limit orders can be more manageable as they don't require immediate processing or constant monitoring of market prices.Reduced Impact on Market Price:Minimized Market Disruption: Limit orders can be less disruptive to the market price, especially for large orders. They are executed only at the user's specified price, avoiding large, sudden impacts on the market price that can occur with large market orders.In summary, a limit order API can offer a simpler and more controlled trading experience, with price certainty, reduced need for real-time market data, straightforward implementation, and predictable costs. These factors contribute to its appeal, especially for users or systems focusing on strategic, planned trading activities rather than immediate, real-time market engagement.Time​For all input and output time values ISO 8601 standard is used.Format specifierDescriptionyyyyThe year as a four-digit number.MMThe month, from 01 through 12.ddThe day of the month, from 01 through 31.HHThe hour, using a 24-hour clock from 00 to 23.mmThe minute, from 00 through 59.ssThe second, from 00 through 59.fffThe milliseconds in a date and time value.fffffffThe ten millionths of a second in a date and time value.Input time values are parsed using the following formats as far as possible:yyyy-MM-ddTHH:mm:ss.fffffffyyyy-MM-ddTHH:mm:ss.fffyyyy-MM-ddTHH:mm:ssyyyy-MM-ddTHH:mmyyyy-MM-ddTHHyyyy-MM-ddyyyyMMddTHHmmssfffffffyyyyMMddTHHmmssfffyyyyMMddTHHmmssyyyyMMddTHHmmyyyyMMddTHHyyyyMMddinfoWhen time zone information is not supplied, we will assume the UTC time zone.Output time values are formatted using the following patterns:yyyy-MM-ddTHH:mm:ss.fffffffZyyyy-MM-ddinfoAll time values we provide are UTC time zone. Do not assume otherwise.Was this section helpful?12345NextAuthenticationWhat is EMS API?Architecture and componentsBenefits and featuresLow latency supportNormalized API abstractionIndustry-standard protocolsSelf-host or in CloudSecurity & PrivacyMulti-account supportSDK and samples for 40+ languagesComprehensive supportHigh-quality integrationsEnterprise-grade support and maintenanceHigh availabilityP&L and asset monitoringOrder status descriptionOrder status lifecycleMarket OrdersTechnical SolutionAdvantages and ConsiderationsTimeCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/#oeml-order-params-exec)"
276,i.io general faq billing and subscriptions How to reactivate my canceled subscription,"i.io general faq billing and subscriptions How to reactivate my canceled subscription.   How to reactivate my canceled subscription? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIBilling and SubscriptionsCan I cancel my subscription anytime?Can I still use my API key if I cancel my subscription?How to reactivate my canceled subscription?How to subscribe to the API?How to upgrade/downgrade my subscription?Security and PrivacyGlossaryChangelogFAQBilling and SubscriptionsHow to reactivate my canceled subscription?How to reactivate my canceled subscription?If your subscription was marked for cancelation using the customer portal and your billing period date has not passed, then you can still reactivate it by logging into the Customer Portal (https://customerportal.coinapi.io/login) and navigating to Subscriptions > Manage Subscriptions, you will be able to resume the subscription here. If you also selected to pause your subscription, you may also resume it again here.If your subscription was marked for cancelation and your current billing period date has already passed, then you must acquire a new subscription from our Pricing page (https://www.coinapi.io/market-data-api/pricing) or contact support.Was this section helpful?12345PreviousCan I still use my API key if I cancel my subscription?NextHow to subscribe to the API?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/billing-and-subscriptions/How-to-reactivate-my-canceled-subscription)"
277,i.io market data rest api ohlcv ohlcv list all periods,"i.io market data rest api ohlcv ohlcv list all periods.   List all periods | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcv Historical data by exchange Historical data Latest data List all periodsOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIOhlcv List all periods List all periodsGET /v1/ohlcv/periodsGet full list of supported time periods available for requesting OHLCV timeseries data.Available periods​Time unitPeriod identifiersSecond1SEC, 2SEC, 3SEC, 4SEC, 5SEC, 6SEC, 10SEC, 15SEC, 20SEC, 30SECMinute1MIN, 2MIN, 3MIN, 4MIN, 5MIN, 6MIN, 10MIN, 15MIN, 20MIN, 30MINHour1HRS, 2HRS, 3HRS, 4HRS, 6HRS, 8HRS, 12HRSDay1DAY, 2DAY, 3DAY, 5DAY, 7DAY, 10DAYMonth1MTH, 2MTH, 3MTH, 4MTH, 6MTHYear1YRS, 2YRS, 3YRS, 4YRS, 5YRStipYou can assume that we will not remove any periods from this response, however, we may add new ones.Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [period_id string nullableThe period ID.length_seconds int32The length of the period in seconds.length_months int32The length of the period in months.unit_count int32 nullableThe unit count.unit_name string nullableThe unit name.display_name string nullableThe display name of the timeseries period.][ { ""period_id"": ""string"", ""length_seconds"": 0, ""length_months"": 0, ""unit_count"": 0, ""unit_name"": ""string"", ""display_name"": ""string"" }][ { ""period_id"": ""1SEC"", ""length_seconds"": 1, ""length_months"": 0, ""unit_count"": 1, ""unit_name"": ""second"", ""display_name"": ""1 Second"" }, { ""period_id"": ""10DAY"", ""length_seconds"": 864000, ""length_months"": 0, ""unit_count"": 10, ""unit_name"": ""day"", ""display_name"": ""10 Days"" }, { ""period_id"": ""2YRS"", ""length_seconds"": 0, ""length_months"": 24, ""unit_count"": 2, ""unit_name"": ""year"", ""display_name"": ""2 Years"" }]SchemaExample (from schema)Example responseSchemaArray [period_id string nullableThe period ID.length_seconds int32The length of the period in seconds.length_months int32The length of the period in months.unit_count int32 nullableThe unit count.unit_name string nullableThe unit name.display_name string nullableThe display name of the timeseries period.][ { ""period_id"": ""string"", ""length_seconds"": 0, ""length_months"": 0, ""unit_count"": 0, ""unit_name"": ""string"", ""display_name"": ""string"" }][ { ""period_id"": ""1SEC"", ""length_seconds"": 1, ""length_months"": 0, ""unit_count"": 1, ""unit_name"": ""second"", ""display_name"": ""1 Second"" }, { ""period_id"": ""10DAY"", ""length_seconds"": 864000, ""length_months"": 0, ""unit_count"": 10, ""unit_name"": ""day"", ""display_name"": ""10 Days"" }, { ""period_id"": ""2YRS"", ""length_seconds"": 0, ""length_months"": 24, ""unit_count"": 2, ""unit_name"": ""year"", ""display_name"": ""2 Years"" }]SchemaExample (from schema)Example responseSchemaArray [period_id string nullableThe period ID.length_seconds int32The length of the period in seconds.length_months int32The length of the period in months.unit_count int32 nullableThe unit count.unit_name string nullableThe unit name.display_name string nullableThe display name of the timeseries period.][ { ""period_id"": ""string"", ""length_seconds"": 0, ""length_months"": 0, ""unit_count"": 0, ""unit_name"": ""string"", ""display_name"": ""string"" }][ { ""period_id"": ""1SEC"", ""length_seconds"": 1, ""length_months"": 0, ""unit_count"": 1, ""unit_name"": ""second"", ""display_name"": ""1 Second"" }, { ""period_id"": ""10DAY"", ""length_seconds"": 864000, ""length_months"": 0, ""unit_count"": 10, ""unit_name"": ""day"", ""display_name"": ""10 Days"" }, { ""period_id"": ""2YRS"", ""length_seconds"": 0, ""length_months"": 24, ""unit_count"": 2, ""unit_name"": ""year"", ""display_name"": ""2 Years"" }]SchemaExample (from schema)Example responseSchemaArray [period_id string nullableThe period ID.length_seconds int32The length of the period in seconds.length_months int32The length of the period in months.unit_count int32 nullableThe unit count.unit_name string nullableThe unit name.display_name string nullableThe display name of the timeseries period.][ { ""period_id"": ""string"", ""length_seconds"": 0, ""length_months"": 0, ""unit_count"": 0, ""unit_name"": ""string"", ""display_name"": ""string"" }][ { ""period_id"": ""1SEC"", ""length_seconds"": 1, ""length_months"": 0, ""unit_count"": 1, ""unit_name"": ""second"", ""display_name"": ""1 Second"" }, { ""period_id"": ""10DAY"", ""length_seconds"": 864000, ""length_months"": 0, ""unit_count"": 10, ""unit_name"": ""day"", ""display_name"": ""10 Days"" }, { ""period_id"": ""2YRS"", ""length_seconds"": 0, ""length_months"": 24, ""unit_count"": 2, ""unit_name"": ""year"", ""display_name"": ""2 Years"" }]Loading...Was this section helpful?12345Previous Latest dataNextOrder BookCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/ohlcv/ohlcv-list-all-periods)"
278,i.io general faq general Did you offer discount for University non profit research only usage,"i.io general faq general Did you offer discount for University non profit research only usage.   Did you offer discount for University/non-profit/research-only usage? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralDid you offer discount for University/non-profit/research-only usage?On this pageDid you offer discount for University/non-profit/research-only usage?How to apply the discount for CoinAPI​Kindly settle the full amount of the subscription using your university domain as a requirement. Then send the university email address and proof of payment to us. We will apply the discount internally, then half of the payment will be credited into your account and it will be used to cover the next invoice.How to apply the discount for CryptoTick​We offer a 50% discount if you will purchase from the university domain for non-profit/research-only use for the CoinAPI and CryptoTick products if you will disclose us as the data source in any public paper that will be produced based on the data.In that case use coupon code: edu-nonprofit-50Was this section helpful?12345PreviousDid you have market data in flat files?NextDo you have a Status Page?How to apply the discount for CoinAPIHow to apply the discount for CryptoTickCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/Did-you-offer-discount-for-University-non-profit-research-only-usage)"
279,i.io naas api ethereum Methods eth getWork,"i.io naas api ethereum Methods eth getWork.   eth_getWork | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_getWorkOn this pageeth_getWorkOverview​The ""eth_getWork"" method returns the hash of the current block, the seedHash, and the boundary condition to be met (""target"")Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'content-type: application/json' \  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data ' {  ""id"": 1,  ""jsonrpc"": ""2.0"",  ""method"": ""eth_getWork"" }'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getWork\""}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [ CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"", CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => """", CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 30, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => ""POST"", CURLOPT_POSTFIELDS => json_encode([ 'id' => 1, 'jsonrpc' => '2.0', 'method' => 'eth_getWork' ]), CURLOPT_HTTPHEADER => [ ""accept: application/json"", ""content-type: application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" ],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) { echo ""cURL Error #:"" . $err;} else { echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_getWork""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text) const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({id: 1, jsonrpc: '2.0', method: 'eth_getWork'})};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getWork\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))} require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getWork\""}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getWork\""}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​Response​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""error"": {  ""code"": -32601,  ""message"": """" }}Was this section helpful?12345Previouseth_getUncleCountByBlockNumberNexteth_hashrateOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_getWork)"
280,i.io naas api bitcoin Methods getblockfilter,"i.io naas api bitcoin Methods getblockfilter.   getblockfilter | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetblockfilterOn this pagegetblockfilterOverview​The 'getblockfilter' method allows you to retrieve a BIP 157 content filter for a specific block in the Bitcoin blockchain.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""getblockfilter"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""getblockfilter\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""getblockfilter"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""2.0"", ""method"": ""getblockfilter"", ""params"": [], ""id"": 1})headers = { 'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type': 'application/json', 'accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""getblockfilter"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""getblockfilter"",""params"": [],""id"":1}`) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"") req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""method"": ""getblockfilter"", ""params"": [], ""id"": 1})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder().build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""2.0\"",\r \""id\"": \""1\"",\r \""method\"": \""getblockfilter\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​blockhash (string): The hash of the block for which you want to retrieve the filter.filtertype (string, optional, default=basic): The type name of the filter. You can specify the filter type as per your requirement.Response​{ ""result"": null, ""error"": {  ""code"": -1,  ""message"": ""getblockfilter \""blockhash\"" ( \""filtertype\"" ) Retrieve a BIP 157 content filter for a particular block. Arguments: 1. blockhash  (string, required) The hash of the block 2. filtertype (string, optional, default=\""basic\"") The type name of the filter Result: {      (json object) \""filter\"" : \""hex\"", (string) the hex-encoded filter data \""header\"" : \""hex\""  (string) the hex-encoded filter header } Examples: > bitcoin-cli getblockfilter \""00000000c937983704a73af28acdec37b049d214adbda81d7e2a3dd146f6ed09\"" \""basic\"" > curl --user myusername --data-binary '{\""jsonrpc\"": \""1.0\"", \""id\"": \""curltest\"", \""method\"": \""getblockfilter\"", \""params\"": [\""00000000c937983704a73af28acdec37b049d214adbda81d7e2a3dd146f6ed09\"", \""basic\""]}' -H 'content-type: text/plain;' http://127.0.0.1:8332/ "" }, ""id"": 1}Was this section helpful?12345PreviousgetblockcountNextgetblockhashOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getblockfilter)"
281,i.io naas api ethereum Methods eth getProof,"i.io naas api ethereum Methods eth getProof.   eth_getProof | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_getProofOn this pageeth_getProofOverview​The ""eth_getProof"" method retrieves the account and storage values of the specified account, including the Merkle-proof.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'content-type: application/json' \   --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data '{ ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_getProof"", ""params"": [ ""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8"" ]}'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getProof\"",\""params\"":[\""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8\""]}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"",CURLOPT_RETURNTRANSFER => true,CURLOPT_ENCODING => """",CURLOPT_MAXREDIRS => 10,CURLOPT_TIMEOUT => 30,CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,CURLOPT_CUSTOMREQUEST => ""POST"",CURLOPT_POSTFIELDS => json_encode(['id' => 1,'jsonrpc' => '2.0','method' => 'eth_getProof','params' => ['0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8']]),CURLOPT_HTTPHEADER => [""accept: application/json"",""content-type: application/json"",""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY""],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) {echo ""cURL Error #:"" . $err;} else {echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_getProof"", ""params"": [""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8""]}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text) const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({ id: 1, jsonrpc: '2.0', method: 'eth_getProof', params: ['0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8'] })};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getProof\"",\""params\"":[\""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8\""]}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getProof\"",\""params\"":[\""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8\""]}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getProof\"",\""params\"":[\""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8\""]}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​A filter object containing the following:address: The address of the account.keys: Array of storage keys to retrieve the proof for.block: The block number, or the string ""latest"", ""earliest"" or ""pending"".Response​{ ""jsonrpc"": ""2.0"", ""id"": 0, ""result"": { ""address"": ""0x7f0d15c7faae65896648c8273b6d7e43f58fa842"", ""accountProof"": [  ""0xf90211a057682dd97c339167d0a923ea54273e2ecf10702b67721ad3f9dff813f2ce0205a0fdceda99d6ddafb971c700c4b834d60f651119ca5aca87fc6f1f93a50072340da04dc6877fcc14e1f3aa14a4abf6dfd3c4957d09e6bb3b440285031744c11f132da0b1db67ba601ccce18bf0c21833f1b943ecee49faa6abb53eb6d6baf2fa1d8082a039560b068a263acf368271fddb16c933521abb6e71bd571fdf2d033cdb5989d0a05c4e7aa3801447c022a9a1a3cc6353cffd5fc12a79300d29b75a1458f4678fa4a0de3f8e66a7e24847f28cf583647d7c0b90478cc2af63dba191c6cbadd90190afa0fe194f0dc6bedccce2b6465da90006cb79c030ad3a153c7d55c7c75027212f35a07d65d91165e2847c9f4a2e2807a0576f08f6ec1b6a66c78adc286f8f1b7ccceea0c2259f5449843134f1c278c770e1fa461244a76abef7b57664286820b7c16859a0c72dbc74e05bd68b032d35a5adf421f82fe4168469901c6448b8433a666cb225a0f9346c583a6ee2d0e75ce3d723d984864b7457856e661754d4ecfee0f9cdaae4a046d70957c59daa3b7df45ab746fcfb50bbae9d410ac347e34f1150bb1fd187d7a0207fb3edb0fc6dc93bdcb945362a855d51e7e0ab49d2d6f9544f07099596d930a0eeeb359a10e708f2402e82f74c145d5b4d5962ef4d2faee61ac69d2d013dd483a04cf4e8b6125c2dbc61c4d89b6c430c667478c2782290f6f724bfc9d590494b5d80"",  ""0xf90211a0b49c47e0d17fb4712af35919868d2e76f0cd0e73136e13d8cfe770a3bd7f451da0062f402a21167f08e4dca605f3ae7ad469771b8c2eab144ca3969a315645a74da033be642d7a3ee96cae88d3802a2095c1396118916f40d3ea7c222da96abf6bbca02c727c2053211a155eb4ff470635f490e43af9021ac3774dd552a4792072c21ea0dfb381dd62c54f3a5822c2e4deb265fe2d265b82eedb3091898e656d012f296ea0143e4a197aca20cd16d343198daa6593b70cbfbaf16e1656377d4f236c36a229a0655ad4a1dbcdb7f7d20f37b3672efab67fb47689a43bcea0664aec2f9cfc1836a0e9b7b0cd1e938547d3d9b80b84b0bd9c655cb7bea89116f9f1f3ef965e44ebefa0b4389e2a2e575012f2f9ed30ac0deb070962e09761556bcd2467d040322466c4a08644dfbab56761aee5d30f84a976a63f51241dd1328ca5bd1a2f1eaf9f443d72a04720528ec98003cb2161893e8cc80956e961aa028d0c08a4dcde7f21b49334cda0b652b1b93681ba43bda591ea314b82455b984779d36dd6b26d7b87bb1b608826a0497574f2a2fda281f5925bdcd55d66369dc57c5f1d5b0be5282454b6a433f2dea0c2823c53ccf4fcf0559e8371c511694f437a65e8d8d087a367a48e35738f0702a0e78ad0adff1f3b65bbedaf46760ccb6f18e8157f05681351f168cc62f819bbb9a066d05b1e7d4cda97dfdb6e5f025c31cc8dbc0a0cb389eb86ddc365acb7543af080"",  ""0xf90211a0d512f95fc80abbb3da3b08c05ae0db6ce7214801722b15a07595bd1c32cd5fd5a0110108ca5eeb72fd129bb7b325b404a88fbd2a823466c38db6da842233a812a9a0eb4ac1db947aac884d365e7521d2bae1435607394c083e9824a82f5833c568d3a01234a3ba30657a3a07b3775a07186165334963d6061deeb5753bc91c047c7d95a080cb21653a9044d643f2a91a81c3f864b8eb208dbd9f12d11669c20ce1e9fd00a09f9e31c9715cb0aaf2cfdad20675e411cad87d3cbeb6512ed0384a621337a7bca01d44535cbf77868c7fe3a193048f819ae662b039e5747e2eeb7ac294d495d98ca0a8a76b413d40f70f8d1dd99bfe99e216f18f3eae2cc2815ed05965d2c0ecd40aa0b51fb193807c7c962cc14bfde7130d3765ab56cbc2af710451453708c4cf335fa04176f9db7e358fdef66332c034f50ba351ade3697815cf462832039f2b208ac2a029305c932f739b1c5d0a421ff65f15029dd9dcd5f489d79d3728492b0ff252efa07e81446830a080dba79dd876470521cc98937e7eab43e536bfbaba0d28992bb9a003d164822ce91a4264ede7974ad779dc11e51efc3f9091353e2a846535f2d553a0b4e7d7df41afbb6198f290b1cb30ef0cd2dd52df92102edef7a9290c1a3c9159a02552e02202fdd528a47c7a112d3f75909f6f811a373e8a18f4bc2a0bd299f005a0afcc36f167e0cf6a1800bc7751a210ff483424ebb9e3c6da4b5eb99efa0db65680"",  ""0xf90211a04d8422d764c3762a80fef76a2eff6c21ab12894e5e2d9e04f22c06ee318ac007a0301fdd1915952b8a7bea30127074e9e2f9ac9e014ee5d8fcf6152b272b1cd728a044ddd1b7a6507910a72ecb389812ccceb1f800e059f019688cc5755b27f1438ea05e3541c5d60667aa41a91ee48b9c507552c94cc0e9c569768efdc47a8d85550ba0f881971b55026fe4603b2d5a8b1301ce67530de59313bab3118667f24f1051fda00b91d2ed1088463f8657c7efd4fd14252eb276d690337c6fe7066ef71cb76fa1a07b6c47a2d3ec219f13aec4990bbf2a3eb55ea59813280919ae56799f7e77a380a08ef2469fbc1c656755ade5d4777e25c31b964c20b75e1ab08f7aed6f4e4cbd1da062d948f3cee681c1bdb25cf4a2287fb367f5e91a63b304451a576040b967137aa04c1de96d975aef98fc5cfa4f58c007297bebab155b684b8fb9ef1b6ae5d5d443a0b278ad72680d49f110f4fd687a0c09fda2157f42abeb055299ade27b2e63eb14a004555c709d71512dfe817aa70900fa10586db2033441dc663e4aa4bdfa0d3eaba0eb73902925859ab0e85b34ab26d78983163eeb71d0551094e3360414bda40820a0055b4e96de3c7460985024bcae7e7f985dd015bd844321a0d2ad1d719469c783a0815ebee417bb8309e04073bf1a9284fcc085f01c9c2ef2eddac6a48cdccbcf12a0f90a0e448523dc51a80acfc35b384927375141477d9bf8d0c7bc0b3d2b5ea02c80"",  ""0xf90211a02ec53aa30b50dd55f9f8f9bf5428d596f779f2c185fd6477bfe5b4efadaae7d5a0a7a77593d8ff4aec38ed27625d5d6d14d1bf7a00ca10d562b8c8295cb5a9398ca001832c6104f429af06f56b77a90fcedb8da1f12349e8ee9a8af896947f891852a0892a46bf8f55c5f64b0af779b0aeed2b8d90755d6769726dfe13c57755d68d17a07c648d29d22d94302d05b5df82d2733fe6c5dea7eaa24623f7ec00bb95c3c18aa0eed7339a103cdde82d3bce5eb99d2a8098db1a37ea53052aa6e59112b2535d9ba066d4e48320199c41f5a9f8e680ad884f229d5a3f9e24b37d27760557f378498aa09635bc3bcb2b5ca9c434e66474f27b3d29c61132e1d48745a469c57e5b2e5442a0cf6394661bfcef70ad194cffbeddc3529a13bd447cc4a42239535cb4697eae4da0f1dd51a81c83d0e4d87ae6a2bcb4ea23a3781af95c80453e2ddb19a982bc4a6da0f33b16ced4ac6b7279ea3fc99f8f9e72b04d0348f01c983577f2f5d8d06cd313a0ef0e6a37a0605bf53bf4008f48dc6507bba802a5e26008172aad148245fea8caa0eec96c409876d9a82cd0046da97934c734ef0ef46aede447381cb3ccc9143b6ca0f85feed2292684af7f8370cd20911d583f3bd2c8b5f4b09587ff34240bafbfa7a0a461bdef60f617564d8ecad0a2c5d1f08e6e47832e4f46ad620206857c008586a0ccbea1835e26c34facad10a896aaba7dc1abb749b2ecb3870d80f324d8c88d5380"",  ""0xf90211a01c947f36f9da413b02ed64fb0cfd292f4e96960bf8716404c37921e26726c052a08f65c4bf233e62484513bb7c7b6e4435483442279f874d269cefeebd16d16601a051c12b25b9b33bd22f939f112cad43ac3a59e65d0a489936143f8041804a76bca001ef26f67f5ff67e0480d40e9822329c834f2683cc4973d11276c1d252c67d07a0ddbb583d588578d888365dc96e7ba8b081e4ed809368ec13336f3a6edbb4fe4ba0e8c4de149f9b385e51fb66516a4d91b62dbd80ddedd4522e14d370da47f63e5aa0a6bab2a26c167771cb857661ae7b6196b72acc111c0caab239c595c7c903a905a0911ec14c5bc5eba12f03c0ab07857899b43ce63d53f538d02675ed431d1f602ba07bc85254d84b40279df891bcdebbf5e9ed13f3cf3389f76e97ec2e5e7c3802c6a067858affaac4a665728d843114812bbec5c95ef55787ad8072bd9a5649f916aba034bfcb38403a1a9f3409ea13cb8139f820b702ee757cf87d229949825180a89ea0e3f8b04c275387c6222b6536967f2f1e6fc76dc6ee0e705d3e505f3d07e8bdd4a0deaf89533b13c20ff50ff3f03ff3a2daa8d1329a6a6d17a58c422cbe5ee2f80aa0c07ff9496c514eccb9aafdb35f908c0bf5916c8063768316d69d8a9f60a8dc02a0977297f4556485f285716435474bbf51ce270b551c7bf8e1071ff3dc57e0f545a09487a6d80521c929e599720b2e65337183f41e0b5aeb7fd2c3cfd1396510acb280"",  ""0xf90151a000595129cf1c67ce97ed615df7184fb47a0d018d9147a2a7952a639e464cdfd380a052081f67d885b439bee62a1c4e09c02a1ec729aef4d92be6584a29141a79c5c7a0d99cae2bc3b6fc3e8e2767b4d7a5884b9b2d9d20da7890318beefcdb9c7346d58080a0f63571735d99e763dafadb03d1abe3a93a98740ecddc8514d13df46a35a8d94680a081870f4697e57436ccdd8bdc1d624d7bc07861748ff8b3a352334df68f2c03ada0f0252504ee8753335ecf0ca1f73cf13d4505783ed5110bf4e9b384a68ad88f69a0d38a18ef7b993c9ad2d848453e7722c26998ff3d63e243b99cdab0dabf84157ea06e5ad479dbda7f1647ed613e35d837f5d2c697ef34160f3665173186553ee9c280a0bf8371cac505b6ea0cb0f67ef744713f306a2455f3f8844cfa527c62db59c69980a0d6d689405b1cf73786c5fdabb55ec22f9b5712d1ba9c0bfcd46d4b93721fcac780"",  ""0xf8669d37f29e142d49f8824d4e7f1735ec3da219687387629b5fccd86812df84b846f8440180a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a01d93f60f105899172f7255c030301c3af4564edd4a48577dbdc448aec7ddb0ac"" ], ""balance"": ""0x0"", ""codeHash"": ""0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"", ""nonce"": ""0x0"", ""storageHash"": ""0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421"", ""storageProof"": [  {  ""key"": ""0x00000000000000000000000000000000"",  ""value"": ""0x0"",  ""proof"": []  } ] }}The method returns the account and storage values of the specified account, including the Merkle-proof.Was this section helpful?12345Previouseth_getLogsNexteth_getStorageAtOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_getProof)"
282,i.io market data rest api exchange rates get specific rate,"i.io market data rest api exchange rates get specific rate.   Get specific rate | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange Rates Get all current rates Timeseries data Timeseries periods Get specific rateIndexesMetadataMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIExchange Rates Get specific rate Get specific rateGET /v1/exchangerate/:asset_id_base/:asset_id_quoteRetrieves the exchange rate for a specific base and quote asset at a given time or the current rate.infoIf you are using an exchange rate for mission-critical operations, then for best reliability, you should measure the difference between current time and the time returned from the response to ensure that value of the difference between those meets your internal requirements.Path Parametersasset_id_base string requiredRequested exchange rate base asset identifier (from the Metadata -> Assets)asset_id_quote string requiredRequested exchange rate quote asset identifier (from the Metadata -> Assets)Query Parameterstime stringTime at which exchange rate is calculated (optional, if not supplied then current rate is returned)Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchematime date-timeGets or sets the time of the exchange rate.asset_id_base string nullableGets or sets the base asset ID of the exchange rate.asset_id_quote string nullableGets or sets the quote asset ID of the exchange rate.rate doubleGets or sets the exchange rate value.src_side_base object[] nullableGets or sets the VWAP24 reference rates for the base asset.Array [time date-timeasset string nullablerate doublevolume double]src_side_quote object[] nullableGets or sets the VWAP24 reference rates for the quote asset.Array [time date-timeasset string nullablerate doublevolume double]{ ""time"": ""2024-07-16T12:55:05.240Z"", ""asset_id_base"": ""string"", ""asset_id_quote"": ""string"", ""rate"": 0, ""src_side_base"": [ {  ""time"": ""2024-07-16T12:55:05.240Z"",  ""asset"": ""string"",  ""rate"": 0,  ""volume"": 0 } ], ""src_side_quote"": [ {  ""time"": ""2024-07-16T12:55:05.240Z"",  ""asset"": ""string"",  ""rate"": 0,  ""volume"": 0 } ]}{ ""time"": ""2024-07-11T13:26:43.5073176Z"", ""asset_id_base"": ""BTC"", ""asset_id_quote"": ""USD"", ""rate"": 10000}SchemaExample (from schema)Example responseSchematime date-timeGets or sets the time of the exchange rate.asset_id_base string nullableGets or sets the base asset ID of the exchange rate.asset_id_quote string nullableGets or sets the quote asset ID of the exchange rate.rate doubleGets or sets the exchange rate value.src_side_base object[] nullableGets or sets the VWAP24 reference rates for the base asset.Array [time date-timeasset string nullablerate doublevolume double]src_side_quote object[] nullableGets or sets the VWAP24 reference rates for the quote asset.Array [time date-timeasset string nullablerate doublevolume double]{ ""time"": ""2024-07-16T12:55:05.240Z"", ""asset_id_base"": ""string"", ""asset_id_quote"": ""string"", ""rate"": 0, ""src_side_base"": [ {  ""time"": ""2024-07-16T12:55:05.240Z"",  ""asset"": ""string"",  ""rate"": 0,  ""volume"": 0 } ], ""src_side_quote"": [ {  ""time"": ""2024-07-16T12:55:05.240Z"",  ""asset"": ""string"",  ""rate"": 0,  ""volume"": 0 } ]}{ ""time"": ""2024-07-11T13:26:43.5073176Z"", ""asset_id_base"": ""BTC"", ""asset_id_quote"": ""USD"", ""rate"": 10000}SchemaExample (from schema)Example responseSchematime date-timeGets or sets the time of the exchange rate.asset_id_base string nullableGets or sets the base asset ID of the exchange rate.asset_id_quote string nullableGets or sets the quote asset ID of the exchange rate.rate doubleGets or sets the exchange rate value.src_side_base object[] nullableGets or sets the VWAP24 reference rates for the base asset.Array [time date-timeasset string nullablerate doublevolume double]src_side_quote object[] nullableGets or sets the VWAP24 reference rates for the quote asset.Array [time date-timeasset string nullablerate doublevolume double]{ ""time"": ""2024-07-16T12:55:05.241Z"", ""asset_id_base"": ""string"", ""asset_id_quote"": ""string"", ""rate"": 0, ""src_side_base"": [ {  ""time"": ""2024-07-16T12:55:05.241Z"",  ""asset"": ""string"",  ""rate"": 0,  ""volume"": 0 } ], ""src_side_quote"": [ {  ""time"": ""2024-07-16T12:55:05.241Z"",  ""asset"": ""string"",  ""rate"": 0,  ""volume"": 0 } ]}{ ""time"": ""2024-07-11T13:26:43.5073176Z"", ""asset_id_base"": ""BTC"", ""asset_id_quote"": ""USD"", ""rate"": 10000}SchemaExample (from schema)Example responseSchematime date-timeGets or sets the time of the exchange rate.asset_id_base string nullableGets or sets the base asset ID of the exchange rate.asset_id_quote string nullableGets or sets the quote asset ID of the exchange rate.rate doubleGets or sets the exchange rate value.src_side_base object[] nullableGets or sets the VWAP24 reference rates for the base asset.Array [time date-timeasset string nullablerate doublevolume double]src_side_quote object[] nullableGets or sets the VWAP24 reference rates for the quote asset.Array [time date-timeasset string nullablerate doublevolume double]{ ""time"": ""2024-07-16T12:55:05.241Z"", ""asset_id_base"": ""string"", ""asset_id_quote"": ""string"", ""rate"": 0, ""src_side_base"": [ {  ""time"": ""2024-07-16T12:55:05.241Z"",  ""asset"": ""string"",  ""rate"": 0,  ""volume"": 0 } ], ""src_side_quote"": [ {  ""time"": ""2024-07-16T12:55:05.241Z"",  ""asset"": ""string"",  ""rate"": 0,  ""volume"": 0 } ]}{ ""time"": ""2024-07-11T13:26:43.5073176Z"", ""asset_id_base"": ""BTC"", ""asset_id_quote"": ""USD"", ""rate"": 10000}Loading...Was this section helpful?12345Previous Timeseries periodsNextIndexesCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/exchange-rates/get-specific-rate)"
283,i.io naas api ethereum Methods trace callMany,"i.io naas api ethereum Methods trace callMany.   trace_callMany | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodstrace_callManyOn this pagetrace_callManyOverview​The 'trace_callMany' method allows users to execute a new message call immediately without creating a transaction on the blockchain. This is useful for scenarios where you want to simulate a transaction without actually sending it.Request​{ ""calls"": [ {  ""from"": ""0x..."",  ""to"": ""0x..."",  ""gas"": ""..."",  ""gasPrice"": ""..."",  ""value"": ""..."",  ""data"": ""0x..."" }, ... ], ""blockParameter"": ""latest""}Request Parameters​calls: An array of call objects.from: (Optional) The address the call is from.to: The address the call is to.gas: (Optional) The gas provided for the call.gasPrice: (Optional) The gas price for the call.value: (Optional) The value sent with the call.data: The call data.blockParameter: The block number or one of ""latest"", ""earliest"" or ""pending"".Response​[ { ""output"": ""0x..."", ""stateDiff"": null, ""trace"": [...], ""vmTrace"": null }, ...]Errors​Invalid Request: This error is returned if the request format is incorrect.Internal Error: This error is returned if there's a server-side issue processing the request.Rate Limits​Please note that there are rate limits applied to the API to ensure fair usage. Free-tier users are limited to 100 requests per day, while premium users can make up to 1000 or more requests per day.Support​If you encounter any issues or have further questions regarding the eth_getBlockByHash method, please contact our support team at [email protected].Was this section helpful?12345Previoustrace_callNexttrace_filterOverviewRequestRequest ParametersResponseErrorsRate LimitsSupportCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/trace_callMany)"
284,i.io market data rest api indexes list indexes,"i.io market data rest api indexes list indexes.   List indexes | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesHistorical Index Value w/CompositionList indexesTimeseries Index ValueMetadataMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIIndexesList indexesList indexesGET /v1/indexesList indexesResponses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)SchemaArray [index_id string nullableGets or sets the index ID associated with the index.name string nullableGets or sets the name associated with the index.description string nullableGets or sets the descripion of the index.][ { ""index_id"": ""string"", ""name"": ""string"", ""description"": ""string"" }]SchemaExample (from schema)SchemaArray [index_id string nullableGets or sets the index ID associated with the index.name string nullableGets or sets the name associated with the index.description string nullableGets or sets the descripion of the index.][ { ""index_id"": ""string"", ""name"": ""string"", ""description"": ""string"" }]SchemaExample (from schema)SchemaArray [index_id string nullableGets or sets the index ID associated with the index.name string nullableGets or sets the name associated with the index.description string nullableGets or sets the descripion of the index.][ { ""index_id"": ""string"", ""name"": ""string"", ""description"": ""string"" }]SchemaExample (from schema)SchemaArray [index_id string nullableGets or sets the index ID associated with the index.name string nullableGets or sets the name associated with the index.description string nullableGets or sets the descripion of the index.][ { ""index_id"": ""string"", ""name"": ""string"", ""description"": ""string"" }]Loading...Was this section helpful?12345PreviousHistorical Index Value w/CompositionNextTimeseries Index ValueCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/indexes/list-indexes)"
285,i.io general faq general Was my free API Key banned blocked,"i.io general faq general Was my free API Key banned blocked.   Was my free API Key banned/blocked? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralWas my free API Key banned/blocked?Was my free API Key banned/blocked?If you are using our free plan and experience a 403 error on HTTP response with the BANNED_FREE_PLAN_IP_ABUSE in the error message, then your free key was blocked as our system detected a link to another free API key (more than one API key was accessed from the IP address that accessed this key).However, please be informed that the existence of each additional API Key for a subscription (enabled or disabled) above the plan quota is charged 1 USD per day, with a minimum of one day. So it is possible to have multiple API keys under a single account.You can have only a single free API key and an unlimited number of paid subscriptions; paid subscriptions and single free API key usage are allowed at the same time. To continue using the free plan after the ban, another free API key needs to be provisioned on a different email address, but this can happen again if the rules will not be satisfied.Was this section helpful?12345PreviousSome symbols have extra identifiersNextWe need a OneZero FIX API session, is this possible?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/Was-my-free-API-Key-banned-blocked)"
286,i.io general faq general I hardly use the REST API why is my usage so high,"i.io general faq general I hardly use the REST API why is my usage so high.   I hardly use the REST API, why is my usage so high? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralI hardly use the REST API, why is my usage so high?On this pageI hardly use the REST API, why is my usage so high?To provide further clarification regarding REST API request limits, please read this section from our documentation:The request limit define number of maximum requests that could be executed in the 24 hours period (sliding/rolling window - always last 24 hours from specific moment) for your subscription. We define request as data request credits and this is not always equal to the number of API calls executed against the API. A request is deemed to be a single one if the limit query parameter on the endpoint isn’t available, isn’t used or it's stated otherwise in the API documentation. Otherwise — if the limit query parameter is available and is used — then each of the 100 data points returned in the response is counted as one request. For example at the 2019-08-22 13:00 UTC value of the requests remaining (X-RateLimit-Remaining) will be equal to the allocated quota (X-RateLimit-Limit) decreased by the sum of the request costs (SUM(X-RateLimit-Request-Cost)) executed in the period 2019-08-21 13:00 UTC - 2019-08-22 13:00 UTC (last 24 hours).API calls are not equivalent to requests. To give an example, for the date 2023-01-01, you only made 85 API calls, but made a total of 10,012 requests. This is because some API calls pull more data, and every 100 of those data points are considered as 1 request. If you are under the Streamer subscription, you would be exceeding your subscription tier's daily request limit (10k daily requests) and get a 429 error (i.e too many requests -- You have exceeded your API key rate limits).How do I calculate the number of requests I'll be making for a certain query?​The limit query parameter defines the amount of items to return. If you are not using the limit query parameter, the default value will be 100. If you do use it, then every 100 output items will be counted as 1 request. For example, a request using the limit parameter with a value of 1,500 would cost 15 requests (1500/100=15).https://rest.coinapi.io/v1/ohlcv/BINANCE_SPOT_BTC_USDT/history?limit=1500&period_id=1MIN&time_start=2021-01-28&time_end=2022-01-28The minimum value for the limit parameter is 1 and the maximum is 100,000. In addition, you can check the number of requests used to generate the current HTTP response by checking your response header's x-ratelimit-request-cost. You can also check x-concurrencylimit-remaining to see your remaining requests for the day. You can also check your REST API historical daily number of requests metrics by using our Customer Portal available at https://customerportal.coinapi.io/To learn more about REST API Limits, see here: https://docs.coinapi.io/market-data/rest-api#limitsWas this section helpful?12345PreviousI forgot my paid subscription API keyNext""Invalid API Key"" error for a newly purchased keyHow do I calculate the number of requests I'll be making for a certain query?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/I-hardly-use-the-REST-API-why-is-my-usage-so-high)"
287,i.io ems api #order status description,"i.io ems api #order status description.   EMS - Starter Guide | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIREST APIWebSocket APIFIX APISelf Hosted GuideEMS APIOn this pageEMS - Starter GuideThis section will provide general information about the Execution Management System API (EMS API) software product and enumerate a number of features that it provides.infoThe keywords ""MUST"", ""MUST NOT"", ""REQUIRED"", ""SHALL"", ""SHALL NOT"", ""SHOULD"", ""SHOULD NOT"", ""RECOMMENDED"", ""MAY"", and ""OPTIONAL"" in this document are to be interpreted as described in RFC 2119.What is EMS API?​Execution Management System (EMS) is a software that manages orders, executions, and exposure in an efficient, fast, cost-effective, and straightforward manner. An EMS allows you to route orders to multiple cryptocurrency exchanges simultaneously using a simple, robust, and unified Application Programming Interface (API).The software can be used in 2 different ways:Managed Cloud - Everything on our side. Hosted in the Cloud by CoinAPI. You manage the deployment using the REST API.Self-Hosted - Software on our side, on everything else.Dimension ComparisonManaged CloudSelf-HostedEase of use/installationVery easyHardTime to marketFastSlowDevOps team required to maintainNoYesOrder flow sent directly to the destinationNoYesWho manages the infrastructure (incl. monitoring)CoinAPIYouWho optimizes the latencyCoinAPIYou (CoinAPI only in software)How to installInstruct our Cloud Mgmt APIInstall on your infrastructurecautionWe recommend starting with the Managed Cloud and possibly upgrading to the Self-Hosted if the requirements of the integration/project will make that commercially reasonable.Architecture and components​A self-hosted EMS cluster can be deployed on a single server or multiple servers that will span multiple geographical locations, server sites, or cloud providers. In the Managed Cloud version, you did not care about that as we manage the server sites to be as close to the order destinations as possible.EMS consists of several components listed and ordered by dependency relationship:Exchange - Order destination, exchange, or broker.CoinAPI EMS Edge - Software that's responsible for communicating with the single specific order destination for which is deployed. This component exposes the EMS API for diagnostics purposes which functions visibility are limited to this single destination.CoinAPI EMS API - Software that's responsible for exposing fully functional the EMS API, maintaining the connection with all instances of CoinAPI EMS Edge.Customer Application - Customer software using the EMS API exposed by the CoinAPI EMS API component.Benefits and features​Low latency support​Specific projects usually involve High-Frequency Trading (HFT) or Market Making (MM) requiring low latency access to the order destination. EMS API was designed to have native support for this kind of activity.For every order destination in the cluster to which the submillisecond latency is required, these components should be deployed on a single server as close as possible to the order destination:CoinAPI EMS EdgeCoinAPI EMS APICustomer Application The closest proximity can be achieved using the:cloud region and/or availability zone the same as the destinationcollocation near the destinationcross-connect or direct-connect to the destination network infrastructureshortcutting the routers, SNAT/DNAT hosts, or proxies like CloudFlareThe cluster can naturally contain other order destinations at the same time in this setup, and this fact doesn't affect the latency to the locally provisioned destination(s).Normalized API abstraction​Our EMS API provides an abstraction layer that consolidates all supported third-party APIs into a single set of simple and robust data models and protocols. The Exchanges and the Assets are standardized using the Market Data REST API with which this product is compatible. More information about the exchanges and asset standardization can be found in the Documentation of the Market Data Product.Industry-standard protocols​Our API's can be accessed using multiple protocols widely adopted by the industry as a standard:RESTWebSocketFIX 4.4, 5.0FIXT 1.1Self-host or in Cloud​Deploy your property applications and trading algorithms in your company's collocated data centers or cloud providers if you need that, otherwise, let us manage the infrastructure and focus on using the API.Security & Privacy​Don't need to worry about the issues at the audit. Order flow, exchange API keys, or execution reports never leave your company infrastructure as the product is self-hosted.tipThe software complies with the ""SOC 2"" and ""ISO/IEC 27001 information security certifications.Multi-account support​Manage an unlimited number of exchange accounts in the cluster (for example, on behalf of your customers).SDK and samples for 40+ languages​We have the SDK libraries and code samples available for more than 40+ languages. The full list is available here: https://github.com/coinapi/coinapi-sdk/tree/masterComprehensive support​Leverage support for all market types and order types.High-quality integrations​Our integrations with third-party APIs are heavily tested and crafted with stability and latency in mind. For several third parties, we usually use multiple protocols simultaneously or tricks to acquire valuable pieces of information faster.Enterprise-grade support and maintenance​EMS product is fully supported and maintained to stay ahead of the curve. This approach offloads the often disliked responsibilities of the Software and DevOps Engineers in the organization and enables them to focus on the core business.High availability​The EMS software is designed to support high-availability deployments out of the box. For each order destination, we/you deploy multiple CoinAPI EMS Edge and CoinAPI EMS API components on different servers, availability zones, or cloud/infrastructure providers. Cluster using the service discovery backend, all components are automatically detected and interconnected.P&L and asset monitoring​Using the EMS, your organization can manage exposure and positions in real-time across all supported order destinations and build sophisticated risk management controls.Order lifecycle​This section will describe the lifecycle of the order in the EMS software.Order status description​This table describes how to interpret a specific order status.NameCan transit toStatus descriptionRECEIVEDREJECTEDROUTINGThe order is processed by the EMS.ROUTINGROUTEDThe order is (on the wire) between the EMS and the Exchange.ROUTEDREJECTEDNEWPARTIALLY_FILLEDFILLEDCANCELEDThe order has been sent to the exchange and not yet active in the order book.NEWPARTIALLY_FILLEDFILLEDPENDING_CANCELCANCELEDThe order is active in the book in its original state.PENDING_CANCELNEWPARTIALLY_FILLEDFILLEDCANCELEDThe order cancelation message has been sent to the Order destination.PARTIALLY_FILLEDFILLEDPENDING_CANCELCANCELEDThe order is partially filled and active in the order book.FILLEDThe order is filled and removed from the order book. This state is terminal.CANCELEDThe order is canceled and removed from the order book. This state is terminal.REJECTEDThe order is rejected. This state is terminal.Order status lifecycle​This table describes how to interpret transitions between order statuses and their initial values.Source StatusDestination statusDescriptionRECEIVEDEMS received a new order via the API.NEWEMS received an unseen new order from the Order destination. The order was relayed to the destination outside the EMS.PARTIALLY_FILLEDEMS received unseen partially filled order from the Order destination. The order was relayed to the destination outside the EMS.RECEIVEDREJECTEDEMS rejected the order.RECEIVEDROUTINGEMS delivering the order to the Order destination.ROUTINGROUTEDEMS sent the order to the Order destination.ROUTEDREJECTEDEMS received a message from the exchange that the order was rejected.ROUTEDNEWEMS received a message from the exchange that the order is active in the book in its original state.ROUTEDPARTIALLY_FILLEDEMS received a message from the exchange that part of the order was executed aggressively (removed liquidity). The remaining passive part is active in the book.ROUTEDFILLEDEMS received a message from the exchange that the order was executed aggressively (removed liquidity).ROUTEDCANCELEDEMS received a message from the exchange that the order is in the canceled state. The order has not been in the book as the conditions for the entry were not satisfied.NEWPARTIALLY_FILLEDEMS received a message from the exchange that part of the passive order was filled.NEWFILLEDEMS received a message from the exchange that the passive order is filled.NEWPENDING_CANCELEMS received cancel request for the order and successfully relayed it to the Order destination.NEWCANCELEDEMS received a message from the exchange that the passive order was canceled.PARTIALLY_FILLEDFILLEDEMS received a message from the exchange that the remaining part of the passive order is filled.PARTIALLY_FILLEDPENDING_CANCELEMS received cancel request for the remaining part of the passive order and successfully relayed it to the Order destination.PARTIALLY_FILLEDCANCELEDEMS received a message from the exchange that the remaining part of the passive order is canceled.PENDING_CANCELNEWEMS received a message from the exchange that updated the order before processing the cancellation request or the order cancellation request was rejected.PENDING_CANCELPARTIALLY_FILLEDEMS received a message from the exchange that updated the order before processing the cancellation request or the order cancellation request was rejected.PENDING_CANCELFILLEDEMS received a message from the exchange that updated the order before processing the cancellation request or the order cancellation request was rejected.PENDING_CANCELCANCELEDEMS received a message from exchange` that updated the order before processing the cancellation request or the order cancellation request was rejected.Order parameters​This section will describe parameters of the order in the EMS sofware.Order type​EMS supports only the LIMIT order type. Market orders don't have price protection, and because of that, they are not supported. As an alternative, you can use the Immediate or Cancel IOC order and provide the worst execution price to achieve the same result.Time in force​Time in force is a special instruction used when placing a trade to indicate how long an order will remain active before it expires.The table below describes how to interpret time in force parameter values.Time in forceShortcodeDescriptionGOOD_TILL_CANCELGTCA Good Till Cancel (GTC) is a default type of time-in-force. The order that lasts until is completed or canceled.GOOD_TILL_TIME_EXCHANGEGTTEThe Good Till Time Exchange (GTTE) time in force lets you set an expiration date and time up until which an order will be active in the book. The exchange handles the execution of the cancel originated from parameter.GOOD_TILL_TIME_OEMLGTTOThe Good Till Time OEML (GTTO) time in force lets you set an expiration date and time up until which an order will be active in the book. The CoinAPI EMS Edge sending the cancel request originated from the parameter. Worth mentioning that: (a) The cancellation request will not be sent if the software will be not be running at the time of expiration. (b) This parameter does not depend on the exchange. (c) The clock of the server running CoinAPI EMS Edge is used to trigger the cancelation request at the expiration.FILL_OR_KILLFOKFill or kill (FOK) is a type of time in force used to instruct an exchange to execute a transaction immediately and completely or not at all. This order will only remove liquidity from the order book. It must be filled in its entirety or canceled (killed).IMMEDIATE_OR_CANCELIOCAn immediate or cancel order (IOC) is a type of time in force used to instruct an exchange to execute all or part immediately and cancels any unfilled portion of the order. This order will only remove liquidity from the order book. It will fill whatever part of the order it can immediately and cancel any remaining amount so that no part of the order is added to the order book.The table below displays a breakdown of the EMS support of specific time in force values by the Order destination. Order destination idGTCGTTEGTTOFOKIOCBINANCEXXXXBINANCEUATXXXXBINANCEJEXXXXBINANCEUSXXXXBINANCEFTSXXXXBINANCEFTSUATXXXXBINANCEFTSCXXXXBINANCEFTSCUATXXXXBINANCEOPTVXXXXBINANCEOPTVUATXXXXBITFINEXXXXXXBITMEXXXXXBITMEXUATXXXXBITSTAMPXXXXBLOCKCHAINEXCHANGEXXXXCOINBASEXXXXGEMINIXXXXHITBTCXXXXXKRAKENXXXKRAKENFTSXXXPOLONIEXXXXXLMAXDIGITALXXXXLMAXDIGITALUATXXXXDERIBITXXXXDERIBITUATXXXXDYDXXXXXXLegend: X - supported.Execution instructions​Execution instruction puts restrictions on order handling at the matching engine. More than one instruction can apply to an order. The table below describes how to interpret execution instructions parameter values. Legend: X - supported.InstructionShortcodeDescriptionAUCTION_ONLYAOAn Auction Only (AO) instructs exchange that this order is for the auction only book for the next auction. The order may be cancelled up until the the auction locks, after which cancel requests will be rejected.INDICATION_OF_INTERESTIOIAn indication of interest (IOI) instructs exchange that this order should be processed as request for liquidity from block trading market markets.MAKER_OR_CANCELMOCA Maker or cancel (MOC) instructs exchange that this order will only add liquidity to the order book. If any part of the order could be filled immediately, the whole order will instead be rejected before any execution occurs. This instruction is also known as Post only or Participate don't initiate.CANCEL_ON_DISCONNECTCODCancel on System Failure (Cancel on disconnect)DO_NOT_CANCEL_ON_DISCONNECTNCODReinstate on System Failure (Do not cancel on disconnect)DO_NOT_INCREASEDNI(Reduce only) If part of a position is closed by any other means than the reduce-only order, the reduce-only order will be automatically adjusted downwards. If the trader decides to increase their position before the reduce-only order is executed, the quantity of the reduce-only order will not increase as well.The table below displays a breakdown of the EMS support of specific execution instructions by the Order destination. Order destination idMOCAOIOICODNCODDNIBINANCEXBINANCEUATXBINANCEJEXBINANCEUSXBINANCEFTSXBINANCEFTSUATXBINANCEFTSCXBINANCEFTSCUATXBINANCEOPTVXBINANCEOPTVUATXBITFINEXXBITMEXXBITMEXUATXBITSTAMPBLOCKCHAINEXCHANGEXCOINBASEXGEMINIXXXHITBTCKRAKENFTSXKRAKENXPOLONIEXXLMAXDIGITALXXLMAXDIGITALUATXXDERIBITXXDERIBITUATXXDYDXXXLegend: X - supported.Market Orders​While our API inherently supports limit orders, we understand the necessity for some clients to operate with market orders. This documentation provides a technical solution for simulating market orders using our limit order functionality with the Fill or Kill (FOK) option.Technical Solution​To mimic the behavior of a market order using our API, which inherently supports limit orders, clients can place a limit order with a Fill or Kill (FOK) condition. This approach effectively replicates the immediate execution characteristic of a market order while requiring the specification of a maximum (for buy orders) or minimum (for sell orders) price limit.Implementation Steps:Prepare the Order:Define the order as a limit order. Set the price limit to the maximum price the client is willing to pay for a buy order or the minimum price they are willing to accept for a sell order. Ensure that the order quantity meets the client's requirement for the transaction.Set the FOK Condition:Apply the Fill or Kill condition to the order. This condition mandates that the order must be executed immediately in its entirety or not executed at all. It ensures that partial fills do not occur, closely aligning with the nature of a market order.Execution and Validation:Upon submission, the EMS will attempt to fill the order immediately based on the specified price limits and the FOK condition. If the order cannot be filled immediately and completely within the defined price range, it will be automatically cancelled, ensuring no partial fills.Advantages and Considerations​Immediate Execution: The FOK condition ensures that the order, if executed, is filled immediately, mirroring the behavior of a market order.Price Control: Clients maintain control over the maximum or minimum price limits, adding a layer of price protection that standard market orders do not provide.Simplicity: This method avoids the need for additional development or integration, utilizing the existing infrastructure of our API.Using a limit order API can be considered simpler and more straightforward for several reasons, especially when compared to other types of trading orders. Here are some factors that contribute to the perceived simplicity:Predictability and Control:Price Certainty: Limit orders allow users to specify the maximum or minimum price at which they are willing to buy or sell an asset. This provides certainty about the price, which is not the case with market orders, where the execution price can vary.Control over Execution: Users have better control over their trades. They can decide not to execute a trade if the market does not reach their specified price, avoiding unwanted entries or exits in volatile market conditions.Consistent behaviour: Not all the order destinations support market orders or when they support it, usually they are implmeneted in form of limit orders.Straightforward Implementation:Simplicity in API Design: Limit order APIs are generally straightforward to implement and integrate because the parameters are clear and well-defined (quantity, price, and sometimes duration).Fewer Real-time Considerations: Unlike market orders, where getting the best available price in real-time is crucial, limit orders are placed based on predefined criteria. This can reduce the complexity associated with rapid decision-making and real-time data processing.Reduced Need for Immediate Market Data:Less Dependency on Real-time Pricing: Since the execution of a limit order is based on the user's specified price, there's less need for immediate or real-time market data, unlike market orders where knowing the current market price is crucial for order execution.Cost Predictability:Avoidance of Slippage: With limit orders, the risk of slippage (the difference between the expected price of a trade and the price at which the trade is executed) is eliminated. Users can be more confident about the cost of their trades, making financial planning and risk management more straightforward.Ease of Monitoring and Management:Set and Forget: Users can place limit orders and not worry about monitoring the market constantly. The order will only execute if the market price meets the user's criteria, making it a more passive form of trading.Batch Processing Friendly: For applications or trading strategies that place numerous orders, limit orders can be more manageable as they don't require immediate processing or constant monitoring of market prices.Reduced Impact on Market Price:Minimized Market Disruption: Limit orders can be less disruptive to the market price, especially for large orders. They are executed only at the user's specified price, avoiding large, sudden impacts on the market price that can occur with large market orders.In summary, a limit order API can offer a simpler and more controlled trading experience, with price certainty, reduced need for real-time market data, straightforward implementation, and predictable costs. These factors contribute to its appeal, especially for users or systems focusing on strategic, planned trading activities rather than immediate, real-time market engagement.Time​For all input and output time values ISO 8601 standard is used.Format specifierDescriptionyyyyThe year as a four-digit number.MMThe month, from 01 through 12.ddThe day of the month, from 01 through 31.HHThe hour, using a 24-hour clock from 00 to 23.mmThe minute, from 00 through 59.ssThe second, from 00 through 59.fffThe milliseconds in a date and time value.fffffffThe ten millionths of a second in a date and time value.Input time values are parsed using the following formats as far as possible:yyyy-MM-ddTHH:mm:ss.fffffffyyyy-MM-ddTHH:mm:ss.fffyyyy-MM-ddTHH:mm:ssyyyy-MM-ddTHH:mmyyyy-MM-ddTHHyyyy-MM-ddyyyyMMddTHHmmssfffffffyyyyMMddTHHmmssfffyyyyMMddTHHmmssyyyyMMddTHHmmyyyyMMddTHHyyyyMMddinfoWhen time zone information is not supplied, we will assume the UTC time zone.Output time values are formatted using the following patterns:yyyy-MM-ddTHH:mm:ss.fffffffZyyyy-MM-ddinfoAll time values we provide are UTC time zone. Do not assume otherwise.Was this section helpful?12345NextAuthenticationWhat is EMS API?Architecture and componentsBenefits and featuresLow latency supportNormalized API abstractionIndustry-standard protocolsSelf-host or in CloudSecurity & PrivacyMulti-account supportSDK and samples for 40+ languagesComprehensive supportHigh-quality integrationsEnterprise-grade support and maintenanceHigh availabilityP&L and asset monitoringOrder status descriptionOrder status lifecycleMarket OrdersTechnical SolutionAdvantages and ConsiderationsTimeCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/#order-status-description)"
288,i.io market data performance testing guide,"i.io market data performance testing guide.   CoinAPI API Performance Testing Guide | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuidePerformance Testing GuideOn this pageCoinAPI API Performance Testing GuideThis guide provides detailed steps to test the performance of the CoinAPI API across REST, WebSocket, and FIX interfaces. It's designed to help you efficiently measure and analyze the API's performance.1. REST API Performance Testing​Test the latency of API requests using curl commands on Linux.Example Command​cat > curl-format.txt << EOF time_namelookup: %{time_namelookup}s  time_connect: %{time_connect}s  time_appconnect: %{time_appconnect}s  time_pretransfer: %{time_pretransfer}s  time_redirect: %{time_redirect}s  time_starttransfer: %{time_starttransfer}s  ---------- time_total: %{time_total}s EOFcurl --http2-prior-knowledge -w ""@curl-format.txt"" -o /dev/null -s ""https://rest.coinapi.io/""2. WebSocket API Performance Testing​The WebSocket client application is designed for subscribing to data from our WebSocket service, capturing metrics such as message counts and latency.Note: This application is not intended to subscribe to all data feeds simultaneously as it uses only one connection. To effectively monitor various data types, consider creating multiple instances or using separate connections for each subscription type.Compilation and Running​Ensure .NET 8.0 or higher is installed.Navigate to the project directory and compile the application using dotnet build.Run the application with dotnet run and specify your parameters.For more details, visit the WebSocket Client Application Repository.3. FIX Protocol Testing​The FIX client enables session management, data subscription, and message processing using the QuickFix engine.Compilation and Running​Update config_nossl.cfg with your session settings.Compile the application with dotnet build in the project directory.Execute the compiled application to start your testing session.Access the complete source code and setup instructions at the FIX Client Application Repository.Good Practices for Performance Testing​Incorporating good practices into your testing strategy can significantly improve the reliability and efficiency of your performance testing. Here are some recommendations:Efficient Message Handling: Fetch messages from the connection as swiftly as possible and process them in a separate thread. This separation ensures that message retrieval is not bottlenecked by processing time.Monitoring and Separation: Keep a count of messages and manage their queue separately. This practice helps in isolating the fetching mechanism from the consumption process, allowing for more accurate performance measurements and streamlined processing.Utilize Multithreading Wisely: When employing multithreading, consider establishing multiple connections to distribute the load effectively. This approach can enhance throughput by leveraging parallel processing, especially in high-demand scenarios.Very Important​If latency increases, it is necessary to split data acquisition across multiple connections to utilize more threads effectively.By adhering to these practices, including the emphasized point on managing increasing latency through distributed data acquisition, you can ensure a more robust and efficient performance testing process.This guide aims to streamline your API performance testing across different interfaces. For further assistance, refer to the detailed documentation provided in the links above.Was this section helpful?12345PreviousTrading Essentials: Quickstart1. REST API Performance TestingExample Command2. WebSocket API Performance TestingCompilation and Running3. FIX Protocol TestingCompilation and RunningGood Practices for Performance TestingVery ImportantCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/performance-testing-guide)"
289,i.io flat files api rest api,i.io flat files api rest api.   Push API | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyFlat FilesBilling and UsageData & StructureS3 APIPush APIMetadataPush APIVersion: v1Push APIAuthentication​API Key: ApiKeyCoinApi API key needed to access the endpointsSecurity Scheme Type:apiKeyHeader parameter name:X-CoinAPI-KeyContactCOINAPI LTD: [email protected]URL: https://www.coinapi.ioLicenseMIT LicenseWas this section helpful?12345PreviousSDK GuideNextMetadataCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/flat-files-api/rest-api)
290,i.io naas api ethereum Methods eth createAccessList,"i.io naas api ethereum Methods eth createAccessList.   eth_createAccessList | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_createAccessListOn this pageeth_createAccessListOverview​The 'eth_createAccessList' method Creates an EIP-2930 access list that can be included in a transaction. This method is essential for optimizing your smart contract interactions. Access lists are a part of Ethereum's EIP-2930, aiming to enhance the network's scalability and reduce gas costs by specifying an explicit list of addresses and storage keys that a transaction intends to access.shellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'content-type: application/json' \  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data '{ ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_createAccessList"", ""params"": [ {  ""to"": ""0xd46e8dd67c5d32be8058bb8eb970870f07244567"",  ""gas"": ""0x00"",  ""gasPrice"": ""0x09184e72a000"",  ""value"": ""0x00"",  ""data"": ""0x"" } ]}'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"", ""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_createAccessList\""}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"",CURLOPT_RETURNTRANSFER => true,CURLOPT_ENCODING => """",CURLOPT_MAXREDIRS => 10,CURLOPT_TIMEOUT => 30,CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,CURLOPT_CUSTOMREQUEST => ""POST"",CURLOPT_POSTFIELDS => json_encode(['id' => 1,'jsonrpc' => '2.0','method' => 'eth_createAccessList','params' => [['to' => '0xd46e8dd67c5d32be8058bb8eb970870f07244567','gas' => '0x00','gasPrice' => '0x09184e72a000','value' => '0x00','data' => '0x']]]),CURLOPT_HTTPHEADER => [""accept: application/json"",""content-type: application/json"",""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY""],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) {echo ""cURL Error #:"" . $err;} else {echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_createAccessList"", ""params"": [  {   ""to"": ""0xd46e8dd67c5d32be8058bb8eb970870f07244567"",   ""gas"": ""0x00"",   ""gasPrice"": ""0x09184e72a000"",   ""value"": ""0x00"",   ""data"": ""0x""  } ]}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text)const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key' : '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({ id: 1, jsonrpc: '2.0', method: 'eth_createAccessList', params: [  {  to: '0xd46e8dd67c5d32be8058bb8eb970870f07244567',  gas: '0x00',  gasPrice: '0x09184e72a000',  value: '0x00',  data: '0x'  } ] })};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_createAccessList\"",\""params\"":[{\""to\"":\""0xd46e8dd67c5d32be8058bb8eb970870f07244567\"",\""gas\"":\""0x00\"",\""gasPrice\"":\""0x09184e72a000\"",\""value\"":\""0x00\"",\""data\"":\""0x\""}]}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_createAccessList\"",\""params\"":[{\""to\"":\""0xd46e8dd67c5d32be8058bb8eb970870f07244567\"",\""gas\"":\""0x00\"",\""gasPrice\"":\""0x09184e72a000\"",\""value\"":\""0x00\"",\""data\"":\""0x\""}]}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_createAccessList\"",\""params\"":[{\""to\"":\""0xd46e8dd67c5d32be8058bb8eb970870f07244567\"",\""gas\"":\""0x00\"",\""gasPrice\"":\""0x09184e72a000\"",\""value\"":\""0x00\"",\""data\"":\""0x\""}]}"");Request request = new Request.Builder() .url(""https://eth-mainnet.g.alchemy.com/v2/docs-demo"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​Transaction call object:'from' [optional]: 20 bytes. The address of the sender.'to': 20 bytes. Address the transaction is directed to.'gas' [optional]: Hexadecimal value of the gas provided for the transaction execution.'gasPrice' [optional]: Hexadecimal value gas price, in Wei, provided by the sender. The default is '0'. Used only in non-EIP-1559 transactions.'maxPriorityFeePerGas' [optional]: Maximum fee, in Wei, the sender is willing to pay per gas above the base fee. See EIP-1559 transactions. If used, must specify maxFeePerGas.'maxFeePerGas' [optional]: Maximum total fee (base fee + priority fee), in Wei, the sender is willing to pay per gas. See EIP-1559 transactions. If used, must specify maxPriorityFeePerGas.'value' [optional]: Hexadecimal of the value transferred, in Wei.'data' [optional]: Hash of the method signature and encoded parameters. See Ethereum contract ABI specification.Block number or block hash [required]: A string representing a block number, block hash, or one of the string tags latest, earliest, or pending. Refer to the default block parameter.Access list object:'accessList': A list of objects with the following fields:'address': Addresses to be accessed by the transaction.'storageKeys': Storage keys to be accessed by the transaction.'gasUsed': A hexadecimal string representing the approximate gas cost for the transaction if the access list is included.Response{ ""jsonrpc"": ""2.0"", ""id"": 1, ""error"": { ""code"": -32602, ""message"": ""invalid argument 0: json: cannot unmarshal hex number with leading zero digits into Go struct field TransactionArgs.gas of type hexutil.Uint64"" }}Was this section helpful?12345Previouseth_coinbaseNexteth_estimateGasOverviewRequest ParametersCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_createAccessList)"
291,i.io naas api bitcoin Methods importprunedfunds,"i.io naas api bitcoin Methods importprunedfunds.   importprunedfunds | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsimportprunedfundsOn this pageimportprunedfundsOverview​The 'importprunedfunds' Imports funds without rescan.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""importprunedfunds"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""importprunedfunds\"",\""params\"": [ ]}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""importprunedfunds"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection(""mainnet-bitcoin.node.coinapi.io"")payload = json.dumps({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""importprunedfunds"",""params"": []})headers = {'Content-Type': 'application/json','accept': 'application/json','X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}conn.request(""POST"", ""/"", payload, headers)res = conn.getresponse()data = res.read()print(data.decode(""utf-8""))var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""importprunedfunds"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""id"":1,""method"":""importprunedfunds"",""params"": [ ]}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""importprunedfunds"", ""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""importprunedfunds\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​rawtransaction: A raw transaction in hex funding an already-existing address in wallettxoutproof: The hex output from gettxoutproof that contains the transactionResponse​{ // Response structure here}Was this section helpful?12345PreviousimportprivkeyNextimportpubkeyOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/importprunedfunds)"
292,i.io ems api managed cloud rest api,"i.io ems api managed cloud rest api.   Managed Cloud REST API | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIAccountCertificateEndpointsExchangeLocationREST APIWebSocket APIFIX APISelf Hosted GuideManaged Cloud REST APIOn this pageVersion: v1Managed Cloud REST APIThis section will provide necessary information about the CoinAPI EMS Managed Cloud REST API protocol. This API is used to manage the overall deployment of Execution Management System API (EMS API) software, which means that in this API, you define the accounts, credentials, and configurations for the order destinations or identify the CoinAPI endpoints where you need to connect to access the EMS API. Implemented Standards:HTTP1.0HTTP1.1HTTP2.0Endpoints​EnvironmentUrlProductionhttps://ems-mgmt.coinapi.io/Authentication​To use resources that require authorized access, you will need to provide an API key to us when making HTTP requests.There are 2 methods for passing the API key to us, you only need to use one:Custom authorization header named X-CoinAPI-KeyQuery string parameter named apikeyCustom authorization header​You can authorize by providing additional custom header named X-CoinAPI-Key and API key as its value.Assuming that your API key is 73034021-THIS-IS-SAMPLE-KEY, then the authorization header you should send to us will look like: X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEYtipThis method is recommended by us and you should use it in production environments.Query string authorization parameter​You can authorize by providing an additional parameter named apikey with a value equal to your API key in the query string of your HTTP request.Assuming that your API key is 73034021-THIS-IS-SAMPLE-KEY and that you want to request all accounts, then your query string should look like this: GET /v1/accounts?apikey=73034021-THIS-IS-SAMPLE-KEYinfoQuery string method may be more practical for development activities.Authentication​API Key: APIKeyHeaderAPI Key: APIKeyQueryParamSecurity Scheme Type:apiKeyHeader parameter name:X-CoinAPI-KeySecurity Scheme Type:apiKeyHeader parameter name:apikeyContactCOINAPI LTD: [email protected]URL: https://www.coinapi.ioTerms of Servicehttps://www.coinapi.io/legalLicense37284Was this section helpful?12345PreviousAPI limits and billingNextAccountEndpointsAuthenticationCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/managed-cloud-rest-api)"
293,i.io general faq api Do you offer EMS Trading API,"i.io general faq api Do you offer EMS Trading API.   Do you offer EMS Trading API? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer EMS Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What is the rate limit for EMS Trading API?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQAPIDo you offer EMS Trading API?Do you offer EMS Trading API?We have Execution Management System API EMS is a software that manages orders, executions, and exposure in an efficient, fast, cost-effective, and straightforward manner. An EMS allows you to route orders to multiple cryptocurrency exchanges simultaneously using a simple, robust, and unified Application Programming Interface (API).The complete documentation is available here: https://docs.coinapi.io/ems-apiWas this section helpful?12345PreviousDo you accept bank or wire transfers?NextEmpty response when using EMS endpointsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/api/Do-you-offer-EMS-Trading-API)"
294,i.io faq api Why are there no Exchange Rates data for some assets for a given period,"i.io faq api Why are there no Exchange Rates data for some assets for a given period.   Why are there no Exchange Rates data for some assets for a given period? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQAPIWhy are there no Exchange Rates data for some assets for a given period?Why are there no Exchange Rates data for some assets for a given period?Some assets can be supported at a particular date but not have Exchange Rates data available for a given period. This is because our Exchange Rates data is produced from Quotes, Trades, and Metadata datasets. Quotes and Trades data are symbol-based (e.g BINANCE_SPOT_BTC_USDT), and some assets may not have symbols available yet for the queried period.For example, the asset CVX was supported starting from 2020-05-05, but it returns zero price data from 2020-05-05 to 2021-06-06. If you check the symbols for the CVX asset with the v1/symbols endpoint, most of them start only in the year 2021. Exchange rates in this case works as intended. That is why there is no Exchange Rates data for this asset for this period.To learn more about the algorithm for Exchange Rates, we have a comprehensive explanation in our documentation here: https://docs.coinapi.io/market-data/rest-api/exchange-ratesWas this section helpful?12345PreviousWhy are limit headers not always showing on a request?NextWhy do some symbols have additional prefix?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/api/Why-are-there-no-Exchange-Rates-data-for-some-assets-for-a-given-period)"
295,i.io cdn cgi l email protection#b7c4c2c7c7d8c5c3f7d4d8ded9d6c7de99ded8,"i.io cdn cgi l email protection#b7c4c2c7c7d8c5c3f7d4d8ded9d6c7de99ded8.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 8aad2594dccdb374 •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#b7c4c2c7c7d8c5c3f7d4d8ded9d6c7de99ded8)"
296,i.io general faq general Are you planning to add an order exchange fee feature,"i.io general faq general Are you planning to add an order exchange fee feature.   Are you planning to add an order exchange fee feature? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralAre you planning to add an order exchange fee feature?Are you planning to add an order exchange fee feature?We have this in the product roadmap, but no date has been disclosed yet.Was this section helpful?12345PreviousAre subscription payments executed automatically?NextAuthorizing CoinAPI Access to Your AWS S3 BucketCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/Are-you-planning-to-add-an-order-exchange-fee-feature)"
297,i.io naas api bitcoin Methods abandontransaction x,"i.io naas api bitcoin Methods abandontransaction x.   abandontransaction | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsabandontransactionOn this pageabandontransactionOverview​The 'abandontransaction' Mark in-wallet transaction as abandoned This will mark this transaction and all its in-wallet descendants as abandoned which will allow for their inputs to be respent. It can be used to replace “stuck” or evicted transactions.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""abandontransaction"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""abandontransaction\"",\r \""params\"": []\r }\r "", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""abandontransaction"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""abandontransaction"", ""params"": []})headers = { 'Content-Type': 'application/json', 'accept': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""abandontransaction"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{`+""""+` ""jsonrpc"": ""1.0"",`+""""+` ""id"": ""1"",`+""""+` ""method"": ""abandontransaction"",`+""""+` ""params"": []`+""""+`}`+""""+``)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""abandontransaction"", ""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder().build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""abandontransaction\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​txid: The transaction idResponse​{ ""result"": null, ""error"": { ""code"": -1, ""message"": ""abandontransaction \""txid\"" Mark in-wallet transaction <txid> as abandoned This will mark this transaction and all its in-wallet descendants as abandoned which will allow for their inputs to be respent. It can be used to replace \""stuck\"" or evicted transactions. It only works on transactions which are not included in a block and are not currently in the mempool. It has no effect on transactions which are already abandoned. Arguments: 1. txid (string, required) The transaction id Result: null (json null) Examples: > bitcoin-cli abandontransaction \""1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d\"" > curl --user myusername --data-binary '{\""jsonrpc\"": \""1.0\"", \""id\"": \""curltest\"", \""method\"": \""abandontransaction\"", \""params\"": [\""1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d\""]}' -H 'content-type: text/plain;' http://127.0.0.1:8332/ "" }, ""id"": ""1""}Was this section helpful?12345PreviousBitcoinNextabortrescanOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/abandontransaction_x)"
298,i.io flat files api rest api metadata list all exchanges,"i.io flat files api rest api metadata list all exchanges.   List all exchanges | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyFlat FilesBilling and UsageData & StructureS3 APIPush APIMetadataList all exchanges by exchange_idList all exchangesList of symbols for the exchangePush APIMetadataList all exchangesList all exchangesGET /api/metadata/exchangesGet a detailed list of exchanges provided by the system.infoProperties of the output are providing aggregated information from across all symbols related to the specific exchange. If you need to calculate your aggregation (e.g., limiting only the particular type of symbols), you should use /v1/symbols endpoint as a data source.Query Parametersfilter_exchange_id stringComma or semicolon delimited exchange identifiers used to filter response. (optional, eg. BITSTAMP;GEMINI)Responses200successful operationtext/plainapplication/jsontext/jsonSchemaExample (from schema)Example responseSchemaArray [exchange_id string nullableGets or sets the exchange ID.website string nullableGets or sets the website URL of the exchange.name string nullableGets or sets the name of the exchange.data_start string nullableGets the start date of the exchange's data.data_end string nullableGets the end date of the exchange's data.data_quote_start date-time nullableGets or sets the start date of quote data.data_quote_end date-time nullableGets or sets the end date of quote data.data_orderbook_start date-time nullableGets or sets the start date of order book data.data_orderbook_end date-time nullableGets or sets the end date of order book data.data_trade_start date-time nullableGets or sets the start date of trade data.data_trade_end date-time nullableGets or sets the end date of trade data.data_trade_count int64 nullableGets or sets the number of trades.data_symbols_count int64 nullableGets or sets the number of symbols.][ { ""exchange_id"": ""string"", ""website"": ""string"", ""name"": ""string"", ""data_start"": ""string"", ""data_end"": ""string"", ""data_quote_start"": ""2024-07-16T12:55:05.011Z"", ""data_quote_end"": ""2024-07-16T12:55:05.011Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.011Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.011Z"", ""data_trade_start"": ""2024-07-16T12:55:05.011Z"", ""data_trade_end"": ""2024-07-16T12:55:05.011Z"", ""data_trade_count"": 0, ""data_symbols_count"": 0 }][ { ""exchange_id"": ""OKCOIN_CNY"", ""website"": ""https://www.okcoin.cn/"", ""name"": ""OKCoin CNY"", ""data_quote_start"": ""2015-02-15T12:53:50.343+00:00"", ""data_quote_end"": ""2018-03-09T23:34:52.58+00:00"", ""data_orderbook_start"": ""2015-02-15T12:53:50.343+00:00"", ""data_orderbook_end"": ""2018-03-09T23:34:52.58+00:00"", ""data_trade_start"": ""2013-06-12T14:24:24+00:00"", ""data_trade_end"": ""2017-11-01T16:30:39.7077259+00:00"", ""data_symbols_count"": 2 }, { ""exchange_id"": ""HUOBI"", ""website"": ""https://www.huobi.com/"", ""name"": ""Huobi (HBUS)"", ""data_quote_start"": ""2015-03-29T21:46:06.263+00:00"", ""data_quote_end"": ""2019-11-03T18:22:29.1837496+00:00"", ""data_orderbook_start"": ""2015-03-29T21:46:06.263+00:00"", ""data_orderbook_end"": ""2019-11-03T18:23:53.2859878+00:00"", ""data_trade_start"": ""2015-03-29T21:46:08.703+00:00"", ""data_trade_end"": ""2019-11-03T18:21:48.277+00:00"", ""data_symbols_count"": 403 }]SchemaExample (from schema)Example responseSchemaArray [exchange_id string nullableGets or sets the exchange ID.website string nullableGets or sets the website URL of the exchange.name string nullableGets or sets the name of the exchange.data_start string nullableGets the start date of the exchange's data.data_end string nullableGets the end date of the exchange's data.data_quote_start date-time nullableGets or sets the start date of quote data.data_quote_end date-time nullableGets or sets the end date of quote data.data_orderbook_start date-time nullableGets or sets the start date of order book data.data_orderbook_end date-time nullableGets or sets the end date of order book data.data_trade_start date-time nullableGets or sets the start date of trade data.data_trade_end date-time nullableGets or sets the end date of trade data.data_trade_count int64 nullableGets or sets the number of trades.data_symbols_count int64 nullableGets or sets the number of symbols.][ { ""exchange_id"": ""string"", ""website"": ""string"", ""name"": ""string"", ""data_start"": ""string"", ""data_end"": ""string"", ""data_quote_start"": ""2024-07-16T12:55:05.012Z"", ""data_quote_end"": ""2024-07-16T12:55:05.012Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.012Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.012Z"", ""data_trade_start"": ""2024-07-16T12:55:05.012Z"", ""data_trade_end"": ""2024-07-16T12:55:05.012Z"", ""data_trade_count"": 0, ""data_symbols_count"": 0 }][ { ""exchange_id"": ""OKCOIN_CNY"", ""website"": ""https://www.okcoin.cn/"", ""name"": ""OKCoin CNY"", ""data_quote_start"": ""2015-02-15T12:53:50.343+00:00"", ""data_quote_end"": ""2018-03-09T23:34:52.58+00:00"", ""data_orderbook_start"": ""2015-02-15T12:53:50.343+00:00"", ""data_orderbook_end"": ""2018-03-09T23:34:52.58+00:00"", ""data_trade_start"": ""2013-06-12T14:24:24+00:00"", ""data_trade_end"": ""2017-11-01T16:30:39.7077259+00:00"", ""data_symbols_count"": 2 }, { ""exchange_id"": ""HUOBI"", ""website"": ""https://www.huobi.com/"", ""name"": ""Huobi (HBUS)"", ""data_quote_start"": ""2015-03-29T21:46:06.263+00:00"", ""data_quote_end"": ""2019-11-03T18:22:29.1837496+00:00"", ""data_orderbook_start"": ""2015-03-29T21:46:06.263+00:00"", ""data_orderbook_end"": ""2019-11-03T18:23:53.2859878+00:00"", ""data_trade_start"": ""2015-03-29T21:46:08.703+00:00"", ""data_trade_end"": ""2019-11-03T18:21:48.277+00:00"", ""data_symbols_count"": 403 }]SchemaExample (from schema)Example responseSchemaArray [exchange_id string nullableGets or sets the exchange ID.website string nullableGets or sets the website URL of the exchange.name string nullableGets or sets the name of the exchange.data_start string nullableGets the start date of the exchange's data.data_end string nullableGets the end date of the exchange's data.data_quote_start date-time nullableGets or sets the start date of quote data.data_quote_end date-time nullableGets or sets the end date of quote data.data_orderbook_start date-time nullableGets or sets the start date of order book data.data_orderbook_end date-time nullableGets or sets the end date of order book data.data_trade_start date-time nullableGets or sets the start date of trade data.data_trade_end date-time nullableGets or sets the end date of trade data.data_trade_count int64 nullableGets or sets the number of trades.data_symbols_count int64 nullableGets or sets the number of symbols.][ { ""exchange_id"": ""string"", ""website"": ""string"", ""name"": ""string"", ""data_start"": ""string"", ""data_end"": ""string"", ""data_quote_start"": ""2024-07-16T12:55:05.012Z"", ""data_quote_end"": ""2024-07-16T12:55:05.012Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.012Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.012Z"", ""data_trade_start"": ""2024-07-16T12:55:05.012Z"", ""data_trade_end"": ""2024-07-16T12:55:05.012Z"", ""data_trade_count"": 0, ""data_symbols_count"": 0 }][ { ""exchange_id"": ""OKCOIN_CNY"", ""website"": ""https://www.okcoin.cn/"", ""name"": ""OKCoin CNY"", ""data_quote_start"": ""2015-02-15T12:53:50.343+00:00"", ""data_quote_end"": ""2018-03-09T23:34:52.58+00:00"", ""data_orderbook_start"": ""2015-02-15T12:53:50.343+00:00"", ""data_orderbook_end"": ""2018-03-09T23:34:52.58+00:00"", ""data_trade_start"": ""2013-06-12T14:24:24+00:00"", ""data_trade_end"": ""2017-11-01T16:30:39.7077259+00:00"", ""data_symbols_count"": 2 }, { ""exchange_id"": ""HUOBI"", ""website"": ""https://www.huobi.com/"", ""name"": ""Huobi (HBUS)"", ""data_quote_start"": ""2015-03-29T21:46:06.263+00:00"", ""data_quote_end"": ""2019-11-03T18:22:29.1837496+00:00"", ""data_orderbook_start"": ""2015-03-29T21:46:06.263+00:00"", ""data_orderbook_end"": ""2019-11-03T18:23:53.2859878+00:00"", ""data_trade_start"": ""2015-03-29T21:46:08.703+00:00"", ""data_trade_end"": ""2019-11-03T18:21:48.277+00:00"", ""data_symbols_count"": 403 }]Loading...Was this section helpful?12345PreviousList all exchanges by exchange_idNextList of symbols for the exchangeCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/flat-files-api/rest-api/metadata/list-all-exchanges)"
299,i.io market data rest api indexes retrieve historical index value and composition,"i.io market data rest api indexes retrieve historical index value and composition.   Retrieve Historical Index Value and Composition | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIREST APIExchange RatesIndexesCreate indexGet index dataList of available indexesRetrieve Historical Composition Value Timeseries Retrieves historical timeseries for the specific composition value for an indexRetrieve Historical Index Value and CompositionRetrieve Historical Index Value TimeseriesUpdate indexMetadataMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket APIFIX APIS3 APIJSON RPCEMS APIFAQCustomer PortalChangelogMarket Data APIREST APIIndexesRetrieve Historical Index Value and CompositionRetrieve Historical Index Value and CompositionGET /v1/indexes/:index_id/historyRetrieve Historical Index Value and CompositionPath Parametersindex_id string requiredQuery Parameterstime_start date-timetime_end date-timelimit int32Default value: 100Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)SchemaArray [timestamp date-timevalue doublecomposition object[] nullableArray [component_id string nullablecomponent_value double]][ { ""timestamp"": ""2024-03-20T19:55:16.380Z"", ""value"": 0, ""composition"": [  {  ""component_id"": ""string"",  ""component_value"": 0  } ] }]SchemaExample (from schema)SchemaArray [timestamp date-timevalue doublecomposition object[] nullableArray [component_id string nullablecomponent_value double]][ { ""timestamp"": ""2024-03-20T19:55:16.380Z"", ""value"": 0, ""composition"": [  {  ""component_id"": ""string"",  ""component_value"": 0  } ] }]SchemaExample (from schema)SchemaArray [timestamp date-timevalue doublecomposition object[] nullableArray [component_id string nullablecomponent_value double]][ { ""timestamp"": ""2024-03-20T19:55:16.380Z"", ""value"": 0, ""composition"": [  {  ""component_id"": ""string"",  ""component_value"": 0  } ] }]SchemaExample (from schema)SchemaArray [timestamp date-timevalue doublecomposition object[] nullableArray [component_id string nullablecomponent_value double]][ { ""timestamp"": ""2024-03-20T19:55:16.380Z"", ""value"": 0, ""composition"": [  {  ""component_id"": ""string"",  ""component_value"": 0  } ] }]Loading...Was this section helpful?12345PreviousRetrieve Historical Composition Value Timeseries Retrieves historical timeseries for the specific composition value for an indexNextRetrieve Historical Index Value TimeseriesCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/indexes/retrieve-historical-index-value-and-composition)"
300,i.io cdn cgi l email protection#81f2f4f1f1eef3f5c1e2eee8efe0f1e8afe8ee,"i.io cdn cgi l email protection#81f2f4f1f1eef3f5c1e2eee8efe0f1e8afe8ee.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 8aad26fe2f6b278c •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#81f2f4f1f1eef3f5c1e2eee8efe0f1e8afe8ee)"
301,i.io how to guides build cryptocurrency portfolio tracker using react,"i.io how to guides build cryptocurrency portfolio tracker using react.   Building a Cryptocurrency Portfolio Tracker Using React and CoinAPI | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesAcquire exchange rates with different programming languagesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPICreating a historical crypto price chart using CoinAPI and D3.jsFetching market data with KNIMEGet Historical OHLCV Data Using CoinAPIGet symbol funding rate metric data using CoinAPIImport API into PostmanImport data to Google Sheets/ExcelReal-time data visualization with javascriptReal-time trades stream using WebSocket with different languagesRetrieve and analyze crypto order book data using a cryptocurrency APITrading Essentials: QuickstartMarket Data APIEMS APIFAQCustomer PortalChangelogHow-to guidesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPIOn this pageBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPIGetting Started with CoinAPI​Before diving into the tutorial, ensure you have:Created a CoinAPI account and obtained an API keyBasic familiarity with React and web developmentFirst things first, to make use of CoinAPI, you'll need to create an account and procure an API key. The key is needed to authenticate your application requests. Follow the instructions provided in CoinAPI's Getting Started Guide to set up your account.Setting Up Your React App​Begin by creating a new React application. You can do this using the create-react-app command or your preferred method. npx create-react-app coinapi-portfolio-tracker-appYou should have the following project structure:Get into the root of the folder in which package.json resides and check whether the project is compiling & starting:npm startOnce your app structure is ready and the project successfully compiles, open the App.js file. Copy and paste the following code into the App.js to see the header displaying ""CoinAPI Cryptocurrency Portfolio Tracker App"".import React, { useState } from 'react';function App() { return ( <div className=""App"">  <h1>CoinAPI Cryptocurrency Portfolio Tracker App</h1> </div> );}export default App;Start the application again using npm start:Retrieving Your Portfolio Data from CoinAPI​CoinAPI provides the v1/exchangerate/asset_id_base endpoint for fetching the latest exchange rates of your assets. To request BTC/USD, ETH/USD, and XRP/USD exchange rates from CoinAPI, we'll use useEffect hook and axios module to retrieve data. This hook will fetch the exchange rates when the component mounts and then update the portfolio state. Add the following code as part of the App.js:import React, { useState } from 'react';function App() {const [portfolio, setPortfolio] = useState([]);useEffect(() => { async function fetchExchangeRates() {  const assets = ['BTC', 'ETH', 'XRP'];  const promises = assets.map(asset =>  axios.get(`https://rest.coinapi.io/v1/exchangerate/${asset}/USD?apikey=YOUR_API_KEY`)  );  const responses = await Promise.all(promises);  const exchangeRates = responses.reduce((acc, response, index) => {  acc[assets[index]] = response.data.rate;  return acc;  }, {});  setPortfolio(exchangeRates); } fetchExchangeRates(); }, []); return ( <div className=""App"">  <h1>CoinAPI Cryptocurrency Portfolio Tracker App</h1> </div> );}export default App;Note: Make sure to replace YOUR_API_KEY with the API key you have obtained via the CoinAPI website.To make exchange rates appear in your web app, update the return part with the following code:return ( <div className=""App"">  <h1>CoinAPI Cryptocurrency Portfolio Tracker App</h1>  <ul>  {Object.entries(portfolio).map(([asset, exchangeRate]) => (   <li key={asset}>{asset}: {exchangeRate}</li>  ))}  </ul> </div> );Here's the complete App.js code:import React, { useState, useEffect } from 'react';import axios from 'axios';function App() { const [portfolio, setPortfolio] = useState([]); useEffect(() => { async function fetchExchangeRates() {  const assets = ['BTC', 'ETH', 'XRP'];  const promises = assets.map(asset =>  axios.get(`https://rest.coinapi.io/v1/exchangerate/${asset}/USD?apikey=YOUR_API_KEY`  );  const responses = await Promise.all(promises);  const exchangeRates = responses.reduce((acc, response, index) => {  acc[assets[index]] = response.data.rate;  return acc;  }, {});  setPortfolio(exchangeRates); } fetchExchangeRates(); }, []); return ( <div className=""App"">  <h1>CoinAPI Cryptocurrency Portfolio Tracker App</h1>  <ul>  {Object.entries(portfolio).map(([asset, exchangeRate]) => (   <li key={asset}>{asset}: {exchangeRate}</li>  ))}  </ul> </div> );}export default App;Before starting the application, make sure to install the axios module via the npm install axios command. Then start the application with npm start and check out the result:Styling Your Portfolio Tracker​Having fetched your portfolio data, you can now proceed to style your tracker. You can use raw CSS or opt for a UI library like Bootstrap or Material UI to enhance the look of your portfolio tracker. Here we'll use a CSS styling approach and the following classes: portfolio, portfolio-item, asset-name and asset-rate. Extend GUI part with className attributes values as following: return ( <div className=""App"">  <h1>CoinAPI Cryptocurrency Portfolio Tracker App</h1>  <div className=""portfolio"">  {Object.entries(portfolio).map(([asset, exchangeRate]) => (   <li key={asset} className=""portfolio-item"">   <span className=""asset-name"">{asset}/USD:</span>    <span className=""asset-rate"">{exchangeRate}</span>   </li>  ))}  </div> </div> );then update index.css with CSS class implementation:.portfolio { padding: 1em;}.portfolio-item { display: flex; align-items: center; font-size: 18px; margin-bottom: 10px;}.asset-name { font-weight: bold; margin-right: 10px; color: #007bff;}.asset-rate { color: #28a745;}.portfolio-item:hover { transform: scale(0.95); transition: transform 0.2s ease-in-out;}Retrieve data at regular intervals​Rather than repeatedly refreshing the application to obtain the most recent exchange rates, we can enhance it to fetch this data at specified intervals and automatically update the view. To update the exchange rates every 5 seconds, you can use the setInterval function in React.import React, { useState, useEffect } from 'react';import axios from 'axios';function App() { const [portfolio, setPortfolio] = useState([]); useEffect(() => { async function fetchExchangeRates() {  const assets = ['BTC', 'ETH', 'XRP'];  const promises = assets.map(asset =>  axios.get(`https://rest.coinapi.io/v1/exchangerate/${asset}/USD?apikey=YOUR_API_KEY`)  );  const responses = await Promise.all(promises);  const exchangeRates = responses.reduce((acc, response, index) => {  acc[assets[index]] = response.data.rate;  return acc;  }, {});  setPortfolio(exchangeRates); } fetchExchangeRates(); // Fetch exchange rates every 5 seconds const intervalId = setInterval(fetchExchangeRates, 5000); // Clean up the interval when the component unmounts to avoid memory leaks return () => clearInterval(intervalId); }, []); return ( <div className=""App"">  <h1>CoinAPI Cryptocurrency Portfolio Tracker App</h1>  <div className=""portfolio"">  {Object.entries(portfolio).map(([asset, exchangeRate]) => (   <li key={asset} className=""portfolio-item"">   <span className=""asset-name"">{asset}/USD:</span>    <span className=""asset-rate"">{exchangeRate}</span>   </li>  ))}  </div> </div> );}export default App;By following these steps, you'll create a basic cryptocurrency portfolio tracker using React and CoinAPI. For more information, you can check REST API Exchange Rates docs If you would like the data to be sent to you in real-time, check our Real-time data visualization with javascript or real-time trades stream using WebSocket with different languages ""how-to"" articles.Happy coding!Was this section helpful?12345PreviousAcquire exchange rates with different programming languagesNextCreating a historical crypto price chart using CoinAPI and D3.jsGetting Started with CoinAPISetting Up Your React AppRetrieving Your Portfolio Data from CoinAPIStyling Your Portfolio TrackerRetrieve data at regular intervalsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/how-to-guides/build-cryptocurrency-portfolio-tracker-using-react)"
302,i.io naas api ethereum Methods net peerCount,"i.io naas api ethereum Methods net peerCount.   net_peerCount | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodsnet_peerCountOn this pagenet_peerCountOverview​The ""net_peerCount"" returns the number of peers currently connected to the client.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'content-type: application/json' \  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data ' {  ""id"": 1,  ""jsonrpc"": ""2.0"",  ""method"": ""net_peerCount"" }'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""net_peerCount\""}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [ CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"", CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => """", CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 30, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => ""POST"", CURLOPT_POSTFIELDS => json_encode([ 'id' => 1, 'jsonrpc' => '2.0', 'method' => 'net_peerCount' ]), CURLOPT_HTTPHEADER => [ ""accept: application/json"", ""content-type: application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" ],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) { echo ""cURL Error #:"" . $err;} else { echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""net_peerCount""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text)const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({id: 1, jsonrpc: '2.0', method: 'net_peerCount'})};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""net_peerCount\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""net_peerCount\""}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""net_peerCount\""}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​Response​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": ""0x41""}Was this section helpful?12345Previousnet_listeningNextnet_versionOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/net_peerCount)"
303,i.io naas api bitcoin Methods combinepsbt x,"i.io naas api bitcoin Methods combinepsbt x.   combinepsbt | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodscombinepsbtOn this pagecombinepsbtOverview​The 'combinepsbt' method allows you to combine multiple partially signed Bitcoin transactions into a single transaction. This is particularly useful in multi-signature wallet setups where transactions require signatures from multiple parties before they can be broadcasted to the network.Request​shellcsharpphppythonjavascriptgorubywget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""combinepsbt"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""combinepsbt\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""combinepsbt"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""2.0"", ""method"": ""combinepsbt"", ""params"": [], ""id"": 1})headers = { 'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type': 'application/json', 'accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""combinepsbt"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) {console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""combinepsbt"",""params"": [],""id"":1}`) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"") req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""method"": ""combinepsbt"", ""params"": [], ""id"": 1})response = https.request(request)puts response.read_bodyRequest Parameters​method: (string) The name of the method being invoked, in this case, ""combinepsbt"".params: (json array, required) The base64 strings of partially signed transactions. Each element in the array is a base64 encoded string representing a partially signed transaction.psbt: (string) A base64 string of a partially signed Bitcoin transaction (PSBT).Response​{ ""result"": null, ""error"": { ""code"": -1, ""message"": ""combinepsbt [\""psbt\"",...] Combine multiple partially signed Bitcoin transactions into one transaction. Implements the Combiner role. Arguments: 1. txs   (json array, required) The base64 strings of partially signed transactions  [  \""psbt\"", (string) A base64 string of a PSBT  ...  ] Result: \""str\"" (string) The base64-encoded partially signed transaction Examples: > bitcoin-cli combinepsbt '[\""mybase64_1\"", \""mybase64_2\"", \""mybase64_3\""]' "" }, ""id"": 1}Was this section helpful?12345PreviousbumpfeeNextcombineRawTransactionOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/combinepsbt_x)"
304,i.io general faq,"i.io general faq.   FAQ | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQFAQThis section will cover the questions that are often asked based on the most common inquiries received by us. FAQs cover a range of topics, addressing issues related to products, services, policies, technical support, and more.Was this section helpful?12345PreviousTraces view explainedNextGeneralCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq)"
305,i.io market data rest api metadata #list all symbols get,i.io market data rest api metadata #list all symbols get.   Metadata | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataList all asset iconsList all assets by asset IDList all assetsList all exchanges by exchange_idList all exchangesList all symbolsList of icons for the exchangesList of symbols for the exchangeList symbol mapping for the exchangeMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIMetadataMetadata📄️ List all asset iconsGets the list of icons (of the given size) for all the assets.📄️ List all assets by asset IDList all assets by asset ID📄️ List all assetsRetrieves all assets.📄️ List all exchanges by exchange_idList all exchanges by exchange_id📄️ List all exchangesGet a detailed list of exchanges provided by the system.📄️ List all symbolsRetrieves all symbols with optional filtering.📄️ List of icons for the exchangesList of icons for the exchanges📄️ List of symbols for the exchangeList of symbols for the exchange📄️ List symbol mapping for the exchangeList symbol mapping for the exchangeWas this section helpful?12345PreviousTimeseries Index ValueNextList all asset iconsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/metadata/#list-all-symbols-get)
306,i.io how to guides fetching market data with knime,"i.io how to guides fetching market data with knime.   Fetching market data with KNIME | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesAcquire exchange rates with different programming languagesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPICreating a historical crypto price chart using CoinAPI and D3.jsFetching market data with KNIMEGet Historical OHLCV Data Using CoinAPIGet symbol funding rate metric data using CoinAPIImport API into PostmanImport data to Google Sheets/ExcelReal-time data visualization with javascriptReal-time trades stream using WebSocket with different languagesRetrieve and analyze crypto order book data using a cryptocurrency APITrading Essentials: QuickstartMarket Data APIEMS APIFAQCustomer PortalChangelogHow-to guidesFetching market data with KNIMEOn this pageFetching market data with KNIMEIntroduction​KNIME is an excellent tool for data analytics and integration, offering a user-friendly, node-based interface to design and automate data workflows. Its capabilities encompass data preprocessing, transformation, analysis, machine learning, and visualization, making it versatile for a wide range of data-related tasks. By seamlessly integrating with our REST API, you gain the ability to fetch comprehensive market data, providing you with the power to conduct in-depth research, formulate effective trading strategies, manage portfolios, and make informed, data-driven decisions in the dynamic cryptocurrency market.Prerequisites​A CoinAPI key (obtainable by signing up on the CoinAPI website)Installed KNIME Analytics Platform Creating KNIME workflow to get BTC exchange rates​If you have properly installed KNIME on your computer and obtained the CoinAPI key, we can start by preparing a workflow. Workflow refers to the visual representation of a data analysis process. It typically consists of nodes (also known as steps or tasks) connected in a specific sequence, where each node performs a specific operation on the data.Here's an example of two nodes connected:Get Request (sends an HTTP GET request to a specified URL, typically an API endpoint like rest.coinapi.io/v1/exchangerate/BTC)Output JSON (receives the JSON data obtained from the API response and presents it in a structured format)Using this example, you can download data and view it within the Output JSON block.Each node result may be easily previewed:Here's an output of the Get Request node:Here's an output of the Output JSON node:Configuring GET Request in KNIME​To configure a GET Request block, click Configure:In the Connection Settings tab, enter the URL of the resource you want to retrieve, e.g https://rest.coinapi.io/v1/exchangerate/BTC:In the Request Headers tab, enter the X-CoinAPI-Key header with the API key you have obtained via the website.Summary​Simple but also more complex workflows can be designed, enabling advanced operations like filtering, grouping, and utilizing your own Python scripts, culminating in the option to save the processed data in various formats such as CSV, Excel, or others. KNIME together with our Market Data API allows users to analyze market finance data for tasks like machine learning, data analysis, generating charts, optimizing portfolios, managing risks, backtesting trading strategies, and more.Embrace the world of market data analysis!Was this section helpful?12345PreviousCreating a historical crypto price chart using CoinAPI and D3.jsNextGet Historical OHLCV Data Using CoinAPIIntroductionPrerequisitesCreating KNIME workflow to get BTC exchange ratesConfiguring GET Request in KNIMESummaryCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/how-to-guides/fetching-market-data-with-knime)"
307,i.io cdn cgi l email protection#384b4d4848574a4c785b575156594851165157,"i.io cdn cgi l email protection#384b4d4848574a4c785b575156594851165157.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 86784c80bfb9bfbc •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#384b4d4848574a4c785b575156594851165157)"
308,i.io market data websocket ds,"i.io market data websocket ds.   WebSocket API DS | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1WebSocket API DSEndpointsGeneralMessagesJSON RPCFIX APIHow-to guidesPerformance Testing GuideWebSocket API DSOn this pageWebSocket API DSMarket Data - WebSocket APIWebSocket endpoint provides real-time market data streaming which works in Subscribe-Publish communication model. After establishing a WebSocket connection with us, you will need to send a Hello message documented below. If everything is correct, we will provide you with a continuous stream of real-time market data updates.Implemented Standards:HTTP/1.0HTTP/1.1HTTP/2HTTP/3 + QUICWebSocketcautionYour WebSocket client implementation must comply with the ""v13"" version of the protocol documented in the RFC6455, including responding with the ""Pong"" message each time we will send ""Ping"" (every minute), failure to respond with the ""Pong"" from your WebSocket client will cause a connection to be closed.infoYou may also want to use our REST API for a listing of available symbols, exchanges or assets that we support if you wish to receive a filtered stream.Authentication​If you want to learn how to authenticate to this API, you can find detailed instructions and guidance in authentication section of this documentation.Was this section helpful?12345PreviousMessagesNextEndpointsAuthenticationCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/websocket-ds)"
309,i.io flat files api s3 api,"i.io flat files api s3 api.   S3 API | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyFlat FilesBilling and UsageData & StructureS3 APIAuthenticationSDK GuidePush APIS3 APIOn this pageS3 APIFlat Files S3 API - Comprehensive DocumentationIntroduction​The Flat Files S3 API is a powerful and flexible solution for accessing historical cryptocurrency market data. This document provides in-depth information about the API's features, usage, and integration capabilities.General Overview​What is Flat Files S3 API?​Flat Files S3 API is a RESTful API designed to provide efficient access to cryptocurrency market data stored in flat files. The API is built to be compatible with Amazon S3, allowing users to leverage existing S3-compatible tools and infrastructure. While it doesn't support all Amazon S3 features, it focuses on core functionality for listing and downloading files, making it ideal for retrieving historical market data.Key Features​S3 Compatibility: Seamless integration with existing S3 tools and libraries.Efficient Data Retrieval: Optimized for listing and downloading large datasets.Flexible Authentication: Supports multiple authentication methods for secure access.Comprehensive Market Data: Access to various data types including trades, quotes, order books, and more.API Specifications​Implemented Standards​The Flat Files S3 API adheres to the following HTTP standards:HTTP/1.0HTTP/1.1HTTP/2.0This ensures broad compatibility and reliable performance across various client implementations.Endpoints​The API is accessible through the following endpoints:EnvironmentEncryptionEndpoint URLProductionYeshttps://s3.flatfiles.coinapi.io/ProductionNohttp://s3.flatfiles.coinapi.io/We strongly recommend using the HTTPS endpoint for production environments to ensure data security.HTTP Requests​For all requests to the Flat Files S3 API, you must include the following header:Accept: application/xmlThis header indicates that the client expects XML-formatted responses, which is the standard output format for this API.Authentication​Secure access to the Flat Files S3 API is crucial. For detailed instructions on authentication methods, please refer to the authentication section of our documentation. This section covers various authentication techniques compatible with S3 clients, including:API Key usageAWS Signature Version 2 and 4Configuration examples for popular S3 clients and SDKsSupported Operations​The Flat Files S3 API supports a subset of Amazon S3 REST API operations, tailored for efficient data retrieval. Below are the key operations available:List Objects GET​This operation allows you to retrieve a list of objects (files) in the bucket. It corresponds to the ListObjectsV2 operation in Amazon S3.Usage Notes​This operation is optimized for listing files within the Flat Files S3 API context.While it doesn't require all parameters from the Amazon S3 ListObjectsV2 operation, including additional parameters should not affect the result.For best practices, stick to the request syntax presented in the HTTP Request section.HTTP Request​To list all objects:GET /bucket/?To list objects with a specific prefix:GET /bucket/?prefix={prefix}URL Parameters​ParameterTypeDescriptionprefixstringPath prefix to filter the desired filesExample Request​shellcsharpphppythonjsgorubyjavacurl -X GET -H ""Accept: application/xml"" -H ""Authorization: 73034021-THIS-IS-SAMPLE-KEY"" 'http://s3.flatfiles.coinapi.io/bucket/?prefix=trades/20230530/var client = new RestClient(""https://s3.flatfiles.coinapi.io/bucket/?prefix=trades/20230530/"");var request = new RestRequest(Method.GET);request.AddHeader(""Authorization"", ""73034021-THIS-IS-SAMPLE-KEY"");IRestResponse response = client.Execute(request);<?php$request = new HttpRequest();$request->setUrl('https://s3.flatfiles.coinapi.io/bucket/?prefix=trades/20230530/');$request->setMethod(HTTP_METH_GET);$request->setHeaders(array( 'Authorization' => '73034021-THIS-IS-SAMPLE-KEY'));try { $response = $request->send(); echo $response->getBody();} catch (HttpException $ex) { echo $ex;}?>import requestsurl = 'https://s3.flatfiles.coinapi.io/bucket/?prefix=trades/20230530/'headers = {'Authorization' : '73034021-THIS-IS-SAMPLE-KEY'}response = requests.get(url, headers=headers)const https = require('https');var options = { ""method"": ""GET"", ""hostname"": ""flatfiles.coinapi.io"", ""path"": ""/bucket/?prefix=trades/20230530/"", ""headers"": {'Authorization': '73034021-THIS-IS-SAMPLE-KEY'}};var request = https.request(options, function (response) { var chunks = []; response.on(""data"", function (chunk) { chunks.push(chunk); });});request.end();import ( ""gopkg.in/resty.v0"")func main() { resp, err := resty.R().  SetHeader(""Authorization"", ""73034021-THIS-IS-SAMPLE-KEY"").  Get(""https://s3.flatfiles.coinapi.io/bucket/?prefix=trades/20230530/"")}require 'uri'require 'net/http'url = URI(""https://s3.flatfiles.coinapi.io/bucket/?prefix=trades/20230530/"")http = Net::HTTP.new(url.host, url.port)request = Net::HTTP::Get.new(url)request[""Authorization""] = '73034021-THIS-IS-SAMPLE-KEY'response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();Request request = new Request.Builder() .url(""https://s3.flatfiles.coinapi.io/bucket/?prefix=trades/20230530/"") .post(body) .addHeader(""Authorization"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Example Response​<ListBucketResult xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema""> <ContentLength>0</ContentLength> <HttpStatusCode>OK</HttpStatusCode> <IsTruncated>false</IsTruncated> <Contents>  <Key>trades/20230530/5677816-BINANCEFTS_PERP_BTC_USDT.csv.gz</Key>  <LastModified>2023-05-31T00:25:20.22186Z</LastModified>  <Size>36135124</Size> </Contents> <!-- Additional <Contents> elements --> <MaxKeys>0</MaxKeys> <KeyCount>0</KeyCount></ListBucketResult>Download Object GET​This operation allows you to retrieve a specific object (file) from the bucket. It corresponds to the GetObject operation in Amazon S3.Usage Notes​This operation is streamlined for the Flat Files S3 API and may not support all parameters from the Amazon S3 GetObject operation.Multi-part download operations are not supported.For optimal performance, adhere to the request syntax provided in the HTTP Request section.HTTP Request​GET /bucket/{Key}URL Parameters​ParameterTypeDescriptionKeystringThe key (path) of the object to retrieveError Handling​The Flat Files S3 API uses standard HTTP status codes and provides detailed error messages in XML format, consistent with Amazon S3 REST Error Responses.Error Response Format​<?xml version=""1.0"" encoding=""UTF-8""?><Error> <Code>ErrorCode</Code> <Message>Error message description</Message> <Resource>/bucket/object-key</Resource> <RequestId>UniqueRequestIdentifier</RequestId></Error>Common Error Codes​Error CodeHTTP StatusMeaning400Bad RequestThe request was invalid or cannot be served401UnauthorizedAuthentication failed or user doesn't have permissions for the requested operation403ForbiddenAccess denied due to insufficient privileges550No DataThe requested item is not availableinfoBest Practice: Implement robust error handling in your application. Store all error messages along with the corresponding request data for troubleshooting and analysis.Compatible Software and Tools​The Flat Files S3 API is designed to work with a wide range of S3-compatible software and tools. Here are some popular options:AWS CLI​The AWS Command Line Interface (CLI) is a unified tool to manage your AWS services, including S3-compatible storage like our Flat Files S3 API.Installation​pythonlinuxmacoswindowspip install awsclisudo apt-get install awsclibrew install awscliDownload and install the AWS CLI from https://aws.amazon.com/cli/Configuration​Open a terminal or command prompt.Run:aws configureEnter the following information when prompted:AWS Access Key ID: 73034021-THIS-IS-SAMPLE-KEYAWS Secret Access Key: coinapiDefault region name: us-east-1Default output format: [Leave blank]Usage Examples​List buckets:aws --endpoint-url http://s3.flatfiles.coinapi.io s3 ls s3://coinapiDownload a file:aws --endpoint-url http://s3.flatfiles.coinapi.io s3 cp s3://coinapi/trades/20200301/98819-YOBIT_SPOT_XEM_BTC.csv.gz /local/path/S3 Browser​S3 Browser is a popular Windows client for Amazon S3 and compatible services.Configuration Steps​Download and install S3 Browser from https://s3browser.comLaunch S3 BrowserAdd a new account:Click ""File"" > ""Add New Account""Enter account details:Account Name: CoinAPI Flat FilesAccess Key ID: 73034021-THIS-IS-SAMPLE-KEYSecret Access Key: coinapiREST Endpoint: http://s3.flatfiles.coinapi.ioChoose HTTP or HTTPS for the connection typeTest the connectionSave the account settingsBrowse the S3 buckets in the left sidebarBest Practices and Optimization​To make the most of the Flat Files S3 API, consider the following best practices:Use efficient querying: Utilize the prefix parameter when listing objects to narrow down results.Implement robust error handling: Always check for and appropriately handle error responses.Use HTTPS for production: Ensure data security by using the HTTPS endpoint in production environments.Optimize data retrieval: Download only the data you need, using date ranges and specific symbol filters when available.Cache frequently accessed data: Implement local caching to reduce API calls for repetitive queries.Monitor your usage: Keep track of your API usage to stay within rate limits and optimize costs.Conclusion​The Flat Files S3 API provides a powerful and flexible way to access historical cryptocurrency market data. By leveraging S3 compatibility, it allows for easy integration with existing tools and workflows while offering optimized performance for large-scale data retrieval.For further assistance, feature requests, or to report issues, please contact our support team.Was this section helpful?12345PreviousFull Limit Order BookNextAuthenticationIntroductionGeneral OverviewWhat is Flat Files S3 API?Key FeaturesAPI SpecificationsImplemented StandardsEndpointsHTTP RequestsAuthenticationSupported OperationsList Objects GETDownload Object GETError HandlingError Response FormatCommon Error CodesCompatible Software and ToolsAWS CLIS3 BrowserBest Practices and OptimizationConclusionCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/flat-files-api/s3-api)"
310,i.io faq general How do I enable overage,"i.io faq general How do I enable overage.   How do I enable overage? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralHow do I enable overage?How do I enable overage?If you are finding that you are always requiring more daily requests, one way to circumvent this is by enabling overage, wherein you can go above the limit of requests per day.You may enable overage through the Customer Portal [https://customerportal.coinapi.io/login]. After login in, navigate to Subscriptions> APIKEYS > DETAILS, then enable REST API Request Credits Overage.Was this section helpful?12345PreviousHow can I set custom timezone in the data?NextHow does the full orderbook stream work?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/How-do-I-enable-overage)"
311,i.io market data how to guides build cryptocurrency portfolio tracker using react,"i.io market data how to guides build cryptocurrency portfolio tracker using react.   Building a Cryptocurrency Portfolio Tracker Using React and CoinAPI | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesAcquire exchange rates with different programming languagesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPIBuilding a cryptocurrency exchange comparison tool using Market Data APICreating a historical crypto price chart using CoinAPI and D3.jsFetching market data with KNIMEGet Historical OHLCV Data Using CoinAPIGet symbol funding rate metric data using CoinAPIImport API into PostmanImport data to Google Sheets/ExcelReal-time data visualization with javascriptReal-time trades stream using WebSocket with different languagesRetrieve and analyze crypto order book data using a cryptocurrency APITrading Essentials: QuickstartPerformance Testing GuideHow-to guidesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPIOn this pageBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPIGetting Started with CoinAPI​Before diving into the tutorial, ensure you have:Created a CoinAPI account and obtained an API keyBasic familiarity with React and web developmentFirst things first, to make use of CoinAPI, you'll need to create an account and procure an API key. The key is needed to authenticate your application requests. Follow the instructions provided in CoinAPI's Getting Started Guide to set up your account.Setting Up Your React App​Begin by creating a new React application. You can do this using the create-react-app command or your preferred method. npx create-react-app coinapi-portfolio-tracker-appYou should have the following project structure:Get into the root of the folder in which package.json resides and check whether the project is compiling & starting:npm startOnce your app structure is ready and the project successfully compiles, open the App.js file. Copy and paste the following code into the App.js to see the header displaying ""CoinAPI Cryptocurrency Portfolio Tracker App"".import React, { useState } from 'react';function App() { return ( <div className=""App"">  <h1>CoinAPI Cryptocurrency Portfolio Tracker App</h1> </div> );}export default App;Start the application again using npm start:Retrieving Your Portfolio Data from CoinAPI​CoinAPI provides the v1/exchangerate/asset_id_base endpoint for fetching the latest exchange rates of your assets. To request BTC/USD, ETH/USD, and XRP/USD exchange rates from CoinAPI, we'll use useEffect hook and axios module to retrieve data. This hook will fetch the exchange rates when the component mounts and then update the portfolio state. Add the following code as part of the App.js:import React, { useState } from 'react';function App() {const [portfolio, setPortfolio] = useState([]);useEffect(() => { async function fetchExchangeRates() {  const assets = ['BTC', 'ETH', 'XRP'];  const promises = assets.map(asset =>  axios.get(`https://rest.coinapi.io/v1/exchangerate/${asset}/USD?apikey=YOUR_API_KEY`)  );  const responses = await Promise.all(promises);  const exchangeRates = responses.reduce((acc, response, index) => {  acc[assets[index]] = response.data.rate;  return acc;  }, {});  setPortfolio(exchangeRates); } fetchExchangeRates(); }, []); return ( <div className=""App"">  <h1>CoinAPI Cryptocurrency Portfolio Tracker App</h1> </div> );}export default App;Note: Make sure to replace YOUR_API_KEY with the API key you have obtained via the CoinAPI website.To make exchange rates appear in your web app, update the return part with the following code:return ( <div className=""App"">  <h1>CoinAPI Cryptocurrency Portfolio Tracker App</h1>  <ul>  {Object.entries(portfolio).map(([asset, exchangeRate]) => (   <li key={asset}>{asset}: {exchangeRate}</li>  ))}  </ul> </div> );Here's the complete App.js code:import React, { useState, useEffect } from 'react';import axios from 'axios';function App() { const [portfolio, setPortfolio] = useState([]); useEffect(() => { async function fetchExchangeRates() {  const assets = ['BTC', 'ETH', 'XRP'];  const promises = assets.map(asset =>  axios.get(`https://rest.coinapi.io/v1/exchangerate/${asset}/USD?apikey=YOUR_API_KEY`  );  const responses = await Promise.all(promises);  const exchangeRates = responses.reduce((acc, response, index) => {  acc[assets[index]] = response.data.rate;  return acc;  }, {});  setPortfolio(exchangeRates); } fetchExchangeRates(); }, []); return ( <div className=""App"">  <h1>CoinAPI Cryptocurrency Portfolio Tracker App</h1>  <ul>  {Object.entries(portfolio).map(([asset, exchangeRate]) => (   <li key={asset}>{asset}: {exchangeRate}</li>  ))}  </ul> </div> );}export default App;Before starting the application, make sure to install the axios module via the npm install axios command. Then start the application with npm start and check out the result:Styling Your Portfolio Tracker​Having fetched your portfolio data, you can now proceed to style your tracker. You can use raw CSS or opt for a UI library like Bootstrap or Material UI to enhance the look of your portfolio tracker. Here we'll use a CSS styling approach and the following classes: portfolio, portfolio-item, asset-name and asset-rate. Extend GUI part with className attributes values as following: return ( <div className=""App"">  <h1>CoinAPI Cryptocurrency Portfolio Tracker App</h1>  <div className=""portfolio"">  {Object.entries(portfolio).map(([asset, exchangeRate]) => (   <li key={asset} className=""portfolio-item"">   <span className=""asset-name"">{asset}/USD:</span>    <span className=""asset-rate"">{exchangeRate}</span>   </li>  ))}  </div> </div> );then update index.css with CSS class implementation:.portfolio { padding: 1em;}.portfolio-item { display: flex; align-items: center; font-size: 18px; margin-bottom: 10px;}.asset-name { font-weight: bold; margin-right: 10px; color: #007bff;}.asset-rate { color: #28a745;}.portfolio-item:hover { transform: scale(0.95); transition: transform 0.2s ease-in-out;}Retrieve data at regular intervals​Rather than repeatedly refreshing the application to obtain the most recent exchange rates, we can enhance it to fetch this data at specified intervals and automatically update the view. To update the exchange rates every 5 seconds, you can use the setInterval function in React.import React, { useState, useEffect } from 'react';import axios from 'axios';function App() { const [portfolio, setPortfolio] = useState([]); useEffect(() => { async function fetchExchangeRates() {  const assets = ['BTC', 'ETH', 'XRP'];  const promises = assets.map(asset =>  axios.get(`https://rest.coinapi.io/v1/exchangerate/${asset}/USD?apikey=YOUR_API_KEY`)  );  const responses = await Promise.all(promises);  const exchangeRates = responses.reduce((acc, response, index) => {  acc[assets[index]] = response.data.rate;  return acc;  }, {});  setPortfolio(exchangeRates); } fetchExchangeRates(); // Fetch exchange rates every 5 seconds const intervalId = setInterval(fetchExchangeRates, 5000); // Clean up the interval when the component unmounts to avoid memory leaks return () => clearInterval(intervalId); }, []); return ( <div className=""App"">  <h1>CoinAPI Cryptocurrency Portfolio Tracker App</h1>  <div className=""portfolio"">  {Object.entries(portfolio).map(([asset, exchangeRate]) => (   <li key={asset} className=""portfolio-item"">   <span className=""asset-name"">{asset}/USD:</span>    <span className=""asset-rate"">{exchangeRate}</span>   </li>  ))}  </div> </div> );}export default App;By following these steps, you'll create a basic cryptocurrency portfolio tracker using React and CoinAPI. For more information, you can check REST API Exchange Rates docs If you would like the data to be sent to you in real-time, check our Real-time data visualization with javascript or real-time trades stream using WebSocket with different languages ""how-to"" articles.Happy coding!Was this section helpful?12345PreviousAcquire exchange rates with different programming languagesNextBuilding a cryptocurrency exchange comparison tool using Market Data APIGetting Started with CoinAPISetting Up Your React AppRetrieving Your Portfolio Data from CoinAPIStyling Your Portfolio TrackerRetrieve data at regular intervalsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/how-to-guides/build-cryptocurrency-portfolio-tracker-using-react)"
312,i.io ems api managed cloud rest api location locations,"i.io ems api managed cloud rest api location locations.   Get site locations | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIAccountCertificateEndpointsExchangeLocationGet site locationsREST APIWebSocket APIFIX APISelf Hosted GuideManaged Cloud REST APILocationGet site locationsGet site locationsGET /v1/locationsThis endpoint providing information about the server site locations supported in the EMS API.Responses200OKapplication/jsonSchemaExample (from schema)SchemaArray [location_id stringCoinAPI location identifierregion_name stringIdentifier of the region by the location providerprovider_name stringIdentifier of the location provider][ { ""location_id"": ""aws-us-east-1"", ""region_name"": ""us-east-1"", ""provider_name"": ""aws"" }]Loading...Was this section helpful?12345PreviousLocationNextREST APICopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/managed-cloud-rest-api/location/locations)"
313,i.io general faq account I want to change my account name,"i.io general faq account I want to change my account name.   I want to change my account's name? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountHow I can update my credit card / billing information?How can I change my CoinAPI account's email address?How can I get an invoice or receipt?How do I make an account?I want to change my account's name?Managing Team MembersCan I add other users to my account?How do I get an additional API key?APIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQCustomer AccountI want to change my account's name?I want to change my account's name?Customers will have the option to modify the name associated with their account by utilizing the Customer Portal (https://customerportal.coinapi.io/login). Once you have successfully logged into your account, simply navigate to Subscriptions > Manage Subscriptions > Update Information (Under Billing Information). By accessing this section, you will be presented with the option to alter the account's name to your desired preference.It is important to note that this change will not only reflect the updated name within the Customer Portal but also extend its impact to future invoices generated for your subscription. This means that once the name change is implemented, all forthcoming invoices issued in relation to your subscription will bear the newly updated name.Was this section helpful?12345PreviousHow do I make an account?NextManaging Team MembersCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/account/I-want-to-change-my-account-name)"
314,i.io naas api ethereum Methods eth unsubscribe,"i.io naas api ethereum Methods eth unsubscribe.   eth_unsubscribe | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_unsubscribeOn this pageeth_unsubscribeOverview​The 'eth_unsubscribe' will cancel the subscription by calling this method with the subscription ID. It returns a boolean indicating that the subscription was canceled successfully.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'content-type: application/json' \  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data ' {  ""id"": 1,  ""jsonrpc"": ""2.0"",  ""method"": ""eth_unsubscribe"" }'using RestSharp; {  var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");  var client = new RestClient(options);  var request = new RestRequest("""");  request.AddHeader(""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");  request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_unsubscribe\""}"", false);  var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [ CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"", CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => """", CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 30, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => ""POST"", CURLOPT_POSTFIELDS => json_encode([ 'id' => 1, 'jsonrpc' => '2.0', 'method' => 'eth_unsubscribe' ]), CURLOPT_HTTPHEADER => [ ""accept: application/json"", ""content-type: application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" ],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) { echo ""cURL Error #:"" . $err;} else { echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_unsubscribe""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text)const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({id: 1, jsonrpc: '2.0', method: 'eth_unsubscribe'})};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_unsubscribe\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = {\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_unsubscribe\""}response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();{MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_unsubscribe\""}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();}Response​The method returns an array of 20-byte addresses associated with the client, formatted as hexadecimal strings.{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": []}unsubscribed flag - (boolean) True if the subscription is canceled successfully.Was this section helpful?12345Previouseth_uninstallFilterNextgetBeaconBlocksAttestationsOverviewRequestResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_unsubscribe)"
315,i.io naas api bitcoin Methods listbanned,"i.io naas api bitcoin Methods listbanned.   listbanned | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodslistbannedOn this pagelistbannedOverview​The 'listbanned' method List all manually banned IPs/Subnets.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""listbanned"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""listbanned\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""listbanned"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""2.0"", ""method"": ""listbanned"", ""params"": [], ""id"": 1})headers = { 'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type': 'application/json', 'accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""listbanned"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) {console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""listbanned"",""params"": [],""id"":1}`) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"") req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""method"": ""listbanned"", ""params"": [], ""id"": 1})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""listbanned\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​Response​{ ""result"": [], ""error"": null, ""id"": 1}Was this section helpful?12345PreviouslistaddressgroupingsNextlistlabelsOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/listbanned)"
316,i.io naas api ethereum Methods eth newPendingTransactionFilter,"i.io naas api ethereum Methods eth newPendingTransactionFilter.   eth_newPendingTransactionFilter | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_newPendingTransactionFilterOn this pageeth_newPendingTransactionFilterOverview​The 'eth_newPendingTransactionFilter' method creates a filter in the node, to notify when new pending transactions arrive. To check if the state has changed, call 'eth_getFilterChanges'.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \ --url https://ethereum-mainnet-geth-archive.node.coinapi.io \ --header 'accept: application/json' \ --header 'content-type: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --data '{ ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_newPendingTransactionFilter""}'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_newPendingTransactionFilter\""}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"",CURLOPT_RETURNTRANSFER => true,CURLOPT_ENCODING => """",CURLOPT_MAXREDIRS => 10,CURLOPT_TIMEOUT => 30,CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,CURLOPT_CUSTOMREQUEST => ""POST"",CURLOPT_POSTFIELDS => json_encode(['id' => 1,'jsonrpc' => '2.0','method' => 'eth_newPendingTransactionFilter']),CURLOPT_HTTPHEADER => [""accept: application/json"",""content-type: application/json"",""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY""],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) {echo ""cURL Error #:"" . $err;} else {echo $response;} ?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_newPendingTransactionFilter""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text) const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({id: 1, jsonrpc: '2.0', method: 'eth_newPendingTransactionFilter'})};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_newPendingTransactionFilter\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_newPendingTransactionFilter\""}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_newPendingTransactionFilter\""}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​NoneResponse​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": ""0x3bbc64139084e1e915dca87e990d708f""}string: The filter ID. This ID can be later used with 'eth_getFilterChanges' to get a list of pending transaction hashes.Notes:The filter can be removed using 'eth_uninstallFilter'.To get the list of pending transaction hashes, use the filter ID with 'eth_getFilterChanges'.Was this section helpful?12345Previouseth_newFilterNexteth_protocolVersionOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_newPendingTransactionFilter)"
317,i.io faq security and privacy,i.io faq security and privacy.   Security and Privacy | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIBilling and SubscriptionsSecurity and PrivacyWhat CDN does the API use?What information do I need to provide in order to subscribe?What security mechanisms does CoinAPI use to protect my data?What should I do if my API key was compromised?Customer PortalChangelogFAQSecurity and PrivacySecurity and PrivacyWas this section helpful?12345PreviousHow to upgrade/downgrade my subscription?NextWhat CDN does the API use?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/security-and-privacy)
318,i.io market data rest api exchange rates exchange rates get all current rates,"i.io market data rest api exchange rates exchange rates get all current rates.   Get all current rates | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange Rates Get all current rates Timeseries data Timeseries periods Get specific rateIndexesMetadataMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIExchange Rates Get all current rates Get all current ratesGET /v1/exchangerate/:asset_id_baseGet the current exchange rate between requested asset and all other assets.infoIf you are using an exchange rate for mission-critical operations, then for best reliability, you should measure the difference between current time and the time returned from the response to ensure that value of the difference between those meets your internal requirements.infoYou can invert the rates by using Y = 1 / X equation, for example BTC/USD = 1 / (USD/BTC);Path Parametersasset_id_base string requiredRequested exchange rates base asset identifier (from the Metadata -> Assets)Query Parametersfilter_asset_id stringComma or semicolon delimited asset identifiers used to filter response (optional)invert booleanTrue will invert all the rates (optional, if true then rates will be calculated as rate = 1 / actual_rate eg. USD/BTC as BTC/USD)time stringTime for historical rates (optional)Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaasset_id_base string nullableGets or sets the base asset ID.rates object[] nullableGets or sets the list of exchange rates.Array [time date-timeGets or sets the time of the exchange rate.asset_id_quote string nullableGets or sets the quote asset ID of the exchange rate.rate doubleGets or sets the exchange rate value.]{ ""asset_id_base"": ""string"", ""rates"": [ {  ""time"": ""2024-07-16T12:55:05.242Z"",  ""asset_id_quote"": ""string"",  ""rate"": 0 } ]}{ ""asset_id_base"": ""BTC"", ""rates"": [ {  ""time"": ""2017-08-09T14:31:37.0520000Z"",  ""asset_id_quote"": ""USD"",  ""rate"": 3258.887541779804 }, {  ""time"": ""2017-08-09T14:31:36.7570000Z"",  ""asset_id_quote"": ""EUR"",  ""rate"": 2782.5255080599272 }, {  ""time"": ""2017-08-09T14:31:36.7570000Z"",  ""asset_id_quote"": ""CNY"",  ""rate"": 21756.295595926054 }, {  ""time"": ""2017-08-09T14:31:36.7570000Z"",  ""asset_id_quote"": ""GBP"",  ""rate"": 2509.602420379958 } ]}SchemaExample (from schema)Example responseSchemaasset_id_base string nullableGets or sets the base asset ID.rates object[] nullableGets or sets the list of exchange rates.Array [time date-timeGets or sets the time of the exchange rate.asset_id_quote string nullableGets or sets the quote asset ID of the exchange rate.rate doubleGets or sets the exchange rate value.]{ ""asset_id_base"": ""string"", ""rates"": [ {  ""time"": ""2024-07-16T12:55:05.242Z"",  ""asset_id_quote"": ""string"",  ""rate"": 0 } ]}{ ""asset_id_base"": ""BTC"", ""rates"": [ {  ""time"": ""2017-08-09T14:31:37.0520000Z"",  ""asset_id_quote"": ""USD"",  ""rate"": 3258.887541779804 }, {  ""time"": ""2017-08-09T14:31:36.7570000Z"",  ""asset_id_quote"": ""EUR"",  ""rate"": 2782.5255080599272 }, {  ""time"": ""2017-08-09T14:31:36.7570000Z"",  ""asset_id_quote"": ""CNY"",  ""rate"": 21756.295595926054 }, {  ""time"": ""2017-08-09T14:31:36.7570000Z"",  ""asset_id_quote"": ""GBP"",  ""rate"": 2509.602420379958 } ]}SchemaExample (from schema)Example responseSchemaasset_id_base string nullableGets or sets the base asset ID.rates object[] nullableGets or sets the list of exchange rates.Array [time date-timeGets or sets the time of the exchange rate.asset_id_quote string nullableGets or sets the quote asset ID of the exchange rate.rate doubleGets or sets the exchange rate value.]{ ""asset_id_base"": ""string"", ""rates"": [ {  ""time"": ""2024-07-16T12:55:05.242Z"",  ""asset_id_quote"": ""string"",  ""rate"": 0 } ]}{ ""asset_id_base"": ""BTC"", ""rates"": [ {  ""time"": ""2017-08-09T14:31:37.0520000Z"",  ""asset_id_quote"": ""USD"",  ""rate"": 3258.887541779804 }, {  ""time"": ""2017-08-09T14:31:36.7570000Z"",  ""asset_id_quote"": ""EUR"",  ""rate"": 2782.5255080599272 }, {  ""time"": ""2017-08-09T14:31:36.7570000Z"",  ""asset_id_quote"": ""CNY"",  ""rate"": 21756.295595926054 }, {  ""time"": ""2017-08-09T14:31:36.7570000Z"",  ""asset_id_quote"": ""GBP"",  ""rate"": 2509.602420379958 } ]}SchemaExample (from schema)Example responseSchemaasset_id_base string nullableGets or sets the base asset ID.rates object[] nullableGets or sets the list of exchange rates.Array [time date-timeGets or sets the time of the exchange rate.asset_id_quote string nullableGets or sets the quote asset ID of the exchange rate.rate doubleGets or sets the exchange rate value.]{ ""asset_id_base"": ""string"", ""rates"": [ {  ""time"": ""2024-07-16T12:55:05.242Z"",  ""asset_id_quote"": ""string"",  ""rate"": 0 } ]}{ ""asset_id_base"": ""BTC"", ""rates"": [ {  ""time"": ""2017-08-09T14:31:37.0520000Z"",  ""asset_id_quote"": ""USD"",  ""rate"": 3258.887541779804 }, {  ""time"": ""2017-08-09T14:31:36.7570000Z"",  ""asset_id_quote"": ""EUR"",  ""rate"": 2782.5255080599272 }, {  ""time"": ""2017-08-09T14:31:36.7570000Z"",  ""asset_id_quote"": ""CNY"",  ""rate"": 21756.295595926054 }, {  ""time"": ""2017-08-09T14:31:36.7570000Z"",  ""asset_id_quote"": ""GBP"",  ""rate"": 2509.602420379958 } ]}Loading...Was this section helpful?12345PreviousExchange RatesNext Timeseries dataCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/exchange-rates/exchange-rates-get-all-current-rates)"
319,i.io naas api bitcoin Methods createwallet x,"i.io naas api bitcoin Methods createwallet x.   createwallet | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodscreatewalletOn this pagecreatewalletOverview​The 'createwallet' creates and loads a new wallet.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""createwallet"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""createwallet\"",\r \""params\"": []\r }\r "", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""createwallet"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""createwallet"", ""params"": []})headers = { 'Content-Type': 'application/json', 'accept': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""createwallet"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{`+""""+` ""jsonrpc"": ""1.0"",`+""""+` ""id"": ""1"",`+""""+` ""method"": ""createwallet"",`+""""+` ""params"": []`+""""+`}`+""""+``)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""createwallet"", ""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder().build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""createwallet\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​wallet_name (string, required): The name for the new wallet. If this is a path, the wallet will be created at the path location.disable_private_keys (boolean, optional, default=false): Disable the possibility of private keys (only watchonlys are possible in this mode).blank (boolean, optional, default=false): Create a blank wallet. A blank wallet has no keys or HD seed. One can be set using sethdseed.passphrase (string): Encrypt the wallet with this passphrase.avoid_reuse (boolean, optional, default=false): Keep track of coin reuse, and treat dirty and clean coins differently with privacy considerations in mind.descriptors (boolean, optional, default=false): Create a native descriptor wallet. The wallet will use descriptors internally to handle address creationload_on_startup (boolean, optional, default=null): Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.Response​Was this section helpful?12345PreviouscreaterawtransactionNextdecodeRawTransactionOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/createwallet_x)"
320,i.io naas api bitcoin Methods help,"i.io naas api bitcoin Methods help.   help | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodshelpOn this pagehelpOverview​The 'help' method allows you to list all available commands or get detailed help on a specified command in the CoinAPI Bitcoin API. It is a versatile tool for developers to understand and navigate through the various functionalities of the API.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""help"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""help\"",\""params\"": [ ]}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""help"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection(""mainnet-bitcoin.node.coinapi.io"")payload = json.dumps({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""help"", ""params"": []})headers = { 'Content-Type': 'application/json', 'accept': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}conn.request(""POST"", ""/"", payload, headers)res = conn.getresponse()data = res.read()print(data.decode(""utf-8""))var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""help"", ""params"": [] }),};$.ajax(settings).done(function (response) {console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{""jsonrpc"":""2.0"",""id"":1,""method"":""help"",""params"": [ ]}`) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""help"", ""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""help\"",\""params\"": [ ]}"");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​command_name (string, optional): The name of the command to get help on. If omitted, the API will return a list of all available commands. The default value is ""all commands"".Response​{ ""result"": ""string"", ""error"": null, ""id"": 1}The response will contain a list of all commands or detailed information about the specified command. The exact structure of the response may vary depending on the command queried.Was this section helpful?12345PreviousgettxoutsetinfoNextimportAddressOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/help)"
321,i.io market data how to guides real time data visualization with javascript,"i.io market data how to guides real time data visualization with javascript.   Real-time data visualization with javascript | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesAcquire exchange rates with different programming languagesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPIBuilding a cryptocurrency exchange comparison tool using Market Data APICreating a historical crypto price chart using CoinAPI and D3.jsFetching market data with KNIMEGet Historical OHLCV Data Using CoinAPIGet symbol funding rate metric data using CoinAPIImport API into PostmanImport data to Google Sheets/ExcelReal-time data visualization with javascriptReal-time trades stream using WebSocket with different languagesRetrieve and analyze crypto order book data using a cryptocurrency APITrading Essentials: QuickstartPerformance Testing GuideHow-to guidesReal-time data visualization with javascriptOn this pageReal-time data visualization with javascriptIntroduction​In this tutorial, we'll demonstrate how to use CoinAPI's WebSockets API alongside JavaScript for real-time visualization of cryptocurrency markets. We'll use Chart.js, a popular JavaScript library for data visualization.Prerequisites​Basic understanding of JavaScript and WebSockets.A CoinAPI key (obtainable by signing up on the CoinAPI website).Familiarity with Chart.js (Visit the Chart.js documentation for more information).Visualizing Data with Chart.js​First, we'll create an empty chart using Chart.js. <!DOCTYPE html><html><head> <script src=""https://cdn.jsdelivr.net/npm/chart.js""></script> <title>Visualizing Data with Chart.js</title></head><body> <canvas id=""myChart""></canvas> <script>  /** part1: chart initialization **/  const ctx = document.getElementById('myChart').getContext('2d');  const chart = new Chart(ctx, {   type: 'line',   data: {    labels: [], // This will be populated with timestamps    datasets: [{     data: [], // This will be populated with trade prices     label: 'BTC/USD',     borderColor: '#3e95cd',     fill: false    }]   },   options: {    title: {     display: true,     text: 'Real-Time BTC/USD Trade Prices'    }   }  });    /** part2: below we'll establish ws connection and update the chart with real-time data **/ </script></body></html>The script creates a new line chart with an empty dataset. We'll fill in the data as we receive it from the WebSocket connection in the next step.Setting Up the WebSocket Connection​We need to set up a WebSocket connection to CoinAPI and update the chart: /** part2: below we establish ws connection and update the chart with real-time data **/const socket = new WebSocket('wss://ws.coinapi.io/v1/');socket.onopen = function (event) { socket.send(JSON.stringify({  ""type"": ""hello"",  ""apikey"": ""YOUR_API_KEY"",  ""subscribe_data_type"": [""trade""],  ""subscribe_filter_symbol_id"": [""BITSTAMP_SPOT_BTC_USD$"", ""BITFINEX_SPOT_BTC_LTC$""] }));};socket.onmessage = function (event) {    const data = JSON.parse(event.data);    // Add new data to the chart  chart.data.labels.push(data.time_exchange);  chart.data.datasets[0].data.push(data.price);    // Remove the oldest data point if there are more than 50  if (chart.data.labels.length > 50) {   chart.data.labels.shift();   chart.data.datasets[0].data.shift();  }    // Update the chart  chart.update();};socket.onerror = function (error) { console.log(`WebSocket error: ${error}`);};Note: Don't forget to replace YOUR-API-KEY with your actual API key.Here's the complete code:<!DOCTYPE html><html><head> <script src=""https://cdn.jsdelivr.net/npm/chart.js""></script> <title>Visualizing Data with Chart.js</title></head><body> <canvas id=""myChart""></canvas> <script>  /** part1: chart initialization **/  const ctx = document.getElementById('myChart').getContext('2d');  const chart = new Chart(ctx, {   type: 'line',   data: {    labels: [], // This will be populated with timestamps    datasets: [{     data: [], // This will be populated with trade prices     label: 'BTC/USD',     borderColor: '#3e95cd',     fill: false    }]   },   options: {    title: {     display: true,     text: 'Real-Time BTC/USD Trade Prices'    }   }  });    /** part2: below we establish ws connection and update the chart with real time data **/  const socket = new WebSocket('wss://ws.coinapi.io/v1/');  socket.onopen = function (event) {   socket.send(JSON.stringify({    ""type"": ""hello"",    ""apikey"": ""YOUR_API_KEY"",    ""subscribe_data_type"": [""trade""],    ""subscribe_filter_symbol_id"": [""BITSTAMP_SPOT_BTC_USD$"", ""BITFINEX_SPOT_BTC_LTC$""]   }));  };    socket.onmessage = function (event) {        const data = JSON.parse(event.data);        // Add new data to the chart    chart.data.labels.push(data.time_exchange);    chart.data.datasets[0].data.push(data.price);        // Remove the oldest data point if there are more than 50    if (chart.data.labels.length > 50) {     chart.data.labels.shift();     chart.data.datasets[0].data.shift();    }        // Update the chart    chart.update();  };  socket.onerror = function (error) {   console.log(`WebSocket error: ${error}`);  };   </script></body></html>The onmessage event is activated whenever a new message (in our case, trade data) is received from the server. The message data is in JSON format, which we convert to a JavaScript object with JSON.parse().Our chart now updates in real time as we receive trade data from CoinAPI!You're now equipped to use CoinAPI with JavaScript for real-time data visualization. Dive into the dynamic world of cryptocurrencies and explore with these powerful tools at your disposal. Happy coding!Was this section helpful?12345PreviousImport data to Google Sheets/ExcelNextReal-time trades stream using WebSocket with different languagesIntroductionPrerequisitesVisualizing Data with Chart.jsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/how-to-guides/real-time-data-visualization-with-javascript)"
322,i.io flat files api s3 api sdk,"i.io flat files api s3 api sdk.   SDK Guide < S3 API < Flat Files | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyFlat FilesBilling and UsageData & StructureS3 APIAuthenticationSDK GuidePush APIS3 APISDK GuideOn this pageS3 Compatible Flat Files SDK GuideThis guide provides information on available SDKs for integrating with S3 compatible Flat Files, along with installation and configuration examples for various programming languages.Available SDKs​JavaScript (Node.js)PythonJava.NET (C#)RubyPHPGoInstall the AWS SDK for JavaScript:npm install @aws-sdk/client-s3Configure the client:import { S3 } from ""@aws-sdk/client-s3"";const s3Client = new S3({ endpoint: ""https://s3.flatfiles.coinapi.io"", region: ""us-east-1"", credentials: {  accessKeyId: process.env.COINAPI_KEY,  secretAccessKey: ""coinapi"" }});export { s3Client };For more information, refer to the JavaScript SDK documentation.Install the Boto3 SDK:pip install boto3Configure the client:import boto3client = boto3.client('s3',      region_name='us-east-1',      endpoint_url='https://s3.flatfiles.coinapi.io',      aws_access_key_id='your_coinapi_key',      aws_secret_access_key='coinapi')For more information, refer to the Python SDK documentation.Add Maven dependency for AWS SDK for Java:<dependency> <groupId>com.amazonaws</groupId> <artifactId>aws-java-sdk-s3</artifactId> <version>1.12.201</version></dependency>Configure the client:import com.amazonaws.auth.AWSStaticCredentialsProvider;import com.amazonaws.auth.BasicAWSCredentials;import com.amazonaws.client.builder.AwsClientBuilder;import com.amazonaws.services.s3.AmazonS3;import com.amazonaws.services.s3.AmazonS3ClientBuilder;AmazonS3 s3Client = AmazonS3ClientBuilder.standard()  .withEndpointConfiguration(new AwsClientBuilder.EndpointConfiguration(""https://s3.flatfiles.coinapi.io"", ""us-east-1""))  .withCredentials(new AWSStaticCredentialsProvider(new BasicAWSCredentials(""your_coinapi_key"", ""coinapi"")))  .build();For more information, refer to the Java SDK documentation.Install the AWS SDK for .NET:Install-Package AWSSDK.S3Configure the client:using Amazon.S3;using Amazon.S3.Model;using Amazon.Runtime;var client = new AmazonS3Client(new BasicAWSCredentials(""your_coinapi_key"", ""coinapi""), new AmazonS3Config{ ServiceURL = ""https://s3.flatfiles.coinapi.io"", AuthenticationRegion = ""us-east-1""});For more information, refer to the .NET SDK documentation.Install the AWS SDK for Ruby:gem install aws-sdk-s3Configure the client:require 'aws-sdk-s3's3 = Aws::S3::Client.new( region: 'us-east-1', endpoint: 'https://s3.flatfiles.coinapi.io', access_key_id: 'your_coinapi_key', secret_access_key: 'coinapi')For more information, refer to the Ruby SDK documentation.Install the AWS SDK for PHP using Composer:composer require aws/aws-sdk-phpConfigure the client:require 'vendor/autoload.php';use Aws\S3\S3Client;$s3Client = new S3Client([ 'version' => 'latest', 'region' => 'us-east-1', 'endpoint' => 'https://s3.flatfiles.coinapi.io', 'credentials' => [  'key' => 'your_coinapi_key',  'secret' => 'coinapi', ],]);For more information, refer to the PHP SDK documentation.Install the AWS SDK for Go:go get -u github.com/aws/aws-sdk-goConfigure the client:package mainimport ( ""github.com/aws/aws-sdk-go/aws"" ""github.com/aws/aws-sdk-go/aws/credentials"" ""github.com/aws/aws-sdk-go/aws/session"" ""github.com/aws/aws-sdk-go/service/s3"")func main() { sess, _ := session.NewSession(&aws.Config{  Region:  aws.String(""us-east-1""),  Endpoint: aws.String(""https://s3.flatfiles.coinapi.io""),  Credentials: credentials.NewStaticCredentials(""your_coinapi_key"", ""coinapi"", """"), }) svc := s3.New(sess)}For more information, refer to the Go SDK documentation.Additional Languages​For other programming languages such as Swift, Rust, and SAP ABAP, please refer to their respective AWS SDK documentation for S3 integration:Swift SDKRust SDKSAP ABAP SDKConclusion​These SDKs support the S3 API, allowing you to interact with our S3-compatible Flat Files seamlessly. Follow the respective links for more detailed documentation and additional configurations.When using these SDKs with our Flat Files:Replace your_coinapi_key with your actual CoinAPI key.Use coinapi as the secret access key.Set the endpoint URL to https://s3.flatfiles.coinapi.io.For any issues or questions regarding SDK integration, please contact our support team.Was this section helpful?12345PreviousAuthenticationNextPush APIAvailable SDKsAdditional LanguagesConclusionCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/flat-files-api/s3-api/sdk)"
323,i.io naas api ethereum Methods eth sign,i.io naas api ethereum Methods eth sign.   eth_sign | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_signeth_signWas this section helpful?12345Previouseth_sendRawTransactionNexteth_signTransactionCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_sign)
324,i.io cdn cgi l email protection#76050306061904023615191f1817061f581f19,"i.io cdn cgi l email protection#76050306061904023615191f1817061f581f19.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 8aad26dceb3a27b4 •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#76050306061904023615191f1817061f581f19)"
325,i.io market data rest api#http requests,"i.io market data rest api#http requests.   REST API | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIOn this pageVersion: v1REST APIRESTful endpoint provides the widest range of data, based on HTTP protocol which works in Request-Reply scheme.Implemented Standards:HTTP1.0HTTP1.1HTTP2.0OpenAPI v3Note: We adhere to the OpenAPI standards for documenting our API.OpenAPI Specification​To access our API's OpenAPI specification, you can use the following link: OpenAPI v3If you need to import the OpenAPI file into software like Postman, simply copy and paste the link below:https://raw.githubusercontent.com/coinapi/coinapi-sdk/master/data-api/coinapi-marketdata-rest.yamlEndpoints​EnviromentEncryptionValueProductionYeshttps://rest.coinapi.io/ProductionNohttp://rest.coinapi.io/infoFor real-time market data streaming, you should use WebSockets. REST API only supports pooling, meaning you can periodically request the current market data state. In streaming, you subscribe and data or updates are delivered to you continuously.General​If you want to learn how to authenticate to this API, you can find detailed instructions and guidance in authentication section of this documentation.HTTP Requests​Each HTTP request must contain the header Accept: application/json as all our responses are in JSON format.We encourage you to use the HTTP request header Accept-Encoding: deflate, gzip for all requests. This will indicate to us that we can deliver compressed data to you which on your side should be decompressed transparently.tipBy allowing data compression you are lowering bandwidth requirements by approximately 80%. This is important for requesting large amounts of data or using WebSocket Streaming API, as we can deliver data to you faster and more effectively.HTTP Success​Successful HTTP responses have the status code 200 and the body in a format according to documentation of the requested resource.infoYou should always check that your HTTP response status code is equal to 200, otherwise the requested was not successful.HTTP Errors​Error message is returned in JSON structured like this:{ ""error"": ""Invalid API key""}All HTTP requests with response status codes different to 200 must be considered as failed and you should expect additional JSON inside the body of the response with the error message encapsulated inside it as shown in the example. We use the following error codes:Error CodeMeaning400Bad Request -- There is something wrong with your request401Unauthorized -- Your API key is wrong403Forbidden -- Your API key doesnt't have enough privileges to access this resource429Too many requests -- You have exceeded your API key rate limits550No data -- You requested specific single item that we don't have at this moment.infoGood practice is to store all error messages somewhere along with request data for further manual review.Output data format​By default we are using JSON output data format for all of our endpoints, you can control format of data by using output_format variable in query string parameters.URL Parameters​ParameterTypeDescriptionoutput_formatstringOutput data format (optional, default value is json, possible values are json, xml or csv)csv_include_headerboolIgnore header line in CSV output? (optional, default value is true, true to include CSV header line, false otherwise)csv_include_quotesboolEncapsulate strings with quotes in CSV output? (optional, default value is false, true to encapsulate all strings with "", false to leave them unquoted)csv_exclude_colstringComma delimited list of column names to ignore in CSV output (optional, by default all columns are included)csv_set_delimiterstringCharacter that will be used as column delimiter in CSV output (optional, default value is ;)csv_set_dec_markstringCharacter that will be used as decimal separator in CSV output (optional, default value is .)csv_set_timeformatstringFormat for datetime type in CSV output or unix for unix timestamp (optional, default value is yyyy-MM-ddTHH:mm:ss.fffffffZ)csv_set_newlinestringNew line type (optional, default value is unix, possible values win, mac, unix)Excel / G-Sheets​There are several ways to use data from our REST API inside the Excel, Google Sheets, or similar calculation sheet application. This section will do as best as possible to keep all information up to date on how you could load the data into these applications. Feel free to contact support if we are missing an option.CSV download, import:​Open the data in the CSV format from the browser eg. https://rest.coinapi.io/v1/exchangerate/USD?apikey=YOUR_API_KEY&invert=true&output_format=csvSave the data to the file with the .csv extension.Use the file saved and import it into the software.When configuring import, refer to the parameters like delimiter from the Output data formatThe platform-independent way described above is based on CSV but could also be used in other formats like JSON and XML as long as the software support it, but the import procedure needs to be adjusted accordingly.Microsoft Excel​Use PowerQuery to load the URL directly into the CSV import without saving the file locally. Use the =WEBSERVICE function to load the API response directly into the sheet, but this will not parse the data; additional processing is required.Google Sheets​Use =IMPORT function to load the REST API endpoint and automatically parse the CSV format data into the cells. eg. =IMPORTDATA(""https://rest.coinapi.io/v1/exchangerate/USD?apikey=YOUR_API_KEY&invert=true&output_format=csvOpenOffice Calc​Select the menu Insert -> Sheet From File, 2. In the Insert dialog, put the URL eg. https://rest.coinapi.io/v1/exchangerate/USD?apikey=YOUR_API_KEY&invert=true&output_format=csv in the File Name box at the bottom. Set the drop-down list next to that to Web Page Query and click Open. The Text Import dialog opens where you can change the defaults if needed. Authentication​API Key: ApiKeyCoinApi API key needed to access the endpointsSecurity Scheme Type:apiKeyHeader parameter name:X-CoinAPI-KeyContactCOINAPI LTD: [email protected]URL: https://www.coinapi.ioLicenseMIT LicenseWas this section helpful?12345PreviousAPI limits and billingNextExchange RatesOpenAPI SpecificationEndpointsGeneralHTTP RequestsOutput data formatExcel / G-SheetsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api#http-requests)"
326,i.io market data rest api ohlcv #list all periods get,"i.io market data rest api ohlcv #list all periods get.   Ohlcv | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcv Historical data by exchange Historical data Latest data List all periodsOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIOhlcvOhlcvAPI calls described in this section are related to downloading OHLCV (Open, High, Low, Close, Volume) timeseries data. Each data point of this timeseries represents several indicators calculated from transactions activity inside a time range (period).infoOHLCV data primary purpose is to present an overview of the market in human readable form. It's often used to visualize market data on charts, websites, and various kinds of reports.tipCoinAPI expanded the standard OHLCV timeseries by including time of first and last trade and amount of trades executed inside period.📄️ Historical data by exchangeGet OHLCV timeseries data returned in time ascending order. Data can be requested by the period and for the specific exchange eg `BITSTAMP`📄️ Historical dataGet OHLCV timeseries data returned in time ascending order. Data can be requested by the period and for the specific symbol eg `BITSTAMP_SPOT_BTC_USD`, if you need to query timeseries by asset pairs eg. `BTC/USD`, then please reffer to the Exchange Rates Timeseries data📄️ Latest dataGet OHLCV latest timeseries data returned in time descending order. Data can be requested by the period and for the specific symbol eg `BITSTAMP_SPOT_BTC_USD`, if you need to query timeseries by asset pairs eg. `BTC/USD`, then please reffer to the Exchange Rates Timeseries data📄️ List all periodsGet full list of supported time periods available for requesting OHLCV timeseries data.Was this section helpful?12345PreviousListing of all supported metrics for symbolNext Historical data by exchangeCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/ohlcv/#list-all-periods-get)"
327,i.io how to guides creating historical crypto price chart using CoinAPI and D3 js.,"i.io how to guides creating historical crypto price chart using CoinAPI and D3 js..   Creating a historical crypto price chart using CoinAPI and D3.js | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesAcquire exchange rates with different programming languagesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPICreating a historical crypto price chart using CoinAPI and D3.jsFetching market data with KNIMEGet Historical OHLCV Data Using CoinAPIGet symbol funding rate metric data using CoinAPIImport API into PostmanImport data to Google Sheets/ExcelReal-time data visualization with javascriptReal-time trades stream using WebSocket with different languagesRetrieve and analyze crypto order book data using a cryptocurrency APITrading Essentials: QuickstartMarket Data APIEMS APIFAQCustomer PortalChangelogHow-to guidesCreating a historical crypto price chart using CoinAPI and D3.jsOn this pageCreating a historical crypto price chart using CoinAPI and D3.jsIn this tutorial, you'll learn how to build a historical cryptocurrency price chart.On the agenda 🔥:​Fetch cryptocurrency data using CoinAPI and JavaScript.Transform and prepare the data for visualization.Create a historical price chart using D3.js.Style your chartCoinAPI: Comprehensive Cryptocurrency Data Solution 🚀​Just a quick background about us. CoinAPI is your one-stop solution for cryptocurrency data. We offer seamless access to real-time and historical financial data from hundreds of exchanges. Whether you're looking for raw trading data, OHLCV, or specific events, we've got you covered.We support multiple data delivery methods like REST, WebSocket, and more. Perfect for developers looking to build anything from trading algorithms to financial visualizations.Let's set it up 🚀​CoinAPI is your go-to platform for obtaining real-time and historical cryptocurrency data, featuring comprehensive API solutions suitable for developers and financial analysts alike. Coupled with D3.js, a javascript library for data visualization, you have the perfect toolkit for crafting sophisticated, real-time financial dashboards or trading algorithms. In this tutorial, you'll learn how to utilize CoinAPI's RESTful API in a web environment to fetch cryptocurrency data. You'll also learn how to visualize data using D3.js.Getting Started​First, create a new project folder on your computer and name it crypto_price_chart. Inside this folder, create three files: index.html, style.css, and script.js.Setting Up the API Request​To fetch data from CoinAPI, we'll first need to make an API request. This will require an API key, which you can obtain by registering at the CoinAPI website.Code Snippet: Prepare index.html​Here's the basic structure of a web page designed to visualize cryptocurrency closing prices over a specified period using D3.js.<!doctype html><html> <head> <title>Coinapi</title> <script src=""https://d3js.org/d3.v6.min.js""></script> <script src=""script.js""></script> <link rel=""stylesheet"" href=""style.css""> </head> <h1>BTC Closing Prices Over Time</h1> <h3>(Data Period: 1 Day, Starting from January 1st, 2021, for 360 Days)</h3> <svg width=""800"" height=""600""></svg></html>Code Snippet: Fetching Data from CoinAPI​Create a function in your script.js to fetch historical data.const API_KEY = ""YOUR_API_KEY_HERE"";const url = `https://rest.coinapi.io/v1/ohlcv/BITSTAMP_SPOT_BTC_USD/history?apikey=${API_KEY}&period_id=1DAY&time_start=2021-01-01T00:00:00&limit=360`;async function fetchData() { try { const response = await fetch(url); if (!response.ok) {  throw new Error('Network response was not ok'); } const data = await response.json(); return data; } catch (error) { console.error('Error fetching data:', error); throw error; }}Preparing the Data​After fetching the data, it needs to be prepared for charting. We'll create a simple function to transform the data into a format that D3.js can easily interpret. Add it to the end of script.js.Code Snippet: Data Transformation​function transformData(data) { return data.map(entry => ({ date: new Date(entry.time_period_start), price: entry.price_close }));}Now let's dive into building the chart.Code Snippet: building chart with D3.js​Add this code at the end of your script.js file.document.addEventListener('DOMContentLoaded', () => { const svg = d3.select(""svg""); // Select the existing SVG element in the HTML fetchData() .then(data => {  const transformedData = transformData(data);  // Define chart dimensions  const width = 800;  const height = 600;  const margin = { top: 50, right: 50, bottom: 50, left: 50 };  // Create a group for the chart elements  const chartGroup = svg.append(""g"")  .attr(""transform"", `translate(${margin.left}, ${margin.top})`);  // Create scales  const xScale = d3.scaleUtc()  .domain(d3.extent(transformedData, d => d.date))  .range([0, width - margin.left - margin.right]);  const yScale = d3.scaleLinear()  .domain([0, d3.max(transformedData, d => d.price)])  .range([height - margin.bottom - margin.top, 0]);  // Create a line generator  const line = d3.line()  .x(d => xScale(d.date))  .y(d => yScale(d.price));  // Draw the line  chartGroup.append(""path"")  .datum(transformedData)  .attr(""class"", ""line"")  .attr(""d"", line);  // Add axes  chartGroup.append(""g"")  .attr(""class"", ""x-axis"")  .attr(""transform"", `translate(0, ${height - margin.bottom - margin.top})`)  .call(d3.axisBottom(xScale));  chartGroup.append(""g"")  .attr(""class"", ""y-axis"")  .call(d3.axisLeft(yScale)); }) .catch(error => console.log(error));});Code snippet: styling the chart​Now, let's style your chart using the provided CSS. Add the following CSS to your style.css file:body, h1, h2, h3, p, ul, li { margin: 5; padding: 0; color: white;}/* Set a gradient background for the body */body { background: linear-gradient(to bottom, #080059, #6C4CFC);}/* Style the SVG container */svg { background-color: transparent; /* Transparent background for the chart */}/* Style the chart line */.line { fill: none; stroke: #6C4CFC; /* Purple color for the line */ stroke-width: 2;}/* Style the x-axis */.x-axis path,.x-axis line { fill: none; stroke: #ccc; /* Light gray color for x-axis lines */ shape-rendering: crispEdges;}.x-axis text { font-size: 12px; fill: white; /* Text color for the x-axis labels */}/* Style the y-axis */.y-axis path,.y-axis line { fill: none; stroke: #ccc; /* Light gray color for y-axis lines */ shape-rendering: crispEdges;}.y-axis text { font-size: 12px; fill: white; /* Text color for the y-axis labels */}/* Style the legend */.legend { font-size: 16px; text-align: right; color: white; /* Text color for the legend text */}Testing Your Chart​Save all your files and open index.html in a web browser. You should see a beautiful historical crypto price chart generated from real data!Was this section helpful?12345PreviousBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPINextFetching market data with KNIMEOn the agenda 🔥:CoinAPI: Comprehensive Cryptocurrency Data Solution 🚀Let's set it up 🚀Getting StartedSetting Up the API RequestCode Snippet: Prepare index.htmlCode Snippet: Fetching Data from CoinAPIPreparing the DataCode Snippet: Data TransformationCode Snippet: building chart with D3.jsCode snippet: styling the chartTesting Your ChartCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/how-to-guides/creating-historical-crypto-price-chart-using-CoinAPI-and-D3-js.)"
328,i.io ems api rest api balances,i.io ems api rest api balances.   Balances | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIREST APIBalancesGet balancesOrdersPositionsWebSocket APIFIX APISelf Hosted GuideREST APIBalancesBalances📄️ Get balancesGet current currency balance from all or single exchange.Was this section helpful?12345PreviousREST APINextGet balancesCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/rest-api/balances)
329,i.io faq general What are the inclusions of the Enterprise Plan,"i.io faq general What are the inclusions of the Enterprise Plan.   What are the inclusions of the Enterprise Plan? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralWhat are the inclusions of the Enterprise Plan?What are the inclusions of the Enterprise Plan?In the Enterprise plan, we can provide:Custom limits or unlimited usage on the REST, WebSocket, and FIX protocolsRoadmap assuranceCustom legal termsCustom SLAs measured by Third PartyIntegration AssistanceTailor-made API endpointsDedicated infrastructure (higher SLA, very low latency and variance)History data in flat files (daily upload of flat files into customer-owned S3, GCP, Azure, B2 bucket)Tick-by-Tick Order Book dataOrder and Execution Management API (CoinAPI for trading)Custom data delivery requirements (locations, latency, delivery methods)If you're interested, contact us at https://share.hsforms.com/1cY_sFZHRT_mjnq3KxoItuQbm7f2Was this section helpful?12345PreviousWhat are the benefits of using the WebSocket SDK?NextWhat data is delivered using the local sites?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/What-are-the-inclusions-of-the-Enterprise-Plan)"
330,i.io faq api How can I unsubscribe from Websocket,"i.io faq api How can I unsubscribe from Websocket.   How can I unsubscribe from Websocket? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQAPIHow can I unsubscribe from Websocket?How can I unsubscribe from Websocket?You may use a new Hello message, which will cause subscription scope override without interruption of your WebSocket connection. A new Hello message will override previous Hello messages, and effectively can add to the subscription scope or unsubscribe streams.Please refer to our documentation to learn more about Websocket: https://docs.coinapi.io/market-data/websocketWas this section helpful?12345PreviousHow can I see a list of symbols related to a specific exchange, market, or asset?NextHow to solve certificate validation error?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/api/How-can-I-unsubscribe-from-Websocket)"
331,i.io naas api ethereum Methods eth getUncleByBlockNumberAndIndex,"i.io naas api ethereum Methods eth getUncleByBlockNumberAndIndex.   eth_getUncleByBlockNumberAndIndex | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_getUncleByBlockNumberAndIndexOn this pageeth_getUncleByBlockNumberAndIndexOverview​The 'eth_getUncleByBlockNumberAndIndex' method rReturns information about a uncle of a block given the block number and the uncle index position.Request​curlpythonrubycurl https://ethereum-mainnet-geth-archive.node.coinapi.io \ -X POST \ -H ""Content-Type: application/json"" \ --data '{""method"":""eth_getTransactionByBlockNumberAndIndex"",""params"":[""0xc5043f"", ""0x0""],""id"":1,""jsonrpc"":""2.0""}'import requestsimport jsonurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io/""payload = json.dumps({ ""method"": ""eth_getTransactionByBlockNumberAndIndex"", ""params"": [ ""0xc5043f"", ""0x0"" ], ""id"": 1, ""jsonrpc"": ""2.0""})headers = { 'Content-Type': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)require ""uri""require ""json""require ""net/http""url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io/"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request.body = JSON.dump({ ""method"": ""eth_getTransactionByBlockNumberAndIndex"", ""params"": [ ""0xc5043f"", ""0x0"" ], ""id"": 1, ""jsonrpc"": ""2.0""})response = https.request(request)puts response.read_bodyRequest Parameters​block parameter: [ Required ] A hexadecimal block number, or the string 'latest', 'earliest' or 'pending'. Refer to the default block parameter.uncle index position: [ Required ] A hexadecimal equivalent of the integer indicating the uncle's index position.Response​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": null}A block object, or null when no block was found. The block object returned will consist of the following keys and their values:number: The block number. 'Null' when the returned block is the pending block.hash: 32 bytes. Hash of the block. 'Null' when its pending block.parentHash: 32 bytes. Hash of the parent block.nonce: 8 bytes. Hash of the generated proof-of-work. 'Null' when the returned block is the pending block.sha3Uncles: 32 bytes. The SHA3 of the uncles data in the block.logsBloom: 256 bytes. The Bloom filter for the logs of the block. 'Null' when the returned block is the pending block.transactionsRoot: 32 bytes. The root of the transaction trie of the block.stateRoot: 32 bytes. The root of the final state trie of the block.receiptsRoot: 32 bytes. The root of the receipts trie of the block.miner: 20 bytes. The address of the beneficiary to whom the mining rewards were given.difficulty: The hexadecimal of the difficulty for this block.totalDifficulty: The hexadecimal of the total difficulty of the chain until this block.extraData: The ""extra data"" field of this block.size: The hexadecimal of the size of this block in bytes.gasLimit: Maximum gas allowed in this block.gasUsed: Total used gas by all transactions in this block.timestamp: The unix timestamp for when the block was collated.uncles: (Array). An array of uncle hashes.Was this section helpful?12345Previouseth_getUncleByBlockHashAndIndexNexteth_getUncleCountByBlockHashOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_getUncleByBlockNumberAndIndex)"
332,i.io faq general OHLCV Aggregation using the REST API,"i.io faq general OHLCV Aggregation using the REST API.   OHLCV Aggregation using the REST API | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralOHLCV Aggregation using the REST APIOn this pageOHLCV Aggregation using the REST APIQuestion​When querying OHLCV data, how can I filter by specific coins under a specific exchange(s) using 1 Rest API request (like you can in Metadata)?When querying OHLCV data, how can I filter by an exchange(s) and get all the OHLCV data for the particular timeframe (example 1MIN)?Answer​You need to execute a query against each symbol of the specific exchange separately.If you need bulk load historical data then flat files are usually the better option than API access which works good for application integrations or adding real-time data into already acquired historical flat files. In the flat files, we are providing all the symbols across all exchanges in the single file. Our flat files can be acquired through www.cryptotick.com website.Sample file: https://s3.amazonaws.com/coinapi-samples/ohlcv_active_consolidated/20171203/1HRS.csv.gzDocumentation: https://www.cryptotick.com/FaqWas this section helpful?12345PreviousIs there an SLA agreement available?NextREST API empty array/collection response and 550 error explained.QuestionAnswerCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/OHLCV-Aggregation-using-the-REST-API)"
333,i.io naas api ethereum Methods net listening,"i.io naas api ethereum Methods net listening.   net_listening | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodsnet_listeningOn this pagenet_listeningOverview​The 'net_listening' method is an Ethereum API method provided by CoinAPI that returns a boolean value indicating whether the client is currently listening for network connections or not. This method can be instrumental in various scenarios where it's crucial to monitor the status of an Ethereum client's network connection to ensure its proper functioning.Request​POST https://ethereum-mainnet-geth-archive.node.coinapi.io/apiKey=XXXX/Headers:- accept: application/json- content-type: application/jsonBody:{ ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""net_listening""}Request Parameters​id: Integer (e.g., 1)jsonrpc: String (e.g., ""2.0"")method: String (e.g., ""net_listening"")Response​{ ""result"": boolean}The response will be a boolean value that indicates whether or not a node is currently actively seeking peer connections. It will return 'true' if the client is actively listening for connections and 'false' if not.Was this section helpful?12345PreviousgetTxPoolStatusNextnet_peerCountOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/net_listening)"
334,i.io general faq general Where is CoinAPI infrastructure located,"i.io general faq general Where is CoinAPI infrastructure located.   Where is CoinAPI infrastructure located? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralWhere is CoinAPI infrastructure located?Where is CoinAPI infrastructure located?Most of our infrastructure is located in AWS (Amazon Web Services) in North America, Europe, and Japan. You can collocate around us, or we can set up a dedicated server infrastructure close to your company servers as part of the Enterprise subscription.Was this section helpful?12345PreviousWhat types of data does CoinAPI provide?NextWhich assets or currencies are listed?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/Where-is-CoinAPI-infrastructure-located)"
335,i.io general faq general What are the inclusions of the Enterprise Plan,"i.io general faq general What are the inclusions of the Enterprise Plan.   What are the inclusions of the Enterprise Plan? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralWhat are the inclusions of the Enterprise Plan?What are the inclusions of the Enterprise Plan?In the Enterprise plan, we can provide:Custom limits or unlimited usage on the REST, WebSocket, and FIX protocolsRoadmap assuranceCustom legal termsCustom SLAs measured by Third PartyIntegration AssistanceTailor-made API endpointsDedicated infrastructure (higher SLA, very low latency and variance)History data in flat files (daily upload of flat files into customer-owned S3, GCP, Azure, B2 bucket)Tick-by-Tick Order Book dataOrder and Execution Management API (CoinAPI for trading)Custom data delivery requirements (locations, latency, delivery methods)If you're interested, contact us at https://share.hsforms.com/1cY_sFZHRT_mjnq3KxoItuQbm7f2Was this section helpful?12345PreviousWhat are the benefits of using the WebSocket SDK?NextWhat data is delivered using the local sites?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/What-are-the-inclusions-of-the-Enterprise-Plan)"
336,i.io naas api bitcoin Methods getbalances,"i.io naas api bitcoin Methods getbalances.   getbalances | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetbalancesOn this pagegetbalancesOverview​The 'getbalances' method returns an object with all balances in BTC. It provides detailed information about the balances available in your wallet, including trusted, untrusted pending, immature, and used balances.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""getbalances"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""getbalances\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""getbalances"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""2.0"", ""method"": ""getbalances"", ""params"": [], ""id"": 1})headers = { 'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type': 'application/json', 'accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""getbalances"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""getbalances"",""params"": [],""id"":1}`) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"") req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""method"": ""getbalances"", ""params"": [], ""id"": 1})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder().build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""2.0\"",\r \""id\"": \""1\"",\r \""method\"": \""getbalances\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​trusted: Numeric value representing the trusted balance (outputs created by the wallet or confirmed outputs).untrusted_pending: Numeric value representing the untrusted pending balance (outputs created by others that are in the mempool).immature: Numeric value representing the balance from immature coinbase outputs.used: Numeric value representing the balance from coins sent to addresses that were previously spent from (potentially privacy violating). This parameter is only present if avoid_reuse is set.Response​{ ""result"": null, ""error"": { ""code"": -18, ""message"": ""Load a wallet using loadwallet or create a new one with createwallet. (Note: A default wallet is no longer automatically created)"" }, ""id"": 1}Was this section helpful?12345PreviousgetbalanceNextgetbestblockhashOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getbalances)"
337,i.io general faq api,"i.io general faq api.   API | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer EMS Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What is the rate limit for EMS Trading API?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQAPIAPIWas this section helpful?12345PreviousHow do I get an additional API key?NextDo you accept bank or wire transfers?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/api)"
338,i.io faq api How can I see a list of symbols related to a specific exchange market or asset,i.io faq api How can I see a list of symbols related to a specific exchange market or asset.   Page Not Found | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyPage Not FoundWe could not find what you were looking for.Please contact the owner of the site that linked you to the original URL and let them know their link is broken.Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/api/How-can-I-see-a-list-of-symbols-related-to-a-specific-exchange-market-or-asset)
339,i.io faq general Can I get the XML or CSV instead of the JSON output format,"i.io faq general Can I get the XML or CSV instead of the JSON output format.   Can I get the XML or CSV instead of the JSON output format? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralCan I get the XML or CSV instead of the JSON output format?Can I get the XML or CSV instead of the JSON output format?Yes. Check the documentation for the output_format API parameter at https://docs.coinapi.io/market-data/rest-api#output-data-formatWas this section helpful?12345PreviousCan I get exchange wallet deposit and withdrawal status?NextCan I have multiple API keys in one account?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/Can-I-get-the-XML-or-CSV-instead-of-the-JSON-output-format)"
340,i.io general faq account How can I change my CoinAPI account email address,"i.io general faq account How can I change my CoinAPI account email address.   How can I change my CoinAPI account's email address? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountHow I can update my credit card / billing information?How can I change my CoinAPI account's email address?How can I get an invoice or receipt?How do I make an account?I want to change my account's name?Managing Team MembersCan I add other users to my account?How do I get an additional API key?APIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQCustomer AccountHow can I change my CoinAPI account's email address?How can I change my CoinAPI account's email address?You can change your account's email address through the Customer Portal here: https://customerportal.coinapi.io/subscriptions After logging in, navigate to Subscriptions > Manage Subscriptions > Update InformationIf you do not have access to the account anymore, we can change the email address on your behalf as long as it is for personal use, or you are changing it to another employee's email under the same organization. If so, please submit a ticket here: https://support.coinapi.io/hc/en-us/requests/new There are some cases where we do NOT allow changing an account's email address. One case would be if you are requesting to change your account email address from a former organization to a new organization since you are no longer working there. E.g, you are an employee who worked for the company ""X"" and have an account with the email [email protected] wherein you purchased our products in behalf of the company, and you want to request to have the account's email address changed to [email protected] since you've changed workplaces; we would not allow this since it would basically mean that company Y would have the license to access the data of company X.Was this section helpful?12345PreviousHow I can update my credit card / billing information?NextHow can I get an invoice or receipt?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/account/How-can-I-change-my-CoinAPI-account-email-address)"
341,i.io faq general Can I use the API commercially to show prices on my website,"i.io faq general Can I use the API commercially to show prices on my website.   Can I use the API commercially to show prices on my website? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralCan I use the API commercially to show prices on my website?Can I use the API commercially to show prices on my website?Yes, CoinAPI can be used commercially.As per our legal policy, the following is a non-exhaustive list of practices that would not be considered ""Legitimate Use"":Using our services for unreasonable workloads we determine (in our sole discretion) to be unrelated to the deployment and maintenance of your own services;Re-selling our services or parts thereof to another party;Using our services in a manner we determine (in our sole discretion) could cause harm to our services or another party; orUnusual usage patterns inconsistent with those we reasonably consider as normal use when compared to other customers.More information can be found in our legal information here: https://www.coinapi.io/legalWas this section helpful?12345PreviousCan I participate in the CoinAPI GitHub repository?NextCan I use the API to show graphs, charts or tables?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/Can-I-use-the-API-commercially-to-show-prices-on-my-website)"
342,i.io general faq api FIX API Logon Troubleshooting,"i.io general faq api FIX API Logon Troubleshooting.   FIX API Logon Troubleshooting | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer EMS Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What is the rate limit for EMS Trading API?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQAPIFIX API Logon TroubleshootingFIX API Logon TroubleshootingMake sure you have a Professional level subscription or you have the FIX access provisioned on your API KeyUse our configuration for the initiator and the FIX44.xml file from our GitHub repository (https://github.com/coinapi/coinapi-sdk/tree/master/data-api/csharp-fix-v2)Make sure that your API Key in the initiator config is correctly pasted into the SenderCompID key.Check the value of the TAG=52 in the LOGON (A) message. Time should be in the UTC timezone and it can't differ too much from the actual time.Was this section helpful?12345PreviousEmpty response when using EMS endpointsNextGeographic locations and the LatencyCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/api/FIX-API-Logon-Troubleshooting)"
343,i.io naas api bitcoin Methods combinerawtransaction x,"i.io naas api bitcoin Methods combinerawtransaction x.   combineRawTransaction | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodscombineRawTransactionOn this pagecombineRawTransactionOverview​The 'combineRawTransaction' method allows you to merge multiple partially signed transactions into a single transaction. The resulting transaction can either be a partially signed or a fully signed transaction.Request​shellcsharpphppythonjavascriptgorubywget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""combineRawTransaction"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""combineRawTransaction\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""combineRawTransaction"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""2.0"", ""method"": ""combineRawTransaction"", ""params"": [], ""id"": 1})headers = { 'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type': 'application/json', 'accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""combineRawTransaction"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""combineRawTransaction"",""params"": [],""id"":1}`) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"") req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""method"": ""combineRawTransaction"", ""params"": [], ""id"": 1})response = https.request(request)puts response.read_bodyRequest Parameters​method (string, required): The method name, which should be ""combineRawTransaction"".params (array, required): An array containing the hex strings of the partially signed transactions that you want to combine.id (integer, required): A unique identifier for the request.jsonrpc (string, required): The version of the JSON-RPC protocol, which should be ""2.0"".Response​{ ""result"": null, ""error"": { ""code"": -32601, ""message"": """" }, ""id"": 1}Was this section helpful?12345PreviouscombinepsbtNextcreatemultisigOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/combinerawtransaction_x)"
344,i.io market data s3 api,"i.io market data s3 api.   S3 API | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIREST APIWebSocket APIFIX APIS3 APIJSON RPCEMS APIFAQCustomer PortalChangelogMarket Data APIS3 APIOn this pageS3 APIFlat Files S3 API - DocumentationGeneral​This section will provide necessary information about the Flat Files S3 API software and enumerate a number of features that it provides.What is Flat Files S3 API?​Flat Files S3 API is a RESTful API that provides access to data stored in flat files. The API was designed to be compliant with AMAZON S3 giving the flexibiity to use existing infrastrucutre dedicate to use with AMAZON S3. Flat Files S3 API does not support all of the AMAZON S3 features since it was meant to be use only for listing and downloading files.What is the flat file?​quotes​Column nameDescriptionid_site_coinapiUUID of the site which received the quote. This useful information can be used to replay markets from the perspective of the algorithmic trading strategy.time_exchangeUTC timestamp of the trade provided by the exchange or estimation of it using the delay of the exchange API (if the time_exchange is equal to the time_coinapi, then it mean that the time_exchange is not available)time_coinapiUTC timestamp of the trade when we first received it from the exchange in the specific site identified by the id_site_coinapi column. This useful information can be used to replay markets from the perspective of the algorithmic trading strategy. (Our clock is synchronized across data types and exchanges)ask_pxBest ask priceask_sxTotal amount of volume resting on best ask level in the base asset of the symbolbid_pxBest bid pricebid_sxTotal amount of volume resting on best bid level in the base asset of the symboltrades​Column nameDescriptiontime_exchangeUTC timestamp of the trade provided by the exchange or estimation of it using the delay of the exchange API (if the time_exchange is equal to the time_coinapi, then it mean that the time_exchange is not available)time_coinapiUTC timestamp of the trade when we first received it from the exchange. This useful information can be used to replay markets from the perspective of the algorithmic trading strategy. (Our clock is synchronized across data types and exchanges)guidUnique identifier of the trade provided by the CoinAPIpricePrice of the transactionbase_amountAmount of base asset traded in the transaction.taker_sideAggressor side of the transaction.Possible values are:BUY - Exchange has reported that transaction aggressor was buyingSELL - Exchange has reported that transaction aggressor was sellingBUY_ESTIMATED - Exchange has not reported transaction aggressor, we estimated that more likely it was buyingSELL_ESTIMATED - Exchange has not reported transaction aggressor, we estimated that more likely it was sellingUNKNOWN - Exchange has not reported transaction aggressor and we have not estimated who it waslimitbook_snapshot_X​Column nameDescriptiontime_exchangeUTC timestamp of the book provided by the exchange or estimation of it using the delay of the exchange API (if the time_exchange is equal to the time_coinapi, then it mean that the time_exchange is not available)time_coinapiUTC timestamp of the book when we first received it from the exchange. This useful information can be used to replay markets from the perspective of the algorithmic trading strategy. (Our clock is synchronized across data types and exchanges)asks[0-X].priceAsks prices (incrementing from the spread)asks[0-X].sizeTotal amount of volume resting on ask levels in the base asset of the symbolbids[0-X].priceBid prices (decrementing from the spread)bids[0-X].sizeTotal amount of volume resting on bid levels in the base asset of the symbollimitbook_full​Column nameDescriptiontime_exchangeUTC timestamp of the update provided by the exchange or estimation of it using the delay of the exchange API (if the time_exchange is equal to the time_coinapi, then it mean that the time_exchange is not available)time_coinapiUTC timestamp of the update when we first received it from the exchange. This useful information can be used to replay markets from the perspective of the algorithmic trading strategy. (Our clock is synchronized across data types and exchanges)is_buyIs the update related to the bid side of the book? Possible values are 0 (it's ask - sell) or 1 (it's bid - buy).update_typeType of the update. Possible values are:ADD - Add the order to the book with key (entry_px, order_id).SUB - Subtract the resting entry_sx volume from the book order identified by the key (entry_px, order_id).MATCH - Process the same as SUB, used to identify that subtraction was caused by the execution and not modification or self trade prevention algorithms.SET - Set the new entry_sx volume on the book order identified by the key (entry_px, order_id).DELETE - Delete the order identified by the key (entry_px, order_id) from the book.SNAPSHOT - Process the same as ADD, but before processing the first SNAPSHOT line when the last line seen was not a SNAPSHOT, then the whole book must be discarded/cleared.entry_pxPrice identifying the book level.entry_sxVolume associated with the specific update item.order_idID of the order if the format is Level 3 (order-by-order), empty if the format is Level 2ohlcv_active_consolidated​Column nameDescriptionsymbol_idSymbol identifier of requested time series. More information about the symbol are provided by the CoinAPI REST API at the https://docs.coinapi.io/#list-all-symbolstime_period_startPeriod starting UTC time (range left inclusive)time_period_endPeriod ending UTC time (range right exclusive)time_openUTC Time of first trade inside a period rangetime_closeUTC Time of last trade inside a period rangepx_openFirst trade price inside a period rangepx_highHighest traded price inside a period rangepx_lowLowest traded price inside a period rangepx_closeLast trade price inside a period rangesx_sumCumulative base amount traded inside a period rangesx_cntAmount of trades executed inside a period rangeFlat Files - REST API​RESTful endpoint provides the widest range of data, based on HTTP protocol which works in Request-Reply scheme.Implemented Standards:HTTP1.0HTTP1.1HTTP2.0Endpoints​EnviromentEncryptionValueProductionYeshttps://flatfiles.coinapi.io/ProductionNohttp://flatfiles.coinapi.io/HTTP Requests​Each HTTP request must contain the header Accept: application/xml as all responses are in XML format.Authentication​If you want to learn how to authenticate to this API, you can find detailed instructions and guidance in authentication section of this documentation.Supported operation​This section describes available Flat Files S3 API operations. List of Amazon S3 REST API operation that are supported by Flat Files S3 API.List objects GET​Get a list of objects in the bucket. This operations corresponds to ListObjectsV2 operation.infoThis operation does not require all of the parameters presented in ListObjectsV2 documentation. Specyfing them in request should not affect request result, nevertheless we advise to stick to request syntax presentd in HTTP Request section whenever possible.HTTP Request​GET /bucket/?GET /bucket/?prefix={prefix}URL Parameters​ParameterTypeDescriptionprefixstringpath to desired fileshellcsharpphppythonjsgorubyjavacurl -X GET -H ""Accept: application/xml"" -H ""Authorization: 73034021-THIS-IS-SAMPLE-KEY"" 'http://flatfiles.coinapi.io/bucket/?prefix=trades/20230530/var client = new RestClient(""https://flatfiles.coinapi.io/bucket/?prefix=trades/20230530/"");var request = new RestRequest(Method.GET);request.AddHeader(""Authorization"", ""73034021-THIS-IS-SAMPLE-KEY"");IRestResponse response = client.Execute(request);<?php$request = new HttpRequest();$request->setUrl('https://flatfiles.coinapi.io/bucket/?prefix=trades/20230530/');$request->setMethod(HTTP_METH_GET);$request->setHeaders(array( 'Authorization' => '73034021-THIS-IS-SAMPLE-KEY'));try { $response = $request->send(); echo $response->getBody();} catch (HttpException $ex) { echo $ex;}?>import requestsurl = 'https://flatfiles.coinapi.io/bucket/?prefix=trades/20230530/'headers = {'Authorization' : '73034021-THIS-IS-SAMPLE-KEY'}response = requests.get(url, headers=headers)const https = require('https');var options = { ""method"": ""GET"", ""hostname"": ""flatfiles.coinapi.io"", ""path"": ""/bucket/?prefix=trades/20230530/"", ""headers"": {'Authorization': '73034021-THIS-IS-SAMPLE-KEY'}};var request = https.request(options, function (response) { var chunks = []; response.on(""data"", function (chunk) { chunks.push(chunk); });});request.end();import ( ""gopkg.in/resty.v0"")func main() { resp, err := resty.R().  SetHeader(""Authorization"", ""73034021-THIS-IS-SAMPLE-KEY"").  Get(""https://flatfiles.coinapi.io/bucket/?prefix=trades/20230530/"")}require 'uri'require 'net/http'url = URI(""https://flatfiles.coinapi.io/bucket/?prefix=trades/20230530/"")http = Net::HTTP.new(url.host, url.port)request = Net::HTTP::Get.new(url)request[""Authorization""] = '73034021-THIS-IS-SAMPLE-KEY'response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();Request request = new Request.Builder() .url(""https://flatfiles.coinapi.io/bucket/?prefix=trades/20230530/"") .post(body) .addHeader(""Authorization"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();The above command returns file content.<ListBucketResult xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema""> <ContentLength>0</ContentLength> <HttpStatusCode>OK</HttpStatusCode> <IsTruncated>false</IsTruncated> <Contents>  <Key>trades/20230530/5677816-BINANCEFTS_PERP_BTC_USDT.csv.gz</Key>  <LastModified>2023-05-31T00:25:20.22186Z</LastModified>  <Size>36135124</Size> </Contents> <Contents>  <Key>trades/20230530/5753223-BINANCEFTS_PERP_ETH_USDT.csv.gz</Key>  <LastModified>2023-05-31T00:25:05.6151012Z</LastModified>  <Size>24401397</Size> </Contents> <Contents>  <Key>trades/20230530/5753224-BINANCEFTS_PERP_BCH_USDT.csv.gz</Key>  <LastModified>2023-05-31T00:24:41.567665Z</LastModified>  <Size>1785210</Size> </Contents> <Contents>  <Key>trades/20230530/5753225-BINANCEFTS_PERP_XRP_USDT.csv.gz</Key>  <LastModified>2023-05-31T00:25:06.6029577Z</LastModified>  <Size>14217669</Size> </Contents> <Contents>  <Key>trades/20230530/5753226-BINANCEFTS_PERP_EOS_USDT.csv.gz</Key>  <LastModified>2023-05-31T00:25:01.1120369Z</LastModified>  <Size>1793453</Size> </Contents> <MaxKeys>0</MaxKeys> <KeyCount>0</KeyCount></ListBucketResult>Download object GET​Retrives desired object from given path. This operations corresponds to GetObject operation. cautionThis operation does not require all of the parameters presented in GetObject documentation. Specyfing them in request should not affect request result, nevertheless we advise to stick to request syntax presentd in HTTP Request section whenever possible.cautionDownload object does not support Multi-part download operaion.HTTP Request​GET /bucket/{Key}URL Parameters​ParameterTypeDescriptionKeystringKey of the object to get.HTTP Errors​Error message is returned in XML structured like this:<?xml version=""1.0"" encoding=""UTF-8""?><Error> <Code>NoSuchKey</Code> <Message>The resource you requested does not exist</Message> <Resource>/mybucket/myfoto.jpg</Resource> <RequestId>4442587FB7D0A2F9</RequestId></Error>This model is compliant with Amazon S3 REST Error Responses.All HTTP requests with response status codes different to 200 must be considered as failed and you should expect additional XML inside the body of the response with the error message encapsulated inside it as shown in the example. We use the following error codes:Error CodeMeaning400Bad Request -- There is something wrong with your request401Unauthorized -- Your API key is wrong403Forbidden -- Your API key doesnt't have enough privileges to access this resource550No data -- You requested specific single item that we don't have at this moment.infoGood practice is to store all error messages somewhere along with request data for further manual review.Compatible software​The list of software that can be used to retrive data from Flat Files API.AWS SDK​Installation​pythonlinuxmacoswindowspip install awsclisudo apt-get install awsclibrew install awscliDownload the AWS CLI installer for Windows from the official AWS Command Line Interface website (https://aws.amazon.com/cli/).Follow the installation instructions provided on the website.Configuration​After installing the AWS CLI, open a terminal or command prompt.Run the following command to configure the AWS CLI:aws configureYou will be prompted to enter your AWS access key ID, secret access key, default region, and default output format. Provide the requested information accordingly.AWS Access Key ID [****************Key]]: 73034021-THIS-IS-SAMPLE-KEYAWS Secret Access Key [****************Key]]: coinapiDefault region name [None]: us-east-1Default output format [None]:Usage​Once the AWS CLI is installed and configured, you can use it to interact with the S3 API Coinapi using various commands. Here are some examples:List S3 Buckets:aws --endpoint-url http://flatfiles.coinapi.io s3 ls s3://coinapi PRE limitbook_full/ PRE metrics/ PRE quotes/ PRE trades/ PRE ohlcv_active_consolidated/Download a File from S3:aws --endpoint-url http://flatfiles.coinapi.io s3 cp s3://coinapi/trades/20200301/98819-YOBIT_SPOT_XEM_BTC.csv.gz /path/to/local/destinationS3 Browser​The most important parameters:Field nameValueAccess Key Id73034021-THIS-IS-SAMPLE-KEYSecret KeycoinapiDownload and Install S3 BrowserGo to the official S3 Browser website (https://s3browser.com)Download the latest version of S3 Browser and follow the installation instructions to install it on your computer.Launch S3 BrowserOpen the S3 Browser application that you installed.Create a New S3 ConnectionClick on the ""File"" menu at the top-left corner of the S3 Browser window.Select ""Add New Account"" from the drop-down menu.Enter Connection DetailsProvide a name for your connection in the ""Account Name"" field (e.g., Coinapi).Enter your S3 API Coinapi access key and secret key credentials in the ""Access Key"" and ""Secret Key"" fields, respectively.Configure S3 EndpointEnter the endpoint URL for the S3 API Coinapi in the ""Endpoint URL"" field.Refer to the Coinapi documentation or contact their support for the specific URL to use.Choose Connection TypeSelect either ""HTTP"" or ""HTTPS"" from the ""Connection Type"" drop-down menu based on Coinapi's security requirements.Test ConnectionClick the ""Test"" button to verify the connection.S3 Browser will attempt to connect to the specified endpoint using the provided credentials.Save ConnectionIf the connection test is successful, click ""OK"" to save the connection details.Browse S3 BucketsIn the left-hand sidebar of the S3 Browser window, find the newly created account.Expand the account to view the associated S3 buckets.Was this section helpful?12345PreviousMessagesNextJSON RPCGeneralWhat is Flat Files S3 API?What is the flat file?EndpointsHTTP RequestsAuthenticationSupported operationList objects GETDownload object GETHTTP ErrorsCompatible softwareAWS SDKS3 BrowserCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/s3-api)"
345,i.io market data authentication,"i.io market data authentication.   Authentication | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideAuthenticationOn this pageAuthenticationIn this section, you will find comprehensive information about the process of CoinAPI authentication. It covers the fundamental aspects and procedures involved in obtaining authentication for CoinAPI usage. Whether you are new to CoinAPI or seeking to enhance your understanding of the authentication process, this section will provide you with a valuable overview of the topic.There are different types of authentication methods available to secure and control access to its services.API Key - fundamental method of authentication that involves the usage of an API key for authentication and access control.API Key + JWT token - extended authentication method that combines the use of an API key along with a JWT token for enhanced security and authentication. Useful when you need to share the API Key publicly, for example when accessing the CoinAPI endpoints from the frontend JavaScript code exposed to the end-users. JWT token will be required along the API Key from the CoinAPI side to perform successful authentication, and the JWT tokens can be only generated from your side as you know the secret (private key or secret) based on which JWT token with the specified expiration time are issued.Authentication methods supported by the API​Here's an overview of the various products offered by CoinAPI and the supported authentication methods for each product. To use resources that require authorized access, you will need to use one of the many authentication methods described below.API ProductX-CoinAPI-Key headerQuery paramURL pathAuthorization headerBasic authJWTSenderCompIDAWS Signature Version 2/4REST✅✅✅✅✅✅❌❌WS V1✅✅✅✅✅✅❌❌WS DS✅✅✅✅✅✅❌❌FIX❌❌❌❌❌❌✅❌S3✅✅❌❌❌❌❌✅cautionIf you are using the Authorization header to pass the API key, please note that it cannot be used together with a JWT token. In case you have enabled JWT authentication, we recommend using alternative methods to pass the API key such as: a Custom authentication header, Query string parameter, or API Key in the URL.X-CoinAPI-Key header​You can authorize by providing an additional custom header named X-CoinAPI-Key and API key as its value.Assuming that your API key is 73034021-THIS-IS-SAMPLE-KEY, then the authentication header you should send to us will look like:X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEYQuery string parameter (apikey)​You can authorize by providing an additional parameter named apikey with a value equal to your API key in the query string of your HTTP request.Assuming that your API key is 73034021-THIS-IS-SAMPLE-KEY and that you want to request all exchange rates from BTC asset, then your query string should look like this: GET /v1/exchangerate/BTC?apikey=73034021-THIS-IS-SAMPLE-KEYcautionThe Query string method may be more practical for development activities.URL path​To ensure proper authentication when passing the API key in the URL, it is important to format it correctly. The real API key should always be preceded by the APIKEY- prefix, followed by the actual API key. For example, if your API key is 73034021-THIS-IS-SAMPLE-KEY, the URL should be structured as /APIKEY-73034021-THIS-IS-SAMPLE-KEY.The API key can be placed end of the URL path. Note that the key is completely ignored when determining the path of the requested resource. Here are examples of the different placements:/v1/exchanges/APIKEY-73034021-THIS-IS-SAMPLE-KEY/APIKEY-73034021-THIS-IS-SAMPLE-KEYPlease make sure to replace 73034021-THIS-IS-SAMPLE-KEY with your actual API key for authentication and access to the requested resources and remember to include the APIKEY- prefix before your real API key.Authorization header​This method involves including the API key directly in the Authorization header of the API request.Authorization: 73034021-THIS-IS-SAMPLE-KEYBasic auth​Use Basic Authentication by setting the Authorization header with a base64 encoded string that combines your API key with a username (coinapi):Authorization: Basic Y29pbmFwaTo3MzAzNDAyMS1USElTLUlTLVNBTVBMRS1LRVk=In this example, Y29pbmFwaTo3MzAzNDAyMS1USElTLUlTLVNBTVBMRS1LRVk is a base64 encoded string of the username and API key (coinapi:73034021-THIS-IS-SAMPLE-KEY).JWT token​The JWT authentication method provides a secure and efficient way to authorize requests using JSON Web Tokens (JWT). With this method, JWTs can be passed via the Authorization header in the Bearer JWT_TOKEN format.Supported JWT Algorithms​The JWT authentication method supports the following algorithms for JWT token verification with various key sizes:RSASSA-PSS (e.g. PS256)RSASSA-PKCS1-v1_5 (e.g. RS256)ECDSA (e.g. ES256)HMAC (e.g. HS256)Enabling JWT authentication​To enable JWT authentication for your API key:Access the customer portal and import the public JWT key (RSA or ECDSA) for the API key.Generate a JWT token using your private key (it ensures the authenticity and integrity of the token)Include the generated JWT token in the Authorization header of your API requests using Bearer JWT_TOKEN format.Let the CoinAPI server verify the token's authenticity using the corresponding public key you've imported in Step 1 during the API request.Example request with JWT authentication​To include a JWT in an API request, add the token to the Authorization header using the Bearer scheme. The format of the header is as follows: `Authorization: Bearer JWT_TOKEN`Example request header with JWT token generated using RS256 algorithm:Authorization: Bearer eyJraWQiOiI5ODViMmQ0ZC1kMjE1LTQwN2MtODcxNi01NTIzNjA0YmM0ZTIiLCJhbGciOiJSUzI1NiJ9.ew0KICAic3ViIjogIjEyMzQ1Njc4OTAiLA0KICAibmFtZSI6ICJFWEFNUExFIFRPS0VOIiwNCiAgImlhdCI6IDE1MTYyMzkwMjIsDQogICJuYmYiOiAxNjg2MTM3MDI0LA0KICAiZXhwIjogMTcxNzY3MzAyNA0KfQ.CX6MWRSXQPKuQ_jrFCME91IwZhK8lq_2XrbDOyZ4-tPo0Ro52HA289sIfLo2LNafWQlq2lClfCN55TxyfC8n0xiifUwdec7g3kcGjCri6vTxaa8p6S3Fyyt2DxXccpi3Se4d_3mEQBZwMchKbQsw-W7Wj7njUk31ycgPQovvF4WrTuEYmhYw1sO9jCTORHmsSO7Shml7kv7AxlIUmzB2oq2KSmBhJV38Nz9oYj3KlPoMjgaIl4xYldNqnGyshh6fQyUQ1gQMQV6e4M5ro8YthjPOCvAT8yk77dTyOoE6Im58cAp6KtM-Gko-tWppUQTu-0M82LOvD_duP77n-hcoTwDecoded JWT token header:{ ""kid"": ""985b2d4d-d215-407c-8716-5523604bc4e2"", ""alg"": ""RS256"" }Decoded JWT token payload:{ ""sub"": ""1234567890"", ""name"": ""EXAMPLE TOKEN"", ""iat"": 1516239022, ""nbf"": 1686137024, ""exp"": 1717673024}JWT Token expiration​To ensure the validity of JWT tokens and prevent the use of expired tokens, the inclusion of the following claims is required:NBF (Not Before)The ""nbf"" claim specifies the earliest time at which the token can be considered valid. Tokens with a ""nbf"" claim set in the future should not be accepted.EXP (Expiration Time)The ""exp"" claim defines the expiration time of the token. Tokens with an ""exp"" claim set in the past should not be accepted.Request authentication​During the process of request authentication, the CoinAPI server follows a series of steps to ensure secure access to its resources. Here's an overview of the authentication process:Upon receiving the request, the CoinAPI server extracts the JWT from the Authorization header.Then, it verifies the JWT signature and checks the ""NBF"" and ""EXP"" claims to ensure token validity and expiration.If the JWT is valid and not expired, the server authorizes the request and proceeds with the necessary processing to access CoinAPI resources.If the JWT is invalid or expired, the server returns an appropriate error response.SenderCompID​This method of authentication is FIX protocol-specific. The exact message that needs to be sent to us will be described in the documentation of the specific API protocol Logon (35=A) message page.AWS Signature Version 2​Please in this method of authorization put the API Key in the Access Key ID and Secret Access Key fields.AWS Signature Version 4​AMAZON S3 uses the Authorization request header to provide authorization information. The value for this header must follow a specific pattern described as AWS Signature Version 4.The example below shows the Authorization header value compliant with AWS Signature Version 4.Please note that the Credential string contains our apikey as access-key-id. Assuming that your API key is 73034021-THIS-IS-SAMPLE-KEY, then the authorization header you should send to us will look like:Authentication: AWS4-HMAC-SHA256 Credential=73034021-THIS-IS-SAMPLE-KEY/20211203/us-east-1/s3/aws4_request, SignedHeaders=host; Signature=65e655c69da9906ac6076a28f75d9e4947aaed3be1f419757a3a84e24662673dAlthough AWS Signature Version 4 is very strict about each of the signature components, our API takes only our apikey value into account.Was this section helpful?12345PreviousMarket Data APINextAPI limits and billingAuthentication methods supported by the APIX-CoinAPI-Key headerQuery string parameter (apikey)URL pathAuthorization headerBasic authJWT tokenSenderCompIDAWS Signature Version 2AWS Signature Version 4Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/authentication)"
346,i.io faq api Geographic locations and the Latency,"i.io faq api Geographic locations and the Latency.   Geographic locations and the Latency | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQAPIGeographic locations and the LatencyGeographic locations and the LatencyWe continuously expand our data centers, but currently, the API endpoints are located in: - AWS us-east-1  - AWS eu-central-1  - AWS eu-west-1  - USA Chicago (AS7922, AS812, AS10796)  - USA New York (AS7922, AS812, AS10796)  - UK London (AS2856, AS13285, AS5089)  - Poland Warsaw (AS174)  - Asia Tokyo (AS17676, AS2516, AS4713)Historical data delivered using the REST API (all /history and several /latest endpoints) and the flat files are generated in the separate process where we replay all the markets (seen from different locations) and create a single data feed prone to issues related to specific geographic areas like network issues etc.Real-time data delivered using the REST (all /current and several /latest endpoints), WebSocket, and the FIX API originates from the specific site where the customer was connected. On the Enterprise Plan, it's possible to have direct access to the sites or set up AWS VPC Peering in that case latency between our infrastructure and the customer is below one millisecond. If the connection was established to the public endpoint, then it's routed using the GeoDNS to the closest site; latency then depends on the distance between the customer and the site where the connection was routed [~20ms].Was this section helpful?12345PreviousFIX API Logon TroubleshootingNextHow are exchange rates calculated?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/api/Geographic-locations-and-the-Latency)"
347,i.io general faq general REST API empty array collection response and 550 error explained,"i.io general faq general REST API empty array collection response and 550 error explained.   REST API empty array/collection response and 550 error explained. | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralREST API empty array/collection response and 550 error explained.On this pageREST API empty array/collection response and 550 error explained.Question:​Requesting OHLCV via REST API, why do I get an empty JSON array as a response instead of a 550 error? When the request is failed with a 550 error and when the empty response (empty JSON array, XML, or CSV) is delivered?Answer:​In the, for example, REST OHLCV data, you are requesting the data in the time range and receiving the collection (JSON Array) in response, which could contain 0 or multiple objects. When we don't have the object, then it will be not visible in the array, and if there are no objects in the range, then the collection will be empty. It's a correct response, and it's a better solution than responding with a 550 error as the response is correct from the data structure perspective.The 550 error code is related to the specific object requested (JSON object) like the current exchange rate between BTC/USD. In this type of request, we need to respond with a single object, and when we do not have it, then the whole request will be failed with a 550 HTTP response code.The OHLCV periods are not generated when there are no trades in the period as min, max, first, last (low, high, open, close) are undefined. We have the parameter include_empty_items which you can use to display those items, but only time_period_start, time_period_end will be visible. More information is available in the relevant sections of the documentation: https://docs.coinapi.io/market-data/rest-api/ohlcv https://docs.coinapi.io/market-data/rest-api#http-requestsWas this section helpful?12345PreviousOHLCV Aggregation using the REST APINextShould we file a ticket every time?Question:Answer:Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/REST-API-empty-array-collection-response-and-550-error-explained)"
348,i.io market data rest api ohlcv#available periods,"i.io market data rest api ohlcv#available periods.   Ohlcv | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcv Historical data by exchange Historical data Latest data List all periodsOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIOhlcvOhlcvAPI calls described in this section are related to downloading OHLCV (Open, High, Low, Close, Volume) timeseries data. Each data point of this timeseries represents several indicators calculated from transactions activity inside a time range (period).infoOHLCV data primary purpose is to present an overview of the market in human readable form. It's often used to visualize market data on charts, websites, and various kinds of reports.tipCoinAPI expanded the standard OHLCV timeseries by including time of first and last trade and amount of trades executed inside period.📄️ Historical data by exchangeGet OHLCV timeseries data returned in time ascending order. Data can be requested by the period and for the specific exchange eg `BITSTAMP`📄️ Historical dataGet OHLCV timeseries data returned in time ascending order. Data can be requested by the period and for the specific symbol eg `BITSTAMP_SPOT_BTC_USD`, if you need to query timeseries by asset pairs eg. `BTC/USD`, then please reffer to the Exchange Rates Timeseries data📄️ Latest dataGet OHLCV latest timeseries data returned in time descending order. Data can be requested by the period and for the specific symbol eg `BITSTAMP_SPOT_BTC_USD`, if you need to query timeseries by asset pairs eg. `BTC/USD`, then please reffer to the Exchange Rates Timeseries data📄️ List all periodsGet full list of supported time periods available for requesting OHLCV timeseries data.Was this section helpful?12345PreviousListing of all supported metrics for symbolNext Historical data by exchangeCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/ohlcv#available-periods)"
349,i.io general faq general How long does it take to integrate CoinAPI,"i.io general faq general How long does it take to integrate CoinAPI.   How long does it take to integrate CoinAPI? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralHow long does it take to integrate CoinAPI?How long does it take to integrate CoinAPI?We will deliver an API key to your email address within a minute after you subscribe. With this key, you can use our API right away. The integration component is up to you: it can take just five minutes for simple projects or several days for most complicated ones.Was this section helpful?12345PreviousHow is trade volume calculated?NextHow to avoid losing the messages or delay on the WebSocket?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/How-long-does-it-take-to-integrate-CoinAPI)"
350,i.io market data rest api order book order book historical data,"i.io market data rest api order book order book historical data.   Historical data | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcvOrder BookGet current order book Current depth of the order book Historical data Latest dataOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIOrder Book Historical data Historical dataGET /v1/orderbooks/:symbol_id/historyGet historical order book snapshots for a specific symbol within time range, returned in time ascending order.infoThe historical order book data via the REST API is currently limited by a number of updates and to the maximum number of 20 levels.Path Parameterssymbol_id string requiredSymbol identifier for requested timeseries (from the Metadata -> Symbols)Query Parameterstime_start stringStarting time in ISO 8601 (required)time_end stringTimeseries ending time in ISO 8601 (optional, if not supplied then the data is returned to the end or when result elements count reaches the limit)limit int32Default value: 100Amount of items to return (optional, mininum is 1, maximum is 100000, default value is 100, if the parameter is used then every 100 output items are counted as one request)limit_levels int32Maximum amount of levels from each side of the book to include in response (optional)Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the order book.time_coinapi date-timeThe CoinAPI time when the order book was received.asks nullableThe asks made by market makers.bids nullableThe bids made by market makers.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.264Z"", ""time_coinapi"": ""2024-07-16T12:55:05.264Z"" }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""asks"": [  {  ""price"": 456.35,  ""size"": 123  },  {  ""price"": 456.36,  ""size"": 23  } ], ""bids"": [  {  ""price"": 456.1,  ""size"": 42  },  {  ""price"": 456.09,  ""size"": 5  } ] }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the order book.time_coinapi date-timeThe CoinAPI time when the order book was received.asks nullableThe asks made by market makers.bids nullableThe bids made by market makers.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.264Z"", ""time_coinapi"": ""2024-07-16T12:55:05.264Z"" }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""asks"": [  {  ""price"": 456.35,  ""size"": 123  },  {  ""price"": 456.36,  ""size"": 23  } ], ""bids"": [  {  ""price"": 456.1,  ""size"": 42  },  {  ""price"": 456.09,  ""size"": 5  } ] }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the order book.time_coinapi date-timeThe CoinAPI time when the order book was received.asks nullableThe asks made by market makers.bids nullableThe bids made by market makers.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.264Z"", ""time_coinapi"": ""2024-07-16T12:55:05.264Z"" }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""asks"": [  {  ""price"": 456.35,  ""size"": 123  },  {  ""price"": 456.36,  ""size"": 23  } ], ""bids"": [  {  ""price"": 456.1,  ""size"": 42  },  {  ""price"": 456.09,  ""size"": 5  } ] }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the order book.time_coinapi date-timeThe CoinAPI time when the order book was received.asks nullableThe asks made by market makers.bids nullableThe bids made by market makers.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.265Z"", ""time_coinapi"": ""2024-07-16T12:55:05.265Z"" }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""asks"": [  {  ""price"": 456.35,  ""size"": 123  },  {  ""price"": 456.36,  ""size"": 23  } ], ""bids"": [  {  ""price"": 456.1,  ""size"": 42  },  {  ""price"": 456.09,  ""size"": 5  } ] }]Loading...Was this section helpful?12345Previous Current depth of the order bookNext Latest dataCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/order-book/order-book-historical-data)"
351,i.io general faq api How to use CoinAPI from Matlab,"i.io general faq api How to use CoinAPI from Matlab.   How to use CoinAPI from Matlab? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer EMS Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What is the rate limit for EMS Trading API?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQAPIHow to use CoinAPI from Matlab?How to use CoinAPI from Matlab?You can access our API using at least 4 methods:Use Java SDK code from the Matlab environment (https://www.mathworks.com/help/matlab/using-java-libraries-in-matlab.html)Use .NET SDK code from the Matlab environment (https://www.mathworks.com/help/matlab/using-net-libraries-in-matlab.html)Use the Python SDK code from the Matlab environment (https://www.mathworks.com/help/matlab/call-python-libraries.html)Use webread function which automatically converts our JSON into the Matlab objects. (https://www.mathworks.com/help/matlab/ref/webread.html)Was this section helpful?12345PreviousHow to solve certificate validation error?NextI received a reconnect message from WebsocketCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/api/How-to-use-CoinAPI-from-Matlab)"
352,i.io faq,"i.io faq.   FAQ | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQFAQThis section will cover the questions that are often asked based on the most common inquiries received by us. FAQs cover a range of topics, addressing issues related to products, services, policies, technical support, and more.Was this section helpful?12345PreviousGet site locationsNextGeneralCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq)"
353,i.io naas api bitcoin Methods fundrawtransaction,"i.io naas api bitcoin Methods fundrawtransaction.   fundrawtransaction | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsfundrawtransactionOn this pagefundrawtransactionOverview​The 'fundrawtransaction' method is used to add inputs to a transaction until it has enough in value to meet its out value. If the transaction initially has no inputs, they will be automatically selected. This method can add at most one change output to the outputs and won't modify existing outputs unless specified by the ""subtractFeeFromOutputs"" option. Note that inputs which were signed may need to be resigned after the completion since in/outputs have been added. The added inputs will not be signed; use methods like 'signrawtransactionwithkey' or 'signrawtransactionwithwallet' for that.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""fundrawtransaction"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""fundrawtransaction\"",\r \""params\"": []\r }\r "", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""fundrawtransaction"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""2.0"", ""method"": ""fundrawtransaction"", ""params"": [ ""0x4c253746668dca6ac3f7b9bc18248b558a95b5fc881d140872c2dff984d344a7"" ], ""id"": 1})headers = { 'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type': 'application/json', 'accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""73034021-THIS-IS-SAMPLE-KEY"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""fundrawtransaction"", ""params"": [  ""0x4c253746668dca6ac3f7b9bc18248b558a95b5fc881d140872c2dff984d344a7"" ], ""id"": 1 }),};$.ajax(settings).done(function (response) { console.log(response);});package mainpackage mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{`+""""+` ""jsonrpc"": ""1.0"",`+""""+` ""id"": ""1"",`+""""+` ""method"": ""fundrawtransaction"",`+""""+` ""params"": []`+""""+`}`+""""+``)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({""jsonrpc"": ""1.0"",""id"": ""1"",""method"": ""fundrawtransaction"",""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder().build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""fundrawtransaction\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​hexstring (string, required): The hex string of the raw transaction.options (json object, optional): Additional options for the transaction. Can include fields like ""replaceable"", ""conf_target"", and ""estimate_mode"".iswitness (boolean, optional): Specifies whether the transaction hex is a serialized witness transaction. The default value depends on heuristic tests performed during decoding.Response​psbt (string): The base64-encoded partially signed transaction if not extracted.hex (string): The hex-encoded network transaction if extracted.complete (boolean): Indicates if the transaction has a complete set of signatures.Was this section helpful?12345PreviousfinalizepsbtNextgenerateBlockOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/fundrawtransaction)"
354,i.io flat files api data types link to full limit order book doc,i.io flat files api data types link to full limit order book doc.   Page Not Found | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyPage Not FoundWe could not find what you were looking for.Please contact the owner of the site that linked you to the original URL and let them know their link is broken.Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/flat-files-api/data-types/link-to-full-limit-order-book-doc)
355,i.io naas api bitcoin Methods generateblock,"i.io naas api bitcoin Methods generateblock.   generateBlock | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgenerateBlockOn this pagegenerateBlockOverview​The 'generateBlock' method allows you to mine a block with a set of ordered transactions immediately to a specified address or descriptor before the RPC call returns. This is a powerful tool for developers looking to integrate Bitcoin mining functionalities in their applications.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""generateBlock"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""generateBlock\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""generateBlock"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""2.0"", ""method"": ""generateBlock"", ""params"": [], ""id"": 1})headers = { 'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type': 'application/json', 'accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""generateBlock"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) { console.log(response);});package mainpackage mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""generateBlock"",""params"": [],""id"":1}`) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"") req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""method"": ""generateBlock"", ""params"": [], ""id"": 1})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder().build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""generateBlock\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​OUTPUT (Argument #1): The address or descriptor where the newly generated bitcoins will be sent to. This parameter is required.TRANSACTIONS (Argument #2): A JSON array containing hex strings which are either transaction IDs or raw transactions. Transaction IDs must reference transactions currently in the mempool. All transactions must be valid and in the correct order, otherwise, the block will be rejected. This parameter is required.Response​hash: A string representing the hash of the generated block.Was this section helpful?12345PreviousfundrawtransactionNextgeneratetoaddressOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/generateblock)"
356,i.io naas api#chain blockchain,"i.io naas api#chain blockchain.   NaaS API | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumNaaS APIOn this pageNaaS APIIntroduction​The NaaS API is a software product that provides a set of tools for developers to interact with the blockchain.It make it easier to interface with blockchains, allowing developers to concentrate on creating apps rather than maintaining the supporting infrastructure. Technical design​We provide public nodes that act as gateways to popular blockchains, including Bitcoin, Ethereum and more. These nodes are accessible through a range of HTTP API endpoints, allowing developers and applications to interact with blockchain data effortlessly.For a full list of available endpoints click here.Essentials​Node serves as both a server and software component responsible for exposing an API to interact with the blockchain.Chain or Blockchain, is a distributed and immutable ledger that records all transactions across a decentralized network.Network refers to the entire ecosystem of blockchain participants, including nodes, users, and miners, connected via a specific blockchain protocol.Endpoints​The list of endpoints is available in the documentation for each exchange.Getting started​To begin using the NaaS API, you'll need:CoinAPI key (obtainable by signing up on our website).Access an operational Node via any of our endpoints Familiarity with HTTP & JSON-RPCFamiliarity with the methods exposed by the blockchain you want to interact with such as Bitcoin, Ethereum or any other of your choiceGeneral information​NaaS API is dedicated to developers who wish to integrate their applications with the various blockchains and their ecosystems. The NaaS API facilitates interaction with nodes connected to different blockchains, allowing access to on-chain data and enabling the transmission of transactions onto the network. JSON-RPC Standard​The NaaS API operates on the JSON-RPC protocol. JSON-RPC is a lightweight and stateless remote procedure call (RPC) protocol widely used in communicating with blockchain nodes. All queries and responses in this API are formatted in JSON.Authentication & Security​Depending on your preference, you can either utilize an API key or enhance security by combining an API key with JWT token.For more details go to our Authentication section.Best PracticesNever expose your API key in a client-side application or a public code repository. Always keep it securely on your server.Always communicate with the CoinAPI NaaS API over HTTPS (SSL/TLS) to encrypt data transmitted between your application and CoinAPI's serversWhen possible, avoid sending personally identifiable information (PII)Monitor for updates as our API can evolve, regularly check for updates to ensure compatibilitydangerOnce your API key falls into the wrong hands, it can be used to make requests within your subscription.infoIf your key has been compromised, you have the option to delete it at any time and generate a new oneLimits​Your Subscription might have rate limits in place. Ensure you're making requests within the allowed limits to avoid being interruption in access.Http Status Codes​When the status code is not 200, it indicates a lack of response from the node.Even if a 200 status code is received, there may still be a JSON-RPC error at the node level.A status code different from 200 implies that the response is not a JSON-RPC response.Successful JSON-RPC Responses​200 OK, valid response:{ ""jsonrpc"": ""2.0"", ""id"": ""tracking-id-001"", ""result"": ""0x11baedc""}JSON-RPC Error Responses​200 OK, includes error code from the node:{ ""jsonrpc"": ""2.0"", ""id"": ""tracking-id-001"", ""error"": {  ""code"": -32602,  ""message"": ""too many arguments, want at most 0"" }}Non-JSON-RPC Error Responses (other than 200)​401, unauthorized:{ ""error"": ""Invalid API key""}Possible HTTP status codes and their meaning are listed below:Status CodeMeaning200Your request has been successfully processed by the server. However, it's essential to examine the response data as there might be JSON-RPC errors within the node's response.400Your request is malformed or contains incorrect parameters. There is an issue with the request itself.401Your request lacks proper authentication. It is typically due to an incorrect API key.403Your API key lacks the necessary permissions to access the requested resource.429Your request has exceeded the rate limits associated with your API key.550Server cannot provide the requested data at the moment. This may occur when requesting specific single items that are temporarily unavailable.Making API Calls​Json-RPC provides a structured and straightforward approach to sending and receiving data, making it accessible for developers using a wide range of programming languages and tools.curlYou can use the curl command-line tool to make requests. Here's an example of how to make a POST request to the Ethereum JSON-RPC API using curl:curl -X POST \ ""https://ethereum-mainnet-geth-archive.node.coinapi.io?apiKey=YOUR_API_KEY"" \ -H ""Content-Type: application/json"" \ -d '{ ""jsonrpc"": ""2.0"", ""method"": ""eth_getTransactionReceipt"", ""params"": [""0x2444a649cd7fcd50ccb8c52c4159515fdf311eeb5dc02cf1b2c397b833fde012""], ""id"": 1 }'web3.jsIf you prefer to use JavaScript and the web3.js library to interact with NaaS API, you can make request like this:const axios = require('axios');const url = 'https://ethereum-mainnet-geth-archive.node.coinapi.io?apiKey=YOUR_API_KEY';const data = { jsonrpc: '2.0', method: 'eth_getTransactionReceipt', params: ['0x2444a649cd7fcd50ccb8c52c4159515fdf311eeb5dc02cf1b2c397b833fde012'], id: 1,};axios.post(url, data, { headers: { 'Content-Type': 'application/json', },}) .then(response => { console.log(response.data); }) .catch(error => { console.error(error); });PythonYou can also use Python to make HTTP POST requests to the NaaS API using the requests library. Here's an example:import requestsurl = 'https://ethereum-mainnet-geth-archive.node.coinapi.io?apiKey=YOUR_API_KEY'data = { 'jsonrpc': '2.0', 'method': 'eth_getTransactionReceipt', 'params': ['0x2444a649cd7fcd50ccb8c52c4159515fdf311eeb5dc02cf1b2c397b833fde012'], 'id': 1,}headers = {'Content-Type': 'application/json'}response = requests.post(url, json=data, headers=headers)if response.status_code == 200: result = response.json() print(result)else: print(f""Request failed with status code {response.status_code}"")Batch requests | Multi-Call​Multiple requests can be sent simultaneously in an array when using the NaaS API, allowing for efficient handling of multiple operations. In such a scenario, each request within the array is processed before all the requests are returned.When requests are sent in a batch, they will only be returned after every request has been processed. This behavior is particularly useful when you need to perform multiple operations and want to wait for all of them to complete before proceeding.Example of a Batch Request[ {""jsonrpc"": ""2.0"", ""id"": ""tracking-id-001"", ""method"": ""eth_blockNumber"", ""params"": []}, {""jsonrpc"": ""2.0"", ""id"": ""tracking-id-002"", ""method"": ""eth_chainId"", ""params"": []}]In this batch request, we have two distinct JSON-RPC requests bundled togethe:The first request, identified by tracking-id-001 invokes the eth_blockNumber, aiming to retrieve the current block number.The second request, with the identifier tracking-id-002 calls the eth_chainId to fetch the current chain ID.Response to the Batch Request[ {  ""jsonrpc"": ""2.0"",  ""id"": ""tracking-id-001"",  ""result"": ""0x11bb158"" }, {  ""jsonrpc"": ""2.0"",  ""id"": ""tracking-id-002"",  ""result"": ""0x1"" }]Data Streaming​TODOSupport​If you encounter any issues or have further questions regarding the Ethereum API, please contact our support team at [email protected].Summary​With the NaaS API, you can fully leverage the potential of the different blockchains in your applications. This documentation covers all the necessary information to start utilizing this API and creating innovative blockchain-based solutions. Was this section helpful?12345NextAuthenticationIntroductionTechnical designEssentialsEndpointsGetting startedGeneral informationJSON-RPC StandardAuthentication & SecurityLimitsHttp Status CodesMaking API CallsBatch requests | Multi-CallData StreamingSupportSummaryCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api#chain-blockchain)"
357,i.io naas api ethereum Methods eth subscribe,"i.io naas api ethereum Methods eth subscribe.   eth_subscribe | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_subscribeOn this pageeth_subscribeOverview​The 'eth_subscribe(""newHeads"")' method allows developers to receive real-time notifications regarding new block headers on the Ethereum blockchain. This method sends notifications whenever a new block is added to the chain.Request​{ ""method"": ""eth_subscribe"", ""params"": [""newHeads""]}Request Parameters​method: The API method to call. For this endpoint, it should be ""eth_subscribe"".params: An array containing the type of event to subscribe to. In this case, it should be ""newHeads"".Response​{ ""subscription"": ""subscription ID"", ""result"": { ""number"": ""block number"", ""hash"": ""block hash"", ""parenthash"": ""hash of the previous block"", ""nonce"": ""proof-of-work hash"", ""sha3uncles"": ""hash of the list of uncles"", ""logsbloom"": ""bloom filter for the logs"", ""transactionsroot"": ""root of the transaction trie"", ""stateroot"": ""root of the final state trie"", ""receiptsroot"": ""root of the receipts trie"", ""miner"": ""address of the miner"", ""difficulty"": ""difficulty measure"", ""totaldifficulty"": ""cumulative difficulty"", ""extradata"": ""extra data"", ""size"": ""block size"", ""gaslimit"": ""maximum gas allowed"", ""gasused"": ""total used gas"", ""timestamp"": ""Unix timestamp"", ""transactions"": ""array of transaction objects"", ""uncles"": ""array of uncle hashes"" }}Was this section helpful?12345Previouseth_submitWorkNextsubscribePendingTransactionsOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_subscribe)"
358,i.io ems api managed cloud rest api exchange exchange login require,"i.io ems api managed cloud rest api exchange exchange login require.   Get exchange configuration | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIAccountCertificateEndpointsExchangeGet exchange configurationLocationREST APIWebSocket APIFIX APISelf Hosted GuideManaged Cloud REST APIExchangeGet exchange configurationGet exchange configurationGET /v1/exchangesGet information about the required parameters or server site location of the exchanges supported in the EMS API.Responses200OKapplication/jsonSchemaExample (from schema)SchemaArray [exchange_id stringExchange identifier and optional tag identifying specific account configured when the software will be managing multiple accounts on the same exchange; for eg: BITSTAMP BITSTAMP/7c177641-74bd-4dbe-9b01-2497c12a5f70` BITSTAMP/2574 Allowed separators between the exchange identifier and the tag: ~/.,:;!@#$%^&*-_+=.location_id stringLocation identifierrequired_parameters string[]Parameters required to log into the exchange][ { ""exchange_id"": ""string"", ""location_id"": ""string"", ""required_parameters"": [  ""string"" ] }]Loading...Was this section helpful?12345PreviousExchangeNextLocationCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/managed-cloud-rest-api/exchange/exchange-login-require)"
359,i.io naas api ethereum Methods eth uninstallFilter,"i.io naas api ethereum Methods eth uninstallFilter.   eth_uninstallFilter | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_uninstallFilterOn this pageeth_uninstallFilterOverview​The 'eth_uninstallFilter' method uninstalls a filter with given ID. This method should always be called when watching is no longer needed.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \ --url https://ethereum-mainnet-geth-archive.node.coinapi.io \ --header 'accept: application/json' \ --header 'content-type: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --data ' { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_uninstallFilter"", ""params"": [  {  ""address"": [   ""0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907""  ],  ""fromBlock"": ""0x429d3b"",  ""toBlock"": ""latest"",  ""topics"": [   ""0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"",   ""0x00000000000000000000000000b46c2526e227482e2ebb8f4c69e4674d262e75"",   ""0x00000000000000000000000054a2d42a40f51259dedd1978f6c118a0f0eff078""  ]  } ] }'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_uninstallFilter\"",\""params\"":[{\""address\"":[\""0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907\""],\""fromBlock\"":\""0x429d3b\"",\""toBlock\"":\""latest\"",\""topics\"":[\""0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"",\""0x00000000000000000000000000b46c2526e227482e2ebb8f4c69e4674d262e75\"",\""0x00000000000000000000000054a2d42a40f51259dedd1978f6c118a0f0eff078\""]}]}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"",CURLOPT_RETURNTRANSFER => true,CURLOPT_ENCODING => """",CURLOPT_MAXREDIRS => 10,CURLOPT_TIMEOUT => 30,CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,CURLOPT_CUSTOMREQUEST => ""POST"",CURLOPT_POSTFIELDS => json_encode(['id' => 1,'jsonrpc' => '2.0','method' => 'eth_uninstallFilter','params' => [['address' => ['0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907'],'fromBlock' => '0x429d3b','toBlock' => 'latest','topics' => ['0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef','0x00000000000000000000000000b46c2526e227482e2ebb8f4c69e4674d262e75','0x00000000000000000000000054a2d42a40f51259dedd1978f6c118a0f0eff078']]]]),CURLOPT_HTTPHEADER => [""accept: application/json"",""content-type: application/json"",""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY""],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) {echo ""cURL Error #:"" . $err;} else {echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_uninstallFilter"", ""params"": [  {   ""address"": [""0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907""],   ""fromBlock"": ""0x429d3b"",   ""toBlock"": ""latest"",   ""topics"": [""0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"", ""0x00000000000000000000000000b46c2526e227482e2ebb8f4c69e4674d262e75"", ""0x00000000000000000000000054a2d42a40f51259dedd1978f6c118a0f0eff078""]  } ]}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"" ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text)const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({ id: 1, jsonrpc: '2.0', method: 'eth_uninstallFilter', params: [  {  address: ['0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907'],  fromBlock: '0x429d3b',  toBlock: 'latest',  topics: [   '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef',   '0x00000000000000000000000000b46c2526e227482e2ebb8f4c69e4674d262e75',   '0x00000000000000000000000054a2d42a40f51259dedd1978f6c118a0f0eff078'  ]  } ] })};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_uninstallFilter\"",\""params\"":[{\""address\"":[\""0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907\""],\""fromBlock\"":\""0x429d3b\"",\""toBlock\"":\""latest\"",\""topics\"":[\""0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"",\""0x00000000000000000000000000b46c2526e227482e2ebb8f4c69e4674d262e75\"",\""0x00000000000000000000000054a2d42a40f51259dedd1978f6c118a0f0eff078\""]}]}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_uninstallFilter\"",\""params\"":[{\""address\"":[\""0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907\""],\""fromBlock\"":\""0x429d3b\"",\""toBlock\"":\""latest\"",\""topics\"":[\""0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"",\""0x00000000000000000000000000b46c2526e227482e2ebb8f4c69e4674d262e75\"",\""0x00000000000000000000000054a2d42a40f51259dedd1978f6c118a0f0eff078\""]}]}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_uninstallFilter\"",\""params\"":[{\""address\"":[\""0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907\""],\""fromBlock\"":\""0x429d3b\"",\""toBlock\"":\""latest\"",\""topics\"":[\""0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"",\""0x00000000000000000000000000b46c2526e227482e2ebb8f4c69e4674d262e75\"",\""0x00000000000000000000000054a2d42a40f51259dedd1978f6c118a0f0eff078\""]}]}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​A filter object with the following keys and their values:address: [optional] A contract address or a list of addresses from which logs should originate.fromBlock: [optional, default is latest] A hexadecimal block number, or the string latest, earliest, or pending. See the default block parameter.toBlock: [optional, default is latest] A hexadecimal block number, or the string latest, earliest, or pending. See the default block parameter.topics: [optional] An array of 32 bytes DATA topics. Topics are order-dependent.Topics are order-dependent. A transaction with a log with topics '[A, B]' will be matched by the following topic filters:[]: Anything.[A]: 'A' in the first position, and anything after.[null, B]: Anything in the first position AND 'B' in the second position, and anything after.[A, B]: 'A' in the first position AND 'B' in the second position, and anything after.[[A, B], [A, B]]: (A OR B) in the first position AND (A OR B) in the second position, and anything after.Response​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": ""0x7da018f96a3cd71bef5eedd3fc66596e""}uninstalled flag: (boolean) true if the filter was successfully uninstalled, otherwise false.Was this section helpful?12345Previouseth_syncingNexteth_unsubscribeOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_uninstallFilter)"
360,i.io general faq api What are the time periods I can use for Exchange Rates and OHLCV,"i.io general faq api What are the time periods I can use for Exchange Rates and OHLCV.   What are the time periods I can use for Exchange Rates and OHLCV? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer EMS Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What is the rate limit for EMS Trading API?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQAPIWhat are the time periods I can use for Exchange Rates and OHLCV?What are the time periods I can use for Exchange Rates and OHLCV?For Exchange Rates historical timeseries data:Time unitPeriod identifiersSecond1SEC, 2SEC, 3SEC, 4SEC, 5SEC, 6SEC, 10SEC, 15SEC, 20SEC, 30SECMinute1MIN, 2MIN, 3MIN, 4MIN, 5MIN, 6MIN, 10MIN, 15MIN, 20MIN, 30MINHour1HRS, 2HRS, 3HRS, 4HRS, 6HRS, 8HRS, 12HRSDay1DAY, 2DAY, 3DAY, 5DAY, 7DAY, 10DAYYou can also get a full list of supported time periods available for requesting exchange rates historical timeseries data by using this request:https://rest.coinapi.io/v1/exchangerate/history/periodsFor OHLCV timeseries data:Time unitPeriod identifiersSecond1SEC, 2SEC, 3SEC, 4SEC, 5SEC, 6SEC, 10SEC, 15SEC, 20SEC, 30SECMinute1MIN, 2MIN, 3MIN, 4MIN, 5MIN, 6MIN, 10MIN, 15MIN, 20MIN, 30MINHour1HRS, 2HRS, 3HRS, 4HRS, 6HRS, 8HRS, 12HRSDay1DAY, 2DAY, 3DAY, 5DAY, 7DAY, 10DAYMonth1MTH, 2MTH, 3MTH, 4MTH, 6MTHYear1YRS, 2YRS, 3YRS, 4YRS, 5YRSYou can also get a full list of supported time periods available for requesting OHLCV timeseries data by using this request:https://rest.coinapi.io/v1/ohlcv/periodsWas this section helpful?12345PreviousWhat are the restrictions on usage of real-time protocols?NextWhat happens if I exceed my plan’s REST API daily request limit?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/api/What-are-the-time-periods-I-can-use-for-Exchange-Rates-and-OHLCV)"
361,i.io naas api bitcoin Methods listReceivedByAddress,"i.io naas api bitcoin Methods listReceivedByAddress.   listReceivedByAddress | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodslistReceivedByAddressOn this pagelistReceivedByAddressOverview​The 'listReceivedByAddress' method allows you to retrieve a list of all the received transactions by a specific address. This method is essential for tracking the transactions and managing the wallet effectively.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""listReceivedByAddress"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""listReceivedByAddress\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""listReceivedByAddress"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""2.0"", ""method"": ""listReceivedByAddress"", ""params"": [], ""id"": 1})headers = { 'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type': 'application/json', 'accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""listReceivedByAddress"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) {console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""listReceivedByAddress"",""params"": [],""id"":1}`) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"") req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""method"": ""listReceivedByAddress"", ""params"": [], ""id"": 1})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""listReceivedByAddress\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​address (string): The receiving address.minConfirmations (numeric): The minimum number of confirmations a transaction must have to be included in the list.includeEmpty (boolean): Whether to include addresses that haven't received any payments.includeWatchOnly (boolean): Only returns true if imported addresses were involved in the transaction.Response​Was this section helpful?12345PreviouskeypoolrefillNextlistaddressgroupingsOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/listReceivedByAddress)"
362,i.io naas api ethereum Methods getBlockByRoot,"i.io naas api ethereum Methods getBlockByRoot.   getBlockByRoot | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodsgetBlockByRootOn this pagegetBlockByRootOverview​The 'getBlockByRoot' methodRequest​{ ""method"": ""getBlockByRoot"", ""params"": [""block_root""], ""id"": 1, ""jsonrpc"": ""2.0""}Request Parameters​'block_root' (string): The root of the Ethereum block you wish to retrieve.Response​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": { ""block_root"": ""value"", ""block_details"": ""..."" // other block details }}Was this section helpful?12345PreviousgetBeaconBlocksAttestationsNextgetTxPoolStatusOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/getBlockByRoot)"
363,i.io general faq general How to get more than 100 items in response,"i.io general faq general How to get more than 100 items in response.   How to get more than 100 items in response? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralHow to get more than 100 items in response?How to get more than 100 items in response?The number of items in the response is limited to the value of the limit parameter. The default value of this parameter is 100. The maximum is 100,000, if the parameter is used then every 100 output items are counted as one request.Was this section helpful?12345PreviousHow to check historical API usage?NextHow to handle order book flat files can go back in time?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/How-to-get-more-than-100-items-in-response)"
364,i.io ems api self hosted guide,"i.io ems api self hosted guide.   EMS - Self Hosted Guide | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIREST APIWebSocket APIFIX APISelf Hosted GuideSelf Hosted GuideOn this pageEMS - Self Hosted GuideThis section will provide information related to self-hosted deployment of Execution Management System API (EMS API) software.infoThe key words ""MUST"", ""MUST NOT"", ""REQUIRED"", ""SHALL"", ""SHALL NOT"", ""SHOULD"", ""SHOULD NOT"", ""RECOMMENDED"", ""MAY"", and ""OPTIONAL"" in this document are to be interpreted as described in RFC 2119.Configuration Manual​This section will provide the necessary information how to configure the CoinAPI EMS software.Configuration keys and values​Configuration keys:Are case-insensitive. For example, ExchangeId and exchangeid are treated as equivalent keys.If a key and value is set in more than one configuration providers, the value from the last provider added is used.Using array indices in configuration keys are allowed.Hierarchical keysWithin the Configuration API, a colon separator (:) works on all platforms.In environment variables, a colon separator may not work on all platforms. A double underscore, __, is supported by all platforms and is automatically converted into a colon :.Configuration values:Are strings.Null values can't be stored in configuration.Configuration providers​You can set the values of configuration parameters for the components using the following providers (in case of collision for any specific key):Command-line argumentsEnvironment variablesEnvironment variables​To configure specific parameters using host or container environment variable, you must replace all occurrences of : with __ in the configuration parameter key, this is because the : separator doesn't work with environment variable hierarchical keys on all platforms. __, the double underscore, is:Supported by all platforms. For example, the : separator is not supported by Bash, but __ is.Automatically replaced by a :For example, to set the value of the configuration parameter OEML:ExchangeId to BITSTAMP you would need to set the environment variable named OMS__ExchangeId to BITSTAMP.Command-line arguments​You can set the configuration parameters by providing the arguments to the application executable.The following example sets keys and values using the =: OEML:ExchangeId=BITSTAMP The following example sets keys and values using the /: /OEML:ExchangeId=BITSTAMP The following example sets keys and values using the --: --OEML:ExchangeId=BITSTAMP or --OEML:ExchangeId BITSTAMPThe key value:Must follow =, or the key must have a prefix of -- or / when the value follows a space.Isn't required if = is used. For example, MySetting=.Within the same command, don't mix command-line argument key-value pairs that use = with key-value pairs that use a space.Configuration parameters​KeyTypeDescriptionIs Required?Default valueOEML:ServiceDiscoveryModestringType of backend used for service discovery. Supported values: COINAPI or CONSULNoCOINAPIOEML:LocalAddressstringOverride the local IP address advertised to other components. The value of this parameter is used in the CoinAPI Service Discovery mode. The API is listening to all the IP addresses available. However, the software still needs a valid single IP address accessible to other components, we will use this address for advertising in the CoinAPI Service Discovery mode only.NoIP of the first IPv4 network interface.OEML:PortintSet the TCP Port for REST and WebSocket API.NoRandomly selected free port.OEML:FIX:SocketAcceptPortintFIX Acceptor/Server PortNo3401OEML:ExchangeIdstringExchange identifier and optional tag identifying specific account configured when the software will be managing multiple accounts on the same exchange; for eg:BITSTAMPBITSTAMP/7c177641-74bd-4dbe-9b01-2497c12a5f70BITSTAMP/2574. Allowed separators between the exchange identifier and the tag: ~/.,:;\!@#$%^&*-_+= .YesCoinAPI:ApiKeystringCoinAPI API KeyYesCoinAPI:UrlReststringCoinAPI REST API EndpointNohttps://rest.coinapi.io/CoinAPI:RatesUpdateIntervalSecondsintUpdate interval of the exchange rates in seconds from CoinAPI (using /v1/exchangerate/USD endpoint). 0 mean that rates will be pulled just on startup once, and -1 mean that they will not be downloaded at all.No3600OD:PublicApiKeystringCustomer Public Key for the ExchangeConditionallyOD:PrivateApiKeystringCustomer Private Key for the ExchangeConditionallyOD:PassPhrasestringCustomer passphrase for the ExchangeConditionallyOD:CustomerIdstringCustomerId of customer exchange accountConditionallyOD:UsernamestringExchange client usernameConditionallyOD:PasswordstringExchange client passwordConditionallyOD:HoststringExchange API endpoint hostConditionallyOD:PortintExchange API endpoint portConditionallyOD:RestApiUrlstringExchange REST API UrlConditionallyinfo""(ExchangeId)"" must be replaced with the value of ""OEML:ExchangeId""Exchange conditional parameters​The table below explains the conditional parameters by the OEML:ExchangeId value. For example when OEML:ExchangeId == ""BITSTAMP"" then OEML:Exchanges:BITSTAMP:CustomerId is required.OEML:ExchangeIdRequired parametersOptional parametersBINANCEOD:PublicApiKey OD:PrivateApiKeyBINANCEJEOD:PublicApiKey OD:PrivateApiKeyBINANCEUSOD:PublicApiKey OD:PrivateApiKeyBINANCEUATOD:PublicApiKey OD:PrivateApiKeyBINANCEFTSOD:PublicApiKey OD:PrivateApiKeyBINANCEFTSUATOD:PublicApiKey OD:PrivateApiKeyBINANCEFTSCOD:PublicApiKey OD:PrivateApiKeyBINANCEFTSCUATOD:PublicApiKey OD:PrivateApiKeyBINANCEOPTVOD:PublicApiKey OD:PrivateApiKeyBINANCEOPTVUATOD:PublicApiKey OD:PrivateApiKeyBITFINEXOD:PublicApiKey OD:PrivateApiKeyBITMEXOD:PublicApiKey OD:PrivateApiKeyBITMEXUATOD:PublicApiKey OD:PrivateApiKeyBITSTAMPOD:PublicApiKey OD:PrivateApiKey OD:CustomerIdBLOCKCHAINEXCHANGEOD:PublicApiKey OD:PrivateApiKeyCOINBASEOD:PublicApiKey OD:PrivateApiKey OD:PassPhraseOD:Host OD:RestApiUrlGEMINIOD:PublicApiKey OD:PrivateApiKeyHITBTCOD:PublicApiKey OD:PrivateApiKeyKRAKENFTSOD:PublicApiKey OD:PrivateApiKeyKRAKENOD:PublicApiKey OD:PrivateApiKeyPOLONIEXOD:PublicApiKey OD:PrivateApiKeyLMAXDIGITALOD:Username OD:Password OD:Host OD:PortLMAXDIGITALUATOD:Username OD:Password OD:Host OD:PortFTXOD:PublicApiKey OD:PrivateApiKeyOD:Host OD:Port OD:RestApiUrlFTXUSOD:PublicApiKey OD:PrivateApiKeyOD:Host OD:Port OD:RestApiUrlDERIBITOD:ClientId OD:ClientSecretOD:Host OD:PortDERIBITUATOD:ClientId OD:ClientSecretOD:Host OD:PortDYDXOD:ApiKey OD:ApiSecret OD:ApiPassphrase OD:StarkPrivateKeyOD:NetworkType OD:LimitFeeExchange specific recommendations​Kraken Futures KRAKENFTS​Whitelist your IP addresses​Whitelisting your IP addresses will give you the lowest possible latency and most stable connection to exchange servers in AWS EU-West 1. Whitelisting works by allowing you to skip CloudFlare. Here is an article on how to whitelist your IP addresses.Consul Configuration (optional)​The end result should look like this:{ ""datacenter"": ""hq"", ""data_dir"": ""C:\\consul\\data-hq"", ""log_level"": ""INFO"", ""server"": false, ""retry_join"": [ ""server-a"", ""server-b"", ""server-c"" ], ""ui"": true, ""http_config"": { ""response_headers"": {  ""Access-Control-Allow-Origin"": ""*"" } }}If your deployment including optional Consul Cluster for the Service Discovery layer then it's required to change CORS settings of the local Consul client on the hosts where the EMS WebUI will be used. This step is necessary as we need to discover the address of the EMS API component.""http_config"": { 	""response_headers"": { 	 ""Access-Control-Allow-Origin"": ""*"" 	} }Installation Manual​This section will provide the necessary information how to install the CoinAPI EMS software.Service discovery​The CoinAPI EMS API is capable of automaticaly detecting all your instances of CoinAPI EMS Edge service. This service discovery works by the one of the following methods:Using the CoinAPI EMS Central Cloud, every time you start CoinAPI EMS Edge, it will register automatically in our central cloud infrastructure.Using the HashiCorp Consul Cluster.Using the CoinAPI EMS Central Cloud is a default, simple, and straightforward method. Only one disadvantage of using the CoinAPI EMS Central Cloud over Consul Cluster is that we do not measure the latencies if one order destination is registered more than one time in the cluster for failover scenarios. Then CoinAPI EMS Central Cloud will connect to the last started exchange; however, when using the Consul Cluster, it will connect to the order destination in the closest proximity data center to the datacenter where CoinAPI EMS API is run.Running using an executable​To install the precompiled binary, download the latest version of the executable matching your system architecture from http://coinapi-releases.s3-website-us-east-1.amazonaws.com/Our software is currently packaged as a zip file, and we currently do not plan to distribute it another way. Once the zip is downloaded, unzip it into any directory. The self-contained binary inside is necessary to run EMS, and any additional files are not required to run the software.If you intend to access it from the command-line, make sure to place the binary somewhere on your PATH. You may require to add the executable to the system startup with all necessary parameters if you want the software to be started automatically after restart.Running on Docker​# example using only command line parametersdocker run -d --name=HITBTC --restart=always --net=host coinapi/oeml-api --OEML:ExchangeId HITBTC \ --OD:PublicApiKey _public_api_key_ --OD:PrivateApiKey _private_api_key_ \ --CoinAPI:ApiKey _coinapi_api_key_ docker run -d --restart=always --net=host coinapi/oeml-webuidocker run --net=host coinapi/oeml-cli# example with enviroment variables filecat > oeml.env << EOFCoinAPI__ApiKey=_coinapi_api_key_OD__PublicApiKey=_public_api_key_OD__PrivateApiKey=_private_api_key_EOFdocker run -d --name=HITBTC --restart=always --net=host coinapi/oeml-api --env-file oeml.env --OEML:ExchangeId HITBTCdocker run -d --name=BITFINEX --restart=always --net=host coinapi/oeml-api --env-file oeml.env --OEML:ExchangeId BITFINEXdocker run -d --name=OEML_EDGE --restart=always --net=host coinapi/oeml-api --env-file oeml.envOur software is listed in public docker repository. To run the software on docker, use the following images:coinapi/oeml-apicoinapi/oeml-clicoinapi/oeml-webuiTo pass the configuration parameters using the environment variables (more information about this feature is available in the Configuration Manual section of this documentation), the environment variables must be provided into the container and not set on the host machine.It's a good practice to lock itself into the specific version. To do that you can supply the version after image name and : separator, e.g. coinapi/oeml-api:1.1255Running on Kubernetes Cluster​Our software is compatible with Kubernetes, and you can quickly run it on the cluster using our (Helm Charts)[https://github.com/coinapi/helm-charts]. Follow steps below to perform quickstart deployment.Add the Repository to Helm​$ helm repo add coinapi-charts https://coinapi.github.io/helm-charts/$ helm repo updateHelm chart configuration​The example config below will create two api pods, a composite pod, and a webui pod. One exchange account corresponds to one entry in the values.yaml file. That means, for multiple exchange accounts, please add one config entry with the matching API keys for each account i.e. binance-01, binance-02, kraken-01, kraken-02, etc. A complete list of all supported exchanges can be found in the API documentation.cat > values.yaml << EOF# Using WebUI (oeml-api/values.yaml)webUI: enabled: true# Using composite (oeml-api/values.yaml)oemlCompositeAPI: enabled: true# Setting the CoinAPI key (oeml-api/values.yaml)extraEnv: - name: CoinAPI__ApiKey value: ""YOUR_COINAPI_APIKEY""# Specify listing of the accounts that EMS should manage (oeml-api/acct-dev.yaml)accounts: # Binance spot market - name: ""binance"" env:  - name: OEML__ExchangeId  value: ""BINANCE""  - name: OD__PublicApiKey  value: ""XXX""  - name: OD__PrivateApiKey  value: ""YYY""   # Binance spot testnet - name: ""binanceuat"" env:  - name: OEML__ExchangeId  value: ""BINANCEUAT""  - name: OD__PublicApiKey  value: ""XXX""  - name: OD__PrivateApiKey  value: ""YYY""  EOFInstall ems-api latest version​$ helm install oeml-api coinapi-charts/oeml-api -f values.yamlInstall ems-api custom version​Version listing available here. $ helm install oeml-api coinapi-charts/oeml-api -f values.yaml --set oemlAPI.tag={version}Verify installation​kubectl get pods | grep oemlExpected output:oeml-api-binance-7754fc95cc-x2gkk  1/1  Runningoeml-api-binance-test-757c8bbd95-2mxd5 1/1  Runningoeml-api-composite-d5688f8f6-csbwh  1/1  Runningoeml-webui-685cd94d77-hq68j    1/1  Running Inspect​Inspect binance api pod:kubectl logs oeml-api-binance-7754fc95cc-x2gkkInspect testnet api pod:kubectl logs oeml-api-binance-test-757c8bbd95-2mxd5Expected output for both api pods:[02:22:04 WRN] Overriding address(es) 'http://+:80'. Bindingto endpoints defined in UseKestrel() instead.Hosting environment: ProductionContent root path: /appNow listening on: http://[::]:80Application started. Press Ctrl+C to shut down.List services​kubectl get svc | grep oemlExpected output:oeml-api-binance  ClusterIP 10.112.9.119 <none>  80/TCPoeml-api-binance-test ClusterIP 10.112.15.239 <none>  80/TCPoeml-api-composite  NodePort 10.112.8.159 <none>  80:30578/TCPoeml-webui    NodePort 10.112.4.195 <none>  80:30857/TCP    Connect to EMS API​The composite pod gives unified access to all connected exchanges & accounts. Therefore, the oeml-api-composite is the only pod required to connect to the EMS system.Connect from within the cluster​Deploy a pod with a shellkubectl apply -f https://k8s.io/examples/application/shell-demo.yamlVerify the shell pod is onlinekubectl get pod shell-demoGet api-composite IP address:kubectl get svc | grep oeml-api-composite>oeml-api-composite  NodePort 10.112.8.159 Exec into the podkubectl exec --stdin --tty shell-demo -- /bin/bashCURL IP of the composite pod.curl 10.112.8.159/v1/balances --header 'Accept: application/json'CURL DNS of the composite pod.DNS name may vary depending on cloud provider. curl oeml-api-composite.default.svc.cluster.local/v1/balances --header 'Accept: application/json'Expected output:[ { ""type"": ""BALANCE_SNAPSHOT"", ""exchange_id"": ""BINANCE"", }, { ""type"": ""BALANCE_SNAPSHOT"", ""exchange_id"": ""BINANCEUAT"", ""data"": [  {  ""id"": ""XRP"",  ""asset_id_exchange"": ""XRP"",  ""asset_id_coinapi"": null,  ""balance"": 50000.00000000,  ""available"": 50000.00000000,  ""locked"": 0.00000000,  ""traded"": 0.0,  ""last_updated_by"": ""EXCHANGE"",  ""rate_usd"": null  },  // more entries  ] }]Exit the shell podexit Delete shell podkubectl delete pod shell-demoConnect cluster to localhost​Port-forward from cluster port 80 to localhost port 8080 kubectl port-forward service/oeml-api-composite 8080:80Expected output:Forwarding from 127.0.0.1:8080 -> 80Forwarding from [::1]:8080 -> 80CURL account balance.curl localhost:8080/v1/balances --header 'Accept: application/json'Expected output:[ { ""type"": ""BALANCE_SNAPSHOT"", ""exchange_id"": ""BINANCE"", }, { ""type"": ""BALANCE_SNAPSHOT"", ""exchange_id"": ""BINANCEUAT"", ""data"": [  {  // more entries  },  ] }]Management Guide​This section will provide the necessary information on how to manage the CoinAPI EMS software.To run the EMS cluster, you will need to:(optional) Deploy the HashiCorp Consul Cluster for Service Discovery, if you don't want or can't use our included free of charge discovery service.Run the CoinAPI EMS Edge software instance per each managed exchange account.Run single or multiple instances of the CoinAPI EMS API software. If the lowest latency is required, start the instance per location or server where the API will is used to minimize latency between API client and the EMS API Server.(optional) Run the CoinAPI EMS WebUI to have GUI to the cluster.Done! All the exchange accounts can be managed using the single API.Installation​CoinAPI EMS can be installed using several approaches:Running using an executableRunning on DockerRunning on Kubernetes ClusterOur software is compiled for the following architectures:linux-x64linux-arm64osx-x64osx-arm64win-x64 win-arm64Take a look at the Starter Guide of this documentation for more information how to run the software in the specific conditions.If you can't use any of those, let us know why that is a problem by creating a support case, and we will evaluate the possibility of extending compatibility.Upgrading​Currently, all components are stateless. Upgrading stateless components is limited to replacing the binaries or running the new docker image.Versioning & Compatibility​Our software is versioned using the Major.Minor(+branch) pattern. Major version number is incremented manually on our side, and its scope is for the EMS project. The Minor version number is incremented on every release automatically separately for every component.You can assume that our software components will work together when their Major version numbers are the same.Time synchronization​EMS highly depends on the current time to perform actions and correctly timestamp the data for real-time trading, risk management, compliance, or reporting.For the time synchronization we strongly recommending:chrony (Linux, FreeBSD, NetBSD, Solaris, macOS)w32tm (Windows)If you can't use any of the programs above for reasons like:Software has not been ported to my operating system.Software doesn't have a driver or it's not compatible with my hardware reference clock, and I can't use other programs like gpsd or ntp-refclock to provide reference time via the SHM or SOCK interface.Then it's worth trying solutions below (ordered from the best to worst options):ntp (Linux, FreeBSD, NetBSD, OpenBSD, Solaris, macOS, Windows)openntpd (Linux, FreeBSD, NetBSD, OpenBSD, Solaris, macOS)If need the sub-millisecond or sub-nanosecond accuracy take a look there:Meinberg Radio ClocksWhite RabbitLimits​This section will list all known software limitations.Limit descriptionLimit valueMaximum number of managed exchange accounts in a single clusterUnlimitedMaximum number of managed exchange accounts per cluster host when running an executable65,535Maximum number of managed exchange accounts per cluster node when running on Docker or Docker Swarm1024Maximum number of managed exchange accounts per cluster node when running on Kubernetes250Maximum number of managed exchange accounts per cluster node when running on Amazon Elastic Kubernetes Service (EKS)from 4 to 737Maximum number of managed exchange accounts per cluster node when running on Google Kubernetes Engine (GKE)100Maximum number of managed exchange accounts per cluster node when running on Azure Kubernetes Service (AKS)250tipThere is no limit of exchange accounts that can simultaneously be managed using our EMS API.Integrations & Plugins​This section is reserved for Integrations, plugins or other external tools or modules that make it easier to work with EMS API.Prometheus metrics​In this section, we will describe the metrics exposed by the software on the /metrics endpoint. If you are using our Helm chart then ServiceMonitor objects required by Prometheus to pull data are automatically installed by default version of the values file (helm-charts/charts/oeml-api/values.yaml).Published metrics:Metric nameParametersDescriptioncoinapi_oeml_total_open_orderExchangeIdNumber of all orders placed since the start of oemlcoinapi_oeml_open_orderExchangeIdThe current number of open orderscoinapi_oeml_open_order_by_statusExchangeId, StatusCurrent number of order statusescoinapi_oeml_total_order_per_symbolExchangeId, SymbolNumber of orders per symbol since start oemlcoinapi_oeml_open_positionExchangeIdThe current number of open posiotionscoinapi_oeml_balance_totalExchangeId, SymbolCurrent balance - total per symbolcoinapi_oeml_balance_freeExchangeId, SymbolCurrent balance - free per symbolcoinapi_oeml_balance_lockedExchangeId, SymbolCurrent balance - locked per symbolcoinapi_oeml_total_errorExchangeId, ErrorTextTotal error by typecoinapi_oeml_actual_balance_total_usd_by_symbolExchangeId, SymbolActual total balance usd by symbolcoinapi_oeml_total_balance_value_in_usdExchangeIdTotal balance value in dollarscoinapi_oeml_orders_change_status_timeExchangeId, Status1, Status2Orders change status time (time in miliseconds)Deployment​In this section we are listing tools that could be used to deploy or manage our software.Helm chartsArtifact HUBWas this section helpful?12345PreviousMessagesConfiguration ManualConfiguration keys and valuesConfiguration providersConfiguration parametersExchange specific recommendationsConsul Configuration (optional)Installation ManualService discoveryRunning using an executableRunning on DockerRunning on Kubernetes ClusterManagement GuideInstallationUpgradingVersioning & CompatibilityTime synchronizationLimitsPrometheus metricsDeploymentCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/self-hosted-guide)"
365,i.io faq api Do you accept bank or wire transfers,"i.io faq api Do you accept bank or wire transfers.   Do you accept bank or wire transfers? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQAPIDo you accept bank or wire transfers?Do you accept bank or wire transfers?We only accept bank and wire transfers for annual subscriptions.For monthly subscriptions, only credit card payments are accepted.Was this section helpful?12345PreviousAPINextDo you offer Trading API?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/api/Do-you-accept-bank-or-wire-transfers)"
366,i.io naas api Bitcoin Methods,i.io naas api Bitcoin Methods.   Page Not Found | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyPage Not FoundWe could not find what you were looking for.Please contact the owner of the site that linked you to the original URL and let them know their link is broken.Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/Bitcoin/Methods)
367,i.io market data rest api quotes quotes historical data,"i.io market data rest api quotes quotes historical data.   Historical data | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcvOrder BookOrder Book L3Quotes Current data Current quotes for a specific symbol Historical data Latest data Latest quote updates for a specific symbolTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIQuotes Historical data Historical dataGET /v1/quotes/:symbol_id/historyGet historical quote updates within requested time range, returned in time ascending order.Path Parameterssymbol_id string requiredSymbol identifier for requested timeseries (from the Metadata -> Symbols)Query Parameterstime_start stringStarting time in ISO 8601 (required)time_end stringTimeseries ending time in ISO 8601 (optional, if not supplied then the data is returned to the end or when result elements count reaches the limit)limit int32Default value: 100Amount of items to return (optional, minimum is 1, maximum is 100000, default value is 100, if the parameter is used then every 100 output items are counted as one request)Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the quote.time_coinapi date-timeThe CoinAPI time when the quote was received.ask_price double nullableThe best asking price.ask_size double nullableThe volume resting on the best ask. If the value is equal to zero, then the size is unknown.bid_price double nullableThe best bidding price.bid_size double nullableThe volume resting on the best bid. If the value is equal to zero, then the size is unknown.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.269Z"", ""time_coinapi"": ""2024-07-16T12:55:05.269Z"", ""ask_price"": 0, ""ask_size"": 0, ""bid_price"": 0, ""bid_size"": 0 }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124 }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124 }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the quote.time_coinapi date-timeThe CoinAPI time when the quote was received.ask_price double nullableThe best asking price.ask_size double nullableThe volume resting on the best ask. If the value is equal to zero, then the size is unknown.bid_price double nullableThe best bidding price.bid_size double nullableThe volume resting on the best bid. If the value is equal to zero, then the size is unknown.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.269Z"", ""time_coinapi"": ""2024-07-16T12:55:05.269Z"", ""ask_price"": 0, ""ask_size"": 0, ""bid_price"": 0, ""bid_size"": 0 }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124 }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124 }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the quote.time_coinapi date-timeThe CoinAPI time when the quote was received.ask_price double nullableThe best asking price.ask_size double nullableThe volume resting on the best ask. If the value is equal to zero, then the size is unknown.bid_price double nullableThe best bidding price.bid_size double nullableThe volume resting on the best bid. If the value is equal to zero, then the size is unknown.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.269Z"", ""time_coinapi"": ""2024-07-16T12:55:05.269Z"", ""ask_price"": 0, ""ask_size"": 0, ""bid_price"": 0, ""bid_size"": 0 }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124 }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124 }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the quote.time_coinapi date-timeThe CoinAPI time when the quote was received.ask_price double nullableThe best asking price.ask_size double nullableThe volume resting on the best ask. If the value is equal to zero, then the size is unknown.bid_price double nullableThe best bidding price.bid_size double nullableThe volume resting on the best bid. If the value is equal to zero, then the size is unknown.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.269Z"", ""time_coinapi"": ""2024-07-16T12:55:05.269Z"", ""ask_price"": 0, ""ask_size"": 0, ""bid_price"": 0, ""bid_size"": 0 }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124 }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124 }]Loading...Was this section helpful?12345Previous Current quotes for a specific symbolNext Latest dataCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/quotes/quotes-historical-data)"
368,i.io general faq account How can I get an invoice or receipt,"i.io general faq account How can I get an invoice or receipt.   How can I get an invoice or receipt? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountHow I can update my credit card / billing information?How can I change my CoinAPI account's email address?How can I get an invoice or receipt?How do I make an account?I want to change my account's name?Managing Team MembersCan I add other users to my account?How do I get an additional API key?APIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQCustomer AccountHow can I get an invoice or receipt?How can I get an invoice or receipt?You can download past invoices or receipts using our Customer Portal Invoices section. Before downloading your documents, make sure all company details are correct and up to date in the Billing Information section as they will appear on the PDFs.Invoices and other billing-related documents or notifications are delivered automatically to all Billing Contacts defined in the Billing Information section of the Customer Portal.To access the Invoices, you need the first login on our website (https://customerportal.coinapi.io/login) using the email associated with your subscription, then simply navigate to Invoices. Only emails related to active or canceled paid subscriptions can log into the Customer Portal, unless the Product Support Team created the Account.Was this section helpful?12345PreviousHow can I change my CoinAPI account's email address?NextHow do I make an account?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/account/How-can-I-get-an-invoice-or-receipt)"
369,i.io how to guides get historical ohlcv data using coinapi,"i.io how to guides get historical ohlcv data using coinapi.   Get Historical OHLCV Data Using CoinAPI | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesAcquire exchange rates with different programming languagesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPICreating a historical crypto price chart using CoinAPI and D3.jsFetching market data with KNIMEGet Historical OHLCV Data Using CoinAPIGet symbol funding rate metric data using CoinAPIImport API into PostmanImport data to Google Sheets/ExcelReal-time data visualization with javascriptReal-time trades stream using WebSocket with different languagesRetrieve and analyze crypto order book data using a cryptocurrency APITrading Essentials: QuickstartMarket Data APIEMS APIFAQCustomer PortalChangelogHow-to guidesGet Historical OHLCV Data Using CoinAPIOn this pageGet Historical OHLCV Data Using CoinAPIIntroduction​This tutorial guides you through getting historical OHLCV data using CoinAPI. CoinAPI offers extensive historical data across multiple cryptocurrency markets, which is critical for backtesting trading strategies, performing quantitative research, or even creating visualizations. We will cover how to interact with our historical data endpoints using Python, JavaScript, and Java.Understanding CoinAPI Endpoints​CoinAPI provides several endpoints for accessing historical data, including:ohlcv/period_id/history: Provides historical OHLCV (Open, High, Low, Close, Volume) data for specified periods.trades/symbol_id/history: Returns historical trades.quotes/symbol_id/history: Provides historical quotes.Remember, you need to replace period_Id and symbol_id with your desired period and symbol respectively.Python Example​Using Python, we can use the requests library to interact with CoinAPI. If you don't have the requests library installed, you can add it using pip:pip install requestsHere's an example:import requestsdef fetch_ohlcv(): url = ""https://rest.coinapi.io/v1/ohlcv/BINANCE_SPOT_ETH_BTC/history?period_id=1MTH&time_start=2023-03-01T00:00:00"" headers = { ""X-CoinAPI-Key"": ""YOUR_API_KEY"" } # Replace with your API key response = requests.get(url, headers=headers) # Check if the response is successful if response.status_code == 200:  if response.content:   return response.json()  else:   print(""Response is empty."")   return None else:  # Handle other HTTP status codes  print(f""Failed to fetch data. Status code: {response.status_code}"")  return None print(fetch_ohlcv())This script fetches the monthly OHLCV data for the ETH/BTC trading pair from the BINANCE exchange. Here, BINANCE serves as the exchange platform, with ETH being the base asset and BTC as the quote asset.Note: Don't forget to replace YOUR-API-KEY with your actual API key.JavaScript Example​Make sure to install the nodejs runtime environment before. In JavaScript, we can use the fetch API for sending requests to CoinAPI:First, add package.json with node-fetch dependency:{ ""type"": ""module"", ""dependencies"": { ""node-fetch"": ""^3.3.1"" }}Add the following code and run npm install to install dependencies.import fetch from 'node-fetch';fetch('https://rest.coinapi.io/v1/ohlcv/BINANCE_SPOT_ETH_BTC/history?period_id=1MTH&time_start=2023-03-01T00:00:00', { headers: { ""X-CoinAPI-Key"": ""YOUR_API_KEY"" // Replace with your API key }}).then(response => response.json()).then(data => console.log(data)).catch(error => console.error('Error:', error));This script fetches the monthly OHLCV data for the ETH/BTC trading pair from the BINANCE exchange. Here, BINANCE serves as the exchange platform, with ETH being the base asset and BTC as the quote asset.Note: Don't forget to replace YOUR-API-KEY with your actual API key.Java Example​In Java, we can use the HttpURLConnection class to send HTTP requests:import java.net.HttpURLConnection;import java.net.URL;import java.io.BufferedReader;import java.io.InputStreamReader;public class Main { private static final String API_KEY = ""YOUR-API-KEY""; // Replace with your API key public static void main(String[] args) throws Exception {  URL url = new URL(""https://rest.coinapi.io/v1/ohlcv/BINANCE_SPOT_ETH_BTC/history?period_id=1MTH&time_start=2023-03-01T00:00:00"");  HttpURLConnection conn = (HttpURLConnection) url.openConnection();  conn.setRequestProperty(""X-CoinAPI-Key"", API_KEY);  BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()));  String inputLine;  StringBuffer content = new StringBuffer();  while ((inputLine = in.readLine()) != null) {   content.append(inputLine);  }  in.close();  conn.disconnect();  System.out.println(content.toString()); }}This script fetches the monthly OHLCV data for the ETH/BTC trading pair from the BINANCE exchange. Here, BINANCE serves as the exchange platform, with ETH being the base asset and BTC as the quote asset.Note: Don't forget to replace YOUR-API-KEY with your actual API key.Best Practices​Store API keys securely: never hard-code API keys. Instead, store them in secure configuration files or environment variables.Handle rate limiting: be aware of CoinAPI's rate limits and handle 429 HTTP status codes gracefully in your application.Efficient data fetching: use query parameters like time_start and limit effectively to get the data you need without excess.Troubleshooting​In case you face any issues, ensure the following:Your API key is correct and has the necessary permissions.You are not exceeding the rate limit for your account type.You are using the correct endpoint with proper request headers.The symbol and period IDs you are using are valid and in the correct format.You have the correct libraries or dependencies installed, and you're using a supported version of the language.For more information, you can check REST API OHLVC docsWas this section helpful?12345PreviousFetching market data with KNIMENextGet symbol funding rate metric data using CoinAPIIntroductionUnderstanding CoinAPI EndpointsPython ExampleJavaScript ExampleJava ExampleCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/how-to-guides/get-historical-ohlcv-data-using-coinapi)"
370,i.io faq billing and subscriptions,i.io faq billing and subscriptions.   Billing and Subscriptions | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIBilling and SubscriptionsCan I cancel my subscription anytime?Can I still use my API key if I cancel my subscription?How to reactivate my canceled subscription?How to subscribe to the API?How to upgrade/downgrade my subscription?Security and PrivacyCustomer PortalChangelogFAQBilling and SubscriptionsBilling and SubscriptionsWas this section helpful?12345PreviousDocumenting Connectivity issuesNextCan I cancel my subscription anytime?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/billing-and-subscriptions)
371,i.io naas api ethereum Methods trace transaction,"i.io naas api ethereum Methods trace transaction.   trace_transaction | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodstrace_transactionOn this pagetrace_transactionOverview​The 'trace_transaction' methodallows users to retrieve internal transactions that were triggered during the main transaction. This is particularly useful for understanding the entire flow of a transaction, especially when smart contracts are involved.Request​{ ""method"": ""trace_transaction"", ""params"": [""0x...""], // Transaction hash ""id"": 1, ""jsonrpc"": ""2.0""}Request Parameters​method (string): The name of the method, in this case, ""trace_transaction"".params (array): An array containing the transaction hash you wish to trace.id (integer): A unique identifier for the request.jsonrpc (string): The version of the JSON-RPC protocol, typically ""2.0"".Response​{ ""id"": 1, ""jsonrpc"": ""2.0"", ""result"": [ // Array of trace objects ]}Errors​Invalid Request: This error is returned if the request format is incorrect.Internal Error: This error is returned if there's a server-side issue processing the request.Rate Limits​Please note that there are rate limits applied to the API to ensure fair usage. Free-tier users are limited to 100 requests per day, while premium users can make up to 1000 or more requests per day.Support​If you encounter any issues or have further questions regarding the eth_getBlockByHash method, please contact our support team at [email protected].Was this section helpful?12345Previoustrace_replayTransactionNexttxpool_contentOverviewRequestRequest ParametersResponseErrorsRate LimitsSupportCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/trace_transaction)"
372,i.io naas api bitcoin Methods getblocktemplate,"i.io naas api bitcoin Methods getblocktemplate.   getblocktemplate | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetblocktemplateOn this pagegetblocktemplateOverview​The 'getblocktemplate' method method returns data needed to construct a block to work on.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""getblocktemplate"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""getblocktemplate\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""getblocktemplate"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""2.0"", ""method"": ""getblocktemplate"", ""params"": [], ""id"": 1})headers = { 'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type': 'application/json', 'accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""getblocktemplate"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) {console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""getblocktemplate"",""params"": [],""id"":1}`) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"") req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""method"": ""getblocktemplate"", ""params"": [], ""id"": 1})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""getblocktemplate\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​template_request (json object, optional, default={})Response​{ ""result"": null, ""error"": { ""code"": -8, ""message"": ""getblocktemplate must be called with the segwit rule set (call with {\""rules\"": [\""segwit\""]})"" }, ""id"": 1}Was this section helpful?12345PreviousgetblockstatsNextgetchaintipsOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getblocktemplate)"
373,i.io naas api ethereum Methods eth chainId,"i.io naas api ethereum Methods eth chainId.   eth_chainID | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_chainIDOn this pageeth_chainIdOverview​The 'eth_chainId' provided is always aligned with the data in the latest recognized head block. This guarantees that users of this RPC method can consistently utilize the fetched data to authenticate transactions based on the head.If the recognized head block lacks a specified chain ID, the client will interpret calls to 'eth_chainId' as unsupported and will respond with an appropriate error.For reliable chain identification, it's advised to prioritize 'eth_chainId' over 'net_version'.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'content-type: application/json' \  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data '{ ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_chainId""}'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"", ""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_chainId\""}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"",CURLOPT_RETURNTRANSFER => true,CURLOPT_ENCODING => """",CURLOPT_MAXREDIRS => 10,CURLOPT_TIMEOUT => 30,CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,CURLOPT_CUSTOMREQUEST => ""POST"",CURLOPT_POSTFIELDS => json_encode(['id' => 1,'jsonrpc' => '2.0','method' => 'eth_chainId']),CURLOPT_HTTPHEADER => [""accept: application/json"",""content-type: application/json"",""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY""],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) {echo ""cURL Error #:"" . $err;} else {echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_chainId""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text)const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key' : '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({id: 1, jsonrpc: '2.0', method: 'eth_chainId'})};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_chainId\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://eth-mainnet.g.alchemy.com/v2/docs-demo"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_chainId\""}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_chainId\""}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Response​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": ""0x1""}A hexadecimal of the current chain ID.Was this section helpful?12345Previouseth_callNexteth_coinbaseOverviewRequestResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_chainId)"
374,i.io flat files api data types link to limit book snapshots doc,i.io flat files api data types link to limit book snapshots doc.   Page Not Found | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyPage Not FoundWe could not find what you were looking for.Please contact the owner of the site that linked you to the original URL and let them know their link is broken.Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/flat-files-api/data-types/link-to-limit-book-snapshots-doc)
375,i.io flat files api rest api metadata list all exchanges by exchange id,"i.io flat files api rest api metadata list all exchanges by exchange id.   List all exchanges by exchange_id | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyFlat FilesBilling and UsageData & StructureS3 APIPush APIMetadataList all exchanges by exchange_idList all exchangesList of symbols for the exchangePush APIMetadataList all exchanges by exchange_idList all exchanges by exchange_idGET /api/metadata/exchanges/:exchange_idList all exchanges by exchange_idPath Parametersexchange_id string requiredThe ID of the exchange.Responses200successful operationtext/plainapplication/jsontext/jsonSchemaExample (from schema)Example responseSchemaArray [exchange_id string nullableGets or sets the exchange ID.website string nullableGets or sets the website URL of the exchange.name string nullableGets or sets the name of the exchange.data_start string nullableGets the start date of the exchange's data.data_end string nullableGets the end date of the exchange's data.data_quote_start date-time nullableGets or sets the start date of quote data.data_quote_end date-time nullableGets or sets the end date of quote data.data_orderbook_start date-time nullableGets or sets the start date of order book data.data_orderbook_end date-time nullableGets or sets the end date of order book data.data_trade_start date-time nullableGets or sets the start date of trade data.data_trade_end date-time nullableGets or sets the end date of trade data.data_trade_count int64 nullableGets or sets the number of trades.data_symbols_count int64 nullableGets or sets the number of symbols.][ { ""exchange_id"": ""string"", ""website"": ""string"", ""name"": ""string"", ""data_start"": ""string"", ""data_end"": ""string"", ""data_quote_start"": ""2024-07-16T12:55:05.014Z"", ""data_quote_end"": ""2024-07-16T12:55:05.014Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.014Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.014Z"", ""data_trade_start"": ""2024-07-16T12:55:05.014Z"", ""data_trade_end"": ""2024-07-16T12:55:05.014Z"", ""data_trade_count"": 0, ""data_symbols_count"": 0 }][ { ""exchange_id"": ""OKCOIN_CNY"", ""website"": ""https://www.okcoin.cn/"", ""name"": ""OKCoin CNY"", ""data_quote_start"": ""2015-02-15T12:53:50.343+00:00"", ""data_quote_end"": ""2018-03-09T23:34:52.58+00:00"", ""data_orderbook_start"": ""2015-02-15T12:53:50.343+00:00"", ""data_orderbook_end"": ""2018-03-09T23:34:52.58+00:00"", ""data_trade_start"": ""2013-06-12T14:24:24+00:00"", ""data_trade_end"": ""2017-11-01T16:30:39.7077259+00:00"", ""data_symbols_count"": 2 }, { ""exchange_id"": ""HUOBI"", ""website"": ""https://www.huobi.com/"", ""name"": ""Huobi (HBUS)"", ""data_quote_start"": ""2015-03-29T21:46:06.263+00:00"", ""data_quote_end"": ""2019-11-03T18:22:29.1837496+00:00"", ""data_orderbook_start"": ""2015-03-29T21:46:06.263+00:00"", ""data_orderbook_end"": ""2019-11-03T18:23:53.2859878+00:00"", ""data_trade_start"": ""2015-03-29T21:46:08.703+00:00"", ""data_trade_end"": ""2019-11-03T18:21:48.277+00:00"", ""data_symbols_count"": 403 }]SchemaExample (from schema)Example responseSchemaArray [exchange_id string nullableGets or sets the exchange ID.website string nullableGets or sets the website URL of the exchange.name string nullableGets or sets the name of the exchange.data_start string nullableGets the start date of the exchange's data.data_end string nullableGets the end date of the exchange's data.data_quote_start date-time nullableGets or sets the start date of quote data.data_quote_end date-time nullableGets or sets the end date of quote data.data_orderbook_start date-time nullableGets or sets the start date of order book data.data_orderbook_end date-time nullableGets or sets the end date of order book data.data_trade_start date-time nullableGets or sets the start date of trade data.data_trade_end date-time nullableGets or sets the end date of trade data.data_trade_count int64 nullableGets or sets the number of trades.data_symbols_count int64 nullableGets or sets the number of symbols.][ { ""exchange_id"": ""string"", ""website"": ""string"", ""name"": ""string"", ""data_start"": ""string"", ""data_end"": ""string"", ""data_quote_start"": ""2024-07-16T12:55:05.014Z"", ""data_quote_end"": ""2024-07-16T12:55:05.014Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.014Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.014Z"", ""data_trade_start"": ""2024-07-16T12:55:05.014Z"", ""data_trade_end"": ""2024-07-16T12:55:05.014Z"", ""data_trade_count"": 0, ""data_symbols_count"": 0 }][ { ""exchange_id"": ""OKCOIN_CNY"", ""website"": ""https://www.okcoin.cn/"", ""name"": ""OKCoin CNY"", ""data_quote_start"": ""2015-02-15T12:53:50.343+00:00"", ""data_quote_end"": ""2018-03-09T23:34:52.58+00:00"", ""data_orderbook_start"": ""2015-02-15T12:53:50.343+00:00"", ""data_orderbook_end"": ""2018-03-09T23:34:52.58+00:00"", ""data_trade_start"": ""2013-06-12T14:24:24+00:00"", ""data_trade_end"": ""2017-11-01T16:30:39.7077259+00:00"", ""data_symbols_count"": 2 }, { ""exchange_id"": ""HUOBI"", ""website"": ""https://www.huobi.com/"", ""name"": ""Huobi (HBUS)"", ""data_quote_start"": ""2015-03-29T21:46:06.263+00:00"", ""data_quote_end"": ""2019-11-03T18:22:29.1837496+00:00"", ""data_orderbook_start"": ""2015-03-29T21:46:06.263+00:00"", ""data_orderbook_end"": ""2019-11-03T18:23:53.2859878+00:00"", ""data_trade_start"": ""2015-03-29T21:46:08.703+00:00"", ""data_trade_end"": ""2019-11-03T18:21:48.277+00:00"", ""data_symbols_count"": 403 }]SchemaExample (from schema)Example responseSchemaArray [exchange_id string nullableGets or sets the exchange ID.website string nullableGets or sets the website URL of the exchange.name string nullableGets or sets the name of the exchange.data_start string nullableGets the start date of the exchange's data.data_end string nullableGets the end date of the exchange's data.data_quote_start date-time nullableGets or sets the start date of quote data.data_quote_end date-time nullableGets or sets the end date of quote data.data_orderbook_start date-time nullableGets or sets the start date of order book data.data_orderbook_end date-time nullableGets or sets the end date of order book data.data_trade_start date-time nullableGets or sets the start date of trade data.data_trade_end date-time nullableGets or sets the end date of trade data.data_trade_count int64 nullableGets or sets the number of trades.data_symbols_count int64 nullableGets or sets the number of symbols.][ { ""exchange_id"": ""string"", ""website"": ""string"", ""name"": ""string"", ""data_start"": ""string"", ""data_end"": ""string"", ""data_quote_start"": ""2024-07-16T12:55:05.014Z"", ""data_quote_end"": ""2024-07-16T12:55:05.014Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.014Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.014Z"", ""data_trade_start"": ""2024-07-16T12:55:05.014Z"", ""data_trade_end"": ""2024-07-16T12:55:05.014Z"", ""data_trade_count"": 0, ""data_symbols_count"": 0 }][ { ""exchange_id"": ""OKCOIN_CNY"", ""website"": ""https://www.okcoin.cn/"", ""name"": ""OKCoin CNY"", ""data_quote_start"": ""2015-02-15T12:53:50.343+00:00"", ""data_quote_end"": ""2018-03-09T23:34:52.58+00:00"", ""data_orderbook_start"": ""2015-02-15T12:53:50.343+00:00"", ""data_orderbook_end"": ""2018-03-09T23:34:52.58+00:00"", ""data_trade_start"": ""2013-06-12T14:24:24+00:00"", ""data_trade_end"": ""2017-11-01T16:30:39.7077259+00:00"", ""data_symbols_count"": 2 }, { ""exchange_id"": ""HUOBI"", ""website"": ""https://www.huobi.com/"", ""name"": ""Huobi (HBUS)"", ""data_quote_start"": ""2015-03-29T21:46:06.263+00:00"", ""data_quote_end"": ""2019-11-03T18:22:29.1837496+00:00"", ""data_orderbook_start"": ""2015-03-29T21:46:06.263+00:00"", ""data_orderbook_end"": ""2019-11-03T18:23:53.2859878+00:00"", ""data_trade_start"": ""2015-03-29T21:46:08.703+00:00"", ""data_trade_end"": ""2019-11-03T18:21:48.277+00:00"", ""data_symbols_count"": 403 }]Loading...Was this section helpful?12345PreviousMetadataNextList all exchangesCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/flat-files-api/rest-api/metadata/list-all-exchanges-by-exchange-id)"
376,i.io faq general Should we file a ticket every time,"i.io faq general Should we file a ticket every time.   Should we file a ticket every time? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralShould we file a ticket every time?Should we file a ticket every time?Your company should file a ticket every time there is a problem.Our current agreement does not include the SLA on the Service, just the SLA on the Support. In this case when you file a ticket then you have a guarantee that we are working on that, lack of SLA on the Service means that we do not know what is important for your company and does not monitor and are accountable on those specific things as we even not defined them. We have customers where we measure every specific metrics about the feed and because of that knowledge we made architectural decisions to minimize the possibility of breaching this specific SLA, but for other customers they are irrelevant.We are of course monitoring the infrastructure continuously and acting upon issues. We always seeking to optimize processes, because of that we usually not have repeating issues. The same was for this case, actually, there was a data but updated at a lower frequency. We will of course analyze this internally outside this case and seek possible improvement in this area by extending the monitoring set up to include that kind of failures if that will be reasonable.Was this section helpful?12345PreviousREST API empty array/collection response and 550 error explained.NextSome symbols have extra identifiersCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/Should-we-file-a-ticket-every-time)"
377,i.io general faq general Is there an SLA agreement available,"i.io general faq general Is there an SLA agreement available.   Is there an SLA agreement available? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralIs there an SLA agreement available?Is there an SLA agreement available?Yes, we are providing standard SLA Agreement for all of our paid Plan customers. If you however need a custom SLA agreement, this can be catered to our Enterprise PlanIf you have such requirements, kindly submit a request here: https://share.hsforms.com/1cY_sFZHRT_mjnq3KxoItuQbm7f2Was this section helpful?12345PreviousIs latency higher for the exchanges which are providing only REST API?NextOHLCV Aggregation using the REST APICopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/Is-there-an-SLA-agreement-available)"
378,i.io naas api bitcoin Methods disconnectnode,"i.io naas api bitcoin Methods disconnectnode.   disconnectnode | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsdisconnectnodeOn this pagedisconnectnodeOverview​The 'disconnectnode' method allows you to immediately disconnect from a specified peer node in the Bitcoin network. You can identify the node either by its 'address' or 'nodeid'. Only one of these parameters can be provided to identify the node. To disconnect by 'nodeid', you can either set the 'address' to an empty string or use the 'nodeid' argument only.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --body-data '{ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""disconnectnode"", ""params"": []}'\'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""disconnectnode\"",\r \""params\"": []\r }\r "", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""disconnectnode"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""disconnectnode"", ""params"": []})headers = { 'Content-Type': 'application/json', 'accept': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""disconnectnode"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{`+""""+` ""jsonrpc"": ""1.0"",`+""""+` ""id"": ""1"",`+""""+` ""method"": ""disconnectnode"",`+""""+` ""params"": []`+""""+`}`+""""+``)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({""jsonrpc"": ""1.0"",""id"": ""1"",""method"": ""disconnectnode"",""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder().build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""disconnectnode\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​address: The IP address/port of the node (string).nodeid: The node ID (numeric, optional, default=fallback to address). You can find node IDs using the 'getpeerinfo' method.Response​{ ""result"": null, ""error"": null, ""id"": ""request_id""}Was this section helpful?12345PreviousderiveaddressesNextdumpprivkeyOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/disconnectnode)"
379,i.io general faq api What languages do you support,"i.io general faq api What languages do you support.   What languages do you support? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer EMS Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What is the rate limit for EMS Trading API?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQAPIWhat languages do you support?What languages do you support?Technically any language, but we have SDK and examples available in our GitHub repository [1] for:PythonRMATLABC#.NETC++JavaRubyGoJavaScriptTypeScriptNode.jsPHPHaskellObjective-CReference:[1] https://github.com/coinapi/coinapi-sdkWas this section helpful?12345PreviousWhat is the rate limit for EMS Trading API?NextWhat timezone is used for date/time values?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/api/What-languages-do-you-support)"
380,i.io general glossary Blockchain Node,"i.io general glossary Blockchain Node.   Blockchain Node | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGlossaryBlockchain Address and OutputBlockchain NodeChain (Blockchain)EndpointJSONNetworkSatoshiTransactionWalletBlockchain BlockChangelogGlossaryBlockchain NodeOn this pageBlockchain NodeBlockchain Node​A blockchain node is a crucial component of a blockchain network, serving as a point of communication within the decentralized system. Nodes are responsible for maintaining the integrity and security of the blockchain by validating, propagating, and storing data. Here are the key aspects of blockchain nodes:Types of Blockchain Nodes​Full Nodes:Function: Store a complete copy of the blockchain ledger and participate in validating and verifying transactions.Role: Ensure the accuracy and immutability of the blockchain by checking all blocks and transactions against the consensus rules.Example: Bitcoin Core is an example of a full node that enforces all protocol rules of the Bitcoin network.Light Nodes (SPV Nodes):Function: Download only a subset of the blockchain, typically the block headers, to verify transactions.Role: Provide a lightweight alternative for users who do not need to store the entire blockchain, relying on full nodes for data validation.Example: Mobile wallets often operate as light nodes to facilitate quick and efficient transaction verification.Mining Nodes:Function: Participate in the mining process by solving complex cryptographic puzzles to create new blocks.Role: Secure the network by adding new blocks to the blockchain and validating transactions.Example: Mining pools consist of multiple mining nodes working together to increase the chances of finding the next block.Masternodes:Function: Provide additional services such as transaction mixing, instant transactions, and governance functions.Role: Enhance the functionality and governance of the network, often requiring a significant stake in the cryptocurrency.Example: Dash uses masternodes to facilitate features like InstantSend and PrivateSend.Functions of Blockchain Nodes​Transaction Validation: Nodes check the validity of transactions against the consensus rules to prevent double-spending and fraud.Block Validation: Full nodes verify the legitimacy of new blocks before adding them to their copy of the blockchain.Propagation: Nodes communicate with each other to disseminate transaction and block information across the network.Storage: Nodes maintain a record of the blockchain's history, ensuring data is available and accessible.Role in Network Security​Decentralization: Nodes contribute to the decentralized nature of the blockchain, making it resistant to censorship and single points of failure.Consensus: Nodes participate in the consensus mechanism, ensuring all participants agree on the state of the blockchain.Immutability: By validating and storing the blockchain, nodes ensure that once data is recorded, it cannot be altered without network consensus.Importance of Nodes​Network Health: A large number of nodes enhances the security, resilience, and performance of the blockchain network.User Empowerment: Running a node allows users to directly participate in the network, verifying their own transactions and enhancing their privacy.Data Integrity: Nodes ensure the accuracy and reliability of the data stored on the blockchain, maintaining trust in the system.Understanding blockchain nodes is essential for grasping how blockchain networks operate, secure data, and maintain decentralization. Nodes play a pivotal role in the functionality and reliability of blockchain technology.Was this section helpful?12345PreviousBlockchain Address and OutputNextChain (Blockchain)Blockchain NodeCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/glossary/Blockchain_Node)"
381,i.io naas api bitcoin Methods importpubkey,"i.io naas api bitcoin Methods importpubkey.   importpubkey | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsimportpubkeyOn this pageimportpubkeyOverview​The 'importpubkey' method allows you to Add a public key (in hex) that can be watched as if it were in your wallet but cannot be used to spend. Requires a new wallet backup.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""importpubkey"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var options = new RestClientOptions(""https://bitcoin-mainnet.node.coinapi.io""){ MaxTimeout = -1,};var client = new RestClient(options);var request = new RestRequest("""", Method.Post);request.AddHeader(""Content-Type"", ""application/json"");request.AddHeader(""accept"", ""application/json"");request.AddHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var body = @""{""""jsonrpc"""":""""2.0"""",""""id"""":1,""""method"""":""""importpubkey"""",""""params"""": [ ]}"";request.AddStringBody(body, DataFormat.Json);RestResponse response = await client.ExecuteAsync(request);Console.WriteLine(response.Content);<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""importpubkey"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection(""mainnet-bitcoin.node.coinapi.io"")payload = json.dumps({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""importpubkey"",""params"": []})headers = {'Content-Type': 'application/json','accept': 'application/json','X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}conn.request(""POST"", ""/"", payload, headers)res = conn.getresponse()data = res.read()print(data.decode(""utf-8""))var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""importpubkey"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""id"":1,""method"":""importpubkey"",""params"": [ ]}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""importpubkey"",""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""importpubkey\"",\""params\"": [ ]}"");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​pubkey: The hex-encoded public keylabel: An optional labelrescan: Rescan the wallet for transactionsResponse​{ // Response structure here}Was this section helpful?12345PreviousimportprunedfundsNextimportwalletOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/importpubkey)"
382,i.io faq general Where is CoinAPI infrastructure located,"i.io faq general Where is CoinAPI infrastructure located.   Where is CoinAPI infrastructure located? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralWhere is CoinAPI infrastructure located?Where is CoinAPI infrastructure located?Most of our infrastructure is located in AWS (Amazon Web Services) in North America, Europe, and Japan. You can collocate around us, or we can set up a dedicated server infrastructure close to your company servers as part of the Enterprise subscription.Was this section helpful?12345PreviousWhat types of data does CoinAPI provide?NextWhich assets or currencies are listed?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/Where-is-CoinAPI-infrastructure-located)"
383,i.io general faq general Can I have multiple API keys in one account,"i.io general faq general Can I have multiple API keys in one account.   Can I have multiple API keys in one account? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralCan I have multiple API keys in one account?Can I have multiple API keys in one account?Yes, it's possible that they have multiple API keys for the same subscription. In the Customer Portal, navigate to Subscriptions > APIKEYS > CREATE APIKEY It is important to note that the existence of each additional API Key for a subscription (enabled or disabled) above the plan quota is charged 1 USD per day, with a minimum of one dayThe multiple API keys can be limited via the configuration of the specific API key, for example, the specific API key newly created cannot overage or limit the specific API key to X number of requests to avoid causing issues for other keys. Increased security is one of the main benefits of having numerous API keys. Each key acts as an access point and particular identifier. Users can compartmentalize their access by making unique keys, which lowers the likelihood that a security breach will have a negative effect. The remaining keys are unaffected if one key is hacked, protecting sensitive information and reducing risks.Was this section helpful?12345PreviousCan I get the XML or CSV instead of the JSON output format?NextCan I have multiple subscriptions?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/Can-I-have-multiple-API-keys-in-one-account)"
384,i.io market data how to guides building a cryptocurrency exchange comparison tool using market data api,"i.io market data how to guides building a cryptocurrency exchange comparison tool using market data api.   Building a cryptocurrency exchange comparison tool using Market Data API | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesAcquire exchange rates with different programming languagesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPIBuilding a cryptocurrency exchange comparison tool using Market Data APICreating a historical crypto price chart using CoinAPI and D3.jsFetching market data with KNIMEGet Historical OHLCV Data Using CoinAPIGet symbol funding rate metric data using CoinAPIImport API into PostmanImport data to Google Sheets/ExcelReal-time data visualization with javascriptReal-time trades stream using WebSocket with different languagesRetrieve and analyze crypto order book data using a cryptocurrency APITrading Essentials: QuickstartPerformance Testing GuideHow-to guidesBuilding a cryptocurrency exchange comparison tool using Market Data APIOn this pageBuilding a cryptocurrency exchange comparison tool using Market Data APIIf you want to develop a tool for comparing cryptocurrency prices across different exchanges using our Market Data API, follow these simple steps.API IntegrationIntegrate our Market Data API into your application to access real-time data from diverse cryptocurrency exchanges simply by configuring the API KEY.Fetch DataOur API provides data such as the current price, trading volume, and historical prices of different cryptocurrencies across multiple exchanges.Within this how-to guide, we'll use the current quotes endpoint to obtain the present asset price across diverse exchanges.infoQuote refers to the current price at which a particular asset is bought or sold on a specific exchange. Data ComparisonAfter acquiring the data, you can compare prices for a specific asset across various exchanges and showcase them. This could prove beneficial for analyzing trends.Cryptocurrency exchange comparison tool in Python​Let’s put the theory into practice. Here’s an example of comparing real-time prices based on current quotes with our Market Data API in Python.Import the necessary libraries and set up your API key.import requestsimport jsonapi_key = 'YOUR_API_KEY'Define the PriceInformation class to store price data.class PriceInformation: def __init__(self, symbol, price, size, taker_side):  self.symbol = symbol  self.price = price  self.size = size  self.taker_side = taker_sideDefine the function to fetch price information for a given coinapi symbol via the current quotes endpoint.def get_price(coinapiSymbol): url = f'https://rest.coinapi.io/v1/quotes/{coinapiSymbol}/current?apikey={api_key}' response = requests.get(url) data = json.loads(response.text) last_trade = data.get('last_trade', {}) if last_trade:  price = last_trade.get('price', '')  size = last_trade.get('size', '')  taker_side = last_trade.get('taker_side', '')  return PriceInformation(coinapiSymbol, price, size, taker_side) return NoneinfoRefer to our metadata documentation for the complete list of coinapi symbols available on the specified exchange.Define the function to fetch price information for two symbols.def fetch_prices_for_symbols(symbol1, symbol2): priceSymbol1 = get_price(symbol1) priceSymbol2 = get_price(symbol2) return priceSymbol1, priceSymbol2Call fetch_prices_for_symbols to retrieve price BTC/USDT AND ETH/USDT on KRAKEN and BINANCE.# Example usage 1priceInfo1, priceInfo2 = fetch_prices_for_symbols('KRAKEN_SPOT_BTC_USDT', 'BINANCE_SPOT_BTC_USDT')print(f'Price on [{priceInfo1.symbol}] is [{priceInfo1.price}], based on the last [{priceInfo1.taker_side}] with a size of [{priceInfo1.size}]')print(f'Price on [{priceInfo2.symbol}] is [{priceInfo2.price}], based on the last [{priceInfo2.taker_side}] with a size of [{priceInfo2.size}]')# Example usage 2priceInfo3, priceInfo4 = fetch_prices_for_symbols('KRAKEN_SPOT_ETH_USDT', 'BINANCE_SPOT_ETH_USDT')print(f'Price on [{priceInfo3.symbol}] is [{priceInfo3.price}], based on the last [{priceInfo3.taker_side}] with a size of [{priceInfo3.size}]')print(f'Price on [{priceInfo4.symbol}] is [{priceInfo4.price}], based on the last [{priceInfo4.taker_side}] with a size of [{priceInfo4.size}]')Output of the script.> Price on [KRAKEN_SPOT_BTC_USDT] is [67739.9], based on the last [BUY] with a size of [0.00469343]> Price on [BINANCE_SPOT_BTC_USDT] is [67791.98], based on the last [SELL] with a size of [0.00168]> Price on [KRAKEN_SPOT_ETH_USDT] is [3531.67], based on the last [BUY] with a size of [0.00290074]> Price on [BINANCE_SPOT_ETH_USDT] is [3532.58], based on the last [BUY] with a size of [0.0002]Here's a complete Python script encompassing all the preceding steps.import requestsimport json# Set up your API keyapi_key = 'YOUR_API_KEY'# Define the PriceInformation class to store price dataclass PriceInformation: def __init__(self, symbol, price, size, taker_side):  self.symbol = symbol  self.price = price  self.size = size  self.taker_side = taker_side# Function to fetch price information for a given symboldef get_price(coinapiSymbol): url = f'https://rest.coinapi.io/v1/quotes/{coinapiSymbol}/current?apikey={api_key}' response = requests.get(url) data = json.loads(response.text) last_trade = data.get('last_trade', {}) if last_trade:  price = last_trade.get('price', '')  size = last_trade.get('size', '')  taker_side = last_trade.get('taker_side', '')  return PriceInformation(coinapiSymbol, price, size, taker_side) return None# Function to fetch prices for two symbolsdef fetch_prices_for_symbols(symbol1, symbol2): priceSymbol1 = get_price(symbol1) priceSymbol2 = get_price(symbol2) return priceSymbol1, priceSymbol2# Example usage 1priceInfo1, priceInfo2 = fetch_prices_for_symbols('KRAKEN_SPOT_BTC_USDT', 'BINANCE_SPOT_BTC_USDT')print(f'Price on [{priceInfo1.symbol}] is [{priceInfo1.price}], based on the last [{priceInfo1.taker_side}] with a size of [{priceInfo1.size}]')print(f'Price on [{priceInfo2.symbol}] is [{priceInfo2.price}], based on the last [{priceInfo2.taker_side}] with a size of [{priceInfo2.size}]')# Example usage 2priceInfo3, priceInfo4 = fetch_prices_for_symbols('KRAKEN_SPOT_ETH_USDT', 'BINANCE_SPOT_ETH_USDT')print(f'Price on [{priceInfo3.symbol}] is [{priceInfo3.price}], based on the last [{priceInfo3.taker_side}] with a size of [{priceInfo3.size}]')print(f'Price on [{priceInfo4.symbol}] is [{priceInfo4.price}], based on the last [{priceInfo4.taker_side}] with a size of [{priceInfo4.size}]')Here's a simplified way to fetch the current price for a given asset using the quotes endpoint and present it for comparison.To access the last 100 quotes instead of just the current one, you can utilize our quotes/latest endpoint.In a real-world scenario, additional functionalities such as error handling, data formatting, and data storage for analysis would be necessary.Was this section helpful?12345PreviousBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPINextCreating a historical crypto price chart using CoinAPI and D3.jsCryptocurrency exchange comparison tool in PythonCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/how-to-guides/building-a-cryptocurrency-exchange-comparison-tool-using-market-data-api)"
385,i.io cdn cgi l email protection#afdcdadfdfc0dddbefccc0c6c1cedfc681c6c0,"i.io cdn cgi l email protection#afdcdadfdfc0dddbefccc0c6c1cedfc681c6c0.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 8aad26a2fe71b330 •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#afdcdadfdfc0dddbefccc0c6c1cedfc681c6c0)"
386,i.io general faq general What market symbol types are supported by CoinAPI,"i.io general faq general What market symbol types are supported by CoinAPI.   What market symbol types are supported by CoinAPI? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralWhat market symbol types are supported by CoinAPI?What market symbol types are supported by CoinAPI?TypeNameDescriptionSPOTFX SpotAgreement to exchange one asset for another one (e.g. Buy BTC for USD)FUTURESFutures contractFX Spot derivative contract where traders agree to trade fx spot at predetermined future timeOPTIONOption contractFX Spot derivative contract where traders agree to trade right to require buy or sell of fx spot at agreed price on exercise datePERPETUALPerpetual contractFX Spot derivative contract where traders agree to trade fx spot continously without predetermined future delivery timeINDEXIndexStatistical composite that measures changes in the economy or markets.CREDITCredit/FundingMargin funding contract. Order book displays lending offers and borrow bids. Price represents the daily rate.CONTRACTContractRepresents other types of financial instruments(e.g. spreads, interest rate swap)Our symbols identifiers are created using a pattern that depends on the symbol type:Typesymbol_id patternSPOT{exchange_id}_SPOT_{asset_id_base}_{asset_id_quote}FUTURES{exchange_id}_FTS_{asset_id_base}_{asset_id_quote}_{YYMMDD of future_delivery_time}OPTION{exchange_id}_OPT_{asset_id_base}_{asset_id_quote}_{YYMMDD of option_expiration_time}_{option_strike_price}_{option_type_is_call as C/P}PERPETUAL{exchange_id}_PERP_{asset_id_base}_{asset_id_quote}INDEX{exchange_id}_IDX_{index_id}CREDIT{exchange_id}_CRE_{asset_id_base}CONTRACT{exchange_id}_COT_{contract_id}To get a list of all symbols, you can use this request: https://rest.coinapi.io/v1/symbols To see a list of symbols related to a specific exchange, market, or asset, please see this article: https://docs.coinapi.io/faq/api/How-can-I-see-a-list-of-symbols-related-to-a-specific-exchange-market-or-assetFor more information, please see our documentation: https://docs.coinapi.io/market-data/rest-api/metadata#symbol-identifierWas this section helpful?12345PreviousWhat is the max number of accounts an Enterprise plan can have?NextWhat order types does SOR support?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/What-market-symbol-types-are-supported-by-CoinAPI)"
387,i.io naas api bitcoin Methods getnewaddress,"i.io naas api bitcoin Methods getnewaddress.   getNewAddress | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetNewAddressOn this pagegetNewAddressOverview​The 'getNewAddress' method allows you to generate a new Bitcoin address for receiving payments. It is beneficial for users who want to manage multiple transactions or maintain privacy.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KE' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""getNewAddress"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KE"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""getNewAddress\"",\""params\"": [ ]}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KE'];$body = '{ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getNewAddress"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection(""mainnet-bitcoin.node.coinapi.io"")payload = json.dumps({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""getNewAddress"",""params"": []})headers = {'Content-Type': 'application/json','accept': 'application/json','X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KE'}conn.request(""POST"", ""/"", payload, headers)res = conn.getresponse()data = res.read()print(data.decode(""utf-8""))var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KE"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getNewAddress"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""id"":1,""method"":""getNewAddress"",""params"": [ ]}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KE"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KE""request.body = JSON.dump({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""getNewAddress"",""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""getNewAddress\"",\""params\"": [ ]}"");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KE"") .build();Response response = client.newCall(request).execute();Request Parameters​abel (optional): A label for the address. It is used to assign a name to the address for your reference.address_type (optional): Specifies the type of the address. It can be 'legacy', 'p2sh-segwit', or 'bech32'.Response​{ ""result"": ""newBitcoinAddressHere"", ""error"": null, ""id"": 1}Was this section helpful?12345PreviousgetnetworkinfoNextgetnodeaddressesOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getnewaddress)"
388,i.io cdn cgi l email protection#83f0f6f3f3ecf1f7c3e0eceaede2f3eaadeaec,"i.io cdn cgi l email protection#83f0f6f3f3ecf1f7c3e0eceaede2f3eaadeaec.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 8aad26871964b377 •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#83f0f6f3f3ecf1f7c3e0eceaede2f3eaadeaec)"
389,i.io ems api#ems order params,"i.io ems api#ems order params.   EMS - Starter Guide | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIREST APIWebSocket APIFIX APISelf Hosted GuideEMS APIOn this pageEMS - Starter GuideThis section will provide general information about the Execution Management System API (EMS API) software product and enumerate a number of features that it provides.infoThe keywords ""MUST"", ""MUST NOT"", ""REQUIRED"", ""SHALL"", ""SHALL NOT"", ""SHOULD"", ""SHOULD NOT"", ""RECOMMENDED"", ""MAY"", and ""OPTIONAL"" in this document are to be interpreted as described in RFC 2119.What is EMS API?​Execution Management System (EMS) is a software that manages orders, executions, and exposure in an efficient, fast, cost-effective, and straightforward manner. An EMS allows you to route orders to multiple cryptocurrency exchanges simultaneously using a simple, robust, and unified Application Programming Interface (API).The software can be used in 2 different ways:Managed Cloud - Everything on our side. Hosted in the Cloud by CoinAPI. You manage the deployment using the REST API.Self-Hosted - Software on our side, on everything else.Dimension ComparisonManaged CloudSelf-HostedEase of use/installationVery easyHardTime to marketFastSlowDevOps team required to maintainNoYesOrder flow sent directly to the destinationNoYesWho manages the infrastructure (incl. monitoring)CoinAPIYouWho optimizes the latencyCoinAPIYou (CoinAPI only in software)How to installInstruct our Cloud Mgmt APIInstall on your infrastructurecautionWe recommend starting with the Managed Cloud and possibly upgrading to the Self-Hosted if the requirements of the integration/project will make that commercially reasonable.Architecture and components​A self-hosted EMS cluster can be deployed on a single server or multiple servers that will span multiple geographical locations, server sites, or cloud providers. In the Managed Cloud version, you did not care about that as we manage the server sites to be as close to the order destinations as possible.EMS consists of several components listed and ordered by dependency relationship:Exchange - Order destination, exchange, or broker.CoinAPI EMS Edge - Software that's responsible for communicating with the single specific order destination for which is deployed. This component exposes the EMS API for diagnostics purposes which functions visibility are limited to this single destination.CoinAPI EMS API - Software that's responsible for exposing fully functional the EMS API, maintaining the connection with all instances of CoinAPI EMS Edge.Customer Application - Customer software using the EMS API exposed by the CoinAPI EMS API component.Benefits and features​Low latency support​Specific projects usually involve High-Frequency Trading (HFT) or Market Making (MM) requiring low latency access to the order destination. EMS API was designed to have native support for this kind of activity.For every order destination in the cluster to which the submillisecond latency is required, these components should be deployed on a single server as close as possible to the order destination:CoinAPI EMS EdgeCoinAPI EMS APICustomer Application The closest proximity can be achieved using the:cloud region and/or availability zone the same as the destinationcollocation near the destinationcross-connect or direct-connect to the destination network infrastructureshortcutting the routers, SNAT/DNAT hosts, or proxies like CloudFlareThe cluster can naturally contain other order destinations at the same time in this setup, and this fact doesn't affect the latency to the locally provisioned destination(s).Normalized API abstraction​Our EMS API provides an abstraction layer that consolidates all supported third-party APIs into a single set of simple and robust data models and protocols. The Exchanges and the Assets are standardized using the Market Data REST API with which this product is compatible. More information about the exchanges and asset standardization can be found in the Documentation of the Market Data Product.Industry-standard protocols​Our API's can be accessed using multiple protocols widely adopted by the industry as a standard:RESTWebSocketFIX 4.4, 5.0FIXT 1.1Self-host or in Cloud​Deploy your property applications and trading algorithms in your company's collocated data centers or cloud providers if you need that, otherwise, let us manage the infrastructure and focus on using the API.Security & Privacy​Don't need to worry about the issues at the audit. Order flow, exchange API keys, or execution reports never leave your company infrastructure as the product is self-hosted.tipThe software complies with the ""SOC 2"" and ""ISO/IEC 27001 information security certifications.Multi-account support​Manage an unlimited number of exchange accounts in the cluster (for example, on behalf of your customers).SDK and samples for 40+ languages​We have the SDK libraries and code samples available for more than 40+ languages. The full list is available here: https://github.com/coinapi/coinapi-sdk/tree/masterComprehensive support​Leverage support for all market types and order types.High-quality integrations​Our integrations with third-party APIs are heavily tested and crafted with stability and latency in mind. For several third parties, we usually use multiple protocols simultaneously or tricks to acquire valuable pieces of information faster.Enterprise-grade support and maintenance​EMS product is fully supported and maintained to stay ahead of the curve. This approach offloads the often disliked responsibilities of the Software and DevOps Engineers in the organization and enables them to focus on the core business.High availability​The EMS software is designed to support high-availability deployments out of the box. For each order destination, we/you deploy multiple CoinAPI EMS Edge and CoinAPI EMS API components on different servers, availability zones, or cloud/infrastructure providers. Cluster using the service discovery backend, all components are automatically detected and interconnected.P&L and asset monitoring​Using the EMS, your organization can manage exposure and positions in real-time across all supported order destinations and build sophisticated risk management controls.Order lifecycle​This section will describe the lifecycle of the order in the EMS software.Order status description​This table describes how to interpret a specific order status.NameCan transit toStatus descriptionRECEIVEDREJECTEDROUTINGThe order is processed by the EMS.ROUTINGROUTEDThe order is (on the wire) between the EMS and the Exchange.ROUTEDREJECTEDNEWPARTIALLY_FILLEDFILLEDCANCELEDThe order has been sent to the exchange and not yet active in the order book.NEWPARTIALLY_FILLEDFILLEDPENDING_CANCELCANCELEDThe order is active in the book in its original state.PENDING_CANCELNEWPARTIALLY_FILLEDFILLEDCANCELEDThe order cancelation message has been sent to the Order destination.PARTIALLY_FILLEDFILLEDPENDING_CANCELCANCELEDThe order is partially filled and active in the order book.FILLEDThe order is filled and removed from the order book. This state is terminal.CANCELEDThe order is canceled and removed from the order book. This state is terminal.REJECTEDThe order is rejected. This state is terminal.Order status lifecycle​This table describes how to interpret transitions between order statuses and their initial values.Source StatusDestination statusDescriptionRECEIVEDEMS received a new order via the API.NEWEMS received an unseen new order from the Order destination. The order was relayed to the destination outside the EMS.PARTIALLY_FILLEDEMS received unseen partially filled order from the Order destination. The order was relayed to the destination outside the EMS.RECEIVEDREJECTEDEMS rejected the order.RECEIVEDROUTINGEMS delivering the order to the Order destination.ROUTINGROUTEDEMS sent the order to the Order destination.ROUTEDREJECTEDEMS received a message from the exchange that the order was rejected.ROUTEDNEWEMS received a message from the exchange that the order is active in the book in its original state.ROUTEDPARTIALLY_FILLEDEMS received a message from the exchange that part of the order was executed aggressively (removed liquidity). The remaining passive part is active in the book.ROUTEDFILLEDEMS received a message from the exchange that the order was executed aggressively (removed liquidity).ROUTEDCANCELEDEMS received a message from the exchange that the order is in the canceled state. The order has not been in the book as the conditions for the entry were not satisfied.NEWPARTIALLY_FILLEDEMS received a message from the exchange that part of the passive order was filled.NEWFILLEDEMS received a message from the exchange that the passive order is filled.NEWPENDING_CANCELEMS received cancel request for the order and successfully relayed it to the Order destination.NEWCANCELEDEMS received a message from the exchange that the passive order was canceled.PARTIALLY_FILLEDFILLEDEMS received a message from the exchange that the remaining part of the passive order is filled.PARTIALLY_FILLEDPENDING_CANCELEMS received cancel request for the remaining part of the passive order and successfully relayed it to the Order destination.PARTIALLY_FILLEDCANCELEDEMS received a message from the exchange that the remaining part of the passive order is canceled.PENDING_CANCELNEWEMS received a message from the exchange that updated the order before processing the cancellation request or the order cancellation request was rejected.PENDING_CANCELPARTIALLY_FILLEDEMS received a message from the exchange that updated the order before processing the cancellation request or the order cancellation request was rejected.PENDING_CANCELFILLEDEMS received a message from the exchange that updated the order before processing the cancellation request or the order cancellation request was rejected.PENDING_CANCELCANCELEDEMS received a message from exchange` that updated the order before processing the cancellation request or the order cancellation request was rejected.Order parameters​This section will describe parameters of the order in the EMS sofware.Order type​EMS supports only the LIMIT order type. Market orders don't have price protection, and because of that, they are not supported. As an alternative, you can use the Immediate or Cancel IOC order and provide the worst execution price to achieve the same result.Time in force​Time in force is a special instruction used when placing a trade to indicate how long an order will remain active before it expires.The table below describes how to interpret time in force parameter values.Time in forceShortcodeDescriptionGOOD_TILL_CANCELGTCA Good Till Cancel (GTC) is a default type of time-in-force. The order that lasts until is completed or canceled.GOOD_TILL_TIME_EXCHANGEGTTEThe Good Till Time Exchange (GTTE) time in force lets you set an expiration date and time up until which an order will be active in the book. The exchange handles the execution of the cancel originated from parameter.GOOD_TILL_TIME_OEMLGTTOThe Good Till Time OEML (GTTO) time in force lets you set an expiration date and time up until which an order will be active in the book. The CoinAPI EMS Edge sending the cancel request originated from the parameter. Worth mentioning that: (a) The cancellation request will not be sent if the software will be not be running at the time of expiration. (b) This parameter does not depend on the exchange. (c) The clock of the server running CoinAPI EMS Edge is used to trigger the cancelation request at the expiration.FILL_OR_KILLFOKFill or kill (FOK) is a type of time in force used to instruct an exchange to execute a transaction immediately and completely or not at all. This order will only remove liquidity from the order book. It must be filled in its entirety or canceled (killed).IMMEDIATE_OR_CANCELIOCAn immediate or cancel order (IOC) is a type of time in force used to instruct an exchange to execute all or part immediately and cancels any unfilled portion of the order. This order will only remove liquidity from the order book. It will fill whatever part of the order it can immediately and cancel any remaining amount so that no part of the order is added to the order book.The table below displays a breakdown of the EMS support of specific time in force values by the Order destination. Order destination idGTCGTTEGTTOFOKIOCBINANCEXXXXBINANCEUATXXXXBINANCEJEXXXXBINANCEUSXXXXBINANCEFTSXXXXBINANCEFTSUATXXXXBINANCEFTSCXXXXBINANCEFTSCUATXXXXBINANCEOPTVXXXXBINANCEOPTVUATXXXXBITFINEXXXXXXBITMEXXXXXBITMEXUATXXXXBITSTAMPXXXXBLOCKCHAINEXCHANGEXXXXCOINBASEXXXXGEMINIXXXXHITBTCXXXXXKRAKENXXXKRAKENFTSXXXPOLONIEXXXXXLMAXDIGITALXXXXLMAXDIGITALUATXXXXDERIBITXXXXDERIBITUATXXXXDYDXXXXXXLegend: X - supported.Execution instructions​Execution instruction puts restrictions on order handling at the matching engine. More than one instruction can apply to an order. The table below describes how to interpret execution instructions parameter values. Legend: X - supported.InstructionShortcodeDescriptionAUCTION_ONLYAOAn Auction Only (AO) instructs exchange that this order is for the auction only book for the next auction. The order may be cancelled up until the the auction locks, after which cancel requests will be rejected.INDICATION_OF_INTERESTIOIAn indication of interest (IOI) instructs exchange that this order should be processed as request for liquidity from block trading market markets.MAKER_OR_CANCELMOCA Maker or cancel (MOC) instructs exchange that this order will only add liquidity to the order book. If any part of the order could be filled immediately, the whole order will instead be rejected before any execution occurs. This instruction is also known as Post only or Participate don't initiate.CANCEL_ON_DISCONNECTCODCancel on System Failure (Cancel on disconnect)DO_NOT_CANCEL_ON_DISCONNECTNCODReinstate on System Failure (Do not cancel on disconnect)DO_NOT_INCREASEDNI(Reduce only) If part of a position is closed by any other means than the reduce-only order, the reduce-only order will be automatically adjusted downwards. If the trader decides to increase their position before the reduce-only order is executed, the quantity of the reduce-only order will not increase as well.The table below displays a breakdown of the EMS support of specific execution instructions by the Order destination. Order destination idMOCAOIOICODNCODDNIBINANCEXBINANCEUATXBINANCEJEXBINANCEUSXBINANCEFTSXBINANCEFTSUATXBINANCEFTSCXBINANCEFTSCUATXBINANCEOPTVXBINANCEOPTVUATXBITFINEXXBITMEXXBITMEXUATXBITSTAMPBLOCKCHAINEXCHANGEXCOINBASEXGEMINIXXXHITBTCKRAKENFTSXKRAKENXPOLONIEXXLMAXDIGITALXXLMAXDIGITALUATXXDERIBITXXDERIBITUATXXDYDXXXLegend: X - supported.Market Orders​While our API inherently supports limit orders, we understand the necessity for some clients to operate with market orders. This documentation provides a technical solution for simulating market orders using our limit order functionality with the Fill or Kill (FOK) option.Technical Solution​To mimic the behavior of a market order using our API, which inherently supports limit orders, clients can place a limit order with a Fill or Kill (FOK) condition. This approach effectively replicates the immediate execution characteristic of a market order while requiring the specification of a maximum (for buy orders) or minimum (for sell orders) price limit.Implementation Steps:Prepare the Order:Define the order as a limit order. Set the price limit to the maximum price the client is willing to pay for a buy order or the minimum price they are willing to accept for a sell order. Ensure that the order quantity meets the client's requirement for the transaction.Set the FOK Condition:Apply the Fill or Kill condition to the order. This condition mandates that the order must be executed immediately in its entirety or not executed at all. It ensures that partial fills do not occur, closely aligning with the nature of a market order.Execution and Validation:Upon submission, the EMS will attempt to fill the order immediately based on the specified price limits and the FOK condition. If the order cannot be filled immediately and completely within the defined price range, it will be automatically cancelled, ensuring no partial fills.Advantages and Considerations​Immediate Execution: The FOK condition ensures that the order, if executed, is filled immediately, mirroring the behavior of a market order.Price Control: Clients maintain control over the maximum or minimum price limits, adding a layer of price protection that standard market orders do not provide.Simplicity: This method avoids the need for additional development or integration, utilizing the existing infrastructure of our API.Using a limit order API can be considered simpler and more straightforward for several reasons, especially when compared to other types of trading orders. Here are some factors that contribute to the perceived simplicity:Predictability and Control:Price Certainty: Limit orders allow users to specify the maximum or minimum price at which they are willing to buy or sell an asset. This provides certainty about the price, which is not the case with market orders, where the execution price can vary.Control over Execution: Users have better control over their trades. They can decide not to execute a trade if the market does not reach their specified price, avoiding unwanted entries or exits in volatile market conditions.Consistent behaviour: Not all the order destinations support market orders or when they support it, usually they are implmeneted in form of limit orders.Straightforward Implementation:Simplicity in API Design: Limit order APIs are generally straightforward to implement and integrate because the parameters are clear and well-defined (quantity, price, and sometimes duration).Fewer Real-time Considerations: Unlike market orders, where getting the best available price in real-time is crucial, limit orders are placed based on predefined criteria. This can reduce the complexity associated with rapid decision-making and real-time data processing.Reduced Need for Immediate Market Data:Less Dependency on Real-time Pricing: Since the execution of a limit order is based on the user's specified price, there's less need for immediate or real-time market data, unlike market orders where knowing the current market price is crucial for order execution.Cost Predictability:Avoidance of Slippage: With limit orders, the risk of slippage (the difference between the expected price of a trade and the price at which the trade is executed) is eliminated. Users can be more confident about the cost of their trades, making financial planning and risk management more straightforward.Ease of Monitoring and Management:Set and Forget: Users can place limit orders and not worry about monitoring the market constantly. The order will only execute if the market price meets the user's criteria, making it a more passive form of trading.Batch Processing Friendly: For applications or trading strategies that place numerous orders, limit orders can be more manageable as they don't require immediate processing or constant monitoring of market prices.Reduced Impact on Market Price:Minimized Market Disruption: Limit orders can be less disruptive to the market price, especially for large orders. They are executed only at the user's specified price, avoiding large, sudden impacts on the market price that can occur with large market orders.In summary, a limit order API can offer a simpler and more controlled trading experience, with price certainty, reduced need for real-time market data, straightforward implementation, and predictable costs. These factors contribute to its appeal, especially for users or systems focusing on strategic, planned trading activities rather than immediate, real-time market engagement.Time​For all input and output time values ISO 8601 standard is used.Format specifierDescriptionyyyyThe year as a four-digit number.MMThe month, from 01 through 12.ddThe day of the month, from 01 through 31.HHThe hour, using a 24-hour clock from 00 to 23.mmThe minute, from 00 through 59.ssThe second, from 00 through 59.fffThe milliseconds in a date and time value.fffffffThe ten millionths of a second in a date and time value.Input time values are parsed using the following formats as far as possible:yyyy-MM-ddTHH:mm:ss.fffffffyyyy-MM-ddTHH:mm:ss.fffyyyy-MM-ddTHH:mm:ssyyyy-MM-ddTHH:mmyyyy-MM-ddTHHyyyy-MM-ddyyyyMMddTHHmmssfffffffyyyyMMddTHHmmssfffyyyyMMddTHHmmssyyyyMMddTHHmmyyyyMMddTHHyyyyMMddinfoWhen time zone information is not supplied, we will assume the UTC time zone.Output time values are formatted using the following patterns:yyyy-MM-ddTHH:mm:ss.fffffffZyyyy-MM-ddinfoAll time values we provide are UTC time zone. Do not assume otherwise.Was this section helpful?12345NextAuthenticationWhat is EMS API?Architecture and componentsBenefits and featuresLow latency supportNormalized API abstractionIndustry-standard protocolsSelf-host or in CloudSecurity & PrivacyMulti-account supportSDK and samples for 40+ languagesComprehensive supportHigh-quality integrationsEnterprise-grade support and maintenanceHigh availabilityP&L and asset monitoringOrder status descriptionOrder status lifecycleMarket OrdersTechnical SolutionAdvantages and ConsiderationsTimeCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api#ems-order-params)"
390,i.io cdn cgi l email protection#cbb8bebbbba4b9bf8ba8a4a2a5aabba2e5a2a4,"i.io cdn cgi l email protection#cbb8bebbbba4b9bf8ba8a4a2a5aabba2e5a2a4.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 86784d5b1c7735ca •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#cbb8bebbbba4b9bf8ba8a4a2a5aabba2e5a2a4)"
391,i.io naas api ethereum Methods eth getTransactionReceipt,"i.io naas api ethereum Methods eth getTransactionReceipt.   eth_getTransactionReceipt | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_getTransactionReceiptOn this pageeth_getTransactionReceiptOverview​The 'eth_getTransactionReceipt' method returns the receipt of a transaction given its transaction hash. Please note that the receipt is not available for pending transactions.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://coinapi.io/v1/ethereum \  --header 'accept: application/json' \  --header 'content-type: application/json' \  --header ""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY""  --data '{ ""id"": 1, ""jsonrpc"": ""2.0"", ""params"": [ ""0x8fc90a6c3ee3001cdcbbb685b4fbe67b1fa2bec575b15b0395fea5540d0901ae"" ], ""method"": ""eth_getTransactionReceipt""}'using System.Net.Http.Headers;var client = new HttpClient();var request = new HttpRequestMessage{ Method = HttpMethod.Post, RequestUri = new Uri(""https://coinapi.io/v1/ethereum""), Headers = {  { ""accept"", ""application/json"" }, }, Content = new StringContent(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0x8fc90a6c3ee3001cdcbbb685b4fbe67b1fa2bec575b15b0395fea5540d0901ae\""],\""method\"":\""eth_getTransactionReceipt\""}"") {  Headers = (""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");  {   ContentType = new MediaTypeHeaderValue(""application/json"")  } }};using (var response = await client.SendAsync(request)){ response.EnsureSuccessStatusCode(); var body = await response.Content.ReadAsStringAsync(); Console.WriteLine(body);}<?php$curl = curl_init();curl_setopt_array($curl, [CURLOPT_URL => ""https://coinapi.io/v1/ethereum"",CURLOPT_RETURNTRANSFER => true,CURLOPT_ENCODING => """",CURLOPT_MAXREDIRS => 10,CURLOPT_TIMEOUT => 30,CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,CURLOPT_CUSTOMREQUEST => ""POST"",CURLOPT_POSTFIELDS => json_encode(['id' => 1,'jsonrpc' => '2.0','params' => ['0x8fc90a6c3ee3001cdcbbb685b4fbe67b1fa2bec575b15b0395fea5540d0901ae'],'method' => 'eth_getTransactionReceipt']),CURLOPT_HTTPHEADER => [""accept: application/json"",""content-type: application/json""],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) {echo ""cURL Error #:"" . $err;} else {echo $response;}?>import requestsurl = ""https://coinapi.io/v1/ethereum""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""params"": [""0x8fc90a6c3ee3001cdcbbb685b4fbe67b1fa2bec575b15b0395fea5540d0901ae""], ""method"": ""eth_getTransactionReceipt""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"" ""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text) const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({ id: 1, jsonrpc: '2.0', params: ['0x8fc90a6c3ee3001cdcbbb685b4fbe67b1fa2bec575b15b0395fea5540d0901ae'], method: 'eth_getTransactionReceipt' })};fetch('https://coinapi.io/v1/ethereum', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://coinapi.io/v1/ethereum"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0x8fc90a6c3ee3001cdcbbb685b4fbe67b1fa2bec575b15b0395fea5540d0901ae\""],\""method\"":\""eth_getTransactionReceipt\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://coinapi.io/v1/ethereum"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0x8fc90a6c3ee3001cdcbbb685b4fbe67b1fa2bec575b15b0395fea5540d0901ae\""],\""method\"":\""eth_getTransactionReceipt\""}""response = http.request(request)puts response.read_bodyAsyncHttpClient client = new DefaultAsyncHttpClient();client.prepare(""POST"", ""https://coinapi.io/v1/ethereum"") .setHeader(""accept"", ""application/json"") .setHeader(""content-type"", ""application/json"") .setHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEYs"") .setBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0x8fc90a6c3ee3001cdcbbb685b4fbe67b1fa2bec575b15b0395fea5540d0901ae\""],\""method\"":\""eth_getTransactionReceipt\""}"") .execute() .toCompletableFuture() .thenAccept(System.out::println) .join();client.close();Request Parameters​'transaction hash': [Required] A string representing the hash (32 bytes) of a transaction.Response​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": { ""transactionHash"": ""0x8fc90a6c3ee3001cdcbbb685b4fbe67b1fa2bec575b15b0395fea5540d0901ae"", ""blockHash"": ""0x58a945e1558810523df00490ff28cbe111b37851c44679ce5be1eeaebb4b4907"", ""blockNumber"": ""0xeb8822"", ""logs"": [  {  ""transactionHash"": ""0x8fc90a6c3ee3001cdcbbb685b4fbe67b1fa2bec575b15b0395fea5540d0901ae"",  ""address"": ""0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"",  ""blockHash"": ""0x58a945e1558810523df00490ff28cbe111b37851c44679ce5be1eeaebb4b4907"",  ""blockNumber"": ""0xeb8822"",  ""data"": ""0x000000000000000000000000000000000000000000000000000000001debea42"",  ""logIndex"": ""0x6c"",  ""removed"": false,  ""topics"": [   ""0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"",   ""0x0000000000000000000000005067c042e35881843f2b31dfc2db1f4f272ef48c"",   ""0x0000000000000000000000003ee18b2214aff97000d974cf647e7c347e8fa585""  ],  ""transactionIndex"": ""0x4e""  },  {  ""transactionHash"": ""0x8fc90a6c3ee3001cdcbbb685b4fbe67b1fa2bec575b15b0395fea5540d0901ae"",  ""address"": ""0x98f3c9e6e3face36baad05fe09d375ef1464288b"",  ""blockHash"": ""0x58a945e1558810523df00490ff28cbe111b37851c44679ce5be1eeaebb4b4907"",  ""blockNumber"": ""0xeb8822"",  ""data"": ""0x000000000000000000000000000000000000000000000000000000000001371e000000000000000000000000000000000000000000000000000000006eca00000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000f000000000000000000000000000000000000000000000000000000000000008501000000000000000000000000000000000000000000000000000000001debea42000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000267c46aa713cfe47608dd1c16f8a0325208df084c3cbebf9f366ad0eafc2653e4000100000000000000000000000000000000000000000000000000000000001e8542000000000000000000000000000000000000000000000000000000"",  ""logIndex"": ""0x6d"",  ""removed"": false,  ""topics"": [   ""0x6eb224fb001ed210e379b335e35efe88672a8ce935d981a6896b27ffdf52a3b2"",   ""0x0000000000000000000000003ee18b2214aff97000d974cf647e7c347e8fa585""  ],  ""transactionIndex"": ""0x4e""  } ], ""contractAddress"": null, ""effectiveGasPrice"": ""0x2d7003407"", ""cumulativeGasUsed"": ""0x76c649"", ""from"": ""0x5067c042e35881843f2b31dfc2db1f4f272ef48c"", ""gasUsed"": ""0x1a14b"", ""logsBloom"": ""0x00000000000100000000008000000000000000000000000000000000000000000010000000000000001000000000000000000000000000000000000000000000000000000000000008008008000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000010000000000000000000000000000000000000000000000000010002000000000000000400000000000400200001000000000000000000000000040000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000"", ""status"": ""0x1"", ""to"": ""0x3ee18b2214aff97000d974cf647e7c347e8fa585"", ""transactionIndex"": ""0x4e"", ""type"": ""0x0"" }}A transaction receipt object, or 'null' when no receipt was found. The transaction receipt object will contain the following keys and their values:'blockHash': 32 bytes. Hash of the block including this transaction.'blockNumber': Block number including this transaction.'contractAddress': 20 bytes. The contract address created if the transaction was a contract creation, otherwise null.'cumulativeGasUsed': The total amount of gas used when this transaction was executed in the block.'effectiveGasPrice': The actual value per gas deducted from the sender's account. Before EIP-1559, equal to the gas price.'from': 20 bytes. The address of the sender.'gasUsed': The amount of gas used by this specific transaction alone.'logs': (Array) An array of log objects generated by this transaction.'logsBloom': 256 bytes. Bloom filter for light clients to quickly retrieve related logs.One of the following:'root': 32 bytes of post-transaction stateroot (pre-Byzantium)'status': Either 1 (success) or 0 (failure)'to': 20 bytes. The address of the receiver. null when the transaction is a contract creation transaction.'transactionHash': 32 bytes. The hash of the transaction.'transactionIndex': Hexadecimal of the transaction's index position in the block.'type': The transaction type.Was this section helpful?12345Previouseth_getTransactionCountNexteth_getUncleByBlockHashAndIndexOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_getTransactionReceipt)"
392,i.io general glossary Chain Blockchain,"i.io general glossary Chain Blockchain.   Chain (Blockchain) | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGlossaryBlockchain Address and OutputBlockchain NodeChain (Blockchain)EndpointJSONNetworkSatoshiTransactionWalletBlockchain BlockChangelogGlossaryChain (Blockchain)On this pageChain (Blockchain)Chain (Blockchain)​Chain or Blockchain is a distributed and immutable ledger that records all transactions across a decentralized network. It consists of a series of blocks, where each block contains a group of transactions. Below are the detailed aspects of a blockchain:Structure of a Blockchain​Blocks: The fundamental units of a blockchain, each containing a list of transactions. Blocks are linked together in chronological order.Header: Contains metadata such as the block number, timestamp, previous block hash, and the Merkle root of the transactions.Body: Contains the actual transactions, which include the details of sender, receiver, and amount transferred.Chains: Refers to the continuous linking of blocks, where each block references the hash of the previous block, ensuring integrity and immutability.Functions of a Blockchain​Transaction Recording: Captures and stores all transactions across the network in a secure and immutable manner.Decentralization: Eliminates the need for a central authority, distributing control across a network of nodes.Consensus Mechanisms: Ensures all nodes agree on the validity of transactions, commonly through methods like Proof of Work (PoW) or Proof of Stake (PoS).Security: Uses cryptographic hashing and decentralized consensus to protect data from tampering and fraud.Importance of Blockchain​Transparency: Provides a transparent and verifiable record of all transactions, enhancing trust among participants.Security and Immutability: Ensures that once data is recorded, it cannot be altered without consensus, providing a high level of security.Efficiency: Streamlines processes by removing intermediaries, reducing transaction times, and lowering costs.Traceability: Improves traceability of assets and transactions, which is beneficial in supply chain management and other applications.Applications of Blockchain​Cryptocurrencies: Serves as the underlying technology for digital currencies like Bitcoin and Ethereum.Smart Contracts: Facilitates the execution of programmable contracts that automatically enforce terms and conditions.Supply Chain: Enhances the traceability and transparency of goods as they move through the supply chain.Voting Systems: Provides a secure and transparent method for conducting and verifying elections.Understanding the concept of a blockchain is essential for comprehending how it revolutionizes various industries by providing a secure, transparent, and efficient way to record and manage transactions. The decentralized nature of blockchain ensures that no single entity can control or alter the data, maintaining the integrity and trustworthiness of the system.Was this section helpful?12345PreviousBlockchain NodeNextEndpointChain (Blockchain)Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/glossary/Chain_Blockchain)"
393,i.io market data rest api indexes,"i.io market data rest api indexes.   Indexes | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesHistorical Index Value w/CompositionList indexesTimeseries Index ValueMetadataMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIIndexesIndexesIndexes section of the API is in the Alpha release cycle. Use only for testing, evaluaton and feedback.📄️ Historical Index Value w/CompositionHistorical Index Value w/Composition📄️ List indexesList indexes📄️ Timeseries Index ValueTimeseries Index ValueWas this section helpful?12345Previous Get specific rateNextHistorical Index Value w/CompositionCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/indexes)"
394,i.io ems api websocket messages,"i.io ems api websocket messages.   Messages | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIREST APIWebSocket APIMessagesFIX APISelf Hosted GuideWebSocket APIMessagesOn this pageMessagesThis section will provide necessary documentation for the WebSocket protocol messages.The message type is identified by the type property of the JSON object. This document is organized into sections, each per specific message type.Message typeTriggerDescriptionSERVER_INFOOn connection openEvery 1 secondOn updateHeartbeat and server information.ORDER_NEW_SINGLE_REQUESTOn new orderSubmit new order.ORDER_CANCEL_SINGLE_REQUESTOn order cancelCancel single order.ORDER_CANCEL_ALL_REQUESTOn order cancelCancel all orders.ORDER_EXEC_REPORT_SNAPSHOTOn connection openSnapshot of all order execution reports.ORDER_EXEC_REPORT_UPDATEOn updateUpdate of the order execution report.BALANCE_SNAPSHOTOn connection openSnapshot of all balances.BALANCE_UPDATEOn updateUpdate of the balance.POSITION_SNAPSHOTOn connection openSnapshot of all positions.POSITION_UPDATEOn updateUpdate of the position.SYMBOLS_SNAPSHOTOn connection openSnapshot of markets symbols.MESSAGE_REJECTOn order placing/cancelling rejection.Text message.SERVER_INFO IN​Example of the SERVER_INFO message.{ ""type"": ""SERVER_INFO"", ""time"": ""2020-02-07T12:37:46.6967101Z"", ""instance_guid"": ""16bab28c-8c7c-4af7-815b-923ea8ecbf4a"", ""exchange_id"": ""BINANCEJE"", ""server_version"": ""1.3521"", ""server_name"": ""HDC2-ENC-06-BAY-05"", ""dns_name"": ""HDC2-ENC-06-BAY-05.us-east-1.corpintra.net"", ""is_running"": true, ""time_server_start"": ""2020-02-07T10:25:22.3022141Z""}This message is used internally to measure the real-time latency of the link and acts as a heartbeat.Delivery triggers:On connection openEvery 1 secondOn updateProperties​NameTypeDescriptiontypestringMessage type, constant SERVER_INFO.timedatetimeTime message sent time to measure the link latency.instance_guidstringThe server process randomly generated GUID. It will change on each software restart.exchange_idstringExchange identifier.server_versionstringServer software version.server_namestringServer name.dns_namestringDNS name.is_runningbooleanIs the server on the other side running? Update with the false value will be sent before the shutdown.time_server_startdatetimeTime of server software start.ORDER_NEW_SINGLE_REQUEST OUT​Example of the ORDER_NEW_SINGLE_REQUEST message creating order on the KRAKEN exchange by the symbol_id_exchange.{ ""type"": ""ORDER_NEW_SINGLE_REQUEST"", ""exchange_id"": ""KRAKEN"", ""client_order_id"": ""6ab36bc1-344d-432e-ac6d-0bf44ee64c2b"", ""symbol_id_exchange"": ""XBT/USDT"", ""amount_order"": 0.045, ""price"": 0.0783, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": ""2020-01-01T10:45:20.1677709Z"", ""exec_inst"": [""MAKER_OR_CANCEL""]}Another example of the ORDER_NEW_SINGLE_REQUEST message creating order on the same market by the symbol_id_coinapi.{ ""type"": ""ORDER_NEW_SINGLE_REQUEST"", ""exchange_id"": ""KRAKEN"", ""client_order_id"": ""6ab36bc1-344d-432e-ac6d-0bf44ee64c2b"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_BTC_USDT"", ""amount_order"": 0.045, ""price"": 0.0783, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": ""2020-01-01T10:45:20.1677709Z"", ""exec_inst"": [""MAKER_OR_CANCEL""]}This message is used to send a new order to the exchange.Properties​ParameterTypeRequiredDescriptiontypestringtrueMessage type, constant ORDER_NEW_SINGLE_REQUEST.exchange_idstringtrueExchange identifier.client_order_idstringtrueThe unique identifier of the order assigned by the client.symbol_id_exchangestringfalseExchange symbol. One of the properties (symbol_id_exchange, symbol_id_coinapi) is required to identify the market for the new order.symbol_id_coinapistringfalseCoinAPI symbol. One of the properties (symbol_id_exchange, symbol_id_coinapi) is required to identify the market for the new order.amount_ordernumbertrueOrder quantity.pricenumbertrueOrder price.sidestringtrueSide of order. Allowed values: BUY or SELL.order_typestringtrueOrder types are documented in the separate section: EMS / Starter Guide / Order parameters / Order typetime_in_forcestringtrueOrder time in force options are documented in the separate section: EMS / Starter Guide / Order parameters / Time in forceexpire_timedatefalseExpiration time. Conditionaly required for orders with time_in_force = GOOD_TILL_TIME_EXCHANGE or GOOD_TILL_TIME_OEML.exec_inst[string]falseOrder execution instructions are documented in the separate section: EMS / Starter Guide / Order parameters / Execution instructionsORDER_CANCEL_SINGLE_REQUEST OUT​Example of the ORDER_CANCEL_SINGLE_REQUEST message to cancel a single order identified by the exchange_order_id on the BITSTAMP exchange.{ ""type"": ""ORDER_CANCEL_SINGLE_REQUEST"", ""exchange_id"": ""BITSTAMP"", ""exchange_order_id"": ""1234567""}Another example of the ORDER_CANCEL_SINGLE_REQUEST message to cancel a single order identified by the client_order_id on the BITSTAMP exchange.{ ""type"": ""ORDER_CANCEL_SINGLE_REQUEST"", ""exchange_id"": ""BITSTAMP"", ""client_order_id"": ""d8574207d9e3b16a4a5511753eeef1751""}Request cancel for an existing order. The order can be canceled using the client_order_id or exchange_order_id.Properties​ParameterTypeRequiredDescriptiontypestringtrueMessage type, constant ORDER_CANCEL_SINGLE_REQUEST.exchange_idstringtrueExchange identifier.exchange_order_idstringfalseUnique identifier of the order assigned by the exchange or executing system. One of the properties (exchange_order_id, client_order_id) is required to identify the order.client_order_idstringfalseThe unique identifier of the order assigned by the client. One of the properties (exchange_order_id, client_order_id) is required to identify the order.ORDER_CANCEL_ALL_REQUEST OUT​Example of the ORDER_CANCEL_ALL_REQUEST message to cancel all open orders on the KRAKEN exchange.{ ""type"": ""ORDER_CANCEL_ALL_REQUEST"", ""exchange_id"": ""KRAKEN""}This request cancels all open orders on a single specified exchange.Properties​ParameterTypeRequiredDescriptiontypestringtrueMessage type, constant ORDER_CANCEL_ALL_REQUEST.exchange_idbodystringtrueORDER_EXEC_REPORT_SNAPSHOT IN​Example of the ORDER_EXEC_REPORT_SNAPSHOT message delivering all open orders from the KRAKEN exchange.{ ""type"": ""ORDER_EXEC_REPORT_SNAPSHOT"", ""exchange_id"": ""KRAKEN"", ""data"":  [  {   ""exchange_id"": ""KRAKEN"",   ""client_order_id"": ""KPP-222389382-AQ"",   ""exchange_order_id"": ""90832ASASAS89789-1112"",   ""symbol_id_exchange"": ""XBT/USDT"",   ""symbol_id_coinapi"": ""KRAKEN_SPOT_BTC_USDT"",   ""amount_order"": 0.045,   ""amount_filled"": 0,   ""amount_open"": 0.22,   ""status"": ""NEW"",   ""price"": 0.0783,   ""avg_px"": 0.0783,   ""side"": ""BUY"",   ""order_type"": ""LIMIT"",   ""time_in_force"": ""GOOD_TILL_CANCEL"",   ""expire_time"": ""2020-01-01T10:45:20.1677709Z"",   ""exec_inst"": ""MAKER_OR_CANCEL""   ""status_history"": [    [     ""RECEIVED"",     ""2020-05-27T11:16:20.1677709Z""    ],    [     ""ROUTING"",     ""2020-05-27T11:16:20.1677710Z""    ],    [     ""ROUTED"",     ""2020-05-27T11:16:20.1677800Z""    ],    [     ""NEW"",     ""2020-05-27T11:16:20.1677951Z""    ]   ],   ""fills"": [    {     ""time"": ""2020-01-01T10:45:20.1677709Z"",     ""price"": 10799.2,     ""amount"": 0.002    }   ]  } ]}This message provides all open orders from the single exchange and will be sent separately for all interconnected exchanges.When this message is received, then the client must discard all open orders from this exchange and apply the snapshot, which later will be modified by the ORDER_EXEC_REPORT_UPDATE messages.Delivery triggers:On connection openProperties​ParameterInTypeRequiredDescriptiontypestringtrueMessage type, constant ORDER_EXEC_REPORT_SNAPSHOT.dataarrayobjecttrueNo description» exchange_idbodystringtrueExchange identifier used to identify the routing destination.» client_order_idbodystringtrueThe unique identifier of the order assigned by the client.» client_order_id_format_exchangebodystringtrueThe unique identifier of the order assigned by the client converted to the exchange order tag format for the purpose of tracking it.» exchange_order_idbodystringtrueUnique identifier of the order assigned by the exchange or executing system.» symbol_id_exchangebodystringfalseExchange symbol. One of the properties (symbol_id_exchange, symbol_id_coinapi) is required to identify the market for the new order.» symbol_id_coinapibodystringfalseCoinAPI symbol. One of the properties (symbol_id_exchange, symbol_id_coinapi) is required to identify the market for the new order.» amount_orderbodynumbertrueOrder quantity.» amount_filledbodynumbertrueTotal quantity filled.» amount_openbodynumbertrueQuantity open for further execution. amount_open = amount_order - amount_filled» statusbodystringtrueOrder statuses and the lifecycle are documented in the separate section: EMS / Starter Guide / Order Lifecycle» status_historybodyarraytrueTimestamped history of order status changes.» pricebodynumbertrueOrder price.» avg_pxbodynumbertrueCalculated average price of all fills on this order.» sidebodystringtrueSide of order.» order_typebodystringtrueOrder types are documented in the separate section: EMS / Starter Guide / Order parameters / Order type» time_in_forcebodystringtrueOrder time in force options are documented in the separate section: EMS / Starter Guide / Order parameters / Time in force» expire_timebodydatefalseExpiration time. Conditionaly required for orders with time_in_force = GOOD_TILL_TIME_EXCHANGE or GOOD_TILL_TIME_OEML.» exec_instbody[string]falseOrder execution instructions are documented in the separate section: EMS / Starter Guide / Order parameters / Execution instructions» error_messagebodynumbertrueError message» fillsbodyarraytrueRelay fill information on working ordersEnumerated Values​ParameterValue» sideBUY» sideSELL» order_typeLIMIT» time_in_forceGOOD_TILL_CANCEL» time_in_forceGOOD_TILL_TIME_EXCHANGE» time_in_forceGOOD_TILL_TIME_OMS» time_in_forceFILL_OR_KILL» time_in_forceIMMEDIATE_OR_CANCEL» exec_instMAKER_OR_CANCEL» exec_instAUCTION_ONLY» exec_instINDICATION_OF_INTERESTORDER_EXEC_REPORT_UPDATE IN​Example of the ORDER_EXEC_REPORT_UPDATE message notifying that an execution report for the order is changed. In this case, one order changed status, and it's filled.{ ""exchange_id"": ""KRAKEN"", ""client_order_id"": ""KPP-222389382-AQ"", ""client_order_id_format_exchange"": ""f81211e2-27c4-b86a-8143-01088ba9222c"", ""exchange_order_id"": ""90832ASASAS89789-1112"", ""symbol_id_exchange"": ""XBT/USDT"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_BTC_USDT"", ""amount_order"": 0.045, ""amount_open"": 0, ""amount_filled"": 0.045, ""status"": ""FILLED"", ""price"": 0.0783, ""avg_px"": 0.0783, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": ""2020-01-01T10:45:20.1677709Z"", ""exec_inst"": ""MAKER_OR_CANCEL"" ""status_history"": [  [   ""RECEIVED"",   ""2020-05-27T11:16:20.1677709Z""  ],  [   ""ROUTING"",   ""2020-05-27T11:16:20.1677710Z""  ],  [   ""ROUTED"",   ""2020-05-27T11:16:20.1677800Z""  ],  [   ""NEW"",   ""2020-05-27T11:16:20.1677951Z""  ],  [   ""FILLED"",   ""2020-05-27T11:16:30.6456457Z""  ] ], ""fills"": [  {   ""time"": ""2020-01-01T10:45:20.1677709Z"",   ""price"": 10799.2,   ""amount"": 0.002  } ] }This message is sent to notify the client that the order execution report changed.When this message is received, then the client must update the execution report in the memory to maintain the current state of execution reports for all open orders.The initial state of the collection is delivered via the snapshot message ORDER_EXEC_REPORT_SNAPSHOT.Delivery triggers:On execution report updateProperties​ParameterInTypeRequiredDescriptiontypestringtrueMessage type, constant ORDER_EXEC_REPORT_UPDATE.exchange_idbodystringtrueExchange identifier used to identify the routing destination.client_order_idbodystringtrueThe unique identifier of the order assigned by the client.client_order_id_format_exchangebodystringtrueThe unique identifier of the order assigned by the client converted to the exchange order tag format for the purpose of tracking it.exchange_order_idbodystringtrueUnique identifier of the order assigned by the exchange or executing system.symbol_id_exchangebodystringfalseExchange symbol. One of the properties (symbol_id_exchange, symbol_id_coinapi) is required to identify the market for the new order.symbol_id_coinapibodystringfalseCoinAPI symbol. One of the properties (symbol_id_exchange, symbol_id_coinapi) is required to identify the market for the new order.amount_orderbodynumbertrueOrder quantity.amount_filledbodynumbertrueTotal quantity filled.amount_openbodynumbertrueQuantity open for further execution. amount_open = amount_order - amount_filledstatusbodystringtrueOrder statuses and the lifecycle are documented in the separate section: EMS / Starter Guide / Order Lifecyclestatus_historybodyarraytrueTimestamped history of order status changes.pricebodynumbertrueOrder price.avg_pxbodynumberfalseCalculated average price of all fills on this order.sidebodystringtrueSide of order.order_typebodystringtrueOrder types are documented in the separate section: EMS / Starter Guide / Order parameters / Order typetime_in_forcebodystringtrueOrder time in force options are documented in the separate section: EMS / Starter Guide / Order parameters / Time in forceexpire_timebodydatefalseExpiration time. Conditionaly required for orders with time_in_force = GOOD_TILL_TIME_EXCHANGE or GOOD_TILL_TIME_OEML.exec_instbody[string]falseOrder execution instructions are documented in the separate section: EMS / Starter Guide / Order parameters / Execution instructionserror_messagebodynumbertrueError messagefillsbodyarraytrueRelay fill information on working ordersEnumerated Values​ParameterValue» sideBUY» sideSELL» order_typeLIMIT» time_in_forceGOOD_TILL_CANCEL» time_in_forceGOOD_TILL_TIME_EXCHANGE» time_in_forceGOOD_TILL_TIME_OMS» time_in_forceFILL_OR_KILL» time_in_forceIMMEDIATE_OR_CANCEL» exec_instMAKER_OR_CANCEL» exec_instAUCTION_ONLY» exec_instINDICATION_OF_INTERESTBALANCE_SNAPSHOT IN​Example of the BALANCE_SNAPSHOT message from the KRAKEN exchange.{ ""type"": ""BALANCE_SNAPSHOT"", ""exchange_id"": ""KRAKEN"", ""data"": [  {   ""asset_id_exchange"": ""XBT"",   ""asset_id_coinapi"": ""BTC"",   ""balance"": 0.00134444,   ""available"": 0.00134444,   ""locked"": 0,   ""last_updated_by"": ""EXCHANGE"",   ""rate_usd"": 9544.21  },  {   ""asset_id_exchange"": ""BCH"",   ""asset_id_coinapi"": ""BCHABC"",   ""balance"": 1234,   ""available"": 1000,   ""locked"": 234,   ""last_updated_by"": ""BALANCE_MANAGER"",   ""rate_usd"": 228.12  } ]}This message provides all balances from the single exchange and will be sent separately for all interconnected exchanges.When this message is received, then the client must discard all balances from this exchange and apply the snapshot, which later will be modified by the BALANCE_UPDATE messages.Delivery triggers:On connection openProperties​NameTypeRequiredDescriptiontypestringtrueMessage type, constant BALANCE_SNAPSHOT.exchange_idstringfalseExchange identifier.exchange_idstringfalseExchange identifier.data[object]falseNo description» asset_id_exchangestringfalseExchange currency code.» asset_id_coinapistringfalseCoinAPI currency code.» balancenumber(float)falseValue of the current total currency balance on the exchange.» availablenumber(float)falseValue of the current available currency balance on the exchange that can be used as collateral.» lockednumber(float)falseValue of the current locked currency balance by the exchange.» last_updated_bystringfalseSource of the last modification.» rate_usdnumber(float)falseCurrent exchange rate to the USD for the single unit of the currency.Enumerated Values​PropertyValuelast_updated_byINITIALIZATIONlast_updated_byBALANCE_MANAGERlast_updated_byEXCHANGEBALANCE_UPDATE IN​Example of the BALANCE_UPDATE message from the KRAKEN exchange.{ ""type"": ""BALANCE_UPDATE"", ""exchange_id"": ""KRAKEN"", ""asset_id_exchange"": ""XBT"", ""asset_id_coinapi"": ""BTC"", ""balance"": 0.00134444, ""available"": 0, ""locked"": 0.00134444, ""last_updated_by"": ""EXCHANGE"", ""rate_usd"": 9544.21}This message is sent to notify the client that the balance for the specific exchange currency pair changed.When this message is received, the client must update the balance in the memory to maintain the current state of balance across all exchanges and currencies.The initial state of the collection is delivered via the snapshot message BALANCE_SNAPSHOT.Delivery triggers:On balance updateProperties​NameTypeRequiredDescriptiontypestringtrueMessage type, constant BALANCE_SNAPSHOT.exchange_idstringfalseExchange identifier.exchange_idstringfalseExchange identifier.asset_id_exchangestringfalseExchange currency code.asset_id_coinapistringfalseCoinAPI currency code.balancenumber(float)falseValue of the current total currency balance on the exchange.availablenumber(float)falseValue of the current available currency balance on the exchange that can be used as collateral.lockednumber(float)falseValue of the current locked currency balance by the exchange.last_updated_bystringfalseSource of the last modification.rate_usdnumber(float)falseCurrent exchange rate to the USD for the single unit of the currency.Enumerated Values​PropertyValuelast_updated_byINITIALIZATIONlast_updated_byBALANCE_MANAGERlast_updated_byEXCHANGEPOSITION_SNAPSHOT IN​Example of the POSITION_SNAPSHOT message from the KRAKENFTS exchange.{ ""type"": ""POSITION_SNAPSHOT"", ""exchange_id"": ""KRAKENFTS"", ""data"":  [  {   ""symbol_id_exchange"": ""XBT/USDT"",   ""symbol_id_coinapi"": ""KRAKENFTS_PERP_BTC_USDT"",   ""avg_entry_price"": 0.00134444,   ""quantity"": 0.00134444,   ""side"": ""BUY"",   ""unrealised_pnl"": 0,   ""leverage"": 0,   ""cross_margin"": true,   ""liquidation_price"": 0.072323  } ]}This message provides all positions from the single exchange and will be sent separately for all interconnected exchanges.When this message is received, then the client must discard al positions from this exchange and apply the snapshot, which later will be modified by the POSITION_UPDATE messages.Delivery triggers:On connection openProperties​NameTypeRequiredDescriptiontypestringtrueMessage type, constant POSITION_SNAPSHOT.exchange_idstringfalseExchange identifier.data[object]falseNo description» symbol_id_exchangestringfalseExchange symbol.» symbol_id_coinapistringfalseCoinAPI symbol.» avg_entry_pricenumberfalseCalculated average price of all fills on this position.» quantitynumberfalseThe current position quantity.» sidestringfalseSide of order.» unrealized_pnlnumberfalseUnrealised profit or loss (PNL) of this position.» leveragenumberfalseLeverage for this position reported by the exchange.» cross_marginbooleanfalseIs cross margin mode enable for this position?» liquidation_pricenumberfalseLiquidation price. If mark price will reach this value, the position will be liquidated.POSITION_UPDATE IN​Example of the POSITION_UPDATE message from the KRAKENFTS exchange.{ ""type"": ""POSITION_UPDATE"", ""exchange_id"": ""KRAKENFTS"", ""symbol_id_exchange"": ""XBT/USDT"", ""symbol_id_coinapi"": ""KRAKENFTS_PERP_BTC_USDT"", ""avg_entry_price"": 0.00134444, ""quantity"": 0.00134444, ""side"": ""BUY"", ""unrealised_pnl"": 0, ""leverage"": 0, ""cross_margin"": true, ""liquidation_price"": 0.072323}This message is sent to notify the client that the position changed.When this message is received, then the client must update the position in the memory to maintain the current state of all positions across all symbols and exchanges.The initial state of the collection is delivered via the snapshot message POSITION_SNPASHOT.Delivery triggers:On position updateProperties​NameTypeRequiredDescriptiontypestringtrueMessage type, constant POSITION_SNAPSHOT.exchange_idstringfalseExchange identifier.symbol_id_exchangestringfalseExchange symbol.symbol_id_coinapistringfalseCoinAPI symbol.avg_entry_pricenumberfalseCalculated average price of all fills on this position.quantitynumberfalseThe current position quantity.sidestringfalseSide of order.unrealized_pnlnumberfalseUnrealised profit or loss (PNL) of this position.leveragenumberfalseLeverage for this position reported by the exchange.cross_marginbooleanfalseIs cross margin mode enable for this position?liquidation_pricenumberfalseLiquidation price. If mark price will reach this value, the position will be liquidated.SYMBOLS_SNAPSHOT IN​Example of the SYMBOLS_SNAPSHOT message.{ ""type"": ""SYMBOLS_SNAPSHOT"", ""exchange_id"": ""BITMEX"", ""data"": [  {  ""symbol_id_coinapi"": ""BITMEX_FTS_ETH_USD_200925"",  ""symbol_id_exchange"": ""ETHUSDU20"",  ""asset_id_base_exchange"": ""ETH"",  ""asset_id_quote_exchange"": ""USD"",  ""asset_id_base_coinapi"": ""ETH"",  ""asset_id_quote_coinapi"": ""USD"",  ""price_precision"": 0.010000000,  ""size_precision"": 1.000000000  },  {  ""symbol_id_coinapi"": ""BITMEX_FTS_LTC_BTC_200925"",  ""symbol_id_exchange"": ""LTCU20"",  ""asset_id_base_exchange"": ""LTC"",  ""asset_id_quote_exchange"": ""XBT"",  ""asset_id_base_coinapi"": ""LTC"",  ""asset_id_quote_coinapi"": ""BTC"",  ""price_precision"": 0.000001000,  ""size_precision"": 1.000000000  } ]}This message provides all market symbols from the single exchange and will be sent separately for all interconnected exchanges.When this message is received, then the client must discard all market symbols from this exchange and apply the snapshot.Delivery triggers:On connection openProperties​NameTypeRequiredDescriptiontypestringtrueMessage type, constant SYMBOLS_SNAPSHOT.exchange_idstringfalseExchange identifier.data[object]falseNo description» symbol_id_exchangestringfalseExchange symbol identifier.» symbol_id_coinapistringfalseCoinAPI symbol identifier.» asset_id_base_exchangestringfalseBase asset exchange identifier.» asset_id_quote_exchangestringfalseQuote asset exchange identifier.» asset_id_base_coinapistringfalseBase asset CoinAPI identifier.» asset_id_quote_coinapistringfalseQuote asset CoinAPI identifier.» price_precisionnumberfalsePrice precision for the symbol.» size_precisionnumberfalseSize precision for the symbol.MESSAGE_REJECT IN​Example of the MESSAGE_REJECT object.{ ""type"": ""MESSAGE_REJECT"", ""reject_reason"": ""ORDER_ID_NOT_FOUND"", ""exchange_id"": ""BINANCE"", ""message"": ""Order with ID: BINANCE-7d8a-4888 not found"", ""rejected_message"": ""{\""client_order_id\"":\""BINANCE-7d8a-4888\"",\""exchange_id\"":\""BINANCE\"",\""type\"":\""ORDER_CANCEL_SINGLE_REQUEST\""}""}Object is used to communicate rejection of user order request.Properties​MessageReject object.NameTypeRequiredDescriptiontypestringtrueMessage type, constant MESSAGE_REJECT.reject_reasonstringtrueCause of rejection. Allowed values: OTHER, EXCHANGE_UNREACHABLE, EXCHANGE_RESPONSE_TIMEOUT, ORDER_ID_NOT_FOUND, INVALID_TYPE, METHOD_NOT_SUPPORTED, JSON_ERROR,exchange_idstringfalseIf the message related to exchange, then the identifier of the exchange will be provided.messagestringtrueMessage text.rejected_messagestringfalseValue of rejected request, if availableWas this section helpful?12345PreviousWebSocket APINextFIX APISERVER_INFO INPropertiesORDER_NEW_SINGLE_REQUEST OUTPropertiesORDER_CANCEL_SINGLE_REQUEST OUTPropertiesORDER_CANCEL_ALL_REQUEST OUTPropertiesORDER_EXEC_REPORT_SNAPSHOT INPropertiesEnumerated ValuesORDER_EXEC_REPORT_UPDATE INPropertiesEnumerated ValuesBALANCE_SNAPSHOT INPropertiesEnumerated ValuesBALANCE_UPDATE INPropertiesEnumerated ValuesPOSITION_SNAPSHOT INPropertiesPOSITION_UPDATE INPropertiesSYMBOLS_SNAPSHOT INPropertiesMESSAGE_REJECT INPropertiesCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/websocket/messages)"
395,i.io cdn cgi l email protection#1d6e686d6d726f695d7e7274737c6d74337472,"i.io cdn cgi l email protection#1d6e686d6d726f695d7e7274737c6d74337472.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 8aad2678e9c02798 •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#1d6e686d6d726f695d7e7274737c6d74337472)"
396,i.io naas api bitcoin Methods getindexinfo,"i.io naas api bitcoin Methods getindexinfo.   getindexinfo | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetindexinfoOn this pagegetindexinfoOverview​The 'getindexinfo' RPC Method returns the status of one or all available indexes actively running in the node.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""getindexinfo"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""getindexinfo\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""getindexinfo"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""2.0"", ""method"": ""getindexinfo"", ""params"": [], ""id"": 1})headers = { 'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type': 'application/json', 'accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""getindexinfo"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) {console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""getindexinfo"",""params"": [],""id"":1}`) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"") req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""method"": ""getindexinfo"", ""params"": [], ""id"": 1})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""getindexinfo\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​index_name (string): It filters results for an index with a specific nameResponse​{ ""result"": {}, ""error"": null, ""id"": 1}txindex: The index name. synced: It states whether the index is synced or not best_block_height: The height of the block to which the index is syncedWas this section helpful?12345PreviousgetdifficultyNextgetmemoryinfoOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getindexinfo)"
397,i.io faq general How to handle order book flat files can go back in time,"i.io faq general How to handle order book flat files can go back in time.   How to handle order book flat files can go back in time? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralHow to handle order book flat files can go back in time?How to handle order book flat files can go back in time?It's expected behavior by design, we sometimes need to go back and failover to stream from another geographical site if we detect the issues with the feed. This mechanism will still exist in the future, however, we have assigned work to remove this backward jump in this or next quarter; it's not our priority at the moment as the impact is too low and it does not affect the quality of the data.You should always process all items in the file in the order in which they are recorded in the file and never change this order.When processing items according to the file order you will have the book which you can use for further processing. The current timestamp of the book is determined by the last processed line in the flat file (timestamps on this last line). In the event when the time going backward you should still normally process the file, but you can restrict supplying the book outside the flat-file processing algorithm until flat-file book time will be greater again than maximum seen timestamp; using this algorithm you will process the backward snapshot and corresponding updates to it transparently.Take a look at the example source code that describes the algorithm above: https://github.com/coinapi/coinapi-sdk/blob/master/csharp-flatfiles-example/Program.csWas this section helpful?12345PreviousHow to get more than 100 items in response?NextHow to handle payment errors during sign upCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/How-to-handle-order-book-flat-files-can-go-back-in-time)"
398,i.io market data websocket,"i.io market data websocket.   WebSocket API V1 | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1EndpointsGeneralMessagesWebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideWebSocket API V1On this pageWebSocket API V1Market Data - WebSocket APIWebSocket endpoint provides real-time market data streaming which works in Subscribe-Publish communication model. After establishing a WebSocket connection with us, you will need to send a Hello message documented below. If everything is correct, we will provide you with a continuous stream of real-time market data updates.Implemented Standards:HTTP1.0HTTP1.1HTTP2.0HTTP/3 + QUICWebSocketcautionYour WebSocket client implementation must comply with the ""v13"" version of the protocol documented in the RFC6455, including responding with the ""Pong"" message each time we will send ""Ping"" (every minute), failure to respond with the ""Pong"" from your WebSocket client will cause a connection to be closed.infoYou may also want to use our REST API for a listing of available symbols, exchanges or assets that we support if you wish to receive a filtered stream.Authentication​If you want to learn how to authenticate to this API, you can find detailed instructions and guidance in authentication section of this documentation.Was this section helpful?12345Previous Latest dataNextEndpointsAuthenticationCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/websocket)"
399,i.io faq general What is CoinAPI,"i.io faq general What is CoinAPI.   What is CoinAPI? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralWhat is CoinAPI?What is CoinAPI?CoinAPI is a platform that provides a fast, reliable, and unified API to access real-time or historical data from cryptocurrency markets. We are integrating all cryptocurrency exchanges, and delivering acquired data in both raw and preprocessed forms to our customers using a single, simple API.Was this section helpful?12345PreviousWhat exchanges are supported?NextWhat market symbol types are supported by CoinAPI?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/What-is-CoinAPI)"
400,i.io naas api ethereum Methods txpool inspect,"i.io naas api ethereum Methods txpool inspect.   txpool_inspect | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodstxpool_inspectOn this pagetxpool_inspectOverview​The 'txpool_inspect' method provides insights into the current state of the Ethereum transaction pool. It allows developers to inspect the transactions currently pending in theRequest​{ ""method"": ""txpool_inspect"", ""params"": [], ""id"": 1, ""jsonrpc"": ""2.0""}Request Parameters​method (string): The name of the method, in this case, ""txpool_inspect"".params (array): An array of parameters. For the 'txpool_inspect' method, this array is typically empty.id (integer): A unique identifier for the request.jsonrpc (string): The version of the JSON-RPC protocol. For Ethereum, it's typically ""2.0"".Response​{ ""id"": 1, ""jsonrpc"": ""2.0"", ""result"": { // Detailed information about the transactions in the pool }}Was this section helpful?12345Previoustxpool_contentFromNextweb3_clientVersionOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/txpool_inspect)"
401,i.io general faq billing and subscriptions How to upgrade downgrade my subscription,"i.io general faq billing and subscriptions How to upgrade downgrade my subscription.   How to upgrade/downgrade my subscription? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIBilling and SubscriptionsCan I cancel my subscription anytime?Can I still use my API key if I cancel my subscription?How to reactivate my canceled subscription?How to subscribe to the API?How to upgrade/downgrade my subscription?Security and PrivacyGlossaryChangelogFAQBilling and SubscriptionsHow to upgrade/downgrade my subscription?How to upgrade/downgrade my subscription?You may upgrade/downgrade your subscription via the Customer Portal (https://customerportal.coinapi.io/login). After logging in, please navigate to Subscriptions > Manage Subscriptions > Update Plan. We can upgrade or downgrade your subscription as well based on the support ticket request.Upgrading and downgrading operations are prorated, the remaining amount on your subscription at the moment of the change will be credited towards future liabilities. Your billing period cycle is not affected by plan change.Example 1:If you have a Streamer subscription with a billing date of 2018-07-15 and it's 2018-07-05 and you want to upgrade your Streamer plan to the Professional, then: - Unused Streamer subscriptions between 2018-07-05 and 2018-07-15 will be credited - Professional subscriptions between 2018-07-05 and 2018-07-15 will be debited.Example 2:You have the Professional subscription with billing date 2018-07-15, and it's 2018-07-05, and you want to downgrade to the Streamer plan, then: - Unused Professional subscriptions between 2018-07-05 and 2018-07-15 will be credited - Streamer subscriptions between 2018-07-05 and 2018-07-15 will be debited. - The remaining credit will be applied to future invoicesTo execute the request, kindly submit a request here: https://support.coinapi.io/hc/en-us/requests/newWas this section helpful?12345PreviousHow to subscribe to the API?NextSecurity and PrivacyCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/billing-and-subscriptions/How-to-upgrade-downgrade-my-subscription)"
402,i.io market data rest api ohlcv ohlcv historical data,"i.io market data rest api ohlcv ohlcv historical data.   Historical data | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcv Historical data by exchange Historical data Latest data List all periodsOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIOhlcv Historical data Historical dataGET /v1/ohlcv/:symbol_id/historyGet OHLCV timeseries data returned in time ascending order. Data can be requested by the period and for the specific symbol eg BITSTAMP_SPOT_BTC_USD, if you need to query timeseries by asset pairs eg. BTC/USD, then please reffer to the Exchange Rates Timeseries datainfoThe OHLCV Historical endpoint data can be delayed a few seconds. Use OHLCV Latest endpoint to get real-time data without delay.Path Parameterssymbol_id string requiredSymbol identifier of requested timeseries (from the Metadata -> Symbols)Query Parametersperiod_id string requiredIdentifier of requested timeseries period (e.g. 5SEC or 2MTH)time_start stringTimeseries starting time in ISO 8601time_end stringTimeseries ending time in ISO 8601limit int32Default value: 100Amount of items to return (mininum is 1, maximum is 100000, default value is 100, if the parameter is used then every 100 output items are counted as one request)include_empty_items booleanInclude items with no activity? (default value is false, possible values are true or false)Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [time_period_start date-timeThe start time of the time period.time_period_end date-timeThe end time of the time period.time_open date-time nullableThe time when the price opened.time_close date-time nullableThe time when the price closed.price_open double nullableThe opening price.price_high double nullableThe highest price during the time period.price_low double nullableThe lowest price during the time period.price_close double nullableThe closing price.volume_traded doubleThe total volume traded during the time period.trades_count int64The number of trades executed during the time period.][ { ""time_period_start"": ""2024-07-16T12:55:05.285Z"", ""time_period_end"": ""2024-07-16T12:55:05.286Z"", ""time_open"": ""2024-07-16T12:55:05.286Z"", ""time_close"": ""2024-07-16T12:55:05.286Z"", ""price_open"": 0, ""price_high"": 0, ""price_low"": 0, ""price_close"": 0, ""volume_traded"": 0, ""trades_count"": 0 }][ { ""time_period_start"": ""2017-01-01T00:00:00.0000000Z"", ""time_period_end"": ""2017-01-02T00:00:00.0000000Z"", ""time_open"": ""2017-01-01T00:01:08.0000000Z"", ""time_close"": ""2017-01-01T23:59:46.0000000Z"", ""price_open"": 966.34, ""price_high"": 1005, ""price_low"": 960.53, ""price_close"": 997.75, ""volume_traded"": 6850.59330859, ""trades_count"": 7815 }, { ""time_period_start"": ""2017-01-02T00:00:00.0000000Z"", ""time_period_end"": ""2017-01-03T00:00:00.0000000Z"", ""time_open"": ""2017-01-02T00:00:05.0000000Z"", ""time_close"": ""2017-01-02T23:59:37.0000000Z"", ""price_open"": 997.75, ""price_high"": 1032, ""price_low"": 990.01, ""price_close"": 1012.54, ""volume_traded"": 8167.38103018, ""trades_count"": 7871 }]SchemaExample (from schema)Example responseSchemaArray [time_period_start date-timeThe start time of the time period.time_period_end date-timeThe end time of the time period.time_open date-time nullableThe time when the price opened.time_close date-time nullableThe time when the price closed.price_open double nullableThe opening price.price_high double nullableThe highest price during the time period.price_low double nullableThe lowest price during the time period.price_close double nullableThe closing price.volume_traded doubleThe total volume traded during the time period.trades_count int64The number of trades executed during the time period.][ { ""time_period_start"": ""2024-07-16T12:55:05.286Z"", ""time_period_end"": ""2024-07-16T12:55:05.286Z"", ""time_open"": ""2024-07-16T12:55:05.286Z"", ""time_close"": ""2024-07-16T12:55:05.286Z"", ""price_open"": 0, ""price_high"": 0, ""price_low"": 0, ""price_close"": 0, ""volume_traded"": 0, ""trades_count"": 0 }][ { ""time_period_start"": ""2017-01-01T00:00:00.0000000Z"", ""time_period_end"": ""2017-01-02T00:00:00.0000000Z"", ""time_open"": ""2017-01-01T00:01:08.0000000Z"", ""time_close"": ""2017-01-01T23:59:46.0000000Z"", ""price_open"": 966.34, ""price_high"": 1005, ""price_low"": 960.53, ""price_close"": 997.75, ""volume_traded"": 6850.59330859, ""trades_count"": 7815 }, { ""time_period_start"": ""2017-01-02T00:00:00.0000000Z"", ""time_period_end"": ""2017-01-03T00:00:00.0000000Z"", ""time_open"": ""2017-01-02T00:00:05.0000000Z"", ""time_close"": ""2017-01-02T23:59:37.0000000Z"", ""price_open"": 997.75, ""price_high"": 1032, ""price_low"": 990.01, ""price_close"": 1012.54, ""volume_traded"": 8167.38103018, ""trades_count"": 7871 }]SchemaExample (from schema)Example responseSchemaArray [time_period_start date-timeThe start time of the time period.time_period_end date-timeThe end time of the time period.time_open date-time nullableThe time when the price opened.time_close date-time nullableThe time when the price closed.price_open double nullableThe opening price.price_high double nullableThe highest price during the time period.price_low double nullableThe lowest price during the time period.price_close double nullableThe closing price.volume_traded doubleThe total volume traded during the time period.trades_count int64The number of trades executed during the time period.][ { ""time_period_start"": ""2024-07-16T12:55:05.286Z"", ""time_period_end"": ""2024-07-16T12:55:05.286Z"", ""time_open"": ""2024-07-16T12:55:05.286Z"", ""time_close"": ""2024-07-16T12:55:05.286Z"", ""price_open"": 0, ""price_high"": 0, ""price_low"": 0, ""price_close"": 0, ""volume_traded"": 0, ""trades_count"": 0 }][ { ""time_period_start"": ""2017-01-01T00:00:00.0000000Z"", ""time_period_end"": ""2017-01-02T00:00:00.0000000Z"", ""time_open"": ""2017-01-01T00:01:08.0000000Z"", ""time_close"": ""2017-01-01T23:59:46.0000000Z"", ""price_open"": 966.34, ""price_high"": 1005, ""price_low"": 960.53, ""price_close"": 997.75, ""volume_traded"": 6850.59330859, ""trades_count"": 7815 }, { ""time_period_start"": ""2017-01-02T00:00:00.0000000Z"", ""time_period_end"": ""2017-01-03T00:00:00.0000000Z"", ""time_open"": ""2017-01-02T00:00:05.0000000Z"", ""time_close"": ""2017-01-02T23:59:37.0000000Z"", ""price_open"": 997.75, ""price_high"": 1032, ""price_low"": 990.01, ""price_close"": 1012.54, ""volume_traded"": 8167.38103018, ""trades_count"": 7871 }]SchemaExample (from schema)Example responseSchemaArray [time_period_start date-timeThe start time of the time period.time_period_end date-timeThe end time of the time period.time_open date-time nullableThe time when the price opened.time_close date-time nullableThe time when the price closed.price_open double nullableThe opening price.price_high double nullableThe highest price during the time period.price_low double nullableThe lowest price during the time period.price_close double nullableThe closing price.volume_traded doubleThe total volume traded during the time period.trades_count int64The number of trades executed during the time period.][ { ""time_period_start"": ""2024-07-16T12:55:05.286Z"", ""time_period_end"": ""2024-07-16T12:55:05.286Z"", ""time_open"": ""2024-07-16T12:55:05.286Z"", ""time_close"": ""2024-07-16T12:55:05.286Z"", ""price_open"": 0, ""price_high"": 0, ""price_low"": 0, ""price_close"": 0, ""volume_traded"": 0, ""trades_count"": 0 }][ { ""time_period_start"": ""2017-01-01T00:00:00.0000000Z"", ""time_period_end"": ""2017-01-02T00:00:00.0000000Z"", ""time_open"": ""2017-01-01T00:01:08.0000000Z"", ""time_close"": ""2017-01-01T23:59:46.0000000Z"", ""price_open"": 966.34, ""price_high"": 1005, ""price_low"": 960.53, ""price_close"": 997.75, ""volume_traded"": 6850.59330859, ""trades_count"": 7815 }, { ""time_period_start"": ""2017-01-02T00:00:00.0000000Z"", ""time_period_end"": ""2017-01-03T00:00:00.0000000Z"", ""time_open"": ""2017-01-02T00:00:05.0000000Z"", ""time_close"": ""2017-01-02T23:59:37.0000000Z"", ""price_open"": 997.75, ""price_high"": 1032, ""price_low"": 990.01, ""price_close"": 1012.54, ""volume_traded"": 8167.38103018, ""trades_count"": 7871 }]Loading...Was this section helpful?12345Previous Historical data by exchangeNext Latest dataCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/ohlcv/ohlcv-historical-data)"
403,i.io general faq general Can I use the API to show graphs charts or tables,"i.io general faq general Can I use the API to show graphs charts or tables.   Can I use the API to show graphs, charts or tables? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralCan I use the API to show graphs, charts or tables?Can I use the API to show graphs, charts or tables?Yes, you can use our data to display graphs, charts, or tables. The simplest way is to plug our data into any third-party charting library, for example:https://www.highcharts.com/https://www.amcharts.com/https://www.vobcocharts.com/demos/getting-startedhttps://plot.ly/javascript/box-plots/https://canvasjs.com/javascript-charts/candlestick-line-chart/http://techanjs.org/http://recharts.orghttps://uber.github.io/react-vis/examples/showcases/plotshttps://developers.google.com/chart/interactive/docs/galleryWas this section helpful?12345PreviousCan I use the API commercially to show prices on my website?NextCan you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/Can-I-use-the-API-to-show-graphs-charts-or-tables)"
404,i.io ems api rest api positions get open positions,"i.io ems api rest api positions get open positions.   Get open positions | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIREST APIBalancesOrdersPositionsGet open positionsWebSocket APIFIX APISelf Hosted GuideREST APIPositionsGet open positionsGet open positionsGET /v1/positionsGet current open positions across all or single exchange.Query Parametersexchange_id stringFilter the balances to the specific exchange.Responses200490Collection of positons.application/jsonSchemaExample (from schema)SchemaArray [exchange_id stringExchange identifier used to identify the routing destination.data object[]Array [symbol_id_exchange stringExchange symbol.symbol_id_coinapi stringCoinAPI symbol.avg_entry_price numberCalculated average price of all fills on this position.quantity numberThe current position quantity.side OrdSidePossible values: [BUY, SELL]Side of order.unrealized_pnl numberUnrealised profit or loss (PNL) of this position.leverage numberLeverage for this position reported by the exchange.cross_margin booleanIs cross margin mode enable for this position?liquidation_price numberLiquidation price. If mark price will reach this value, the position will be liquidated.raw_data object]][ { ""exchange_id"": ""KRAKEN"", ""data"": [  {  ""symbol_id_exchange"": ""XBTUSD"",  ""symbol_id_coinapi"": ""BITMEX_PERP_BTC_USD"",  ""avg_entry_price"": 0.00134444,  ""quantity"": 7,  ""side"": ""BUY"",  ""unrealized_pnl"": 0,  ""leverage"": 0,  ""cross_margin"": true,  ""liquidation_price"": 0.072323,  ""raw_data"": ""Other information provided by the exchange on this position.""  } ] }]Exchange is unreachable.appliction/jsonSchemaExample (from schema)Schematype stringMessage type, constant.reject_reason RejectReasonPossible values: [OTHER, EXCHANGE_UNREACHABLE, EXCHANGE_RESPONSE_TIMEOUT, ORDER_ID_NOT_FOUND, INVALID_TYPE, METHOD_NOT_SUPPORTED, JSON_ERROR]Cause of rejection.exchange_id stringIf the message related to exchange, then the identifier of the exchange will be provided.message stringMessage text.rejected_message stringValue of rejected request, if available.{ ""type"": ""MESSAGE_REJECT"", ""reject_reason"": ""ORDER_ID_NOT_FOUND"", ""exchange_id"": ""BINANCE"", ""message"": ""Order with ID: BINANCE-7d8a-4888 not found"", ""rejected_message"": ""{\""client_order_id\"":\""BINANCE-7d8a-4888\"",\""exchange_id\"":\""BINANCE\"",\""type\"":\""ORDER_CANCEL_SINGLE_REQUEST\""}""}Loading...Was this section helpful?12345PreviousPositionsNextWebSocket APICopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/rest-api/positions/get-open-positions)"
405,i.io ems api managed cloud rest api certificate,"i.io ems api managed cloud rest api certificate.   Certificate | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIAccountCertificateGet authentication certificateEndpointsExchangeLocationREST APIWebSocket APIFIX APISelf Hosted GuideManaged Cloud REST APICertificateCertificateIn the certificate section we generate TLS certificates that can be used as method of authenticating to the EMS API.📄️ Get authentication certificateProviding PEM file with the Private Key, Public Key and the Certificate to authenticate to the EMS API.Was this section helpful?12345PreviousAdd or update accountNextGet authentication certificateCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/managed-cloud-rest-api/certificate)"
406,i.io ems api rest api orders history of order changes,"i.io ems api rest api orders history of order changes.   History of order changes | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIREST APIBalancesOrdersCancel all orders requestCancel order requestGet open ordersGet order execution reportHistory of order changesSend new orderPositionsWebSocket APIFIX APISelf Hosted GuideREST APIOrdersHistory of order changesHistory of order changesGET /v1/orders/historyBased on the date range, all changes registered in the orderbook.Query Parameterstime_start string requiredStart datetime_end string requiredEnd dateResponses200400The last execution report of the requested order.application/jsonSchemaExample (from schema)SchemaArray [apikey stringApikeyexchangeId stringExchange idclientOrderId stringClient order idsymbolIdExchange stringSymbol id exchangesymbolIdCoinapi stringSymbol id in coinapiamountOrder numberAmountprice numberPriceside number1-buy, 2-sellorderType stringOrder typetimeInForce stringTime in forceexpireTime dateExpire timeexecInst string[]Exec instclientOrderIdFormatExchange stringClient order id formatexchangeOrderId stringExchange order idamountOpen numberAmount openamountFilled numberAmount filledavgPx numberAverage pricestatus stringStatusstatusHistoryStatus string[]History statusstatusHistoryTime date[]History status timeerrorMessageResult stringError messageerrorMessageReason stringError message reasonerrorMessageMessage stringError messagefillsTime date[]Fills timefillsPrice number[]Fills pricefillsAmount number[]Fills amountcreatedTime dateCreated time][ { ""apikey"": ""9a55567a-b5ff-4b78-b6aa-xxxx"", ""exchangeId"": ""BINANCE"", ""clientOrderId"": ""6ab36bc1-344d-432e-ac6d-0bf44ee64c2b"", ""symbolIdExchange"": ""BTCUSDT"", ""symbolIdCoinapi"": ""BINANCE_SPOT_BTC_USDT"", ""amountOrder"": 0.00034, ""price"": 31939.47, ""side"": 2, ""orderType"": ""LIMIT"", ""timeInForce"": ""GOOD_TILL_CANCEL"", ""expireTime"": ""2022-05-01T00:00:00"", ""execInst"": [  [  ""MAKER_OR_CANCEL""  ] ], ""clientOrderIdFormatExchange"": ""6ab36bc1-344d-432e-ac6d-0bf44ee64c2b"", ""exchangeOrderId"": ""6ab36bc1-344d-432e-ac6d-0bf44ee64c2b"", ""amountOpen"": 0.00034, ""amountFilled"": 0, ""avgPx"": 0, ""status"": ""REJECTED"", ""statusHistoryStatus"": [  [  ""RECEIVED"",  ""ROUTING"",  ""REJECTED""  ] ], ""statusHistoryTime"": [  [  ""2022-05-27T13:06:34.5122626Z"",  ""2022-05-27T13:06:37.3410216Z"",  ""2022-05-27T13:06:40.1342877Z""  ] ], ""errorMessageResult"": ""string"", ""errorMessageReason"": ""string"", ""errorMessageMessage"": ""-2015 Invalid API-key, IP, or permissions for action. https://api.binance.com/api/v3/order?newOrderRespType"", ""fillsTime"": [  [  ""2022-05-27T13:06:34.5122626Z"",  ""2022-05-27T13:06:37.3410216Z"",  ""2022-05-27T13:06:40.1342877Z""  ] ], ""fillsPrice"": [  [  31939.47,  31939.67  ] ], ""fillsAmount"": [  [  0.0032,  0.0009  ] ], ""createdTime"": ""2022-06-27T07:02:33.1977903Z"" }]Orders log is not configured.application/jsonSchemaExample (from schema)Schemamessage stringMessage text.{ ""message"": ""string""}Loading...Was this section helpful?12345PreviousGet order execution reportNextSend new orderCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/rest-api/orders/history-of-order-changes)"
407,i.io naas api bitcoin Methods listtransactions,"i.io naas api bitcoin Methods listtransactions.   listtransactions | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodslisttransactionsOn this pagelisttransactionsOverview​The 'listtransactions' method allows you to retrieve a list of your transactions with detailed information about each transaction, including the involved addresses, transaction category, amount, fee, and more.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""listtransactions"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""listtransactions\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""listtransactions"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""2.0"", ""method"": ""listtransactions"", ""params"": [], ""id"": 1})headers = { 'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type': 'application/json', 'accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""listtransactions"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""listtransactions"",""params"": [],""id"":1}`) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"") req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""method"": ""listtransactions"", ""params"": [], ""id"": 1})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""listtransactions\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​count (numeric, optional): The number of transactions to return.skip (numeric, optional): The number of transactions to skip.startblock (string, optional): The starting block to return transactions from.endblock (string, optional): The ending block to return transactions until.Response​{ ""result"": null, ""error"": { ""code"": -18, ""message"": ""No wallet is loaded. Load a wallet using loadwallet or create a new one with createwallet. (Note: A default wallet is no longer automatically created)"" }, ""id"": 1}Was this section helpful?12345PreviouslistsinceblockNextEthereumOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/listtransactions)"
408,i.io naas api bitcoin Methods createmultisig x,"i.io naas api bitcoin Methods createmultisig x.   createmultisig | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodscreatemultisigOn this pagecreatemultisigOverview​The 'createmultisig' method creates a multi-signature address with n signature of m keys required.Request​shellcsharpphppythonjavascriptgorubywget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""createmultisig"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""createmultisig\"",\r \""params\"": []\r }\r "", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""createmultisig"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""createmultisig"", ""params"": []})headers = { 'Content-Type': 'application/json', 'accept': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""createmultisig"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{`+""""+` ""jsonrpc"": ""1.0"",`+""""+` ""id"": ""1"",`+""""+` ""method"": ""createmultisig"",`+""""+` ""params"": []`+""""+`}`+""""+``)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""createmultisig"", ""params"": []})response = https.request(request)puts response.read_bodyRequest Parameters​nrequired (numeric, required): The number of required signatures out of the n keys.keys (json array, required): The hex-encoded public keys.address_type (string, optional, default=legacy): The address type to use. Options are “legacy”, “p2sh-segwit”, and “bech32”.Response​Was this section helpful?12345PreviouscombineRawTransactionNextcreatepsbtOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/createmultisig_x)"
409,i.io market data rest api quotes quotes current quotes for a specific symbol,"i.io market data rest api quotes quotes current quotes for a specific symbol.   Current quotes for a specific symbol | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcvOrder BookOrder Book L3Quotes Current data Current quotes for a specific symbol Historical data Latest data Latest quote updates for a specific symbolTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIQuotes Current quotes for a specific symbol Current quotes for a specific symbolGET /v1/quotes/:symbol_id/current Current quotes for a specific symbolPath Parameterssymbol_id string requiredThe symbol identifier (from the Metadata -> Symbols)Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemasymbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the quote trade.time_coinapi date-timeThe CoinAPI time when the quote trade was received.ask_price double nullableThe best asking price.ask_size double nullableThe volume resting on the best ask. If the value is equal to zero, then the size is unknown.bid_price double nullableThe best bidding price.bid_size double nullableThe volume resting on the best bid. If the value is equal to zero, then the size is unknown.last_trade objectRepresents the last executed transaction.time_exchange date-timeThe exchange time of the last trade.time_coinapi date-timeThe CoinAPI time when the last trade was received.uuid uuidThe UUID of the last trade.price doubleThe price of the last trade.size doubleThe size of the last trade.taker_side string nullableThe taker side of the last trade.{ ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.272Z"", ""time_coinapi"": ""2024-07-16T12:55:05.272Z"", ""ask_price"": 0, ""ask_size"": 0, ""bid_price"": 0, ""bid_size"": 0, ""last_trade"": { ""time_exchange"": ""2024-07-16T12:55:05.272Z"", ""time_coinapi"": ""2024-07-16T12:55:05.272Z"", ""uuid"": ""3fa85f64-5717-4562-b3fc-2c963f66afa6"", ""price"": 0, ""size"": 0, ""taker_side"": ""string"" }}[ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124, ""last_trade"": {  ""time_exchange"": ""2017-03-18T22:42:21.3763342Z"",  ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"",  ""uuid"": ""1ea8adc5-6459-47ca-adbf-0c3f8c729bb2"",  ""price"": 770,  ""size"": 0.05,  ""taker_side"": ""SELL"" } }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124, ""last_trade"": {  ""time_exchange"": ""2017-03-18T22:42:21.3763342Z"",  ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"",  ""uuid"": ""1ea8adc5-6459-47ca-adbf-0c3f8c729bb2"",  ""price"": 770,  ""size"": 0.05,  ""taker_side"": ""SELL"" } }]SchemaExample (from schema)Example responseSchemasymbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the quote trade.time_coinapi date-timeThe CoinAPI time when the quote trade was received.ask_price double nullableThe best asking price.ask_size double nullableThe volume resting on the best ask. If the value is equal to zero, then the size is unknown.bid_price double nullableThe best bidding price.bid_size double nullableThe volume resting on the best bid. If the value is equal to zero, then the size is unknown.last_trade objectRepresents the last executed transaction.time_exchange date-timeThe exchange time of the last trade.time_coinapi date-timeThe CoinAPI time when the last trade was received.uuid uuidThe UUID of the last trade.price doubleThe price of the last trade.size doubleThe size of the last trade.taker_side string nullableThe taker side of the last trade.{ ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.272Z"", ""time_coinapi"": ""2024-07-16T12:55:05.272Z"", ""ask_price"": 0, ""ask_size"": 0, ""bid_price"": 0, ""bid_size"": 0, ""last_trade"": { ""time_exchange"": ""2024-07-16T12:55:05.272Z"", ""time_coinapi"": ""2024-07-16T12:55:05.272Z"", ""uuid"": ""3fa85f64-5717-4562-b3fc-2c963f66afa6"", ""price"": 0, ""size"": 0, ""taker_side"": ""string"" }}[ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124, ""last_trade"": {  ""time_exchange"": ""2017-03-18T22:42:21.3763342Z"",  ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"",  ""uuid"": ""1ea8adc5-6459-47ca-adbf-0c3f8c729bb2"",  ""price"": 770,  ""size"": 0.05,  ""taker_side"": ""SELL"" } }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124, ""last_trade"": {  ""time_exchange"": ""2017-03-18T22:42:21.3763342Z"",  ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"",  ""uuid"": ""1ea8adc5-6459-47ca-adbf-0c3f8c729bb2"",  ""price"": 770,  ""size"": 0.05,  ""taker_side"": ""SELL"" } }]SchemaExample (from schema)Example responseSchemasymbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the quote trade.time_coinapi date-timeThe CoinAPI time when the quote trade was received.ask_price double nullableThe best asking price.ask_size double nullableThe volume resting on the best ask. If the value is equal to zero, then the size is unknown.bid_price double nullableThe best bidding price.bid_size double nullableThe volume resting on the best bid. If the value is equal to zero, then the size is unknown.last_trade objectRepresents the last executed transaction.time_exchange date-timeThe exchange time of the last trade.time_coinapi date-timeThe CoinAPI time when the last trade was received.uuid uuidThe UUID of the last trade.price doubleThe price of the last trade.size doubleThe size of the last trade.taker_side string nullableThe taker side of the last trade.{ ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.272Z"", ""time_coinapi"": ""2024-07-16T12:55:05.272Z"", ""ask_price"": 0, ""ask_size"": 0, ""bid_price"": 0, ""bid_size"": 0, ""last_trade"": { ""time_exchange"": ""2024-07-16T12:55:05.272Z"", ""time_coinapi"": ""2024-07-16T12:55:05.272Z"", ""uuid"": ""3fa85f64-5717-4562-b3fc-2c963f66afa6"", ""price"": 0, ""size"": 0, ""taker_side"": ""string"" }}[ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124, ""last_trade"": {  ""time_exchange"": ""2017-03-18T22:42:21.3763342Z"",  ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"",  ""uuid"": ""1ea8adc5-6459-47ca-adbf-0c3f8c729bb2"",  ""price"": 770,  ""size"": 0.05,  ""taker_side"": ""SELL"" } }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124, ""last_trade"": {  ""time_exchange"": ""2017-03-18T22:42:21.3763342Z"",  ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"",  ""uuid"": ""1ea8adc5-6459-47ca-adbf-0c3f8c729bb2"",  ""price"": 770,  ""size"": 0.05,  ""taker_side"": ""SELL"" } }]SchemaExample (from schema)Example responseSchemasymbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the quote trade.time_coinapi date-timeThe CoinAPI time when the quote trade was received.ask_price double nullableThe best asking price.ask_size double nullableThe volume resting on the best ask. If the value is equal to zero, then the size is unknown.bid_price double nullableThe best bidding price.bid_size double nullableThe volume resting on the best bid. If the value is equal to zero, then the size is unknown.last_trade objectRepresents the last executed transaction.time_exchange date-timeThe exchange time of the last trade.time_coinapi date-timeThe CoinAPI time when the last trade was received.uuid uuidThe UUID of the last trade.price doubleThe price of the last trade.size doubleThe size of the last trade.taker_side string nullableThe taker side of the last trade.{ ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.272Z"", ""time_coinapi"": ""2024-07-16T12:55:05.272Z"", ""ask_price"": 0, ""ask_size"": 0, ""bid_price"": 0, ""bid_size"": 0, ""last_trade"": { ""time_exchange"": ""2024-07-16T12:55:05.272Z"", ""time_coinapi"": ""2024-07-16T12:55:05.272Z"", ""uuid"": ""3fa85f64-5717-4562-b3fc-2c963f66afa6"", ""price"": 0, ""size"": 0, ""taker_side"": ""string"" }}[ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124, ""last_trade"": {  ""time_exchange"": ""2017-03-18T22:42:21.3763342Z"",  ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"",  ""uuid"": ""1ea8adc5-6459-47ca-adbf-0c3f8c729bb2"",  ""price"": 770,  ""size"": 0.05,  ""taker_side"": ""SELL"" } }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""ask_price"": 770, ""ask_size"": 3252, ""bid_price"": 760, ""bid_size"": 124, ""last_trade"": {  ""time_exchange"": ""2017-03-18T22:42:21.3763342Z"",  ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"",  ""uuid"": ""1ea8adc5-6459-47ca-adbf-0c3f8c729bb2"",  ""price"": 770,  ""size"": 0.05,  ""taker_side"": ""SELL"" } }]Loading...Was this section helpful?12345Previous Current dataNext Historical dataCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/quotes/quotes-current-quotes-for-a-specific-symbol)"
410,i.io market data rest api metrics listing of all supported metrics by coin api,"i.io market data rest api metrics listing of all supported metrics by coin api.   Listing of all supported metrics by CoinAPI | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsCurrent metrics for given assetCurrent metrics for given exchangeCurrent metrics for given symbolHistorical metrics for assetHistorical metrics for symbolHistorical metrics for the exchangeListing of all supported metrics by CoinAPIListing of all supported exchange metricsListing of all supported metrics for assetListing of all supported metrics for symbolOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIMetricsListing of all supported metrics by CoinAPIListing of all supported metrics by CoinAPIGET /v1/metrics/listingGet all data metrics.Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [metric_id string nullableGets or sets the metric ID.description string nullableGets or sets the metric description.][ { ""metric_id"": ""string"", ""description"": ""string"" }][ { ""metric_id"": ""LIQUIDATION_QUANTITY"", ""description"": ""The liquidation quantity metric calculates the specific amount of the asset that must be sold to settle the trader's obligations and bring their position back to a manageable level. It helps ensure that the trader's losses are covered and that their account remains in good standing."" }, { ""metric_id"": ""DERIVATIVES_LAST_PRICE"", ""description"": ""The last price represents the price at which the most recent trade of the derivative contract occurred. It provides traders and investors with the latest information on the market value of the derivative, allowing them to assess the current market sentiment, track price movements, and make informed decisions regarding their derivative positions. The derivatives last price metric is crucial for monitoring real-time market conditions and managing derivative trading strategies effectively."" }]SchemaExample (from schema)Example responseSchemaArray [metric_id string nullableGets or sets the metric ID.description string nullableGets or sets the metric description.][ { ""metric_id"": ""string"", ""description"": ""string"" }][ { ""metric_id"": ""LIQUIDATION_QUANTITY"", ""description"": ""The liquidation quantity metric calculates the specific amount of the asset that must be sold to settle the trader's obligations and bring their position back to a manageable level. It helps ensure that the trader's losses are covered and that their account remains in good standing."" }, { ""metric_id"": ""DERIVATIVES_LAST_PRICE"", ""description"": ""The last price represents the price at which the most recent trade of the derivative contract occurred. It provides traders and investors with the latest information on the market value of the derivative, allowing them to assess the current market sentiment, track price movements, and make informed decisions regarding their derivative positions. The derivatives last price metric is crucial for monitoring real-time market conditions and managing derivative trading strategies effectively."" }]SchemaExample (from schema)Example responseSchemaArray [metric_id string nullableGets or sets the metric ID.description string nullableGets or sets the metric description.][ { ""metric_id"": ""string"", ""description"": ""string"" }][ { ""metric_id"": ""LIQUIDATION_QUANTITY"", ""description"": ""The liquidation quantity metric calculates the specific amount of the asset that must be sold to settle the trader's obligations and bring their position back to a manageable level. It helps ensure that the trader's losses are covered and that their account remains in good standing."" }, { ""metric_id"": ""DERIVATIVES_LAST_PRICE"", ""description"": ""The last price represents the price at which the most recent trade of the derivative contract occurred. It provides traders and investors with the latest information on the market value of the derivative, allowing them to assess the current market sentiment, track price movements, and make informed decisions regarding their derivative positions. The derivatives last price metric is crucial for monitoring real-time market conditions and managing derivative trading strategies effectively."" }]SchemaExample (from schema)Example responseSchemaArray [metric_id string nullableGets or sets the metric ID.description string nullableGets or sets the metric description.][ { ""metric_id"": ""string"", ""description"": ""string"" }][ { ""metric_id"": ""LIQUIDATION_QUANTITY"", ""description"": ""The liquidation quantity metric calculates the specific amount of the asset that must be sold to settle the trader's obligations and bring their position back to a manageable level. It helps ensure that the trader's losses are covered and that their account remains in good standing."" }, { ""metric_id"": ""DERIVATIVES_LAST_PRICE"", ""description"": ""The last price represents the price at which the most recent trade of the derivative contract occurred. It provides traders and investors with the latest information on the market value of the derivative, allowing them to assess the current market sentiment, track price movements, and make informed decisions regarding their derivative positions. The derivatives last price metric is crucial for monitoring real-time market conditions and managing derivative trading strategies effectively."" }]Loading...Was this section helpful?12345PreviousHistorical metrics for the exchangeNextListing of all supported exchange metricsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/metrics/listing-of-all-supported-metrics-by-coin-api)"
411,i.io naas api ethereum Methods eth mining,"i.io naas api ethereum Methods eth mining.   eth_mining | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_miningOn this pageeth_miningOverview​The ""eth_mining"" method returns true if client is actively mining new blocks.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'content-type: application/json' \  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data ' {  ""id"": 1,  ""jsonrpc"": ""2.0"",  ""method"": ""eth_mining"" }'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_mining\""}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [ CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"", CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => """", CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 30, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => ""POST"", CURLOPT_POSTFIELDS => json_encode([ 'id' => 1, 'jsonrpc' => '2.0', 'method' => 'eth_mining' ]), CURLOPT_HTTPHEADER => [ ""accept: application/json"", ""content-type: application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" ],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) { echo ""cURL Error #:"" . $err;} else { echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_mining""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text) const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({id: 1, jsonrpc: '2.0', method: 'eth_mining'})};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_mining\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_mining\""}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_mining\""}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​Response​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""error"": {  ""code"": -32601,  ""message"": """" }}Was this section helpful?12345Previouseth_maxPriorityFeePerGasNexteth_newBlockFilterOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_mining)"
412,i.io market data websocket ds general,"i.io market data websocket ds general.   General | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1WebSocket API DSEndpointsGeneralMessagesJSON RPCFIX APIHow-to guidesPerformance Testing GuideWebSocket API DSGeneralOn this pageGeneralHello OUT​Example hello message for trades subscription to 2 selected COINBASE symbols one via the CoinAPI symbol id and other via the exchange symbol id:{ ""type"": ""hello"", ""heartbeat"": false, ""subscribe_data_type"": [""trade""], ""subscribe_filter_symbol_id"": [ ""COINBASE_SPOT_BTC_USD"", ""ETH-USD"" ]}Another example of a hello message for subscription to quotes related to the BTC or ETH assets:{ ""type"": ""hello"", ""heartbeat"": false, ""subscribe_data_type"": [""quote""], ""subscribe_filter_asset_id"": [""BTC"", ""ETH""]}Another example of a hello message for subscription to quotes related to the BTC/USD asset pair:{ ""type"": ""hello"", ""heartbeat"": false, ""subscribe_data_type"": [""quote""], ""subscribe_filter_asset_id"": [""BTC/USD""]}Another example of a hello message for subscription of multiple data types:{ ""type"": ""hello"", ""heartbeat"": false, ""subscribe_data_type"": [""trade"", ""quote"", ""book20""]}Subscribe OUT​The WebSocket API has been enhanced to support dynamic subscription management through subscribe and unsubscribe messages. These allow for more granular control over the data streams without the need to resend the entire subscription scope as previously required with the hello message.To subscribe to additional data types or filters without overriding existing subscriptions, send a subscribe message:Example subscribe message for book data related to ""BTC"" and ""ETH"":{ ""type"": ""subscribe"", ""heartbeat"": true, ""subscribe_data_type"": [""book""], ""subscribe_filter_asset_id"": [""BTC"", ""ETH""]}This message adds subscriptions to the specified data types and filters, augmenting any existing subscriptions maintained in the session.Unsubscribe OUT​Similarly, to remove specific data types or filters from your current subscription, send an unsubscribe message:Example unsubscribe message to remove book data subscription for ""BTC"":{ ""type"": ""unsubscribe"", ""heartbeat"": true, ""subscribe_data_type"": [""book""], ""subscribe_filter_asset_id"": [""BTC""]}The unsubscribe message removes the specified subscriptions without affecting other existing subscriptions.Subscribe vs Hello​In the realm of subscription management, three key actions allow you to fine-tune your information feed according to evolving requirements:Subscribe: This action expands your current subscription scope by adding new elements without discarding any existing ones. It's particularly useful for tailoring your feed as your interests or information needs grow.Unsubscribe: Through this option, you can selectively remove specific elements from your current subscription. It's an efficient way to declutter your feed by eliminating content that no longer serves your needs, without affecting the rest of your subscriptions.Hello: Use this command to initiate a fresh start. It clears your existing subscription slate and sets up a new scope from scratch. Opt for this when a complete overhaul of your subscriptions is needed, rather than just an adjustment.After your WebSocket connection is established, you must send us a hello or subscribe message which contains:Stream preferences (Heartbeat and subscription details)API key for authorizationIf your message will be incorrect, we will send you error message and disconnect connection afterwards.Hello message can be repeated, each one will cause subscription scope override without interruption of your WebSocket connection.Message parameters​ParameterTypeDescriptiontypestringMessage type, must be equal to one of the values: hello, subscribe or unsubscribeheartbeatbooltrue to receive Heartbeat message every second, otherwise falsesubscribe_data_typestring[]List of data types you want to receive (required, possible values listed in table below)subscribe_filter_symbol_idstring[]List of exact symbol identifier to which should be included in the stream. Symbols can be in our eg. BITSTAMP_SPOT_BTC_USD or the exchange format eg. BTC-USD.subscribe_filter_asset_idstring[]Filter data to messages which are related to the at least one of the listed asset identifiers or to specific asset pair (e.g. BTC/USD) (optional, if not provided then stream will not be filtered by assets)subscribe_update_limit_ms_quoteintMinimum delay in milliseconds between quote updates for the same symbol (optional)subscribe_update_limit_ms_book_snapshotintMinumum delay in milliseconds between book snapshot (book5, book20, book50) updates for the same symbol (optional)Data types​Listed below are all allowed values for subscribe_data_type variables from hello message. Data typeDescriptiontradeExecuted transactions feed (order book matches)quoteQuote updates feed (order book level 1)bookOrder book snapshots and updates feed (order book level 2, full order book snapshot and real-time updates). To use this data type you need to define a filter in the hello or subscribe message.book5Order book snapshots feed (order book level 2, 5 best levels from each side of book). To use this data type you need to define a filter in the hello or subscribe message.book20Order book snapshots feed (order book level 2, 20 best levels from each side of book). To use this data type you need to define a filter in the hello or subscribe message.book50Order book snapshots feed (order book level 2, 50 best levels from each side of book). To use this data type you need to define a filter in the hello or subscribe message.Error handling​Example JSON error message is structured like this:{ ""type"": ""error"", ""message"": ""Invalid API key""}You need to be prepared to receive an error message from us when you send something wrong; all errors are permanent and you should expect that the underlying WebSocket connection will be closed by us after sending an error message.infoGood practice is to store all error messages somewhere for further manual review.Data buffering​Data buffering JSON error message is structured like this:{ ""type"": ""error"", ""message"": ""Reached maximum allowed buffered messages for this connection.""}The stream will send the data to the client as fast as possible; this can result in a high volume of data in cases where the subscription scope is broad. If our server cannot write data to the stream because of the TCP backpressure most likely caused by your client is not reading the data fast enough, or there is not enough network bandwidth available, we will buffer the messages to allow your client to catch up. However, when the buffer is full, a disconnect will be initiated from the server-side, and the buffered messages are dropped, and they will not be resent to the client.One way to identify when your client is falling behind is to compare the CoinAPI time of the messages being received with your current time on the client and track this metric over time. Make sure your clock is synchronized correctly and do not have a drift.The possible causes of the buffering are limited and are related to:Bandwidth bottleneck, eg.Internet connection instabilityNot enough bandwidth to receive a full stream.Network card or link saturation.I am not receiving messages fast enough, eg.Lack of the thread separation between the (a) receiving thread or (b) parsing or (c) processing operations.No CPU affinity on the receiving thread.CPU bottleneck on the receiving thread.Infrequent collection of the data from the TCP stack.Heap allocation per message and Garbage Collector pressure.If your client is unable to receive messages fast enough because of the issues listed above, then these things will happen:Your client TCP stack will be full, and TCP window will be closed to inform us that you can't receive more data and we should not send to youOur TCP stack queue will be full because we couldn't send you more dataWe will internally create a limited queue of the messages to deliver when the channel is available again (this could cause the delay on the real-time data before the gaps will appear)If the queue is full, then we will disconnect you.To minimize the occurrence of disconnects:Make sure that your client is reading the stream fast enough. Typically you should not do any real processing work as you read the stream. Read the stream and hand the activity to another thread/process/data store to do your processing asynchronously.Make sure that your data center has inbound bandwidth sufficient to accomodate large sustained data volumes as well as significantly larger spikes (e.g. 10x normal volume). The current default queue size per connection is 131 072 messages.For more information please google: TCP Flow Control.Was this section helpful?12345PreviousEndpointsNextMessagesHello OUTSubscribe OUTUnsubscribe OUTSubscribe vs HelloMessage parametersData typesError handlingData bufferingCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/websocket-ds/general)"
413,i.io general faq general Do you have a Status Page,"i.io general faq general Do you have a Status Page.   Do you have a Status Page? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralDo you have a Status Page?Do you have a Status Page?Yes, we have a Status Page at: http://status.coinapi.ioWas this section helpful?12345PreviousDid you offer discount for University/non-profit/research-only usage?NextDoes CoinAPI provide asset icons/images of the cryptocurrencies?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/Do-you-have-a-Status-Page)"
414,i.io faq general Some symbols have extra identifiers,"i.io faq general Some symbols have extra identifiers.   Some symbols have extra identifiers | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralSome symbols have extra identifiersOn this pageSome symbols have extra identifiersQuestion​what does ""5656B6"" mean? ""OKEX_FTS_ETH_USD_190927_5656B6""Answer​This behavior is documented here: https://docs.coinapi.io/market-data/rest-api/metadata/list-all-symbols#symbol-identifier in the In the unlikely event when the “symbolid” for more than one market is the same. We will append the additional term (prefixed with the “”) at the end of the duplicated identifiers to differentiate them.This happened for OKEX as they deprecated the API to which we were connected, because of that we were forced to switch to another API version. The differences between API's were significant and we needed to list the same markets from the new API under different series to give our customers a possibility to differentiate them.Was this section helpful?12345PreviousShould we file a ticket every time?NextWas my free API Key banned/blocked?QuestionAnswerCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/Some-symbols-have-extra-identifiers)"
415,i.io how to guides trading essentials quickstart#bitmex,"i.io how to guides trading essentials quickstart#bitmex.   Trading Essentials: Quickstart | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesAcquire exchange rates with different programming languagesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPICreating a historical crypto price chart using CoinAPI and D3.jsFetching market data with KNIMEGet Historical OHLCV Data Using CoinAPIGet symbol funding rate metric data using CoinAPIImport API into PostmanImport data to Google Sheets/ExcelReal-time data visualization with javascriptReal-time trades stream using WebSocket with different languagesRetrieve and analyze crypto order book data using a cryptocurrency APITrading Essentials: QuickstartMarket Data APIEMS APIFAQCustomer PortalChangelogHow-to guidesTrading Essentials: QuickstartOn this pageTrading Essentials: QuickstartIntroduction​In this tutorial, you'll learn how to leverage our crypto trading API to automate and streamline your trading across multiple exchanges. Discover how to connect your accounts, execute trades, and efficiently manage your portfolio with just a few clicks.With our solution, you gain the power to control trades on various exchanges using just one API. Background​The EMS Trading API lets you manage multiple trading accounts on different exchanges all in one place, making trading easier with combined and consistent data. It gives you up-to-date market info, past data, and options to use it through the cloud or on your systems. Perfect for traders, big companies, and experts like developers and analysts, this API is fast, efficient, and reliable, providing a complete trading solution with easy access to unique insights and information.On the Agenda​Obtain a Free API Key: Secure your gateway to multi-exchange trading with a free API key from our site.Check available exchanges: Verify the list of supported exchanges via EMS APIConnect your Exchanges: Quickly integrate your accounts with exchanges like BITMEX and KRAKEN.Execute BUY on KRAKEN: Check your balance, initiate the BUY order, and confirm the status of the orderExecute SELL on KRAKEN: Initiate SELL order and check the order status reportGetting started​To execute the EMS Trading API, you'll need a Free API Key from our website.Check available exchanges​To access a list of supported exchanges that can be connected via the EMS API, execute the following:import requestsurl = ""https://ems-mgmt.coinapi.io/v1/exchanges""payload={}headers = { 'Accept': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-COINAPI-KEY'}response = requests.request(""GET"", url, headers=headers, data=payload)print(response.text)Here's a snippet extracted from the server's reply:[ {  ""exchange_id"": ""BITMEX"",  ""location_id"": ""aws-eu-west-1-prd"",  ""required_parameters"": [   ""PrivateApiKey"",   ""PublicApiKey""  ] }, {  ""exchange_id"": ""COINBASE"",  ""location_id"": ""aws-us-east-1-prd"",  ""required_parameters"": [   ""PassPhrase"",   ""PrivateApiKey"",   ""PublicApiKey""  ] },  {  ""exchange_id"": ""GEMINI"",  ""location_id"": ""aws-us-east-1-prd"",  ""required_parameters"": [   ""PrivateApiKey"",   ""PublicApiKey""  ] }, {  ""exchange_id"": ""KRAKEN"",  ""location_id"": ""aws-us-west-2-prd"",  ""required_parameters"": [   ""PrivateApiKey"",   ""PublicApiKey""  ] }]// other exchanges and their parameters...infoTo access the full list of supported exchanges, you can execute the endpoint https://ems-mgmt.coinapi.io/v1/exchanges. Above, we only showcase a partial list as an example.Connect your Exchanges​To begin trading on cryptocurrency exchanges, you'll need to connect your accounts. Below are examples of integrating with two popular exchanges:BITMEX exampleKRAKEN exampleinfoWhile the examples in this quickstart provided are focused on integrating with BITMEX and KRAKEN, the process is quite similar for various exchanges.BITMEX​BITMEX stands as a premier cryptocurrency exchange, offering a robust platform for traders and investors worldwide.Obtain Public key​To begin trading on BITMEX, you'll need to obtain your public and private keys from BITMEX.Connect your account​After acquiring keys, the initial step includes sharing your exchange keys through the account creation process for the designated exchange.import requestsimport jsonurl = ""https://ems-mgmt.coinapi.io/v1/accounts""payload = { ""exchange_id"": ""BITMEX/JOHN"", ""parameters"": [  {   ""key"": ""PublicApiKey"",   ""value"": ""73034021-THIS-IS-SAMPLE-PUBLIC-KEY-FROM-BITMEX""  },    {   ""key"": ""PrivateApiKey"",   ""value"": ""73034021-THIS-IS-SAMPLE-PRIVATE-KEY-FROM-BITMEX""  } ]}headers = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Convert payload to JSON stringjson_payload = json.dumps(payload)# Make the requestresponse = requests.post(url, data=json_payload, headers=headers)# Print the responseprint(""Response Code:"", response.status_code)Once the update is successful, you'll receive an HTTP status code of 200.KRAKEN​Obtain Public key​To begin trading on KRAKEN, you'll need to obtain your public and private keys from KRAKEN.Connect your account​After acquiring keys, the initial step includes sharing your exchange keys through the account creation process for the designated exchange.import requestsimport jsonurl = ""https://ems-mgmt.coinapi.io/v1/accounts""payload = { ""exchange_id"": ""KRAKEN/JOHN"", ""parameters"": [  {   ""key"": ""PublicApiKey"",   ""value"": ""73034021-THIS-IS-SAMPLE-PUBLIC-KEY-FROM-KRAKEN""  },    {   ""key"": ""PrivateApiKey"",   ""value"": ""73034021-THIS-IS-SAMPLE-PRIVATE-KEY-FROM-KRAKEN""  } ]}headers = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Convert payload to JSON stringjson_payload = json.dumps(payload)# Make the requestresponse = requests.post(url, data=json_payload, headers=headers)# Print the responseprint(""Response Code:"", response.status_code)Get the list of Connected Exchanges​To check which accounts have been created on our side, execute the following code:import requestsimport jsonurl = ""https://ems-mgmt.coinapi.io/v1/accounts""headers = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY""}# Make the requestresponse = requests.get(url, headers=headers)if response.status_code == 200: accounts_json = response.json() print(json.dumps(accounts_json, indent=4))else: print(""Error:"", response.status_code)Here's an example response, listing all accounts created with your API KEY:[ {  ""exchange_id"": ""BITMEX/JOHN"",  ""parameters"": [   {    ""key"": ""PublicApiKey"",    ""value"": ""73034021-THIS-IS-SAMPLE-PUBLIC-KEY-FROM-BITMEX""   },   {    ""key"": ""PrivateApiKey"",    ""value"": ""73034021-THIS-IS-SAMPLE-PRIVATE-KEY-FROM-BITMEX""   }  ] }, {  ""exchange_id"": ""KRAKEN/JOHN"",  ""parameters"": [   {    ""key"": ""PublicApiKey"",    ""value"": ""73034021-THIS-IS-SAMPLE-PUBLIC-KEY-FROM-KRAKEN""     },   {    ""key"": ""PrivateApiKey"",    ""value"": ""73034021-THIS-IS-SAMPLE-PRIVATE-KEY-FROM-KRAKEN""   }  ] }]Trades execution​Placing an order on an exchange involves providing instructions for executing a trade at a designated price and quantity.Check balance (Optional)​Before diving into trading, it's a good idea to check the balance on your account(s). Here's an example of checking the account balance for all of the exchanges associated with the account.import requestsimport jsonurl = ""https://global.ems.coinapi.net/v1/balances""payload={}headers = { 'Accept': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-COINAPI-KEY'}# Make the requestresponse = requests.get(url, headers=headers)if response.status_code == 200: accounts_json = response.json() print(json.dumps(accounts_json, indent=4))else: print(""Error:"", response.status_code)The response may be as follows (for BITMEX/JOHN and KRAKEN/JOHN accounts):[ {  ""type"": ""BALANCE_SNAPSHOT"",  ""exchange_id"": ""BITMEX/JOHN"",  ""data"": [   {    ""id"": ""XBT"",    ""asset_id_exchange"": ""XBT"",    ""asset_id_coinapi"": ""BTC"",    ""balance"": 0.02164794,    ""available"": 0.02164794,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",      ""rate_usd"": 52357.18111158658     },   {    ""id"": ""BMEx"",    ""asset_id_exchange"": ""BMEx"",    ""asset_id_coinapi"": ""BMEX"",    ""balance"": 300000.0,    ""available"": 300000.0,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",      ""rate_usd"": 0.2521371329127946     }  ] }, {  ""type"": ""BALANCE_SNAPSHOT"",  ""exchange_id"": ""KRAKEN/JOHN"",  ""data"": [   {    ""id"": ""ETHW"",    ""asset_id_exchange"": ""ETHW"",    ""asset_id_coinapi"": ""ETHW"",    ""balance"": 1.73e-05,    ""available"": 1.73e-05,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 2.9136466899640077   },   {    ""id"": ""BCH"",    ""asset_id_exchange"": ""BCH"",    ""asset_id_coinapi"": ""BCH"",    ""balance"": 2.9e-09,    ""available"": 2.9e-09,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 265.7082181877394   },   {    ""id"": ""ZCAD"",    ""asset_id_exchange"": ""ZCAD"",    ""asset_id_coinapi"": ""CAD"",    ""balance"": 0.7905,    ""available"": 0.7905,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 0.7405719177575096   },   {    ""id"": ""ZEUR"",    ""asset_id_exchange"": ""ZEUR"",    ""asset_id_coinapi"": ""EUR"",    ""balance"": 0.0098,    ""available"": 0.0098,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 1.0809450373867444   },   {    ""id"": ""ADA"",    ""asset_id_exchange"": ""ADA"",    ""asset_id_coinapi"": ""ADA"",    ""balance"": 2e-08,    ""available"": 2e-08,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 0.6244338769954291   },   {    ""id"": ""ZUSD"",    ""asset_id_exchange"": ""ZUSD"",    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": null   },   {    ""id"": ""XXBT"",    ""asset_id_exchange"": ""XXBT"",    ""asset_id_coinapi"": ""BTC"",    ""balance"": 8.58e-08,    ""available"": 8.58e-08,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 52320.9229657045   }  ] }]Submit Order (SELL)​Here's an example of submitting a SELL order on the KRAKEN exchange with the following details: Desired amount of USD to sell: 10Expected price to be executed at: 150Initial balance of USD: 77.3669Save down somewhere the YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001 identifier to track the status of the orderimport requestsimport jsonfrom datetime import datetime, timedeltaurl = ""https://global.ems.coinapi.net/v1/orders""payload = json.dumps({ ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_USD_JPY"", ""amount_order"": 10, ""price"": 150, ""side"": ""SELL"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""exec_inst"": [ ""MAKER_OR_CANCEL"" ]})# Headersheaders = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Make the requesttry: response = requests.post(url, data=payload, headers=headers) # Check status code if response.status_code == 200:  print(""Response JSON:"", response.json()) else:  print(""Response Code:"", response.status_code) except Exception as e: print(""An error occurred:"", e)Examples of Possible Responses:Successful RoutingInvalid Volume ErrorInsufficient Funds ErrorThe order has been sent to the exchange:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""client_order_id_format_exchange"": ""74733759"", ""exchange_order_id"": ""OX6EKO-67KDQ-KGNYFI"", ""amount_open"": 10.0, ""amount_filled"": 0.0, ""status"": ""ROUTED"", ""status_history"": [ [""RECEIVED"", ""2024-02-22T23:55:31.5424443Z""], [""ROUTING"", ""2024-02-22T23:55:31.5439512Z""], [""ROUTED"", ""2024-02-22T23:55:31.8127436Z""] ], ""error_message"": null, ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""symbol_id_exchange"": ""USDJPY"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_USD_JPY"", ""amount_order"": 10.0, ""price"": 150.0, ""avg_px"": 0.0, ""side"": ""SELL"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}If you encounter a volume error due to a mismatch with the minimum order size:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""client_order_id_format_exchange"": ""74733759"", ""exchange_order_id"": null, ""amount_open"": 5e-15, ""amount_filled"": 0.0, ""status"": ""REJECTED"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T00:04:36.8301287Z""], [""ROUTING"", ""2024-02-23T00:04:36.8315182Z""], [""REJECTED"", ""2024-02-23T00:04:36.9940661Z""] ], ""error_message"": ""EGeneral:Invalid arguments:volume"", ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""symbol_id_exchange"": ""USDJPY"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_USD_JPY"", ""amount_order"": 5e-15, ""price"": 150.0, ""avg_px"": 0.0, ""side"": ""SELL"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}If you encounter an insufficient funds error due to insufficient balance in your account:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""client_order_id_format_exchange"": ""74733759"", ""exchange_order_id"": null, ""amount_open"": 555555555555555.0, ""amount_filled"": 0.0, ""status"": ""REJECTED"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T00:05:34.6909879Z""], [""ROUTING"", ""2024-02-23T00:05:34.6918765Z""], [""REJECTED"", ""2024-02-23T00:05:34.8518753Z""] ], ""error_message"": ""EGeneral:Invalid arguments:volume"", ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""symbol_id_exchange"": ""USDJPY"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_USD_JPY"", ""amount_order"": 555555555555555.0, ""price"": 150.0, ""avg_px"": 0.0, ""side"": ""SELL"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}infoHere you can check the comprehensive list of execution instructions for the exec_inst parameterYou can find available values for the time_in_force parameter hereEMS exclusively supports the LIMIT order_type.The supported values for symbol_id_coinapi can be found by executing the endpoint provided here.The meaning of the order status in the response (ROUTED, REJECTED, etc.) can be found hereTo view the possible values for the order lifecycle, click hereInstead of utilizing CoinAPI's symbol_id_coinapi, you can opt for the symbol provided by the exchange through symbol_id_exchangeHere are some of the most common codes that may be returned for order creation:Http Status CodeDescription200 (ok)Order accepted400 (bad request)Incorrect input parameters.490 (unreachable)Exchange cannot be reached.504 (timeout)Exchange didn't respond in the defined timeout.Verify order status​Ensure that you've saved the client_order_id parameter associated with your specific order. This identifier will be necessary to check its status.import requestsimport jsonfrom datetime import datetime, timedeltaurl = ""https://global.ems.coinapi.net/v1/orders/status/YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001""# Headersheaders = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Make the requesttry: response = requests.get(url, headers=headers) # Check status code if response.status_code == 200:  print(""Response JSON:"", response.json()) else:  print(""Response Code:"", response.status_code)   for header, value in response.headers.items():  print(header + ': ' + value) except Exception as e: print(""An error occurred:"", e)An example order status report that was executed with YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001 identifier and which was CANCELED.{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""client_order_id_format_exchange"": ""1945919824"", ""exchange_order_id"": ""OUQMAY-ODBWL-AXG4ZE"", ""amount_open"": 10.0, ""amount_filled"": 0.0, ""status"": ""CANCELED"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T00:16:20.2139293Z""], [""ROUTING"", ""2024-02-23T00:16:20.2389572Z""], [""ROUTED"", ""2024-02-23T00:16:20.4016779Z""], [""NEW"", ""2024-02-23T00:16:20.4021975Z""], [""CANCELED"", ""2024-02-23T00:16:20.4026337Z""] ], ""error_message"": null, ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""symbol_id_exchange"": ""USDJPY"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_USD_JPY"", ""amount_order"": 10.0, ""price"": 150.0, ""avg_px"": 0.0, ""side"": ""SELL"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}Check all open orders​You can also check all of the open orders.import requestsimport jsonfrom datetime import datetime, timedeltaurl = "" https://global.ems.coinapi.net/v1/orders""# Headersheaders = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Make the requesttry: response = requests.get(url, headers=headers) # Check status code if response.status_code == 200:  print(""Response JSON:"", response.json()) else:  print(""Response Code:"", response.status_code)   for header, value in response.headers.items():  print(header + ': ' + value) except Exception as e: print(""An error occurred:"", e)infoAfter an order is closed/finalized, it will no longer be visible through the endpoint mentioned above.Submit Order (BUY)​Here's an example of submitting a BUY order on the KRAKEN exchange with the following details: Desired amount of OXT to buy: 100Expected price to be executed at: 0.11Save down somewhere the YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007 identifier to track the status of the orderimport requestsimport jsonfrom datetime import datetime, timedeltaurl = ""https://global.ems.coinapi.net/v1/orders""payload = json.dumps({ ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_OXT_USD"", ""amount_order"": 100, ""price"": 0.11, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""exec_inst"": [ ""MAKER_OR_CANCEL"" ]})# Headersheaders = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Make the requesttry: response = requests.post(url, data=payload, headers=headers) # Check status code if response.status_code == 200:  print(""Response JSON:"", response.json()) else:  print(""Response Code:"", response.status_code)   for header, value in response.headers.items():  print(header + ': ' + value) except Exception as e: print(""An error occurred:"", e)Successfully routed order Response:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""client_order_id_format_exchange"": ""1946142760"", ""exchange_order_id"": ""OJCPEO-PO7WD-VTPUF2"", ""amount_open"": 100.0, ""amount_filled"": 0.0, ""status"": ""ROUTED"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T01:13:15.6096269Z""], [""ROUTING"", ""2024-02-23T01:13:15.6102840Z""], [""ROUTED"", ""2024-02-23T01:13:15.7772494Z""] ], ""error_message"": null, ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""symbol_id_exchange"": ""OXTUSD"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_OXT_USD"", ""amount_order"": 100.0, ""price"": 0.11, ""avg_px"": 0.0, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}Below is the order status report response for a BUY operation with the client_order_id set as YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""client_order_id_format_exchange"": ""1946142760"", ""exchange_order_id"": ""OJCPEO-PO7WD-VTPUF2"", ""amount_open"": 100.0, ""amount_filled"": 0.0, ""status"": ""NEW"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T01:13:15.6096269Z""], [""ROUTING"", ""2024-02-23T01:13:15.6102840Z""], [""ROUTED"", ""2024-02-23T01:13:15.7772494Z""], [""NEW"", ""2024-02-23T01:13:15.8077026Z""] ], ""error_message"": null, ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""symbol_id_exchange"": ""OXTUSD"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_OXT_USD"", ""amount_order"": 100.0, ""price"": 0.11, ""avg_px"": 0.0, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}Cancelling all open orders​To cancel all open orders associated with the KRAKEN/JOHN:import requestsimport jsonfrom datetime import datetime, timedeltaurl = ""https://global.ems.coinapi.net/v1/orders/cancel/all""payload = json.dumps({""exchange_id "": ""KRAKEN/JOHN""})# Headersheaders = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Make the requesttry: response = requests.post(url, data=payload, headers=headers) # Check status code if response.status_code == 200:  print(""Response JSON:"", response.json()) else:  print(""Response Code:"", response.status_code)   for header, value in response.headers.items():  print(header + ': ' + value) except Exception as e: print(""An error occurred:"", e)Here's a sample order report for a canceled BUY order via the EMS API:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""client_order_id_format_exchange"": ""1946142760"", ""exchange_order_id"": ""OJCPEO-PO7WD-VTPUF2"", ""amount_open"": 100.0, ""amount_filled"": 0.0, ""status"": ""CANCELED"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T01:13:15.6096269Z""], [""ROUTING"", ""2024-02-23T01:13:15.6102840Z""], [""ROUTED"", ""2024-02-23T01:13:15.7772494Z""], [""NEW"", ""2024-02-23T01:13:15.8077026Z""], [""PENDING_CANCEL"", ""2024-02-23T01:18:49.2279836Z""], [""CANCELED"", ""2024-02-23T01:18:49.4245926Z""] ], ""error_message"": null, ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""symbol_id_exchange"": ""OXTUSD"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_OXT_USD"", ""amount_order"": 100.0, ""price"": 0.11, ""avg_px"": 0.0, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}The explanations and practical code examples provided should let you have a better understanding of how to leverage the EMS API for cryptocurrency trading across multiple exchanges.Was this section helpful?12345PreviousRetrieve and analyze crypto order book data using a cryptocurrency APINextMarket Data APIIntroductionBackgroundOn the AgendaGetting startedCheck available exchangesConnect your ExchangesBITMEXObtain Public keyConnect your accountKRAKENObtain Public keyConnect your accountGet the list of Connected ExchangesTrades executionCheck balance (Optional)Submit Order (SELL)Verify order statusCheck all open ordersSubmit Order (BUY)Cancelling all open ordersCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/how-to-guides/trading-essentials-quickstart#bitmex)"
416,i.io naas api bitcoin Methods gettxoutproof,"i.io naas api bitcoin Methods gettxoutproof.   gettxoutproof | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgettxoutproofOn this pagegettxoutproofOverview​The 'gettxoutproof' RPC method facilitates the verification of transaction inclusion within a specific block, returning a serialized proof of transaction inclusion.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""gettxoutproof"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""gettxoutproof\"",\""params\"": [ ]}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""gettxoutproof"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection(""mainnet-bitcoin.node.coinapi.io"")payload = json.dumps({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""gettxoutproof"", ""params"": []})headers = { 'Content-Type': 'application/json', 'accept': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}conn.request(""POST"", ""/"", payload, headers)res = conn.getresponse()data = res.read()print(data.decode(""utf-8""))var settings = {""url"": ""https://bitcoin-mainnet.node.coinapi.io"",""method"": ""POST"",""timeout"": 0,""headers"": {""Content-Type"": ""application/json"",""accept"": ""application/json"",""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY""},""data"": JSON.stringify({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""gettxoutproof"",""params"": []}),};$.ajax(settings).done(function (response) {console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{""jsonrpc"":""2.0"",""id"":1,""method"":""gettxoutproof"",""params"": [ ]}`) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""gettxoutproof"", ""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""gettxoutproof\"",\""params\"": [ ]}"");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​'txids'Type: JSON arrayRequirement: MandatoryDescription: A JSON array that includes a collection of transaction identifiers (hashes).'blockhash'Type: StringRequirement: OptionalDescription: When specified, the method searches for the transaction ID within the block associated with this particular hash.Response​{ ""id"": 1, ""jsonrpc"": ""2.0"", ""result"": ""01000000d5c7b5ec4cb293bdcfc9a3e51b8696870ab75a2ef9d2e7e1205732a06b19f594efadbb4901""}Type: StringDescription: A string that embodies serialized, hex-encoded data representing the proof of transaction inclusion.Was this section helpful?12345PreviousgettxoutNextgettxoutsetinfoOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/gettxoutproof)"
417,i.io market data how to guides fetching market data with knime,"i.io market data how to guides fetching market data with knime.   Fetching market data with KNIME | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesAcquire exchange rates with different programming languagesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPIBuilding a cryptocurrency exchange comparison tool using Market Data APICreating a historical crypto price chart using CoinAPI and D3.jsFetching market data with KNIMEGet Historical OHLCV Data Using CoinAPIGet symbol funding rate metric data using CoinAPIImport API into PostmanImport data to Google Sheets/ExcelReal-time data visualization with javascriptReal-time trades stream using WebSocket with different languagesRetrieve and analyze crypto order book data using a cryptocurrency APITrading Essentials: QuickstartPerformance Testing GuideHow-to guidesFetching market data with KNIMEOn this pageFetching market data with KNIMEIntroduction​KNIME is an excellent tool for data analytics and integration, offering a user-friendly, node-based interface to design and automate data workflows. Its capabilities encompass data preprocessing, transformation, analysis, machine learning, and visualization, making it versatile for a wide range of data-related tasks. By seamlessly integrating with our REST API, you gain the ability to fetch comprehensive market data, providing you with the power to conduct in-depth research, formulate effective trading strategies, manage portfolios, and make informed, data-driven decisions in the dynamic cryptocurrency market.Prerequisites​A CoinAPI key (obtainable by signing up on the CoinAPI website)Installed KNIME Analytics Platform Creating KNIME workflow to get BTC exchange rates​If you have properly installed KNIME on your computer and obtained the CoinAPI key, we can start by preparing a workflow. Workflow refers to the visual representation of a data analysis process. It typically consists of nodes (also known as steps or tasks) connected in a specific sequence, where each node performs a specific operation on the data.Here's an example of two nodes connected:Get Request (sends an HTTP GET request to a specified URL, typically an API endpoint like rest.coinapi.io/v1/exchangerate/BTC)Output JSON (receives the JSON data obtained from the API response and presents it in a structured format)Using this example, you can download data and view it within the Output JSON block.Each node result may be easily previewed:Here's an output of the Get Request node:Here's an output of the Output JSON node:Configuring GET Request in KNIME​To configure a GET Request block, click Configure:In the Connection Settings tab, enter the URL of the resource you want to retrieve, e.g https://rest.coinapi.io/v1/exchangerate/BTC:In the Request Headers tab, enter the X-CoinAPI-Key header with the API key you have obtained via the website.Summary​Simple but also more complex workflows can be designed, enabling advanced operations like filtering, grouping, and utilizing your own Python scripts, culminating in the option to save the processed data in various formats such as CSV, Excel, or others. KNIME together with our Market Data API allows users to analyze market finance data for tasks like machine learning, data analysis, generating charts, optimizing portfolios, managing risks, backtesting trading strategies, and more.Embrace the world of market data analysis!Was this section helpful?12345PreviousCreating a historical crypto price chart using CoinAPI and D3.jsNextGet Historical OHLCV Data Using CoinAPIIntroductionPrerequisitesCreating KNIME workflow to get BTC exchange ratesConfiguring GET Request in KNIMESummaryCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/how-to-guides/fetching-market-data-with-knime)"
418,i.io naas api ethereum Methods eth blockNumber,"i.io naas api ethereum Methods eth blockNumber.   eth_blockNumber | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_blockNumberOn this pageeth_blockNumberOverview​The 'eth_blockNumber' method returns the current latest block number.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'content-type: application/json' \  --header ""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"" \  --data '{ ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_blockNumber""}'using System.Net.Http.Headers;var client = new HttpClient();var request = new HttpRequestMessage{ Method = HttpMethod.Post, RequestUri = new Uri(""https://ethereum-mainnet-geth-archive.node.coinapi.io""), Headers = {  { ""accept"", ""application/json"" }, }, Content = new StringContent(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_blockNumber\""}"") {  Headers =  {   ContentType = new MediaTypeHeaderValue(""application/json"")  } }};using (var response = await client.SendAsync(request)){ response.EnsureSuccessStatusCode(); var body = await response.Content.ReadAsStringAsync(); Console.WriteLine(body);}<?php$curl = curl_init();curl_setopt_array($curl, [CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"",CURLOPT_RETURNTRANSFER => true,CURLOPT_ENCODING => """",CURLOPT_MAXREDIRS => 10,CURLOPT_TIMEOUT => 30,CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,CURLOPT_CUSTOMREQUEST => ""POST"",CURLOPT_POSTFIELDS => json_encode(['id' => 1,'jsonrpc' => '2.0','method' => 'eth_blockNumber']),CURLOPT_HTTPHEADER => [""accept: application/json"",""content-type: application/json"",""X-CoinAPI-Key"" => ""73034021-THIS-IS-SAMPLE-KEY""],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) {echo ""cURL Error #:"" . $err;} else {echo $response;}?> import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_blockNumber""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"" ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text)const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY}, body: JSON.stringify({id: 1, jsonrpc: '2.0', method: 'eth_blockNumber'})};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_blockNumber\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_blockNumber\""}""response = http.request(request)puts response.read_bodyAsyncHttpClient client = new DefaultAsyncHttpClient();client.prepare(""POST"", ""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .setHeader(""accept"", ""application/json"") .setHeader(""content-type"", ""application/json"") .setHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .setBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_blockNumber\""}"") .execute() .toCompletableFuture() .thenAccept(System.out::println) .join();client.close();You can also replace mainnet with any other supported networkResponse​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": ""0x1126d53""}A hexadecimal of an integer representing the current block number the client is on.Was this section helpful?12345PreviousEthereumNexteth_callOverviewRequestResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_blockNumber)"
419,i.io naas api ethereum Methods eth getTransactionByBlockHashAndIndex,"i.io naas api ethereum Methods eth getTransactionByBlockHashAndIndex.   eth_getTransactionByBlockHashAndIndex | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_getTransactionByBlockHashAndIndexOn this pageeth_getTransactionByBlockHashAndIndexOverview​The 'eth_getTransactionByBlockHashAndIndex' method returns information about a transaction given block hash and transaction index position.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'content-type: application/json' \  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data '{ ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_getTransactionByBlockHashAndIndex""}'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getTransactionByBlockHashAndIndex\""}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"",CURLOPT_RETURNTRANSFER => true,CURLOPT_ENCODING => """",CURLOPT_MAXREDIRS => 10,CURLOPT_TIMEOUT => 30,CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,CURLOPT_CUSTOMREQUEST => ""POST"",CURLOPT_POSTFIELDS => json_encode(['id' => 1,'jsonrpc' => '2.0','method' => 'eth_getTransactionByBlockHashAndIndex']),CURLOPT_HTTPHEADER => [""accept: application/json"",""content-type: application/json"",""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY""],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) {echo ""cURL Error #:"" . $err;} else {echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_getTransactionByBlockHashAndIndex""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text) const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({id: 1, jsonrpc: '2.0', method: 'eth_getTransactionByBlockHashAndIndex'})};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getTransactionByBlockHashAndIndex\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getTransactionByBlockHashAndIndex\""}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getTransactionByBlockHashAndIndex\""}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​block hash: [ Required ] A string representing the hash (32 bytes) of a block.transaction index position: [ Required ] A hexadecimal of the integer representing the position in the block.Response​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""error"": { ""code"": -32602, ""message"": ""missing value for required argument 0"" }}A transaction object, or null when no transaction was found. The transaction object will consist of the following keys and their values:blockHash: 32 bytes. A hash of the block including this transaction. 'null' when it's pending.accessList: [ optional ] A list of addresses and storage keys accessed by the transaction.blockNumber: The number of the block including this transaction. 'null' when it's pending.chainID: [ optional ] chain ID specifying the network. Returned only for EIP-1559 transactions.from: 20 bytes. The address of the sender.gas: Gas provided by the sender.gasPrice: Gas price provided by the sender in Wei.hash: 32 bytes. The hash of the transaction.input: The data sent along with the transaction.maxPriorityFeePerGas: [ optional ] Maximum fee, in Wei, the sender is willing to pay per gas above the base fee.maxFeePerGas: [ optional ] Maximum total fee (base fee + priority fee), in Wei, the sender is willing to pay per gas.nonce: The number of transactions made by the sender prior to this one.r: 32 bytes. The ECDSA signature 'r'.s: 32 bytes. The ECDSA signature 's'.to: 20 bytes. The address of the receiver. 'null' when it's a contract creation transaction.transactionIndex: The transaction's index position in the block, in hexadecimal. 'null' when it's pending.v: The ECDSA recovery ID.type: The transaction type.value: The value transferred in Wei.Was this section helpful?12345Previouseth_getStorageAtNexteth_getTransactionByBlockNumberAndIndexOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_getTransactionByBlockHashAndIndex)"
420,i.io naas api ethereum Methods txpool content,"i.io naas api ethereum Methods txpool content.   txpool_content | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodstxpool_contentOn this pagetxpool_contentOverview​The 'txpool_content' method provides information about the current state of the Ethereum transaction pool. It returns the transactions that are currently pending (waiting to be mined) and queued (waiting for a suitable nonce) in the Ethereum network.Request​{ ""method"": ""txpool_content"", ""params"": [], ""id"": 1, ""jsonrpc"": ""2.0""}Request Parameters​method: The name of the method being called, in this case, ""txpool_content"".params: An array of parameters to pass to the method. For ""txpool_content"", this is typically an empty array.id: A unique identifier for the request.jsonrpc: The version of the JSON-RPC protocol being used, typically ""2.0"" for Ethereum.Response​{ ""pending"": { ""address"": {  ""nonce"": ""value"",  ""details"": {  ""blockHash"": ""value"",  ""blockNumber"": ""value"",  ""from"": ""address"",  ""gas"": ""value"",  ""gasPrice"": ""value"",  ""hash"": ""transaction hash"",  ""input"": ""data"",  ""nonce"": ""value"",  ""to"": ""address"",  ""transactionIndex"": ""value"",  ""value"": ""value"",  ""type"": ""value"",  ""accesslist"": ""list"",  ""chainId"": ""value"",  ""v"": ""value"",  ""r"": ""value"",  ""s"": ""value""  } } }, ""queued"": { ""address"": {  ""nonce"": ""value"",  ""details"": {  // similar structure as ""pending""  } } }}Was this section helpful?12345Previoustrace_transactionNexttxpool_contentFromOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/txpool_content)"
421,i.io cdn cgi l email protection#6613150314261e4805090b,"i.io cdn cgi l email protection#6613150314261e4805090b.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 8aad296ba821710c •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#6613150314261e4805090b)"
422,i.io faq api How to use CoinAPI from Matlab,"i.io faq api How to use CoinAPI from Matlab.   How to use CoinAPI from Matlab? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQAPIHow to use CoinAPI from Matlab?How to use CoinAPI from Matlab?You can access our API using at least 4 methods:Use Java SDK code from the Matlab environment (https://www.mathworks.com/help/matlab/using-java-libraries-in-matlab.html)Use .NET SDK code from the Matlab environment (https://www.mathworks.com/help/matlab/using-net-libraries-in-matlab.html)Use the Python SDK code from the Matlab environment (https://www.mathworks.com/help/matlab/call-python-libraries.html)Use webread function which automatically converts our JSON into the Matlab objects. (https://www.mathworks.com/help/matlab/ref/webread.html)Was this section helpful?12345PreviousHow to solve certificate validation error?NextI received a reconnect message from WebsocketCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/api/How-to-use-CoinAPI-from-Matlab)"
423,i.io faq general What exchanges are supported,"i.io faq general What exchanges are supported.   What exchanges are supported? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralWhat exchanges are supported?On this pageWhat exchanges are supported?Market Data API​You may query https://rest.coinapi.io/v1/exchanges via our API to get the list of supported exchanges.EMS API​Here is a list of the supported exchanges for the EMS API:BINANCEBINANCEFTSBINANCEFTSCBINANCEFTSCUAT BINANCEFTSUAT BINANCEOPTVBINANCEOPTVUAT BINANCEUATBINANCEUSBITFINEXBITMEXBITMEXUAT BITSTAMPBLOCKCHAINEXCHANGECOINBASEDERIBITDERIBITUATGEMINIHITBTCKRAKENKRAKENFTSLMAXDIGITALLMAXDIGITALUATPOLONIEXIf you want to learn more about the EMS API, please refer to our documentation: https://docs.coinapi.io/ems-apiWas this section helpful?12345PreviousWhat data is delivered using the local sites?NextWhat is CoinAPI?Market Data APIEMS APICopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/What-exchanges-are-supported)"
424,i.io naas api ethereum Methods eth coinbase,i.io naas api ethereum Methods eth coinbase.   eth_coinbase | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_coinbaseOn this pageeth_coinbaseOverview​The 'eth_coinbase' returns the client coinbase address. The coinbase address is the account to pay mining rewards to.Was this section helpful?12345Previouseth_chainIDNexteth_createAccessListOverviewCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_coinbase)
425,i.io naas api bitcoin Methods importaddress,"i.io naas api bitcoin Methods importaddress.   importAddress | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsimportAddressOn this pageimportAddressOverview​The ' importAddress' method allows you to add an address or script (in hex format) that can be monitored as if it were in your wallet, but cannot be used to spend. This method requires a new wallet backup. It is important to note that if the rescan option is set to true, this call can take over an hour to complete. During this time, other RPC calls might report that the imported address exists, but related transactions are still missing, leading to temporarily incorrect or bogus balances and unspent outputs until the rescan completes. If you have the full public key, it is recommended to use the 'importPubKey' method instead. To import more than one address, use the 'importMulti' method.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""importAddress"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""importAddress\"",\""params\"": [ ]}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""importAddress"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection(""mainnet-bitcoin.node.coinapi.io"")payload = json.dumps({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""importAddress"",""params"": []})headers = {'Content-Type': 'application/json','accept': 'application/json','X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}conn.request(""POST"", ""/"", payload, headers)res = conn.getresponse()data = res.read()print(data.decode(""utf-8""))var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""importAddress"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""id"":1,""method"":""importAddress"",""params"": [ ]}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""importAddress"",""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""importAddress\"",\""params\"": [ ]}"");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​address (string, required): The Bitcoin address or hex-encoded script.label (string, optional, default: """"): An optional label.rescan (boolean, optional, default: true): Rescan the wallet for transactions.p2sh (boolean, optional, default: false): Add the P2SH version of the script as well.Response​{ ""result"": ""..."", // The response result ""error"": null, // Error details, if any ""id"": 1}Was this section helpful?12345PrevioushelpNextimport_descriptorsOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/importaddress)"
426,i.io faq account how do I get an additional API key,"i.io faq account how do I get an additional API key.   How do I get an additional API key? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountHow I can update my credit card / billing information?How can I change my CoinAPI account's email address?How can I get an invoice or receipt?How do I make an account?I want to change my account's name?Managing Team MembersCan I add other users to my account?How do I get an additional API key?APIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQCustomer AccountHow do I get an additional API key?How do I get an additional API key?You may obtain an additional API key through our Pricing Page [1] and in the Subscriptions tab of the Customer Portal [2]. For context, the existence of each additional API Key for a subscription (enabled or disabled) above the plan quota is charged 1 USD per day, with a minimum of one day.​​Multiple subscriptions are commonly used when:The software is shipped to multiple third-party's by the customer (eg. self-hosted software)To separate environments inside the company (development, testing, staging, production)To separate multiple independent production sites (EUROPE, ASIA, etc)To separate multiple teams inside the company working on different features or productsReferences: [1] https://www.coinapi.io/Pricing [2] https://customerportal.coinapi.io/subscriptionsWas this section helpful?12345PreviousCan I add other users to my account?NextAPICopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/account/how-do-I-get-an-additional-API-key)"
427,i.io general faq general I didnt receive an email,"i.io general faq general I didnt receive an email.   I didn't receive an email | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralI didn't receive an emailI didn't receive an emailIn case you didn't receive an email from us, kindly process this checklist before submitting a support ticket:Make sure you refreshed the email list in the client and waited at least 2 minutes in case of latency on the email provider sideCheck if the email is in the SPAM folderIf your email is a Google Groups alias, check if the Group was filtering the messages ""for moderation."" If possible, try the same operation again, e.g. requesting a free key or resending the login verification code.If possible, try using another email to check if the issue is limited only to your email service.After processing that checklist, let us know about the results here (https://support.coinapi.io/hc/en-us/requests/new), and we will act accordingly.Was this section helpful?12345PreviousHow to handle payment errors during sign upNextI forgot my paid subscription API keyCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/I-didnt-receive-an-email)"
428,i.io ems api rest api orders,"i.io ems api rest api orders.   Orders | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIREST APIBalancesOrdersCancel all orders requestCancel order requestGet open ordersGet order execution reportHistory of order changesSend new orderPositionsWebSocket APIFIX APISelf Hosted GuideREST APIOrdersOrdersOrder statuses and the lifecycle are documented in the separate section: EMS / Starter Guide / Order Lifecycle📄️ Cancel all orders requestThis request cancels all open orders on single specified exchange.📄️ Cancel order requestRequest cancel for an existing order. The order can be canceled using the `client_order_id` or `exchange_order_id`.📄️ Get open ordersGet last execution reports for open orders across all or single exchange.📄️ Get order execution reportGet the last order execution report for the specified order. The requested order does not need to be active or opened.📄️ History of order changesBased on the date range, all changes registered in the orderbook.📄️ Send new orderThis request creating new order for the specific exchange.Was this section helpful?12345PreviousGet balancesNextCancel all orders requestCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/rest-api/orders)"
429,i.io general faq api How to solve certificate validation error,"i.io general faq api How to solve certificate validation error.   How to solve certificate validation error? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer EMS Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What is the rate limit for EMS Trading API?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQAPIHow to solve certificate validation error?How to solve certificate validation error?The issue with the certificate validation can happen when your operating system doesn't have updated CA certificates. On the Windows operating systems, CA certificates are updated with the Windows Update. Make sure that you have all updates installed on the server.On the Ubuntu/Debian Linux systems you can update by executing this command:`update-ca-certificates`Alternatively, you can use an unencrypted connection, if maintaining up to date database of CA certificates in the operating system is not an option.Was this section helpful?12345PreviousHow can I unsubscribe from Websocket?NextHow to use CoinAPI from Matlab?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/api/How-to-solve-certificate-validation-error)"
430,i.io market data rest api metadata list of symbols for the exchange,"i.io market data rest api metadata list of symbols for the exchange.   List of symbols for the exchange | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataList all asset iconsList all assets by asset IDList all assetsList all exchanges by exchange_idList all exchangesList all symbolsList of icons for the exchangesList of symbols for the exchangeList symbol mapping for the exchangeMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIMetadataList of symbols for the exchangeList of symbols for the exchangeGET /v1/symbols/:exchange_idList of symbols for the exchangePath Parametersexchange_id string requiredThe ID of the exchange (from the Metadata -> Exchanges)Query Parametersfilter_symbol_id stringThe filter for symbol ID.filter_asset_id stringThe filter for asset ID.Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.exchange_id string nullableThe exchange identifier.symbol_type string nullableThe symbol type.asset_id_base string nullableThe base asset identifier.asset_id_quote string nullableThe quote asset identifier.asset_id_unit string nullableThe unit asset identifier.future_contract_unit double nullableThe contract unit for futures.future_contract_unit_asset string nullableThe asset used as the unit for futures contract.future_delivery_time date-time nullableThe future delivery time for futures contract.option_type_is_call boolean nullableIndicates whether the option type is a call.option_strike_price double nullableThe strike price for options.option_contract_unit double nullableThe contract unit for options.option_exercise_style string nullableThe exercise style for options.option_expiration_time date-time nullableThe expiration time for options.contract_delivery_time date-time nullableThe delivery time for contracts.contract_unit double nullableThe contract unit for contracts.contract_unit_asset string nullableThe asset used as the unit for contracts.contract_id string nullableThe contract identifier.contract_display_name string nullableThe display name of the contract.contract_display_description string nullableThe display description of the contract.data_start string nullabledata_end string nullabledata_quote_start date-time nullableThe start date of quote data.data_quote_end date-time nullableThe end date of quote data.data_orderbook_start date-time nullableThe start date of order book data.data_orderbook_end date-time nullableThe end date of order book data.data_trade_start date-time nullableThe start date of trade data.data_trade_end date-time nullableThe end date of trade data.index_id string nullableThe index identifier.index_display_name string nullableThe display name of the index.index_display_description string nullableThe display description of the index.volume_1hrs double nullableThe volume in the last 1 hour.volume_1hrs_usd double nullableThe volume in USD in the last 1 hour.volume_1day double nullableThe volume in the last 1 day.volume_1day_usd double nullableThe volume in USD in the last 1 day.volume_1mth double nullableThe volume in the last 1 month.volume_1mth_usd double nullableThe volume in USD in the last 1 month.price double nullableThe price.symbol_id_exchange string nullableThe symbol identifier in the exchange.asset_id_base_exchange string nullableThe base asset identifier in the exchange.asset_id_quote_exchange string nullableThe quote asset identifier in the exchange.price_precision double nullableThe price precision.size_precision double nullableThe size precision.raw_kvp object nullableNot normalized raw kvp data.property name* string][ { ""symbol_id"": ""string"", ""exchange_id"": ""string"", ""symbol_type"": ""string"", ""asset_id_base"": ""string"", ""asset_id_quote"": ""string"", ""asset_id_unit"": ""string"", ""future_contract_unit"": 0, ""future_contract_unit_asset"": ""string"", ""future_delivery_time"": ""2024-07-16T12:55:05.280Z"", ""option_type_is_call"": true, ""option_strike_price"": 0, ""option_contract_unit"": 0, ""option_exercise_style"": ""string"", ""option_expiration_time"": ""2024-07-16T12:55:05.280Z"", ""contract_delivery_time"": ""2024-07-16T12:55:05.280Z"", ""contract_unit"": 0, ""contract_unit_asset"": ""string"", ""contract_id"": ""string"", ""contract_display_name"": ""string"", ""contract_display_description"": ""string"", ""data_start"": ""string"", ""data_end"": ""string"", ""data_quote_start"": ""2024-07-16T12:55:05.280Z"", ""data_quote_end"": ""2024-07-16T12:55:05.280Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.280Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.280Z"", ""data_trade_start"": ""2024-07-16T12:55:05.280Z"", ""data_trade_end"": ""2024-07-16T12:55:05.280Z"", ""index_id"": ""string"", ""index_display_name"": ""string"", ""index_display_description"": ""string"", ""volume_1hrs"": 0, ""volume_1hrs_usd"": 0, ""volume_1day"": 0, ""volume_1day_usd"": 0, ""volume_1mth"": 0, ""volume_1mth_usd"": 0, ""price"": 0, ""symbol_id_exchange"": ""string"", ""asset_id_base_exchange"": ""string"", ""asset_id_quote_exchange"": ""string"", ""price_precision"": 0, ""size_precision"": 0, ""raw_kvp"": {} }][ { ""symbol_id"": ""KRAKENFTS_PERP_BTC_USD"", ""exchange_id"": ""KRAKENFTS"", ""symbol_type"": ""PERPETUAL"", ""asset_id_base"": ""BTC"", ""asset_id_quote"": ""USD"", ""asset_id_unit"": ""USD"", ""future_contract_unit"": 1, ""future_contract_unit_asset"": ""USD"", ""data_start"": ""2019-10-30"", ""data_end"": ""2021-03-03"", ""data_quote_start"": ""2019-10-30T16:53:10.3262317Z"", ""data_quote_end"": ""2021-03-03T13:51:45.6970000Z"", ""data_orderbook_start"": ""2019-10-30T16:53:10.3262317Z"", ""data_orderbook_end"": ""2020-08-05T14:37:32.0080000Z"", ""data_trade_start"": ""2019-10-30T16:38:52.1620000Z"", ""data_trade_end"": ""2021-03-03T13:46:25.7810000Z"", ""volume_1hrs"": 22897091, ""volume_1hrs_usd"": 22897091, ""volume_1day"": 459390289, ""volume_1day_usd"": 459390289, ""volume_1mth"": 12875674995, ""volume_1mth_usd"": 12875674995, ""price"": 51266, ""symbol_id_exchange"": ""pi_xbtusd"", ""asset_id_base_exchange"": ""XBT"", ""asset_id_quote_exchange"": ""USD"", ""price_precision"": 0.1, ""size_precision"": 1 }, { ""symbol_id"": ""POLONIEX_SPOT_LTC_USDC"", ""exchange_id"": ""POLONIEX"", ""symbol_type"": ""SPOT"", ""asset_id_base"": ""LTC"", ""asset_id_quote"": ""USDC"", ""data_start"": ""2018-11-20"", ""data_end"": ""2021-03-01"", ""data_quote_start"": ""2018-11-20T15:24:58.4128803Z"", ""data_quote_end"": ""2021-03-01T16:07:09.3475456Z"", ""data_orderbook_start"": ""2018-11-20T15:24:58.4128803Z"", ""data_orderbook_end"": ""2020-08-05T14:37:20.2695780Z"", ""data_trade_start"": ""2018-11-20T15:25:38.0000000Z"", ""data_trade_end"": ""2021-03-01T16:03:18.0000000Z"", ""volume_1hrs"": 51.68645899, ""volume_1hrs_usd"": 9036.44, ""volume_1day"": 465.568863, ""volume_1day_usd"": 81396.28, ""volume_1mth"": 22528.27638495, ""volume_1mth_usd"": 3938661, ""symbol_id_exchange"": ""USDC_LTC"", ""asset_id_base_exchange"": ""LTC"", ""asset_id_quote_exchange"": ""USDC"", ""price_precision"": 1e-8, ""size_precision"": 1e-8 }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.exchange_id string nullableThe exchange identifier.symbol_type string nullableThe symbol type.asset_id_base string nullableThe base asset identifier.asset_id_quote string nullableThe quote asset identifier.asset_id_unit string nullableThe unit asset identifier.future_contract_unit double nullableThe contract unit for futures.future_contract_unit_asset string nullableThe asset used as the unit for futures contract.future_delivery_time date-time nullableThe future delivery time for futures contract.option_type_is_call boolean nullableIndicates whether the option type is a call.option_strike_price double nullableThe strike price for options.option_contract_unit double nullableThe contract unit for options.option_exercise_style string nullableThe exercise style for options.option_expiration_time date-time nullableThe expiration time for options.contract_delivery_time date-time nullableThe delivery time for contracts.contract_unit double nullableThe contract unit for contracts.contract_unit_asset string nullableThe asset used as the unit for contracts.contract_id string nullableThe contract identifier.contract_display_name string nullableThe display name of the contract.contract_display_description string nullableThe display description of the contract.data_start string nullabledata_end string nullabledata_quote_start date-time nullableThe start date of quote data.data_quote_end date-time nullableThe end date of quote data.data_orderbook_start date-time nullableThe start date of order book data.data_orderbook_end date-time nullableThe end date of order book data.data_trade_start date-time nullableThe start date of trade data.data_trade_end date-time nullableThe end date of trade data.index_id string nullableThe index identifier.index_display_name string nullableThe display name of the index.index_display_description string nullableThe display description of the index.volume_1hrs double nullableThe volume in the last 1 hour.volume_1hrs_usd double nullableThe volume in USD in the last 1 hour.volume_1day double nullableThe volume in the last 1 day.volume_1day_usd double nullableThe volume in USD in the last 1 day.volume_1mth double nullableThe volume in the last 1 month.volume_1mth_usd double nullableThe volume in USD in the last 1 month.price double nullableThe price.symbol_id_exchange string nullableThe symbol identifier in the exchange.asset_id_base_exchange string nullableThe base asset identifier in the exchange.asset_id_quote_exchange string nullableThe quote asset identifier in the exchange.price_precision double nullableThe price precision.size_precision double nullableThe size precision.raw_kvp object nullableNot normalized raw kvp data.property name* string][ { ""symbol_id"": ""string"", ""exchange_id"": ""string"", ""symbol_type"": ""string"", ""asset_id_base"": ""string"", ""asset_id_quote"": ""string"", ""asset_id_unit"": ""string"", ""future_contract_unit"": 0, ""future_contract_unit_asset"": ""string"", ""future_delivery_time"": ""2024-07-16T12:55:05.281Z"", ""option_type_is_call"": true, ""option_strike_price"": 0, ""option_contract_unit"": 0, ""option_exercise_style"": ""string"", ""option_expiration_time"": ""2024-07-16T12:55:05.281Z"", ""contract_delivery_time"": ""2024-07-16T12:55:05.281Z"", ""contract_unit"": 0, ""contract_unit_asset"": ""string"", ""contract_id"": ""string"", ""contract_display_name"": ""string"", ""contract_display_description"": ""string"", ""data_start"": ""string"", ""data_end"": ""string"", ""data_quote_start"": ""2024-07-16T12:55:05.281Z"", ""data_quote_end"": ""2024-07-16T12:55:05.281Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.281Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.281Z"", ""data_trade_start"": ""2024-07-16T12:55:05.281Z"", ""data_trade_end"": ""2024-07-16T12:55:05.281Z"", ""index_id"": ""string"", ""index_display_name"": ""string"", ""index_display_description"": ""string"", ""volume_1hrs"": 0, ""volume_1hrs_usd"": 0, ""volume_1day"": 0, ""volume_1day_usd"": 0, ""volume_1mth"": 0, ""volume_1mth_usd"": 0, ""price"": 0, ""symbol_id_exchange"": ""string"", ""asset_id_base_exchange"": ""string"", ""asset_id_quote_exchange"": ""string"", ""price_precision"": 0, ""size_precision"": 0, ""raw_kvp"": {} }][ { ""symbol_id"": ""KRAKENFTS_PERP_BTC_USD"", ""exchange_id"": ""KRAKENFTS"", ""symbol_type"": ""PERPETUAL"", ""asset_id_base"": ""BTC"", ""asset_id_quote"": ""USD"", ""asset_id_unit"": ""USD"", ""future_contract_unit"": 1, ""future_contract_unit_asset"": ""USD"", ""data_start"": ""2019-10-30"", ""data_end"": ""2021-03-03"", ""data_quote_start"": ""2019-10-30T16:53:10.3262317Z"", ""data_quote_end"": ""2021-03-03T13:51:45.6970000Z"", ""data_orderbook_start"": ""2019-10-30T16:53:10.3262317Z"", ""data_orderbook_end"": ""2020-08-05T14:37:32.0080000Z"", ""data_trade_start"": ""2019-10-30T16:38:52.1620000Z"", ""data_trade_end"": ""2021-03-03T13:46:25.7810000Z"", ""volume_1hrs"": 22897091, ""volume_1hrs_usd"": 22897091, ""volume_1day"": 459390289, ""volume_1day_usd"": 459390289, ""volume_1mth"": 12875674995, ""volume_1mth_usd"": 12875674995, ""price"": 51266, ""symbol_id_exchange"": ""pi_xbtusd"", ""asset_id_base_exchange"": ""XBT"", ""asset_id_quote_exchange"": ""USD"", ""price_precision"": 0.1, ""size_precision"": 1 }, { ""symbol_id"": ""POLONIEX_SPOT_LTC_USDC"", ""exchange_id"": ""POLONIEX"", ""symbol_type"": ""SPOT"", ""asset_id_base"": ""LTC"", ""asset_id_quote"": ""USDC"", ""data_start"": ""2018-11-20"", ""data_end"": ""2021-03-01"", ""data_quote_start"": ""2018-11-20T15:24:58.4128803Z"", ""data_quote_end"": ""2021-03-01T16:07:09.3475456Z"", ""data_orderbook_start"": ""2018-11-20T15:24:58.4128803Z"", ""data_orderbook_end"": ""2020-08-05T14:37:20.2695780Z"", ""data_trade_start"": ""2018-11-20T15:25:38.0000000Z"", ""data_trade_end"": ""2021-03-01T16:03:18.0000000Z"", ""volume_1hrs"": 51.68645899, ""volume_1hrs_usd"": 9036.44, ""volume_1day"": 465.568863, ""volume_1day_usd"": 81396.28, ""volume_1mth"": 22528.27638495, ""volume_1mth_usd"": 3938661, ""symbol_id_exchange"": ""USDC_LTC"", ""asset_id_base_exchange"": ""LTC"", ""asset_id_quote_exchange"": ""USDC"", ""price_precision"": 1e-8, ""size_precision"": 1e-8 }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.exchange_id string nullableThe exchange identifier.symbol_type string nullableThe symbol type.asset_id_base string nullableThe base asset identifier.asset_id_quote string nullableThe quote asset identifier.asset_id_unit string nullableThe unit asset identifier.future_contract_unit double nullableThe contract unit for futures.future_contract_unit_asset string nullableThe asset used as the unit for futures contract.future_delivery_time date-time nullableThe future delivery time for futures contract.option_type_is_call boolean nullableIndicates whether the option type is a call.option_strike_price double nullableThe strike price for options.option_contract_unit double nullableThe contract unit for options.option_exercise_style string nullableThe exercise style for options.option_expiration_time date-time nullableThe expiration time for options.contract_delivery_time date-time nullableThe delivery time for contracts.contract_unit double nullableThe contract unit for contracts.contract_unit_asset string nullableThe asset used as the unit for contracts.contract_id string nullableThe contract identifier.contract_display_name string nullableThe display name of the contract.contract_display_description string nullableThe display description of the contract.data_start string nullabledata_end string nullabledata_quote_start date-time nullableThe start date of quote data.data_quote_end date-time nullableThe end date of quote data.data_orderbook_start date-time nullableThe start date of order book data.data_orderbook_end date-time nullableThe end date of order book data.data_trade_start date-time nullableThe start date of trade data.data_trade_end date-time nullableThe end date of trade data.index_id string nullableThe index identifier.index_display_name string nullableThe display name of the index.index_display_description string nullableThe display description of the index.volume_1hrs double nullableThe volume in the last 1 hour.volume_1hrs_usd double nullableThe volume in USD in the last 1 hour.volume_1day double nullableThe volume in the last 1 day.volume_1day_usd double nullableThe volume in USD in the last 1 day.volume_1mth double nullableThe volume in the last 1 month.volume_1mth_usd double nullableThe volume in USD in the last 1 month.price double nullableThe price.symbol_id_exchange string nullableThe symbol identifier in the exchange.asset_id_base_exchange string nullableThe base asset identifier in the exchange.asset_id_quote_exchange string nullableThe quote asset identifier in the exchange.price_precision double nullableThe price precision.size_precision double nullableThe size precision.raw_kvp object nullableNot normalized raw kvp data.property name* string][ { ""symbol_id"": ""string"", ""exchange_id"": ""string"", ""symbol_type"": ""string"", ""asset_id_base"": ""string"", ""asset_id_quote"": ""string"", ""asset_id_unit"": ""string"", ""future_contract_unit"": 0, ""future_contract_unit_asset"": ""string"", ""future_delivery_time"": ""2024-07-16T12:55:05.283Z"", ""option_type_is_call"": true, ""option_strike_price"": 0, ""option_contract_unit"": 0, ""option_exercise_style"": ""string"", ""option_expiration_time"": ""2024-07-16T12:55:05.283Z"", ""contract_delivery_time"": ""2024-07-16T12:55:05.283Z"", ""contract_unit"": 0, ""contract_unit_asset"": ""string"", ""contract_id"": ""string"", ""contract_display_name"": ""string"", ""contract_display_description"": ""string"", ""data_start"": ""string"", ""data_end"": ""string"", ""data_quote_start"": ""2024-07-16T12:55:05.283Z"", ""data_quote_end"": ""2024-07-16T12:55:05.283Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.283Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.283Z"", ""data_trade_start"": ""2024-07-16T12:55:05.283Z"", ""data_trade_end"": ""2024-07-16T12:55:05.283Z"", ""index_id"": ""string"", ""index_display_name"": ""string"", ""index_display_description"": ""string"", ""volume_1hrs"": 0, ""volume_1hrs_usd"": 0, ""volume_1day"": 0, ""volume_1day_usd"": 0, ""volume_1mth"": 0, ""volume_1mth_usd"": 0, ""price"": 0, ""symbol_id_exchange"": ""string"", ""asset_id_base_exchange"": ""string"", ""asset_id_quote_exchange"": ""string"", ""price_precision"": 0, ""size_precision"": 0, ""raw_kvp"": {} }][ { ""symbol_id"": ""KRAKENFTS_PERP_BTC_USD"", ""exchange_id"": ""KRAKENFTS"", ""symbol_type"": ""PERPETUAL"", ""asset_id_base"": ""BTC"", ""asset_id_quote"": ""USD"", ""asset_id_unit"": ""USD"", ""future_contract_unit"": 1, ""future_contract_unit_asset"": ""USD"", ""data_start"": ""2019-10-30"", ""data_end"": ""2021-03-03"", ""data_quote_start"": ""2019-10-30T16:53:10.3262317Z"", ""data_quote_end"": ""2021-03-03T13:51:45.6970000Z"", ""data_orderbook_start"": ""2019-10-30T16:53:10.3262317Z"", ""data_orderbook_end"": ""2020-08-05T14:37:32.0080000Z"", ""data_trade_start"": ""2019-10-30T16:38:52.1620000Z"", ""data_trade_end"": ""2021-03-03T13:46:25.7810000Z"", ""volume_1hrs"": 22897091, ""volume_1hrs_usd"": 22897091, ""volume_1day"": 459390289, ""volume_1day_usd"": 459390289, ""volume_1mth"": 12875674995, ""volume_1mth_usd"": 12875674995, ""price"": 51266, ""symbol_id_exchange"": ""pi_xbtusd"", ""asset_id_base_exchange"": ""XBT"", ""asset_id_quote_exchange"": ""USD"", ""price_precision"": 0.1, ""size_precision"": 1 }, { ""symbol_id"": ""POLONIEX_SPOT_LTC_USDC"", ""exchange_id"": ""POLONIEX"", ""symbol_type"": ""SPOT"", ""asset_id_base"": ""LTC"", ""asset_id_quote"": ""USDC"", ""data_start"": ""2018-11-20"", ""data_end"": ""2021-03-01"", ""data_quote_start"": ""2018-11-20T15:24:58.4128803Z"", ""data_quote_end"": ""2021-03-01T16:07:09.3475456Z"", ""data_orderbook_start"": ""2018-11-20T15:24:58.4128803Z"", ""data_orderbook_end"": ""2020-08-05T14:37:20.2695780Z"", ""data_trade_start"": ""2018-11-20T15:25:38.0000000Z"", ""data_trade_end"": ""2021-03-01T16:03:18.0000000Z"", ""volume_1hrs"": 51.68645899, ""volume_1hrs_usd"": 9036.44, ""volume_1day"": 465.568863, ""volume_1day_usd"": 81396.28, ""volume_1mth"": 22528.27638495, ""volume_1mth_usd"": 3938661, ""symbol_id_exchange"": ""USDC_LTC"", ""asset_id_base_exchange"": ""LTC"", ""asset_id_quote_exchange"": ""USDC"", ""price_precision"": 1e-8, ""size_precision"": 1e-8 }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.exchange_id string nullableThe exchange identifier.symbol_type string nullableThe symbol type.asset_id_base string nullableThe base asset identifier.asset_id_quote string nullableThe quote asset identifier.asset_id_unit string nullableThe unit asset identifier.future_contract_unit double nullableThe contract unit for futures.future_contract_unit_asset string nullableThe asset used as the unit for futures contract.future_delivery_time date-time nullableThe future delivery time for futures contract.option_type_is_call boolean nullableIndicates whether the option type is a call.option_strike_price double nullableThe strike price for options.option_contract_unit double nullableThe contract unit for options.option_exercise_style string nullableThe exercise style for options.option_expiration_time date-time nullableThe expiration time for options.contract_delivery_time date-time nullableThe delivery time for contracts.contract_unit double nullableThe contract unit for contracts.contract_unit_asset string nullableThe asset used as the unit for contracts.contract_id string nullableThe contract identifier.contract_display_name string nullableThe display name of the contract.contract_display_description string nullableThe display description of the contract.data_start string nullabledata_end string nullabledata_quote_start date-time nullableThe start date of quote data.data_quote_end date-time nullableThe end date of quote data.data_orderbook_start date-time nullableThe start date of order book data.data_orderbook_end date-time nullableThe end date of order book data.data_trade_start date-time nullableThe start date of trade data.data_trade_end date-time nullableThe end date of trade data.index_id string nullableThe index identifier.index_display_name string nullableThe display name of the index.index_display_description string nullableThe display description of the index.volume_1hrs double nullableThe volume in the last 1 hour.volume_1hrs_usd double nullableThe volume in USD in the last 1 hour.volume_1day double nullableThe volume in the last 1 day.volume_1day_usd double nullableThe volume in USD in the last 1 day.volume_1mth double nullableThe volume in the last 1 month.volume_1mth_usd double nullableThe volume in USD in the last 1 month.price double nullableThe price.symbol_id_exchange string nullableThe symbol identifier in the exchange.asset_id_base_exchange string nullableThe base asset identifier in the exchange.asset_id_quote_exchange string nullableThe quote asset identifier in the exchange.price_precision double nullableThe price precision.size_precision double nullableThe size precision.raw_kvp object nullableNot normalized raw kvp data.property name* string][ { ""symbol_id"": ""string"", ""exchange_id"": ""string"", ""symbol_type"": ""string"", ""asset_id_base"": ""string"", ""asset_id_quote"": ""string"", ""asset_id_unit"": ""string"", ""future_contract_unit"": 0, ""future_contract_unit_asset"": ""string"", ""future_delivery_time"": ""2024-07-16T12:55:05.283Z"", ""option_type_is_call"": true, ""option_strike_price"": 0, ""option_contract_unit"": 0, ""option_exercise_style"": ""string"", ""option_expiration_time"": ""2024-07-16T12:55:05.283Z"", ""contract_delivery_time"": ""2024-07-16T12:55:05.283Z"", ""contract_unit"": 0, ""contract_unit_asset"": ""string"", ""contract_id"": ""string"", ""contract_display_name"": ""string"", ""contract_display_description"": ""string"", ""data_start"": ""string"", ""data_end"": ""string"", ""data_quote_start"": ""2024-07-16T12:55:05.284Z"", ""data_quote_end"": ""2024-07-16T12:55:05.284Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.284Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.284Z"", ""data_trade_start"": ""2024-07-16T12:55:05.284Z"", ""data_trade_end"": ""2024-07-16T12:55:05.284Z"", ""index_id"": ""string"", ""index_display_name"": ""string"", ""index_display_description"": ""string"", ""volume_1hrs"": 0, ""volume_1hrs_usd"": 0, ""volume_1day"": 0, ""volume_1day_usd"": 0, ""volume_1mth"": 0, ""volume_1mth_usd"": 0, ""price"": 0, ""symbol_id_exchange"": ""string"", ""asset_id_base_exchange"": ""string"", ""asset_id_quote_exchange"": ""string"", ""price_precision"": 0, ""size_precision"": 0, ""raw_kvp"": {} }][ { ""symbol_id"": ""KRAKENFTS_PERP_BTC_USD"", ""exchange_id"": ""KRAKENFTS"", ""symbol_type"": ""PERPETUAL"", ""asset_id_base"": ""BTC"", ""asset_id_quote"": ""USD"", ""asset_id_unit"": ""USD"", ""future_contract_unit"": 1, ""future_contract_unit_asset"": ""USD"", ""data_start"": ""2019-10-30"", ""data_end"": ""2021-03-03"", ""data_quote_start"": ""2019-10-30T16:53:10.3262317Z"", ""data_quote_end"": ""2021-03-03T13:51:45.6970000Z"", ""data_orderbook_start"": ""2019-10-30T16:53:10.3262317Z"", ""data_orderbook_end"": ""2020-08-05T14:37:32.0080000Z"", ""data_trade_start"": ""2019-10-30T16:38:52.1620000Z"", ""data_trade_end"": ""2021-03-03T13:46:25.7810000Z"", ""volume_1hrs"": 22897091, ""volume_1hrs_usd"": 22897091, ""volume_1day"": 459390289, ""volume_1day_usd"": 459390289, ""volume_1mth"": 12875674995, ""volume_1mth_usd"": 12875674995, ""price"": 51266, ""symbol_id_exchange"": ""pi_xbtusd"", ""asset_id_base_exchange"": ""XBT"", ""asset_id_quote_exchange"": ""USD"", ""price_precision"": 0.1, ""size_precision"": 1 }, { ""symbol_id"": ""POLONIEX_SPOT_LTC_USDC"", ""exchange_id"": ""POLONIEX"", ""symbol_type"": ""SPOT"", ""asset_id_base"": ""LTC"", ""asset_id_quote"": ""USDC"", ""data_start"": ""2018-11-20"", ""data_end"": ""2021-03-01"", ""data_quote_start"": ""2018-11-20T15:24:58.4128803Z"", ""data_quote_end"": ""2021-03-01T16:07:09.3475456Z"", ""data_orderbook_start"": ""2018-11-20T15:24:58.4128803Z"", ""data_orderbook_end"": ""2020-08-05T14:37:20.2695780Z"", ""data_trade_start"": ""2018-11-20T15:25:38.0000000Z"", ""data_trade_end"": ""2021-03-01T16:03:18.0000000Z"", ""volume_1hrs"": 51.68645899, ""volume_1hrs_usd"": 9036.44, ""volume_1day"": 465.568863, ""volume_1day_usd"": 81396.28, ""volume_1mth"": 22528.27638495, ""volume_1mth_usd"": 3938661, ""symbol_id_exchange"": ""USDC_LTC"", ""asset_id_base_exchange"": ""LTC"", ""asset_id_quote_exchange"": ""USDC"", ""price_precision"": 1e-8, ""size_precision"": 1e-8 }]Loading...Was this section helpful?12345PreviousList of icons for the exchangesNextList symbol mapping for the exchangeCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/metadata/list-of-symbols-for-the-exchange)"
431,i.io naas api bitcoin Methods decodeRawTransaction,"i.io naas api bitcoin Methods decodeRawTransaction.   decodeRawTransaction | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsdecodeRawTransactionOn this pagedecodeRawTransactionOverview​The 'decodeRawTransaction' method decodes a raw transaction and returns detailed information about the transaction in a JSON format. Utilizing this method will consume 1 API credit.Request​shellcsharpphppythonjavascriptgorubyjavacurl link \wget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --body-data '{ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""decodeRawTransaction"", ""params"": []}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""decodeRawTransaction\"",\r \""params\"": []\r }\r "", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""decodeRawTransaction"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""decodeRawTransaction"", ""params"": []})headers = { 'Content-Type': 'application/json', 'accept': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = {""url"": ""https://bitcoin-mainnet.node.coinapi.io"",""method"": ""POST"",""timeout"": 0,""headers"": {""Content-Type"": ""application/json"",""accept"": ""application/json"",""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY""},""data"": JSON.stringify({""jsonrpc"": ""1.0"",""id"": ""1"",""method"": ""decodeRawTransaction"",""params"": []}),};$.ajax(settings).done(function (response) {console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{`+""""+` ""jsonrpc"": ""1.0"",`+""""+` ""id"": ""1"",`+""""+` ""method"": ""decodeRawTransaction"",`+""""+` ""params"": []`+""""+`}`+""""+``) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""decodeRawTransaction"", ""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder().build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""decodeRawTransaction\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​hexString (string, required): The raw transaction represented as a hex string.isWitness (boolean): Indicates whether the transaction hex is a serialized witness transaction. Accepts ""true"" or ""false"" values.Response​txid: The unique identifier of the transaction.hash: The hash of the transaction, which may vary from the txid for witness transactions.size: The size of the transaction in bytes.vsize: The virtual size of the transaction, which may differ from the ""size"" for witness transactions.weight: The weight of the transaction, calculated as a value between vsize4 - 3 and vsize4.version: The version of the block where the transaction is recorded.locktime: The locktime of the transaction.vin (JSON array): Contains information about the transaction's input vectors. Each element in the array represents an input vector and contains the following fields:txid: The transaction ID.vout: The output number.scriptSig: Contains information about the script's signature.asm: The script's public key as a string.hex: The hex-encoded witness data.txinwitness (JSON array): An array of JSON objects containing hex-encoded witness data.sequence: The script sequence number.vout (JSON array): Contains information about the transaction outputs. Each element in the array contains:value: The value of the output in BTC.n: The output index.scriptPubKey (JSON object): Contains information about the PubKey script, including:asm: The script's public key as a string.desc: The inferred descriptor for the output.hex: The hex representation of the script's public key.address: The associated Bitcoin address.type: The type of script, such as pubkeyhash or multisig.Errors​Invalid Request: This error is returned if the request format is incorrect.Internal Error: This error is returned if there's a server-side issue processing the request.Rate Limits​Please note that there are rate limits applied to the API to ensure fair usage. Free-tier users are limited to 100 requests per day, while premium users can make up to 1000 or more requests per day.Support​If you encounter any issues or have further questions regarding the decodeRawTransaction method, please contact our support team at [email protected].Was this section helpful?12345PreviouscreatewalletNextdecodePSBTOverviewRequestRequest ParametersResponseErrorsRate LimitsSupportCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/decodeRawTransaction)"
432,i.io general faq general What data is delivered using the local sites,"i.io general faq general What data is delivered using the local sites.   What data is delivered using the local sites? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralWhat data is delivered using the local sites?What data is delivered using the local sites?We deliver all the real-time data using local sites, and we consider real-time data as:REST API all /current endpointsREST API /trades/latest endpointREST API /ohlcv/latestWebSocket APIFIX APIWas this section helpful?12345PreviousWhat are the inclusions of the Enterprise Plan?NextWhat exchanges are supported?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/What-data-is-delivered-using-the-local-sites)"
433,i.io faq general How to be notified about the issues incidents,"i.io faq general How to be notified about the issues incidents.   How to be notified about the issues/incidents? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralHow to be notified about the issues/incidents?How to be notified about the issues/incidents?We communicate status updates via the separate status page: https://status.coinapi.io/Please subscribe to the email notifications on this Status Page.If you do not agree with our status page or you need to report an incident, kindly submit a request here: https://support.coinapi.io/hc/en-us/requests/newWas this section helpful?12345PreviousHow to avoid losing the messages or delay on the WebSocket?NextHow to check historical API usage?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/How-to-be-notified-about-the-issues-incidents)"
434,i.io naas api,"i.io naas api.   NaaS API | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumNaaS APIOn this pageNaaS APIIntroduction​The NaaS API is a software product that provides a set of tools for developers to interact with the blockchain.It make it easier to interface with blockchains, allowing developers to concentrate on creating apps rather than maintaining the supporting infrastructure. Technical design​We provide public nodes that act as gateways to popular blockchains, including Bitcoin, Ethereum and more. These nodes are accessible through a range of HTTP API endpoints, allowing developers and applications to interact with blockchain data effortlessly.For a full list of available endpoints click here.Essentials​Node serves as both a server and software component responsible for exposing an API to interact with the blockchain.Chain or Blockchain, is a distributed and immutable ledger that records all transactions across a decentralized network.Network refers to the entire ecosystem of blockchain participants, including nodes, users, and miners, connected via a specific blockchain protocol.Endpoints​The list of endpoints is available in the documentation for each exchange.Getting started​To begin using the NaaS API, you'll need:CoinAPI key (obtainable by signing up on our website).Access an operational Node via any of our endpoints Familiarity with HTTP & JSON-RPCFamiliarity with the methods exposed by the blockchain you want to interact with such as Bitcoin, Ethereum or any other of your choiceGeneral information​NaaS API is dedicated to developers who wish to integrate their applications with the various blockchains and their ecosystems. The NaaS API facilitates interaction with nodes connected to different blockchains, allowing access to on-chain data and enabling the transmission of transactions onto the network. JSON-RPC Standard​The NaaS API operates on the JSON-RPC protocol. JSON-RPC is a lightweight and stateless remote procedure call (RPC) protocol widely used in communicating with blockchain nodes. All queries and responses in this API are formatted in JSON.Authentication & Security​Depending on your preference, you can either utilize an API key or enhance security by combining an API key with JWT token.For more details go to our Authentication section.Best PracticesNever expose your API key in a client-side application or a public code repository. Always keep it securely on your server.Always communicate with the CoinAPI NaaS API over HTTPS (SSL/TLS) to encrypt data transmitted between your application and CoinAPI's serversWhen possible, avoid sending personally identifiable information (PII)Monitor for updates as our API can evolve, regularly check for updates to ensure compatibilitydangerOnce your API key falls into the wrong hands, it can be used to make requests within your subscription.infoIf your key has been compromised, you have the option to delete it at any time and generate a new oneLimits​Your Subscription might have rate limits in place. Ensure you're making requests within the allowed limits to avoid being interruption in access.Http Status Codes​When the status code is not 200, it indicates a lack of response from the node.Even if a 200 status code is received, there may still be a JSON-RPC error at the node level.A status code different from 200 implies that the response is not a JSON-RPC response.Successful JSON-RPC Responses​200 OK, valid response:{ ""jsonrpc"": ""2.0"", ""id"": ""tracking-id-001"", ""result"": ""0x11baedc""}JSON-RPC Error Responses​200 OK, includes error code from the node:{ ""jsonrpc"": ""2.0"", ""id"": ""tracking-id-001"", ""error"": {  ""code"": -32602,  ""message"": ""too many arguments, want at most 0"" }}Non-JSON-RPC Error Responses (other than 200)​401, unauthorized:{ ""error"": ""Invalid API key""}Possible HTTP status codes and their meaning are listed below:Status CodeMeaning200Your request has been successfully processed by the server. However, it's essential to examine the response data as there might be JSON-RPC errors within the node's response.400Your request is malformed or contains incorrect parameters. There is an issue with the request itself.401Your request lacks proper authentication. It is typically due to an incorrect API key.403Your API key lacks the necessary permissions to access the requested resource.429Your request has exceeded the rate limits associated with your API key.550Server cannot provide the requested data at the moment. This may occur when requesting specific single items that are temporarily unavailable.Making API Calls​Json-RPC provides a structured and straightforward approach to sending and receiving data, making it accessible for developers using a wide range of programming languages and tools.curlYou can use the curl command-line tool to make requests. Here's an example of how to make a POST request to the Ethereum JSON-RPC API using curl:curl -X POST \ ""https://ethereum-mainnet-geth-archive.node.coinapi.io?apiKey=YOUR_API_KEY"" \ -H ""Content-Type: application/json"" \ -d '{ ""jsonrpc"": ""2.0"", ""method"": ""eth_getTransactionReceipt"", ""params"": [""0x2444a649cd7fcd50ccb8c52c4159515fdf311eeb5dc02cf1b2c397b833fde012""], ""id"": 1 }'web3.jsIf you prefer to use JavaScript and the web3.js library to interact with NaaS API, you can make request like this:const axios = require('axios');const url = 'https://ethereum-mainnet-geth-archive.node.coinapi.io?apiKey=YOUR_API_KEY';const data = { jsonrpc: '2.0', method: 'eth_getTransactionReceipt', params: ['0x2444a649cd7fcd50ccb8c52c4159515fdf311eeb5dc02cf1b2c397b833fde012'], id: 1,};axios.post(url, data, { headers: { 'Content-Type': 'application/json', },}) .then(response => { console.log(response.data); }) .catch(error => { console.error(error); });PythonYou can also use Python to make HTTP POST requests to the NaaS API using the requests library. Here's an example:import requestsurl = 'https://ethereum-mainnet-geth-archive.node.coinapi.io?apiKey=YOUR_API_KEY'data = { 'jsonrpc': '2.0', 'method': 'eth_getTransactionReceipt', 'params': ['0x2444a649cd7fcd50ccb8c52c4159515fdf311eeb5dc02cf1b2c397b833fde012'], 'id': 1,}headers = {'Content-Type': 'application/json'}response = requests.post(url, json=data, headers=headers)if response.status_code == 200: result = response.json() print(result)else: print(f""Request failed with status code {response.status_code}"")Batch requests | Multi-Call​Multiple requests can be sent simultaneously in an array when using the NaaS API, allowing for efficient handling of multiple operations. In such a scenario, each request within the array is processed before all the requests are returned.When requests are sent in a batch, they will only be returned after every request has been processed. This behavior is particularly useful when you need to perform multiple operations and want to wait for all of them to complete before proceeding.Example of a Batch Request[ {""jsonrpc"": ""2.0"", ""id"": ""tracking-id-001"", ""method"": ""eth_blockNumber"", ""params"": []}, {""jsonrpc"": ""2.0"", ""id"": ""tracking-id-002"", ""method"": ""eth_chainId"", ""params"": []}]In this batch request, we have two distinct JSON-RPC requests bundled togethe:The first request, identified by tracking-id-001 invokes the eth_blockNumber, aiming to retrieve the current block number.The second request, with the identifier tracking-id-002 calls the eth_chainId to fetch the current chain ID.Response to the Batch Request[ {  ""jsonrpc"": ""2.0"",  ""id"": ""tracking-id-001"",  ""result"": ""0x11bb158"" }, {  ""jsonrpc"": ""2.0"",  ""id"": ""tracking-id-002"",  ""result"": ""0x1"" }]Data Streaming​TODOSupport​If you encounter any issues or have further questions regarding the Ethereum API, please contact our support team at [email protected].Summary​With the NaaS API, you can fully leverage the potential of the different blockchains in your applications. This documentation covers all the necessary information to start utilizing this API and creating innovative blockchain-based solutions. Was this section helpful?12345NextAuthenticationIntroductionTechnical designEssentialsEndpointsGetting startedGeneral informationJSON-RPC StandardAuthentication & SecurityLimitsHttp Status CodesMaking API CallsBatch requests | Multi-CallData StreamingSupportSummaryCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api)"
435,i.io faq api How can I get the USD price for multiple assets at the same time,"i.io faq api How can I get the USD price for multiple assets at the same time.   How can I get the USD price for multiple assets at the same time? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQAPIHow can I get the USD price for multiple assets at the same time?How can I get the USD price for multiple assets at the same time?You can do so by using our /v1/assets endpoint as the output includes price_usd data, using the filter_asset_id parameter, and separating the assets with a semicolon (;). Here are some examples:To get the actual USD price for both BTC and ETH:https://rest.coinapi.io/v1/assets?filter_asset_id=BTC;ETHTo get the actual USD price for XRP, LINK, MATIC, QNT and MANA:https://rest.coinapi.io/v1/assets?filter_asset_id=XRP;LINK;MATIC;QNT;MANATo learn more, please refer to our documentation: https://docs.coinapi.io/market-data/rest-api/metadata#list-all-assets-getWas this section helpful?12345PreviousHow can I get OHLCV data by asset pair?NextHow can I see a list of symbols related to a specific exchange, market, or asset?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/api/How-can-I-get-the-USD-price-for-multiple-assets-at-the-same-time)"
436,i.io faq billing and subscriptions Can I still use my API key if I cancel my subscription,"i.io faq billing and subscriptions Can I still use my API key if I cancel my subscription.   Can I still use my API key if I cancel my subscription? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIBilling and SubscriptionsCan I cancel my subscription anytime?Can I still use my API key if I cancel my subscription?How to reactivate my canceled subscription?How to subscribe to the API?How to upgrade/downgrade my subscription?Security and PrivacyCustomer PortalChangelogFAQBilling and SubscriptionsCan I still use my API key if I cancel my subscription?Can I still use my API key if I cancel my subscription?Cancelling your API key's subscription will render it unusable up until the end of your current billing period. If you still want to be able to use your API key, you may instead opt to downgrade to our Free tier.To learn more about the scope of the Free tier, please refer to our Pricing page: https://www.coinapi.io/PricingWas this section helpful?12345PreviousCan I cancel my subscription anytime?NextHow to reactivate my canceled subscription?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/billing-and-subscriptions/Can-I-still-use-my-API-key-if-I-cancel-my-subscription)"
437,i.io general faq billing and subscriptions How to subscribe to the API,i.io general faq billing and subscriptions How to subscribe to the API.   How to subscribe to the API? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIBilling and SubscriptionsCan I cancel my subscription anytime?Can I still use my API key if I cancel my subscription?How to reactivate my canceled subscription?How to subscribe to the API?How to upgrade/downgrade my subscription?Security and PrivacyGlossaryChangelogFAQBilling and SubscriptionsHow to subscribe to the API?How to subscribe to the API?Subscriptions for the predefined plans are sold through our Pricing page. [1]Enterprise Plan agreement is custom-tailored to specific project needs. Please contact support or sales to get more information. [2]References:[1] https://www.coinapi.io/Pricing [2] https://support.coinapi.io/hc/en-us/requests/newWas this section helpful?12345PreviousHow to reactivate my canceled subscription?NextHow to upgrade/downgrade my subscription?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/billing-and-subscriptions/How-to-subscribe-to-the-API)
438,i.io naas api bitcoin Methods createrawtransaction x,"i.io naas api bitcoin Methods createrawtransaction x.   createrawtransaction | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodscreaterawtransactionOn this pagecreaterawtransactionOverview​The 'createrawtransaction' method llows you to create a transaction by specifying the inputs and outputs. This method returns a hex-encoded raw transaction. Note that the transaction's inputs are not signed, and it is not stored in the wallet or transmitted to the network.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ -method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""createrawtransaction"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'-var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""createrawtransaction\"",\r \""params\"": []\r }\r "", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""createrawtransaction"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""createrawtransaction"", ""params"": []})headers = { 'Content-Type': 'application/json', 'accept': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""createrawtransaction"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{`+""""+` ""jsonrpc"": ""1.0"",`+""""+` ""id"": ""1"",`+""""+` ""method"": ""createrawtransaction"",`+""""+` ""params"": []`+""""+`}`+""""+``) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""createrawtransaction"", ""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder().build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""createrawtransaction\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​txid (string, required): The transaction ID.vout (numeric, required): The output number.sequence (numeric, optional): The sequence number, default value depends on the 'replaceable' and 'locktime' arguments.address (numeric or string, required): A key-value pair where the key is the Bitcoin address and the value is the amount in BTC.data (string, required): A key-value pair where the key must be ""data"" and the value is hex-encoded data.locktime (raw, optional): Non-0 value also locktime-activates inputs.replaceable (boolean, optional): Marks this transaction as BIP125-replaceable. Allows this transaction to be replaced by a transaction with higher feesResponse​{ ""result"": ""hex-encoded raw transaction"", ""error"": null, ""id"": ""coinapi_test""}Was this section helpful?12345PreviouscreatepsbtNextcreatewalletOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/createrawtransaction_x)"
439,i.io faq api Why are limit headers not always showing on a request,"i.io faq api Why are limit headers not always showing on a request.   Why are limit headers not always showing on a request? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQAPIWhy are limit headers not always showing on a request?Why are limit headers not always showing on a request?The reason why response headers are not always present in the API responses is that, in some cases, we are unaware of their specific usage or requirements. To ensure that we promptly respond to your API calls and avoid unnecessary delays, we choose to provide a response without including the response headers. This decision is made with the intention of optimizing the operation of our API. By selectively excluding the inclusion of response headers in every request, we can enhance the overall performance and efficiency of the API.It takes a while to verify the current usage as for the very first call for a given client we do not have a rate limit then yet. Once the request is made, we start the rate limit verification process In the background. We may then in the meantime process many requests for this client and at some point we append the result of current usage to the header. All requests that were made during that process are also included in the limit after some time.For example (each bullet point representing a request made):Request (no info about clients usage)What's the usage? Starting the verificationRequestRequest5 requests used today (those 3 above are not counted yet), appended to the headerRequest (5 used)Request (5 used)Request (5 used)Request (5 used)Request (10 requests used today)To provide clarity and transparency regarding the absence of response headers, we have documented this behavior on our official documentation page, which can be found at https://docs.coinapi.io/market-data/rest-api#request-limit--apikeyWas this section helpful?12345PreviousWhere can I find examples and SDK source codes for API?NextWhy are there no Exchange Rates data for some assets for a given period?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/api/Why-are-limit-headers-not-always-showing-on-a-request)"
440,i.io general faq general Does CoinAPI provide asset icons images of the cryptocurrencies,"i.io general faq general Does CoinAPI provide asset icons images of the cryptocurrencies.   Does CoinAPI provide asset icons/images of the cryptocurrencies? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralDoes CoinAPI provide asset icons/images of the cryptocurrencies?Does CoinAPI provide asset icons/images of the cryptocurrencies?Yes, we do provide asset icons via REST API under the Metadata. More information can be found in our documentation here: https://docs.coinapi.io/market-data/rest-api/metadata/list-all-asset-iconsWas this section helpful?12345PreviousDo you have a Status Page?NextExchange chart is different OHLCVCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/Does-CoinAPI-provide-asset-icons-images-of-the-cryptocurrencies)"
441,i.io market data rest api metadata #list all assets get,i.io market data rest api metadata #list all assets get.   Metadata | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataList all asset iconsList all assets by asset IDList all assetsList all exchanges by exchange_idList all exchangesList all symbolsList of icons for the exchangesList of symbols for the exchangeList symbol mapping for the exchangeMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIMetadataMetadata📄️ List all asset iconsGets the list of icons (of the given size) for all the assets.📄️ List all assets by asset IDList all assets by asset ID📄️ List all assetsRetrieves all assets.📄️ List all exchanges by exchange_idList all exchanges by exchange_id📄️ List all exchangesGet a detailed list of exchanges provided by the system.📄️ List all symbolsRetrieves all symbols with optional filtering.📄️ List of icons for the exchangesList of icons for the exchanges📄️ List of symbols for the exchangeList of symbols for the exchange📄️ List symbol mapping for the exchangeList symbol mapping for the exchangeWas this section helpful?12345PreviousTimeseries Index ValueNextList all asset iconsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/metadata/#list-all-assets-get)
442,i.io cdn cgi l email protection#295a5c5959465b5d694a464047485940074046,"i.io cdn cgi l email protection#295a5c5959465b5d694a464047485940074046.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 86784cdb4b00353c •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#295a5c5959465b5d694a464047485940074046)"
443,i.io cdn cgi l email protection#196c6a7c6b5960377a7674,"i.io cdn cgi l email protection#196c6a7c6b5960377a7674.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 8aad296a3e6eb360 •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#196c6a7c6b5960377a7674)"
444,i.io naas api bitcoin Methods getdifficulty,"i.io naas api bitcoin Methods getdifficulty.   getdifficulty | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetdifficultyOn this pagegetdifficultyOverview​The 'getdifficulty' RPC Method returns the proof-of-work difficulty as a multiple of the minimum difficulty.Request​shellcsharpphppythonjavascriptgorubyjavacurl --location 'https://bitcoin-mainnet.node.coinapi.io' \--header 'x-coinapi-key: '73034021-THIS-IS-SAMPLE-KEY' \--header 'Content-Type: application/json' \--header 'accept: application/json' \--data '{""jsonrpc"":""2.0"",""method"":""getdifficulty"",""params"": [],""id"":1}'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""getdifficulty\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""getdifficulty"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""2.0"", ""method"": ""getdifficulty"", ""params"": [], ""id"": 1})headers = { 'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type': 'application/json', 'accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""getdifficulty"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""getdifficulty"",""params"": [],""id"":1}`) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"") req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""method"": ""getdifficulty"", ""params"": [], ""id"": 1})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""getdifficulty\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​This method does not require any parameters.Response​{ ""result"": 57321508229258.04, ""error"": null, ""id"": 1}result: The proof-of-work difficulty, represented as a multiple of the minimum difficulty. error: A message describing the error, if any occurs during the process.Was this section helpful?12345PreviousgetconnectioncountNextgetindexinfoOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getdifficulty)"
445,i.io general faq general Authorize CoinAPI to Customer S3 bucket,"i.io general faq general Authorize CoinAPI to Customer S3 bucket.   Authorizing CoinAPI Access to Your AWS S3 Bucket | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralAuthorizing CoinAPI Access to Your AWS S3 BucketOn this pageAuthorizing CoinAPI Access to Your AWS S3 BucketEnsuring secure and efficient data exchange between CoinAPI and your AWS S3 bucket is crucial for leveraging the full potential of financial data analysis. This guide walks you through the process of authorizing CoinAPI to access your AWS S3 bucket.Prerequisites​Before proceeding, ensure you have:An active AWS account with sufficient administrative access.Step 1: Creating a Bucket for Data Exchange​First, you need to create a AWS S3 Bucket that will be used to receive data from the CoinAPI.Using the S3 console​Sign in to the AWS Management Console and open the Amazon S3 console at https://console.aws.amazon.com/s3/.In the navigation bar on the top of the page, choose the name of the currently displayed AWS Region. Next, choose the Region in which you want to create a bucket.In the left navigation pane, choose Buckets.Choose Create bucket.Under General configuration, view the AWS Region where your bucket will be created.Under Bucket type, choose General purpose.For Bucket name, enter a name for your bucket.Under Object Ownership, choose: ACLs disabledUnder Block Public Access settings for this bucket, choose all four Block Public Access settings.Default encryption, choose Amazon S3 managed key (SSE-S3)Choose Create bucket.Using the AWS CLI​aws s3 create-bucket --bucket YOUR-COINAPI-DATA-DEMARCATION-BUCKET --region AWS-REGIONStep 2: Define AWS S3 Bucket Policy to allow CoinAPI access​Below is the policy which you need to attach to the bucket, please replace the YOUR-COINAPI-DATA-DEMARCATION-BUCKET with actuall bucket name.{ ""Version"":""2012-10-17"", ""Id"":""DelegateS3AccessToCoinAPI"", ""Statement"":[  {   ""Sid"":""DelegateS3Access"",   ""Effect"":""Allow"",   ""Principal"":{   ""AWS"":[    ""arn:aws:iam::430218079390:user/coinapi-s3"",    ""arn:aws:iam::917437866088:user/ct-s3-demarc-uploader""   ],   ""CanonicalUser"":[    ""533777d313250734526631df4b685cfe6003c72ea4a4061f6914c29b5d0d5aa1"",    ""9e484efe16906b4470d8d6be30d38a76408d22fcefe7a738a50d679aa8e90d70""   ]   },   ""Action"":[   ""s3:PutObject*"",   ""s3:Get*"",   ""s3:DeleteObject*"",   ""s3:List*"",   ""s3:AbortMultipartUpload""   ],   ""Resource"":[   ""arn:aws:s3:::YOUR-COINAPI-DATA-DEMARCATION-BUCKET"",   ""arn:aws:s3:::YOUR-COINAPI-DATA-DEMARCATION-BUCKET/*""   ]  } ]}Using the S3 Console​Sign in to the AWS Management Console and open the Amazon S3 console at https://console.aws.amazon.com/s3/.In the left navigation pane, choose Buckets.In the Buckets list, choose the name of the bucket that you want to create a bucket policy for or whose bucket policy you want to edit.Choose the Permissions tab.Under Bucket policy, choose Edit. The Edit bucket policy page appears.On the Edit bucket policy page, edit the JSON in the Policy section.Paste the policy above.Choose Save changes, which returns you to the Permissions tab.Using the AWS CLI​Parepare the bucket policy in the file named policy.jsonExecute the command below to set the bucket policy on the bucket.aws s3 put-bucket-policy --bucket YOUR-COINAPI-DATA-DEMARCATION-BUCKET --policy file://policy.jsonWas this section helpful?12345PreviousAre you planning to add an order exchange fee feature?NextCan I get exchange wallet deposit and withdrawal status?PrerequisitesStep 1: Creating a Bucket for Data ExchangeUsing the S3 consoleUsing the AWS CLIStep 2: Define AWS S3 Bucket Policy to allow CoinAPI accessUsing the S3 ConsoleUsing the AWS CLICopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/Authorize-CoinAPI-to-Customer-S3-bucket)"
446,i.io naas api ethereum Methods eth getBlockReceipts,"i.io naas api ethereum Methods eth getBlockReceipts.   eth_getBlockReceipts | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_getBlockReceiptsOn this pageeth_getBlockReceiptsOverview​The 'eth_getBlockReceipts' method retrieves all transaction receipts for a specified block in the Ethereum blockchain. Transaction receipts provide details about the transaction's execution status, making them invaluable for tracking the status of transfers or contract execution on the blockchain.Request​{ ""method"": ""eth_getBlockReceipts"", ""params"": [""blockIdentifier""], ""id"": 1, ""jsonrpc"": ""2.0""}Request Parameters​blockIdentifier: An integer of a block encoded as hexadecimal or a string with options like:latest: The most recent block.safe: A block that received justification from the beacon chain.finalized: A block accepted as canonical by the majority of validators.earliest: The genesis block.pending: The current state of transactions not yet included in a block.Response​{ ""id"": 1, ""jsonrpc"": ""2.0"", ""result"": [ {  ""blockHash"": ""blockHashValue"",  ""blockNumber"": ""blockNumberValue"",  ""transactionHash"": ""transactionHashValue"",  ... }, ... ]}Was this section helpful?12345Previouseth_getBlockByNumberNexteth_getBlockTransactionCountByHashOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_getBlockReceipts)"
447,i.io faq general How to handle payment errors during sign up,"i.io faq general How to handle payment errors during sign up.   How to handle payment errors during sign up | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralHow to handle payment errors during sign upHow to handle payment errors during sign upYou may encounter different types of errors such as:balance_insufficientcard_decline_rate_limit_exceededemail_invalidTo handle these scenarios, you may refer to Stripe’s documentation [1][2], our payment gateway partner. This will help you identify the error and determine the necessary steps to take.If you have further questions, you may also contact CoinAPI support team here: https://support.coinapi.io/hc/en-us/requests/new References:[1] https://stripe.com/docs/error-codes#email-invalid [2] https://stripe.com/docs/declines/codesWas this section helpful?12345PreviousHow to handle order book flat files can go back in time?NextI didn't receive an emailCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/How-to-handle-payment-errors-during-sign-up)"
448,i.io market data rest api metrics,"i.io market data rest api metrics.   Metrics | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsCurrent metrics for given assetCurrent metrics for given exchangeCurrent metrics for given symbolHistorical metrics for assetHistorical metrics for symbolHistorical metrics for the exchangeListing of all supported metrics by CoinAPIListing of all supported exchange metricsListing of all supported metrics for assetListing of all supported metrics for symbolOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIMetricsMetricsMetrics are quantitative measurements used to evaluate the performance and activity of cryptocurrency exchanges. These metrics include:Trading Volume: The total amount of cryptocurrency traded on an exchange within a specific time period, indicating liquidity and activity.Market Depth: The level of buy and sell orders at different price levels, providing insights into liquidity and potential price impact.Order Book: A record of outstanding buy and sell orders for a cryptocurrency, reflecting supply and demand dynamics.Spread: The difference between the highest bid and lowest ask prices, indicating liquidity and trading costs.Price Charts: Visual representations of cryptocurrency price movements over time, helping identify trends and inform trading decisions.Market Cap: The total value of a cryptocurrency calculated by its price multiplied by circulating supply, reflecting relative size and value.Trading Pairs: Combinations of cryptocurrencies available for trading, including volume, price, and spread for each pair.User Metrics: Data on active users, new registrations, user retention, and engagement, indicating platform popularity and growth.Trading Fees: Fees charged for executing trades, including fee structure, discounts, and revenue generated by the exchange.Security Metrics: Measures assessing the security of an exchange, such as past incidents, user fund protection, and security audits.These metrics assist traders and investors in evaluating market activity, liquidity, and the reliability of crypto exchanges for informed decision-making.📄️ Current metrics for given assetGet current asset metrics.📄️ Current metrics for given exchangeGet current exchange metrics values.📄️ Current metrics for given symbolGet current symbol metrics.📄️ Historical metrics for assetGet asset metrics history.📄️ Historical metrics for symbolGet symbol metrics history.📄️ Historical metrics for the exchangeGet exchange metrics history.📄️ Listing of all supported metrics by CoinAPIGet all data metrics.📄️ Listing of all supported exchange metricsGet data metrics for exchange.📄️ Listing of all supported metrics for assetGet data metrics for asset.📄️ Listing of all supported metrics for symbolGet data metrics for symbol.Was this section helpful?12345PreviousList symbol mapping for the exchangeNextCurrent metrics for given assetCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/metrics)"
449,i.io naas api ethereum Methods net version,"i.io naas api ethereum Methods net version.   net_version | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodsnet_versionOn this pagenet_versionOverview​The 'net_version' returns the current network ID.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'content-type: application/json' \  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data ' {  ""id"": 1,  ""jsonrpc"": ""2.0"",  ""method"": ""net_version"" }'using RestSharp; {  var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");  var client = new RestClient(options);  var request = new RestRequest("""");  request.AddHeader(""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");  request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""net_version\""}"", false);  var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [ CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"", CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => """", CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 30, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => ""POST"", CURLOPT_POSTFIELDS => json_encode([ 'id' => 1, 'jsonrpc' => '2.0', 'method' => 'net_version' ]), CURLOPT_HTTPHEADER => [ ""accept: application/json"", ""content-type: application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" ],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) { echo ""cURL Error #:"" . $err;} else { echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""net_version""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text)const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({id: 1, jsonrpc: '2.0', method: 'net_version'})};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""net_version\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = {\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""net_version\""}response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();{MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""net_version\""}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();}Response​The method returns an array of 20-byte addresses associated with the client, formatted as hexadecimal strings.{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": []}network ID: A string representing the current network ID.Was this section helpful?12345Previousnet_peerCountNexttrace_blockOverviewRequestResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/net_version)"
450,i.io flat files api data types quotes,"i.io flat files api data types quotes.   Quotes | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyFlat FilesBilling and UsageData & StructureQuotesTradesFull Limit Order BookS3 APIPush APIData & StructureQuotesOn this pageQuotesOverview​The Quotes data type provides information about the best bid and ask prices for a specific trading pair on an exchange. This data is crucial for understanding the current state of the market and the spread between buy and sell orders.File Organization​Quote data is organized in the S3 bucket as follows:quotes/└── YYYYMMDD/ └── [EXCHANGE_ID]-[SYMBOL_ID].csv.gzExample: quotes/20230701/BINANCE-BTCUSDT.csv.gzFile Format​Files are in CSV format, compressed with gzip. Each row represents a single quote update.Data Fields​Column NameTypeDescriptionid_site_coinapistringUUID of the site which received the quote. Useful for replaying markets from the perspective of an algorithmic trading strategy.time_exchangedatetimeUTC timestamp of the quote provided by the exchange or estimated using the exchange API delay.time_coinapidatetimeUTC timestamp when CoinAPI first received the quote. Useful for replaying markets from an algorithmic trading strategy perspective.ask_pxdecimalBest ask (sell) priceask_sxdecimalTotal amount of volume resting on the best ask level in the base asset of the symbolbid_pxdecimalBest bid (buy) pricebid_sxdecimalTotal amount of volume resting on the best bid level in the base asset of the symbolExample Data​id_site_coinapi,time_exchange,time_coinapi,ask_px,ask_sx,bid_px,bid_sx550e8400-e29b-41d4-a716-446655440000,2023-07-01T12:00:00.123456Z,2023-07-01T12:00:00.234567Z,30000.50,1.5,30000.00,2.0550e8400-e29b-41d4-a716-446655440001,2023-07-01T12:00:01.123456Z,2023-07-01T12:00:01.234567Z,30001.00,1.2,30000.50,1.8Data Collection Process​We continuously monitor the order books of supported exchanges.When a change in the best bid or ask is detected, a new quote entry is recorded.The data is processed, normalized, and stored in our system.At the end of each day (UTC), the data is aggregated into daily files and uploaded to the S3 bucket.Corner Cases and Special Considerations​Missing Data: If an exchange experiences downtime or connectivity issues, there may be gaps in the quote data.Extreme Values: During periods of high volatility, you may observe unusually large spreads or extreme prices. These are typically valid market conditions rather than errors.time_exchange vs time_coinapi: If these times are equal, it means the exchange did not provide a timestamp, and we're using our receipt time for both fields.File Splitting​For exchanges or trading pairs with high update frequencies, a single day's data may be split across multiple files to manage file sizes. In such cases, the files will be named with an additional sequence number:quotes/20230701/BINANCE-BTCUSDT_001.csv.gzquotes/20230701/BINANCE-BTCUSDT_002.csv.gzUsage Tips​When analyzing spread, calculate it as ask_px - bid_px.The ask_sx and bid_sx fields can be used to gauge market depth at the best prices.Comparing time_exchange and time_coinapi can provide insights into latency between the exchange and our data collection points.For any questions or issues with the Quotes data, please contact our support team.Was this section helpful?12345PreviousData & StructureNextTradesOverviewFile OrganizationFile FormatData FieldsExample DataData Collection ProcessCorner Cases and Special ConsiderationsFile SplittingUsage TipsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/flat-files-api/data-types/quotes)"
451,i.io faq api FIX API Logon Troubleshooting,"i.io faq api FIX API Logon Troubleshooting.   FIX API Logon Troubleshooting | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQAPIFIX API Logon TroubleshootingFIX API Logon TroubleshootingMake sure you have a Professional level subscription or you have the FIX access provisioned on your API KeyUse our configuration for the initiator and the FIX44.xml file from our GitHub repository (https://github.com/coinapi/coinapi-sdk/tree/master/data-api/csharp-fix-v2)Make sure that your API Key in the initiator config is correctly pasted into the SenderCompID key.Check the value of the TAG=52 in the LOGON (A) message. Time should be in the UTC timezone and it can't differ too much from the actual time.Was this section helpful?12345PreviousEmpty response when using EMS endpointsNextGeographic locations and the LatencyCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/api/FIX-API-Logon-Troubleshooting)"
452,i.io general faq general We need a OneZero FIX API session is this possible,"i.io general faq general We need a OneZero FIX API session is this possible.   We need a OneZero FIX API session, is this possible? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralWe need a OneZero FIX API session, is this possible?We need a OneZero FIX API session, is this possible?Yes, our interface is certified with OneZero as an external data provider. This feature, however, requires an additional subscription on a yearly billing period. If you're interested in subscribing to this, please follow these steps:Log in to your account via the Customer Portal (https://customerportal.coinapi.io/login). Navigate to Subscriptions > CoinAPI oneZero Hub Link > Buy. After submitting and initiating the payment, we will send you a separate invoice for the subscription fee.Was this section helpful?12345PreviousWas my free API Key banned/blocked?NextWhat are the benefits of using the WebSocket SDK?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/We-need-a-OneZero-FIX-API-session-is-this-possible)"
453,i.io naas api bitcoin Methods decodescript,"i.io naas api bitcoin Methods decodescript.   Decodescript | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsDecodescriptOn this pageDecodescriptOverview​The decodescript RPC method allows you to decode a hex-encoded script, facilitating a deeper understanding of the script's structure and components. Each call to this method will consume 1 API credit.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --body-data '{ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""Decodescript"", ""params"": []}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""Decodescript\"",\r \""params\"": []\r }\r "", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""Decodescript"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""Decodescript"", ""params"": []})headers = { 'Content-Type': 'application/json', 'accept': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""Decodescript"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{`+""""+` ""jsonrpc"": ""1.0"",`+""""+` ""id"": ""1"",`+""""+` ""method"": ""Decodescript"",`+""""+` ""params"": []`+""""+`}`+""""+``)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""Decodescript"", ""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder().build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""Decodescript\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder().url(""https://bitcoin-mainnet.node.coinapi.io"").method(""POST"", body).addHeader(""Content-Type"", ""application/json"").addHeader(""accept"", ""application/json"").addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"").build();Response response = client.newCall(request).execute();Parameters​'hexstring' (required)Type: stringDescription: The hex-encoded script that needs to be decoded.Returns​The method returns an object with the following properties:'asm'Type: stringDescription: Represents the script public key in a string format.typeType: stringDescription: Specifies the output type. It can be one of the following: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_scripthash, witness_v0_keyhash, witness_v1_taproot, or witness_unknown.reqSigsType: integerDescription: Indicates the number of required signatures.addressesType: JSON arrayDescription: A JSON array containing the addresses involved in the transaction.strType: stringDescription: The Bitcoin address associated with the script.p2shtype: string (optional)Description: The address of the P2SH script that wraps this redeem script. This field is not returned if the script is already a P2SH.segwitType: object (optional)Description: Contains information about the witness script public key that wraps this redeem script. This field is not returned if the script is a P2SH or witness. The object contains the following properties:'asm': The script public key in string format.'hex': The hex representation of the script's public key in string format.'type': The type of the script public key.'reqSigs': The number of required signatures.'addresses': A JSON array of addresses involved.'str': The segwit address.'p2sh-segwit': The address of the P2SH script wrapping this witness redeem script.Was this section helpful?12345PreviousdecodePSBTNextderiveaddressesOverviewRequestParametersReturnsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/decodescript)"
454,i.io naas api ethereum Methods eth signTransaction,"i.io naas api ethereum Methods eth signTransaction.   eth_signTransaction | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_signTransactionOn this pageeth_signTransactionOverview​The 'eth_signTransaction' method allows users to sign a transaction with a specific private key.Request​{ ""jsonrpc"": ""2.0"", ""method"": ""eth_signTransaction"", ""id"": 1, ""params"": [ {  ""from"": ""0x..."",  ""to"": ""0x..."",  ""gas"": ""0x..."",  ""gasPrice"": ""0x..."",  ""value"": ""0x..."",  ""data"": ""0x..."" } ]}Request Parameters​from: The address the transaction is sent from.to: (optional for contract creation) The address the transaction is directed to.gas: (default: 90000) The integer of the gas provided for the transaction execution.gasPrice: The integer of the gasPrice used for each paid gas, in wei.value: The integer of the value sent with this transaction, in wei.data: The compiled code of a contract or the hash of the invoked method signature and encoded parameters.Response​{ ""transaction"": { ""from"": ""0x..."", ""to"": ""0x..."", ""gas"": ""0x..."", ""gasPrice"": ""0x..."", ""value"": ""0x..."", ""data"": ""0x..."" }}Was this section helpful?12345Previouseth_signNexteth_submitWorkOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_signTransaction)"
455,i.io faq api How can I get OHLCV data by asset pair,"i.io faq api How can I get OHLCV data by asset pair.   How can I get OHLCV data by asset pair? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQAPIHow can I get OHLCV data by asset pair?How can I get OHLCV data by asset pair?Our OHLCV endpoint is symbol based (e.g BINANCE_SPOT_BTC_USDT). If you need OHLC data by asset pairs (e.g BTC/USD), you may use our Exchange Rates endpoint instead: https://docs.coinapi.io/market-data/rest-api/exchange-rates You can also create your own aggregation by querying for multiple OHLCV symbols and summing the data, or aggregate only OHLCV symbol based data for the volume and use Exchange Rates for pricing.Was this section helpful?12345PreviousHow are exchange rates calculated?NextHow can I get the USD price for multiple assets at the same time?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/api/How-can-I-get-OHLCV-data-by-asset-pair)"
456,i.io naas api bitcoin Methods getpeerinfo,"i.io naas api bitcoin Methods getpeerinfo.   getpeerinfo | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetpeerinfoOn this pagegetpeerinfoOverview​The 'getpeerinfo' method returns the estimated network hashes per second based on the last n blocks.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KE' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""getpeerinfo"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KE"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""getpeerinfo\"",\""params\"": [ ]}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KE'];$body = '{ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getpeerinfo"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection(""mainnet-bitcoin.node.coinapi.io"")payload = json.dumps({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""getpeerinfo"",""params"": []})headers = {'Content-Type': 'application/json','accept': 'application/json','X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KE'}conn.request(""POST"", ""/"", payload, headers)res = conn.getresponse()data = res.read()print(data.decode(""utf-8""))var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KE"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getpeerinfo"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""id"":1,""method"":""getpeerinfo"",""params"": [ ]}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KE"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KE""request.body = JSON.dump({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""getpeerinfo"",""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""getpeerinfo\"",\""params\"": [ ]}"");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KE"") .build();Response response = client.newCall(request).execute();Request Parameters​Response​{ ""result"": [ ""n"", ... ], ""error"": null, ""id"": 1}Was this section helpful?12345PreviousgetnodeaddressesNextgetrawchangeaddressOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getpeerinfo)"
457,i.io general faq general What are the benefits of using the WebSocket SDK,"i.io general faq general What are the benefits of using the WebSocket SDK.   What are the benefits of using the WebSocket SDK? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralWhat are the benefits of using the WebSocket SDK?What are the benefits of using the WebSocket SDK?Our WebSocket SDK provides you many benefits like:You don't need to waste time on the development of the protocol, testing, and maintaining that code in the future in case of bugs or future changesSDK has correct protocol implementation which is 100% covered with the unit testsReconnections, heartbeats, and errors detected are handled inside the library silently (if you want to log them there is an event handler)Zero allocation JSON parsing => minimal CPU usageBest practices appliedOptimal handling of the messages received; messages are placed on the queue from which they are parsed and pushed by another thread to prevent TCP backpressure.Was this section helpful?12345PreviousWe need a OneZero FIX API session, is this possible?NextWhat are the inclusions of the Enterprise Plan?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/What-are-the-benefits-of-using-the-WebSocket-SDK)"
458,i.io general faq general Will I get an access to Market Data API if I purchase EMS Trading API,"i.io general faq general Will I get an access to Market Data API if I purchase EMS Trading API.   Will I get an access to Market Data API if I purchase EMS Trading API? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralWill I get an access to Market Data API if I purchase EMS Trading API?Will I get an access to Market Data API if I purchase EMS Trading API?No, you will not, but the EMS Trading API internally has access to the Market Data API in order to perform SOR and other operations. The data will not be accessible to you directly.Was this section helpful?12345PreviousWhy am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?NextHow to setup AWS VPC peering?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/Will-I-get-an-access-to-Market-Data-API-if-I-purchase-EMS-Trading-API)"
459,i.io faq account Managing Team Members,"i.io faq account Managing Team Members.   Managing Team Members | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountHow I can update my credit card / billing information?How can I change my CoinAPI account's email address?How can I get an invoice or receipt?How do I make an account?I want to change my account's name?Managing Team MembersCan I add other users to my account?How do I get an additional API key?APIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQCustomer AccountManaging Team MembersManaging Team MembersEvery CoinAPI account has defined:AdminUserAdmin is defined and can be changed in Customer Portal.Log in to the Customer Portal using your Primary Contact email.Go to the Team Members section.Add the email associated to the team memberMake sure your new Admin team member is correct as this email will able to log into the Customer Portal, and has the same capabilities as the owner of the account.Click Invite User.Log out from the Customer Portal.(optionally) Log in to the Customer portal using email.Users are defined and managed in the Customer Portal:Log in to the Customer Portal using your Primary Contact email.Go to the Team Members sectionAdd the email associated with the team memberMake sure your new User team member is correct. Users will be able to see the usage of the account and track metrics.Click Invite User.Log out from the Customer Portal.(optionally) Log in to the Customer portal using email.Was this section helpful?12345PreviousI want to change my account's name?NextCan I add other users to my account?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/account/Managing-Team-Members)"
460,i.io faq general How to check historical API usage,"i.io faq general How to check historical API usage.   How to check historical API usage? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralHow to check historical API usage?How to check historical API usage?Historical API usage is available through the Customer Portal. You may go to the Metrics tab after logging in to your portal: https://customerportal.coinapi.io/metricsIn addition to that number of requests left is included in your response header according to the docs: https://docs.coinapi.io/market-data/rest-api#request-limit--apikeyWas this section helpful?12345PreviousHow to be notified about the issues/incidents?NextHow to get more than 100 items in response?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/How-to-check-historical-API-usage)"
461,i.io market data how to guides trading essentials quickstart#kraken,"i.io market data how to guides trading essentials quickstart#kraken.   Trading Essentials: Quickstart | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesAcquire exchange rates with different programming languagesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPIBuilding a cryptocurrency exchange comparison tool using Market Data APICreating a historical crypto price chart using CoinAPI and D3.jsFetching market data with KNIMEGet Historical OHLCV Data Using CoinAPIGet symbol funding rate metric data using CoinAPIImport API into PostmanImport data to Google Sheets/ExcelReal-time data visualization with javascriptReal-time trades stream using WebSocket with different languagesRetrieve and analyze crypto order book data using a cryptocurrency APITrading Essentials: QuickstartPerformance Testing GuideHow-to guidesTrading Essentials: QuickstartOn this pageTrading Essentials: QuickstartIntroduction​In this tutorial, you'll learn how to leverage our crypto trading API to automate and streamline your trading across multiple exchanges. Discover how to connect your accounts, execute trades, and efficiently manage your portfolio with just a few clicks.With our solution, you gain the power to control trades on various exchanges using just one API. Background​The EMS Trading API lets you manage multiple trading accounts on different exchanges all in one place, making trading easier with combined and consistent data. It gives you up-to-date market info, past data, and options to use it through the cloud or on your systems. Perfect for traders, big companies, and experts like developers and analysts, this API is fast, efficient, and reliable, providing a complete trading solution with easy access to unique insights and information.On the Agenda​Obtain a Free API Key: Secure your gateway to multi-exchange trading with a free API key from our site.Check available exchanges: Verify the list of supported exchanges via EMS APIConnect your Exchanges: Quickly integrate your accounts with exchanges like BITMEX and KRAKEN.Execute BUY on KRAKEN: Check your balance, initiate the BUY order, and confirm the status of the orderExecute SELL on KRAKEN: Initiate SELL order and check the order status reportGetting started​To execute the EMS Trading API, you'll need a Free API Key from our website.Check available exchanges​To access a list of supported exchanges that can be connected via the EMS API, execute the following:import requestsurl = ""https://ems-mgmt.coinapi.io/v1/exchanges""payload={}headers = { 'Accept': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-COINAPI-KEY'}response = requests.request(""GET"", url, headers=headers, data=payload)print(response.text)Here's a snippet extracted from the server's reply:[ {  ""exchange_id"": ""BITMEX"",  ""location_id"": ""aws-eu-west-1-prd"",  ""required_parameters"": [   ""PrivateApiKey"",   ""PublicApiKey""  ] }, {  ""exchange_id"": ""COINBASE"",  ""location_id"": ""aws-us-east-1-prd"",  ""required_parameters"": [   ""PassPhrase"",   ""PrivateApiKey"",   ""PublicApiKey""  ] },  {  ""exchange_id"": ""GEMINI"",  ""location_id"": ""aws-us-east-1-prd"",  ""required_parameters"": [   ""PrivateApiKey"",   ""PublicApiKey""  ] }, {  ""exchange_id"": ""KRAKEN"",  ""location_id"": ""aws-us-west-2-prd"",  ""required_parameters"": [   ""PrivateApiKey"",   ""PublicApiKey""  ] }]// other exchanges and their parameters...infoTo access the full list of supported exchanges, you can execute the endpoint https://ems-mgmt.coinapi.io/v1/exchanges. Above, we only showcase a partial list as an example.Connect your Exchanges​To begin trading on cryptocurrency exchanges, you'll need to connect your accounts. Below are examples of integrating with two popular exchanges:BITMEX exampleKRAKEN exampleinfoWhile the examples in this quickstart provided are focused on integrating with BITMEX and KRAKEN, the process is quite similar for various exchanges.BITMEX​BITMEX stands as a premier cryptocurrency exchange, offering a robust platform for traders and investors worldwide.Obtain Public key​To begin trading on BITMEX, you'll need to obtain your public and private keys from BITMEX.Connect your account​After acquiring keys, the initial step includes sharing your exchange keys through the account creation process for the designated exchange.import requestsimport jsonurl = ""https://ems-mgmt.coinapi.io/v1/accounts""payload = { ""exchange_id"": ""BITMEX/JOHN"", ""parameters"": [  {   ""key"": ""PublicApiKey"",   ""value"": ""73034021-THIS-IS-SAMPLE-PUBLIC-KEY-FROM-BITMEX""  },    {   ""key"": ""PrivateApiKey"",   ""value"": ""73034021-THIS-IS-SAMPLE-PRIVATE-KEY-FROM-BITMEX""  } ]}headers = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Convert payload to JSON stringjson_payload = json.dumps(payload)# Make the requestresponse = requests.post(url, data=json_payload, headers=headers)# Print the responseprint(""Response Code:"", response.status_code)Once the update is successful, you'll receive an HTTP status code of 200.KRAKEN​Obtain Public key​To begin trading on KRAKEN, you'll need to obtain your public and private keys from KRAKEN.Connect your account​After acquiring keys, the initial step includes sharing your exchange keys through the account creation process for the designated exchange.import requestsimport jsonurl = ""https://ems-mgmt.coinapi.io/v1/accounts""payload = { ""exchange_id"": ""KRAKEN/JOHN"", ""parameters"": [  {   ""key"": ""PublicApiKey"",   ""value"": ""73034021-THIS-IS-SAMPLE-PUBLIC-KEY-FROM-KRAKEN""  },    {   ""key"": ""PrivateApiKey"",   ""value"": ""73034021-THIS-IS-SAMPLE-PRIVATE-KEY-FROM-KRAKEN""  } ]}headers = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Convert payload to JSON stringjson_payload = json.dumps(payload)# Make the requestresponse = requests.post(url, data=json_payload, headers=headers)# Print the responseprint(""Response Code:"", response.status_code)Get the list of Connected Exchanges​To check which accounts have been created on our side, execute the following code:import requestsimport jsonurl = ""https://ems-mgmt.coinapi.io/v1/accounts""headers = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY""}# Make the requestresponse = requests.get(url, headers=headers)if response.status_code == 200: accounts_json = response.json() print(json.dumps(accounts_json, indent=4))else: print(""Error:"", response.status_code)Here's an example response, listing all accounts created with your API KEY:[ {  ""exchange_id"": ""BITMEX/JOHN"",  ""parameters"": [   {    ""key"": ""PublicApiKey"",    ""value"": ""73034021-THIS-IS-SAMPLE-PUBLIC-KEY-FROM-BITMEX""   },   {    ""key"": ""PrivateApiKey"",    ""value"": ""73034021-THIS-IS-SAMPLE-PRIVATE-KEY-FROM-BITMEX""   }  ] }, {  ""exchange_id"": ""KRAKEN/JOHN"",  ""parameters"": [   {    ""key"": ""PublicApiKey"",    ""value"": ""73034021-THIS-IS-SAMPLE-PUBLIC-KEY-FROM-KRAKEN""     },   {    ""key"": ""PrivateApiKey"",    ""value"": ""73034021-THIS-IS-SAMPLE-PRIVATE-KEY-FROM-KRAKEN""   }  ] }]Trades execution​Placing an order on an exchange involves providing instructions for executing a trade at a designated price and quantity.Check balance (Optional)​Before diving into trading, it's a good idea to check the balance on your account(s). Here's an example of checking the account balance for all of the exchanges associated with the account.import requestsimport jsonurl = ""https://global.ems.coinapi.net/v1/balances""payload={}headers = { 'Accept': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-COINAPI-KEY'}# Make the requestresponse = requests.get(url, headers=headers)if response.status_code == 200: accounts_json = response.json() print(json.dumps(accounts_json, indent=4))else: print(""Error:"", response.status_code)The response may be as follows (for BITMEX/JOHN and KRAKEN/JOHN accounts):[ {  ""type"": ""BALANCE_SNAPSHOT"",  ""exchange_id"": ""BITMEX/JOHN"",  ""data"": [   {    ""id"": ""XBT"",    ""asset_id_exchange"": ""XBT"",    ""asset_id_coinapi"": ""BTC"",    ""balance"": 0.02164794,    ""available"": 0.02164794,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",      ""rate_usd"": 52357.18111158658     },   {    ""id"": ""BMEx"",    ""asset_id_exchange"": ""BMEx"",    ""asset_id_coinapi"": ""BMEX"",    ""balance"": 300000.0,    ""available"": 300000.0,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",      ""rate_usd"": 0.2521371329127946     }  ] }, {  ""type"": ""BALANCE_SNAPSHOT"",  ""exchange_id"": ""KRAKEN/JOHN"",  ""data"": [   {    ""id"": ""ETHW"",    ""asset_id_exchange"": ""ETHW"",    ""asset_id_coinapi"": ""ETHW"",    ""balance"": 1.73e-05,    ""available"": 1.73e-05,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 2.9136466899640077   },   {    ""id"": ""BCH"",    ""asset_id_exchange"": ""BCH"",    ""asset_id_coinapi"": ""BCH"",    ""balance"": 2.9e-09,    ""available"": 2.9e-09,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 265.7082181877394   },   {    ""id"": ""ZCAD"",    ""asset_id_exchange"": ""ZCAD"",    ""asset_id_coinapi"": ""CAD"",    ""balance"": 0.7905,    ""available"": 0.7905,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 0.7405719177575096   },   {    ""id"": ""ZEUR"",    ""asset_id_exchange"": ""ZEUR"",    ""asset_id_coinapi"": ""EUR"",    ""balance"": 0.0098,    ""available"": 0.0098,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 1.0809450373867444   },   {    ""id"": ""ADA"",    ""asset_id_exchange"": ""ADA"",    ""asset_id_coinapi"": ""ADA"",    ""balance"": 2e-08,    ""available"": 2e-08,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 0.6244338769954291   },   {    ""id"": ""ZUSD"",    ""asset_id_exchange"": ""ZUSD"",    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": null   },   {    ""id"": ""XXBT"",    ""asset_id_exchange"": ""XXBT"",    ""asset_id_coinapi"": ""BTC"",    ""balance"": 8.58e-08,    ""available"": 8.58e-08,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 52320.9229657045   }  ] }]Submit Order (SELL)​Here's an example of submitting a SELL order on the KRAKEN exchange with the following details: Desired amount of USD to sell: 10Expected price to be executed at: 150Initial balance of USD: 77.3669Save down somewhere the YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001 identifier to track the status of the orderimport requestsimport jsonfrom datetime import datetime, timedeltaurl = ""https://global.ems.coinapi.net/v1/orders""payload = json.dumps({ ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_USD_JPY"", ""amount_order"": 10, ""price"": 150, ""side"": ""SELL"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""exec_inst"": [ ""MAKER_OR_CANCEL"" ]})# Headersheaders = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Make the requesttry: response = requests.post(url, data=payload, headers=headers) # Check status code if response.status_code == 200:  print(""Response JSON:"", response.json()) else:  print(""Response Code:"", response.status_code) except Exception as e: print(""An error occurred:"", e)Examples of Possible Responses:Successful RoutingInvalid Volume ErrorInsufficient Funds ErrorThe order has been sent to the exchange:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""client_order_id_format_exchange"": ""74733759"", ""exchange_order_id"": ""OX6EKO-67KDQ-KGNYFI"", ""amount_open"": 10.0, ""amount_filled"": 0.0, ""status"": ""ROUTED"", ""status_history"": [ [""RECEIVED"", ""2024-02-22T23:55:31.5424443Z""], [""ROUTING"", ""2024-02-22T23:55:31.5439512Z""], [""ROUTED"", ""2024-02-22T23:55:31.8127436Z""] ], ""error_message"": null, ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""symbol_id_exchange"": ""USDJPY"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_USD_JPY"", ""amount_order"": 10.0, ""price"": 150.0, ""avg_px"": 0.0, ""side"": ""SELL"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}If you encounter a volume error due to a mismatch with the minimum order size:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""client_order_id_format_exchange"": ""74733759"", ""exchange_order_id"": null, ""amount_open"": 5e-15, ""amount_filled"": 0.0, ""status"": ""REJECTED"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T00:04:36.8301287Z""], [""ROUTING"", ""2024-02-23T00:04:36.8315182Z""], [""REJECTED"", ""2024-02-23T00:04:36.9940661Z""] ], ""error_message"": ""EGeneral:Invalid arguments:volume"", ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""symbol_id_exchange"": ""USDJPY"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_USD_JPY"", ""amount_order"": 5e-15, ""price"": 150.0, ""avg_px"": 0.0, ""side"": ""SELL"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}If you encounter an insufficient funds error due to insufficient balance in your account:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""client_order_id_format_exchange"": ""74733759"", ""exchange_order_id"": null, ""amount_open"": 555555555555555.0, ""amount_filled"": 0.0, ""status"": ""REJECTED"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T00:05:34.6909879Z""], [""ROUTING"", ""2024-02-23T00:05:34.6918765Z""], [""REJECTED"", ""2024-02-23T00:05:34.8518753Z""] ], ""error_message"": ""EGeneral:Invalid arguments:volume"", ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""symbol_id_exchange"": ""USDJPY"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_USD_JPY"", ""amount_order"": 555555555555555.0, ""price"": 150.0, ""avg_px"": 0.0, ""side"": ""SELL"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}infoHere you can check the comprehensive list of execution instructions for the exec_inst parameterYou can find available values for the time_in_force parameter hereEMS exclusively supports the LIMIT order_type.The supported values for symbol_id_coinapi can be found by executing the endpoint provided here.The meaning of the order status in the response (ROUTED, REJECTED, etc.) can be found hereTo view the possible values for the order lifecycle, click hereInstead of utilizing CoinAPI's symbol_id_coinapi, you can opt for the symbol provided by the exchange through symbol_id_exchangeHere are some of the most common codes that may be returned for order creation:Http Status CodeDescription200 (ok)Order accepted400 (bad request)Incorrect input parameters.490 (unreachable)Exchange cannot be reached.504 (timeout)Exchange didn't respond in the defined timeout.Verify order status​Ensure that you've saved the client_order_id parameter associated with your specific order. This identifier will be necessary to check its status.import requestsimport jsonfrom datetime import datetime, timedeltaurl = ""https://global.ems.coinapi.net/v1/orders/status/YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001""# Headersheaders = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Make the requesttry: response = requests.get(url, headers=headers) # Check status code if response.status_code == 200:  print(""Response JSON:"", response.json()) else:  print(""Response Code:"", response.status_code)   for header, value in response.headers.items():  print(header + ': ' + value) except Exception as e: print(""An error occurred:"", e)An example order status report that was executed with YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001 identifier and which was CANCELED.{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""client_order_id_format_exchange"": ""1945919824"", ""exchange_order_id"": ""OUQMAY-ODBWL-AXG4ZE"", ""amount_open"": 10.0, ""amount_filled"": 0.0, ""status"": ""CANCELED"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T00:16:20.2139293Z""], [""ROUTING"", ""2024-02-23T00:16:20.2389572Z""], [""ROUTED"", ""2024-02-23T00:16:20.4016779Z""], [""NEW"", ""2024-02-23T00:16:20.4021975Z""], [""CANCELED"", ""2024-02-23T00:16:20.4026337Z""] ], ""error_message"": null, ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""symbol_id_exchange"": ""USDJPY"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_USD_JPY"", ""amount_order"": 10.0, ""price"": 150.0, ""avg_px"": 0.0, ""side"": ""SELL"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}Check all open orders​You can also check all of the open orders.import requestsimport jsonfrom datetime import datetime, timedeltaurl = "" https://global.ems.coinapi.net/v1/orders""# Headersheaders = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Make the requesttry: response = requests.get(url, headers=headers) # Check status code if response.status_code == 200:  print(""Response JSON:"", response.json()) else:  print(""Response Code:"", response.status_code)   for header, value in response.headers.items():  print(header + ': ' + value) except Exception as e: print(""An error occurred:"", e)infoAfter an order is closed/finalized, it will no longer be visible through the endpoint mentioned above.Submit Order (BUY)​Here's an example of submitting a BUY order on the KRAKEN exchange with the following details: Desired amount of OXT to buy: 100Expected price to be executed at: 0.11Save down somewhere the YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007 identifier to track the status of the orderimport requestsimport jsonfrom datetime import datetime, timedeltaurl = ""https://global.ems.coinapi.net/v1/orders""payload = json.dumps({ ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_OXT_USD"", ""amount_order"": 100, ""price"": 0.11, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""exec_inst"": [ ""MAKER_OR_CANCEL"" ]})# Headersheaders = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Make the requesttry: response = requests.post(url, data=payload, headers=headers) # Check status code if response.status_code == 200:  print(""Response JSON:"", response.json()) else:  print(""Response Code:"", response.status_code)   for header, value in response.headers.items():  print(header + ': ' + value) except Exception as e: print(""An error occurred:"", e)Successfully routed order Response:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""client_order_id_format_exchange"": ""1946142760"", ""exchange_order_id"": ""OJCPEO-PO7WD-VTPUF2"", ""amount_open"": 100.0, ""amount_filled"": 0.0, ""status"": ""ROUTED"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T01:13:15.6096269Z""], [""ROUTING"", ""2024-02-23T01:13:15.6102840Z""], [""ROUTED"", ""2024-02-23T01:13:15.7772494Z""] ], ""error_message"": null, ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""symbol_id_exchange"": ""OXTUSD"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_OXT_USD"", ""amount_order"": 100.0, ""price"": 0.11, ""avg_px"": 0.0, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}Below is the order status report response for a BUY operation with the client_order_id set as YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""client_order_id_format_exchange"": ""1946142760"", ""exchange_order_id"": ""OJCPEO-PO7WD-VTPUF2"", ""amount_open"": 100.0, ""amount_filled"": 0.0, ""status"": ""NEW"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T01:13:15.6096269Z""], [""ROUTING"", ""2024-02-23T01:13:15.6102840Z""], [""ROUTED"", ""2024-02-23T01:13:15.7772494Z""], [""NEW"", ""2024-02-23T01:13:15.8077026Z""] ], ""error_message"": null, ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""symbol_id_exchange"": ""OXTUSD"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_OXT_USD"", ""amount_order"": 100.0, ""price"": 0.11, ""avg_px"": 0.0, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}Cancelling all open orders​To cancel all open orders associated with the KRAKEN/JOHN:import requestsimport jsonfrom datetime import datetime, timedeltaurl = ""https://global.ems.coinapi.net/v1/orders/cancel/all""payload = json.dumps({""exchange_id "": ""KRAKEN/JOHN""})# Headersheaders = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Make the requesttry: response = requests.post(url, data=payload, headers=headers) # Check status code if response.status_code == 200:  print(""Response JSON:"", response.json()) else:  print(""Response Code:"", response.status_code)   for header, value in response.headers.items():  print(header + ': ' + value) except Exception as e: print(""An error occurred:"", e)Here's a sample order report for a canceled BUY order via the EMS API:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""client_order_id_format_exchange"": ""1946142760"", ""exchange_order_id"": ""OJCPEO-PO7WD-VTPUF2"", ""amount_open"": 100.0, ""amount_filled"": 0.0, ""status"": ""CANCELED"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T01:13:15.6096269Z""], [""ROUTING"", ""2024-02-23T01:13:15.6102840Z""], [""ROUTED"", ""2024-02-23T01:13:15.7772494Z""], [""NEW"", ""2024-02-23T01:13:15.8077026Z""], [""PENDING_CANCEL"", ""2024-02-23T01:18:49.2279836Z""], [""CANCELED"", ""2024-02-23T01:18:49.4245926Z""] ], ""error_message"": null, ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""symbol_id_exchange"": ""OXTUSD"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_OXT_USD"", ""amount_order"": 100.0, ""price"": 0.11, ""avg_px"": 0.0, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}The explanations and practical code examples provided should let you have a better understanding of how to leverage the EMS API for cryptocurrency trading across multiple exchanges.Was this section helpful?12345PreviousRetrieve and analyze crypto order book data using a cryptocurrency APINextPerformance Testing GuideIntroductionBackgroundOn the AgendaGetting startedCheck available exchangesConnect your ExchangesBITMEXObtain Public keyConnect your accountKRAKENObtain Public keyConnect your accountGet the list of Connected ExchangesTrades executionCheck balance (Optional)Submit Order (SELL)Verify order statusCheck all open ordersSubmit Order (BUY)Cancelling all open ordersCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/how-to-guides/trading-essentials-quickstart#kraken)"
462,i.io naas api bitcoin Methods getblockhash,"i.io naas api bitcoin Methods getblockhash.   getblockhash | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetblockhashOn this pagegetblockhashOverview​The 'getblockhash' RPC method in CoinAPI allows you to retrieve the hash of a block using its height. This method is essential for developers and blockchain enthusiasts who want to query specific block details in the Bitcoin blockchain.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""getblockhash"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""getblockhash\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""getblockhash"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""2.0"", ""method"": ""getblockhash"", ""params"": [], ""id"": 1})headers = { 'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type': 'application/json', 'accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""getblockhash"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""getblockhash"",""params"": [],""id"":1}`) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"") req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""method"": ""getblockhash"", ""params"": [], ""id"": 1})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder().build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""2.0\"",\r \""id\"": \""1\"",\r \""method\"": \""getblockhash\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​Type: NumericRequired: YesDescription: The height index of the block in the blockchain. It represents the position of the block in the blockchain, starting from 0, which is the genesis block.Response​{ ""status"": ""success"", ""data"": { ""result"": ""00000000000000000007f8a09c4c7d0e6c4c76e3d60e1b3fe9e0a3d1a1a2bce9"" }}resultType: StringDescription: This field will return the hash of the block corresponding to the specified height. The hash is a unique identifier for the block and can be used to retrieve further details about the block.NotesEnsure that you have sufficient API credits before making a request.The API response time may vary depending on the network conditions.Was this section helpful?12345PreviousgetblockfilterNextgetblockheaderOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getblockhash)"
463,i.io naas api ethereum Methods web3 clientVersion,"i.io naas api ethereum Methods web3 clientVersion.   web3_clientVersion | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodsweb3_clientVersionOn this pageweb3_clientVersionOverview​The 'web3_clientVersion' method returns the current client version.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \ --url https://ethereum-mainnet-geth-archive.node.coinapi.io \ --header 'accept: application/json' \ --header 'content-type: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --data ' {  ""id"": 1,  ""jsonrpc"": ""2.0"",  ""method"": ""web3_clientVersion"" }'using RestSharp; var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""web3_clientVersion\""}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); <?php$curl = curl_init();curl_setopt_array($curl, [ CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"", CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => """", CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 30, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => ""POST"", CURLOPT_POSTFIELDS => json_encode([ 'id' => 1, 'jsonrpc' => '2.0', 'method' => 'web3_clientVersion' ]), CURLOPT_HTTPHEADER => [ ""accept: application/json"", ""content-type: application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" ],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) { echo ""cURL Error #:"" . $err;} else { echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""web3_clientVersion""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text)const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({id: 1, jsonrpc: '2.0', method: 'web3_clientVersion'})};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""web3_clientVersion\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = {\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""web3_clientVersion\""}response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();{MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""web3_clientVersion\""}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();}Response​The method returns an array of 20-byte addresses associated with the client, formatted as hexadecimal strings.{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": []}A string representing the current client version.Was this section helpful?12345Previoustxpool_inspectNextweb3_sha3OverviewRequestResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/web3_clientVersion)"
464,i.io faq api documenting connectivity issues,"i.io faq api documenting connectivity issues.   Documenting Connectivity issues | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQAPIDocumenting Connectivity issuesDocumenting Connectivity issuesIf you are having any connection issues, please execute the steps below:Make sure there is no ongoing incident related to the problem on our Status Page[2].If your endpoint is not an IP address then, check if your DNS resolving the domain name to which you are connecting, e.g., using the dig command:dig [domain name here]The correct response will look like this:; <<>> DiG 9.16.1-Ubuntu <<>> fix.coinapi.io;; global options: +cmd;; Got answer:;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 57297;; flags: qr rd ra; QUERY: 1, ANSWER: 5, AUTHORITY: 0, ADDITIONAL: 1;; OPT PSEUDOSECTION:; EDNS: version: 0, flags:; udp: 65494;; QUESTION SECTION:;fix.coinapi.io. IN A;; ANSWER SECTION:fix.coinapi.io. 21599 IN CNAME api.coinapi.io.api.coinapi.io. 7199 IN CNAME api.coinapi.net.api.coinapi.net. 3 IN CNAME hdc1-enc-02.coinapi.net.hdc1-enc-02.coinapi.net. 3 IN CNAME hdc1-enc-02-bay-08.coinapi.net.hdc1-enc-02-bay-08.coinapi.net. 3598 IN A 185.204.225.28;; Query time: 76 msec;; SERVER: 127.0.0.53#53(127.0.0.53);; WHEN: Mon Jun 14 14:21:40 UTC 2021;; MSG SIZE rcvd: 165The common incorrect response will not include the ANSWER SECTION that implicates a problem on the DNS side.If this step fails, then analyze DNS issues on our side, and if your team determines that the problem is on our side, please go to the last step directly.Try to establish a TCP connection to the domain name or IP Address: nc -v [IP address or hostname] -p [port number]The correct response will look like this: terminal:~#nc -v fix.coinapi.io 3302 Connection to fix.coinapi.io 3302 port [tcp/*] succeeded!The incorrect response will display why your client could not initiate the connection.If this step fails, then analyze TCP connection issues on our side, and if your team determines that the problem is on our side, please go to the last step directly.Switch to the API endpoint without encryption, if possible, and check if the problem still exists. If the problem exists only for encrypted/unencrypted connection type, this is valuable information from the analysis perspective and must be included in the final case submission.Capture raw traffic data that includes a problem in the PCAP file format, use one of the commands below based on the protocol:REST API: tcpdump -i [your interface name] port 80 or port 443 -w dump.date +""%Y%m%dT%H%M%S"".cap WebSocket API: tcpdump -i [your interface name] port 80 or port 443 -w dump.date +""%Y%m%dT%H%M%S"".cap FIX API: tcpdump -i [your interface name] port 3302 or port 3303 -w dump.date +""%Y%m%dT%H%M%S"".cap Analyze the PCAP file with your team and make sure that all the conditions below are satisfied:The problem is on the CoinAPI side.The problem it's caused by your client misbehaving, acting not according to our product documentation or best industry practices.CoinAPI is on the other side of the connection. We are not accepting the dumps where our device is not directly on the other side of the connection by looking at the transport layer. The engineer must capture the dump from behind any DNAT gateways or internal proxy servers.Use the ""API issues"" ticket form from our Support Portal[1], make sure that:The problem is described accurately.All the timestamps are in the UTC timezone.The output of the DNS check is included if performed.The output of the TCP check (nc command) is included if performed.The output of your internal analysis is included in the case, along with the PCAP dump file.Set the appropriate priority, reflecting the current impact of this specific problem on the company:I. Urgent (Production system down)II. High (Production system impaired)III. Normal (System impaired) IV. Low (General guidance) References:[1] https://support.coinapi.io/[2] https://status.coinapi.io/Was this section helpful?12345PreviousWhy do some symbols have additional prefix?NextBilling and SubscriptionsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/api/documenting-connectivity-issues)"
465,i.io cdn cgi l email protection#50232520203f222410333f393e3120397e393f,"i.io cdn cgi l email protection#50232520203f222410333f393e3120397e393f.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 8aad25e85a68b38f •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#50232520203f222410333f393e3120397e393f)"
466,i.io naas api ethereum Methods eth getBlockTransactionCountByHash,"i.io naas api ethereum Methods eth getBlockTransactionCountByHash.   eth_getBlockTransactionCountByHash | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_getBlockTransactionCountByHashOn this pageeth_getBlockTransactionCountByHashOverview​The 'eth_getBlockTransactionCountByHash' method returns the number of transactions in the block with the given block hash.Request​shellcsharpphppythonjavascriptgorubyjava curl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'content-type: application/json' \  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data '{ ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_getBlockTransactionCountByHash""}'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"", ""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getBlockTransactionCountByHash\""}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"",CURLOPT_RETURNTRANSFER => true,CURLOPT_ENCODING => """",CURLOPT_MAXREDIRS => 10,CURLOPT_TIMEOUT => 30,CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,CURLOPT_CUSTOMREQUEST => ""POST"",CURLOPT_POSTFIELDS => json_encode(['id' => 1,'jsonrpc' => '2.0','method' => 'eth_getBlockTransactionCountByHash']),CURLOPT_HTTPHEADER => [""accept: application/json"",""content-type: application/json"",""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY""],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) {echo ""cURL Error #:"" . $err;} else {echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_getBlockTransactionCountByHash""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text)const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', '73034021-THIS-IS-SAMPLE-KEY' }, body: JSON.stringify({id: 1, jsonrpc: '2.0', method: 'eth_getBlockTransactionCountByHash'})};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getBlockTransactionCountByHash\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getBlockTransactionCountByHash\""}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_getBlockTransactionCountByHash\""}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​'block hash': [ Required ] A string representing the hash (32 bytes) of a block.Response​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": ""0xb1770efb14906e509893b6190359658208ae64d0c56e22f748a1b0869885559e""}'block transaction count': A hexadecimal equivalent of the integer representing the number of transactions in the block.Was this section helpful?12345Previouseth_getBlockReceiptsNexteth_getBlockTransactionCountByNumberOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_getBlockTransactionCountByHash)"
467,i.io how to guides,"i.io how to guides.   How-to guides | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesAcquire exchange rates with different programming languagesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPICreating a historical crypto price chart using CoinAPI and D3.jsFetching market data with KNIMEGet Historical OHLCV Data Using CoinAPIGet symbol funding rate metric data using CoinAPIImport API into PostmanImport data to Google Sheets/ExcelReal-time data visualization with javascriptReal-time trades stream using WebSocket with different languagesRetrieve and analyze crypto order book data using a cryptocurrency APITrading Essentials: QuickstartMarket Data APIEMS APIFAQCustomer PortalChangelogHow-to guidesOn this pageHow-to guidesWelcome to the How-to Guides section of our CoinAPI documentation. This is your comprehensive resource for understanding and effectively utilizing our API to its fullest potential. These guides provide best practices for getting started, implementing, and adopting CoinAPI on your tech stack.These guides are designed to provide you with clear, step-by-step instructions to help you navigate through various tasks and operations. From basic API calls to more complex data manipulations, we've got you covered.Each guide is structured to provide a practical, real-world scenario that illustrates how to use specific features of our API. They are not only meant to be instructional but also to inspire you to explore the many ways you can use CoinAPI to drive your cryptocurrency projects forward. Remember, the world of cryptocurrencies is ever-evolving, and so is our API. We regularly update these guides to reflect the latest features and improvements. So, make sure to check back often for the most up-to-date information.We hope these guides will empower you to create, innovate, and achieve success in your cryptocurrency endeavors. You’ll learn how to:​Access and interpret cryptocurrency data using CoinAPI.Build a portfolio tracker with React and CoinAPI.Convert between different cryptocurrencies using CoinAPI.Retrieve historical OHLCV Data Using CoinAPISubscribe to real-time trades stream using WebSocket.Visualize real-time data using JavaScript and CoinAPI.Extract market data in the csv format and import to spreadsheet applications like Microsoft Excel and Google SheetsFetching market data with KNIMEWhat’s next?​This quick start guide has given you a flavor of what CoinAPI can offer and an idea of how to build a solution. To find out more by exploring specific guides from the menu view.The next steps​Read more about CoinAPICheck our FAQ sectionRead our blogNeed help?If you need any help with your implementation or if you have encountered any problems, do get in touch. You can also quickly find answers from our FAQs, and blog.Was this section helpful?12345PreviousAPI limits and billingNextAcquire exchange rates with different programming languagesYou’ll learn how to:What’s next?The next stepsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/how-to-guides)"
468,i.io cdn cgi l email protection#087b7d7878677a7c486b676166697861266167,"i.io cdn cgi l email protection#087b7d7878677a7c486b676166697861266167.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 8aad265278d2b34b •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#087b7d7878677a7c486b676166697861266167)"
469,i.io naas api ethereum Methods eth getTransactionCount,"i.io naas api ethereum Methods eth getTransactionCount.   eth_getTransactionCount | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_getTransactionCountOn this pageeth_getTransactionCountOverview​The 'eth_getTransactionCount' method returns the number of transactions sent from an address.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'content-type: application/json' \  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data '{ ""id"": 1, ""jsonrpc"": ""2.0"", ""params"": [ ""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8"", ""latest"" ], ""method"": ""eth_getTransactionCount""}'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8\"",\""latest\""],\""method\"":\""eth_getTransactionCount\""}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"",CURLOPT_RETURNTRANSFER => true,CURLOPT_ENCODING => """",CURLOPT_MAXREDIRS => 10,CURLOPT_TIMEOUT => 30,CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,CURLOPT_CUSTOMREQUEST => ""POST"",CURLOPT_POSTFIELDS => json_encode(['id' => 1,'jsonrpc' => '2.0','params' => ['0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8','latest'],'method' => 'eth_getTransactionCount']),CURLOPT_HTTPHEADER => [""accept: application/json"",""content-type: application/json"",""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY""],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) {echo ""cURL Error #:"" . $err;} else {echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""params"": [""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8"", ""latest""], ""method"": ""eth_getTransactionCount""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text) const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({ id: 1, jsonrpc: '2.0', params: ['0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8', 'latest'], method: 'eth_getTransactionCount' })};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8\"",\""latest\""],\""method\"":\""eth_getTransactionCount\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8\"",\""latest\""],\""method\"":\""eth_getTransactionCount\""}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8\"",\""latest\""],\""method\"":\""eth_getTransactionCount\""}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​address: [ Required ] A string representing the address (20 bytes).block parameter: [ Required ] A hexadecimal block number, or the string latest, earliest or pending. See the default block parameter.Response​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": ""0x31""}transaction count: A hexadecimal equivalent of the integer representing the number of transactions sent from the given address.Was this section helpful?12345Previouseth_getTransactionByHashNexteth_getTransactionReceiptOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_getTransactionCount)"
470,i.io faq general What types of data does CoinAPI provide,"i.io faq general What types of data does CoinAPI provide.   What types of data does CoinAPI provide? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralWhat types of data does CoinAPI provide?What types of data does CoinAPI provide?We are providing:Detailed information on market symbolsInformation about exchanges and assetsQuotes (Level 1)Order books (Level 2)Executed transactionsExchange ratesOHLCV on periods starting from one secondWas this section helpful?12345PreviousWhat market symbol types are supported by CoinAPI?NextWhere is CoinAPI infrastructure located?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/What-types-of-data-does-CoinAPI-provide)"
471,i.io market data rest api indexes get index data,"i.io market data rest api indexes get index data.   Get index data | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIREST APIExchange RatesIndexesCreate indexGet index dataList of available indexesRetrieve Historical Composition Value Timeseries Retrieves historical timeseries for the specific composition value for an indexRetrieve Historical Index Value and CompositionRetrieve Historical Index Value TimeseriesUpdate indexMetadataMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket APIFIX APIS3 APIJSON RPCEMS APIFAQCustomer PortalChangelogMarket Data APIREST APIIndexesGet index dataGet index dataGET /v1/indexes/:index_idGet index dataPath Parametersindex_id string requiredResponses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Schemaindex_id string nullableGets or sets the index ID associated with the index.name string nullableGets or sets the name associated with the index.description string nullableGets or sets the descripion of the index.index_method string nullableGets or sets the index method.index_method_parameters object nullableGets or sets the parameters of the index method.property name* stringperiod_recalculation string nullableGets or sets the period recalculation of the index.visibility_public boolean nullableGets or sets the visibility public of the index.notify_emails string nullableGets or sets the notify emails of the index.components object[] nullableGets or sets the components of the index.Array [component_id string nullableevaluation_method string nullableevaluation_method_parameters object nullableproperty name* string]{ ""index_id"": ""string"", ""name"": ""string"", ""description"": ""string"", ""index_method"": ""string"", ""index_method_parameters"": {}, ""period_recalculation"": ""string"", ""visibility_public"": true, ""notify_emails"": ""string"", ""components"": [ {  ""component_id"": ""string"",  ""evaluation_method"": ""string"",  ""evaluation_method_parameters"": {} } ]}SchemaExample (from schema)Schemaindex_id string nullableGets or sets the index ID associated with the index.name string nullableGets or sets the name associated with the index.description string nullableGets or sets the descripion of the index.index_method string nullableGets or sets the index method.index_method_parameters object nullableGets or sets the parameters of the index method.property name* stringperiod_recalculation string nullableGets or sets the period recalculation of the index.visibility_public boolean nullableGets or sets the visibility public of the index.notify_emails string nullableGets or sets the notify emails of the index.components object[] nullableGets or sets the components of the index.Array [component_id string nullableevaluation_method string nullableevaluation_method_parameters object nullableproperty name* string]{ ""index_id"": ""string"", ""name"": ""string"", ""description"": ""string"", ""index_method"": ""string"", ""index_method_parameters"": {}, ""period_recalculation"": ""string"", ""visibility_public"": true, ""notify_emails"": ""string"", ""components"": [ {  ""component_id"": ""string"",  ""evaluation_method"": ""string"",  ""evaluation_method_parameters"": {} } ]}SchemaExample (from schema)Schemaindex_id string nullableGets or sets the index ID associated with the index.name string nullableGets or sets the name associated with the index.description string nullableGets or sets the descripion of the index.index_method string nullableGets or sets the index method.index_method_parameters object nullableGets or sets the parameters of the index method.property name* stringperiod_recalculation string nullableGets or sets the period recalculation of the index.visibility_public boolean nullableGets or sets the visibility public of the index.notify_emails string nullableGets or sets the notify emails of the index.components object[] nullableGets or sets the components of the index.Array [component_id string nullableevaluation_method string nullableevaluation_method_parameters object nullableproperty name* string]{ ""index_id"": ""string"", ""name"": ""string"", ""description"": ""string"", ""index_method"": ""string"", ""index_method_parameters"": {}, ""period_recalculation"": ""string"", ""visibility_public"": true, ""notify_emails"": ""string"", ""components"": [ {  ""component_id"": ""string"",  ""evaluation_method"": ""string"",  ""evaluation_method_parameters"": {} } ]}SchemaExample (from schema)Schemaindex_id string nullableGets or sets the index ID associated with the index.name string nullableGets or sets the name associated with the index.description string nullableGets or sets the descripion of the index.index_method string nullableGets or sets the index method.index_method_parameters object nullableGets or sets the parameters of the index method.property name* stringperiod_recalculation string nullableGets or sets the period recalculation of the index.visibility_public boolean nullableGets or sets the visibility public of the index.notify_emails string nullableGets or sets the notify emails of the index.components object[] nullableGets or sets the components of the index.Array [component_id string nullableevaluation_method string nullableevaluation_method_parameters object nullableproperty name* string]{ ""index_id"": ""string"", ""name"": ""string"", ""description"": ""string"", ""index_method"": ""string"", ""index_method_parameters"": {}, ""period_recalculation"": ""string"", ""visibility_public"": true, ""notify_emails"": ""string"", ""components"": [ {  ""component_id"": ""string"",  ""evaluation_method"": ""string"",  ""evaluation_method_parameters"": {} } ]}Loading...Was this section helpful?12345PreviousCreate indexNextList of available indexesCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/indexes/get-index-data)"
472,i.io ems api managed cloud rest api endpoints get api endpoints,"i.io ems api managed cloud rest api endpoints get api endpoints.   Get API endpoints | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIAccountCertificateEndpointsGet API endpointsExchangeLocationREST APIWebSocket APIFIX APISelf Hosted GuideManaged Cloud REST APIEndpointsGet API endpointsGet API endpointsGET /v1/endpointsGet all API endpoints that the EMS API expose for your subscription.Query Parametersfilter_exchange_id anyExchange idResponses200OKapplication/jsonSchemaExample (from schema)SchemaArray [exchange_id stringExchange identifier and optional tag identifying specific account configured when the software will be managing multiple accounts on the same exchange; for eg: BITSTAMP BITSTAMP/7c177641-74bd-4dbe-9b01-2497c12a5f70` BITSTAMP/2574 Allowed separators between the exchange identifier and the tag: ~/.,:;!@#$%^&*-_+=.location_id stringLocation identifierendpoint_schema stringEndpoint schemaendpoint_host stringEndpoint hostendpoint_url stringEndpoint URL][ { ""exchange_id"": ""KRAKEN"", ""location_id"": ""aws-us-east-2"", ""endpoint_schema"": ""https"", ""endpoint_host"": ""1314.51253.51.ec2.eu-west-1.amazonaws.com"", ""endpoint_url"": ""https://1314.51253.51.ec2.eu-west-1.amazonaws.com/"" }]Loading...Was this section helpful?12345PreviousEndpointsNextExchangeCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/managed-cloud-rest-api/endpoints/get-api-endpoints)"
473,i.io faq general Does CoinAPI provide asset icons images of the cryptocurrencies,"i.io faq general Does CoinAPI provide asset icons images of the cryptocurrencies.   Does CoinAPI provide asset icons/images of the cryptocurrencies? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralDoes CoinAPI provide asset icons/images of the cryptocurrencies?Does CoinAPI provide asset icons/images of the cryptocurrencies?Yes, we do provide asset icons via REST API under the Metadata. More information can be found in our documentation here: https://docs.coinapi.io/market-data/rest-api/metadata/list-all-asset-iconsWas this section helpful?12345PreviousDo you have a Status Page?NextExchange chart is different OHLCVCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/Does-CoinAPI-provide-asset-icons-images-of-the-cryptocurrencies)"
474,i.io naas api ethereum Methods eth getStorageAt,"i.io naas api ethereum Methods eth getStorageAt.   eth_getStorageAt | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_getStorageAtOn this pageeth_getStorageAtshellcsharpphppythonjavascriptgorubyjava curl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'content-type: application/json' \  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data '{ ""id"": 1, ""jsonrpc"": ""2.0"", ""params"": [ ""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8"", ""latest"" ], ""method"": ""eth_getCode""}'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8\"",\""latest\""],\""method\"":\""eth_getCode\""}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"",CURLOPT_RETURNTRANSFER => true,CURLOPT_ENCODING => """",CURLOPT_MAXREDIRS => 10,CURLOPT_TIMEOUT => 30,CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,CURLOPT_CUSTOMREQUEST => ""POST"",CURLOPT_POSTFIELDS => json_encode(['id' => 1,'jsonrpc' => '2.0','params' => ['0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8','latest'],'method' => 'eth_getCode']),CURLOPT_HTTPHEADER => [""accept: application/json"",""content-type: application/json"",""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY""],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) {echo ""cURL Error #:"" . $err;} else {echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""params"": [""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8"", ""latest""], ""method"": ""eth_getCode""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text) const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({ id: 1, jsonrpc: '2.0', params: ['0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8', 'latest'], method: 'eth_getCode' })};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8\"",\""latest\""],\""method\"":\""eth_getCode\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8\"",\""latest\""],\""method\"":\""eth_getCode\""}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8\"",\""latest\""],\""method\"":\""eth_getCode\""}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Overview​The 'eth_getStorageAt' method returns the value from a storage position at a given address.Request​replace 'mainnet' with any other supported network.Request Parameters​'address': [ Required ] A string representing the address (20 bytes) of the storage.'storage positio'n: [ Required ] A hexadecimal code of the position in the storage.'block parameter': [ Required ] A hexadecimal block number, or the string 'latest', 'earliest' or 'pending'. Refer to the default block parameter section for more details.Response​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": ""0x0000000000000000000000000000000000000000000000000000000000000000""}'storage value': A hexadecimal equivalent of the integer indicating the value of the storage position at the provided address.Notes on Storage Retrieval:Calculating the correct position depends on the storage to retrieve. For instance, consider the following contract deployed at '0x407d73d8a49eeb85d32cf465507dd71d507100c1' by address '0x391694e7e0b0cce554cb130d723a9d27458f9298':contract Storage { uint pos0; mapping (address => uint) pos1; function Storage() { pos0 = 1234; pos1[msg.sender] = 5678; }}Retrieving the value of 'pos0' is straightforward. However, retrieving an element of the map requires a more complex calculation. The position of an element in the map is calculated using the 'keccak' function and padding techniques. Tools like the geth console which comes with the web3 library can be used to make these calculations.Was this section helpful?12345Previouseth_getProofNexteth_getTransactionByBlockHashAndIndexOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_getStorageAt)"
475,i.io faq account can i add other users to my account,"i.io faq account can i add other users to my account.   Can I add other users to my account? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountHow I can update my credit card / billing information?How can I change my CoinAPI account's email address?How can I get an invoice or receipt?How do I make an account?I want to change my account's name?Managing Team MembersCan I add other users to my account?How do I get an additional API key?APIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQCustomer AccountCan I add other users to my account?Can I add other users to my account?Yes, you may add the option to add other users to the account as well as add an admin role. In order to do this:Login to the Customer Portal: https://customerportal.coinapi.io/loginNavigate to 'Team Members': Once you are inside the portal, navigate to the 'Team Members' section Add Email Address: Invite team members to join your account by entering their email addresses. Assign the Designated Role: As the account owner, you hold the reins to assign roles. Choose between 'Admin' and 'User' roles, each with distinct capabilities.Both Admin and User roles can log in to the account, although the Admin role basically has the same capabilities as the owner of the account, such as adding new subscriptions, editing billing information, etc.Was this section helpful?12345PreviousManaging Team MembersNextHow do I get an additional API key?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/account/can-i-add-other-users-to-my-account)"
476,i.io faq api Empty response when using EMS endpoints,"i.io faq api Empty response when using EMS endpoints.   Empty response when using EMS endpoints | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQAPIEmpty response when using EMS endpointsEmpty response when using EMS endpointsThe https://ems-mgmt.coinapi.io/v1/endpoints endpoint returns an empty response in cases where there are no accounts defined. This is the reason why endpoints are not returned, as the EMS service cannot be rendered without any associated accounts. If the list is empty, it indicates the absence of defined accounts.For more information on adding new accounts or updating existing exchange accounts for your subscription in the EMS API, please refer to our documentation here [1].Reference: [1] https://docs.coinapi.io/ems-api/managed-cloud-rest-api/account/persist-accountWas this section helpful?12345PreviousDo you offer Trading API?NextFIX API Logon TroubleshootingCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/api/Empty-response-when-using-EMS-endpoints)"
477,i.io naas api bitcoin Methods addnode x,"i.io naas api bitcoin Methods addnode x.   addnode | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsaddnodeOn this pageaddnodeOverview​The 'addnode' attempts to add or remove a node from the addnode listRequest​shellcsharpphppythonjavascriptgorubywget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""addnode"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""addnode\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""addnode"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""2.0"", ""method"": ""addnode"", ""params"": [], ""id"": 1})headers = { 'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type': 'application/json', 'accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""addnode"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""addnode"",""params"": [],""id"":1}`) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"") req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""method"": ""addnode"", ""params"": [], ""id"": 1})response = https.request(request)puts response.read_bodyRequest Parameters​node (string, required): the nodecommand (string, required): ‘add’ to add a node to the list, ‘remove’ to remove a node from the list, ‘onetry’ to try a connection to the node onceResponse​{ ""result"": null, ""error"": { ""code"": -1, ""message"": ""addnode \""node\"" \""command\"" Attempts to add or remove a node from the addnode list. Or try a connection to a node once. Nodes added using addnode (or -connect) are protected from DoS disconnection and are not required to be full nodes/support SegWit as other outbound peers are (though such peers will not be synced from). Addnode connections are limited to 8 at a time and are counted separately from the -maxconnections limit. Arguments: 1. node  (string, required) The node (see getpeerinfo for nodes) 2. command (string, required) 'add' to add a node to the list, 'remove' to remove a node from the list, 'onetry' to try a connection to the node once Result: null (json null) Examples: > bitcoin-cli addnode \""192.168.0.6:8333\"" \""onetry\"" > curl --user myusername --data-binary '{\""jsonrpc\"": \""1.0\"", \""id\"": \""curltest\"", \""method\"": \""addnode\"", \""params\"": [\""192.168.0.6:8333\"", \""onetry\""]}' -H 'content-type: text/plain;' http://127.0.0.1:8332/ "" }, ""id"": 1}Was this section helpful?12345PreviousabortrescanNextanalyzepsbtOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/addnode_x)"
478,i.io cdn cgi l email protection#d6a5a3a6a6b9a4a296b5b9bfb8b7a6bff8bfb9,"i.io cdn cgi l email protection#d6a5a3a6a6b9a4a296b5b9bfb8b7a6bff8bfb9.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 8aad28602c0927c0 •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#d6a5a3a6a6b9a4a296b5b9bfb8b7a6bff8bfb9)"
479,i.io market data rest api ohlcv,"i.io market data rest api ohlcv.   Ohlcv | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcv Historical data by exchange Historical data Latest data List all periodsOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIOhlcvOhlcvAPI calls described in this section are related to downloading OHLCV (Open, High, Low, Close, Volume) timeseries data. Each data point of this timeseries represents several indicators calculated from transactions activity inside a time range (period).infoOHLCV data primary purpose is to present an overview of the market in human readable form. It's often used to visualize market data on charts, websites, and various kinds of reports.tipCoinAPI expanded the standard OHLCV timeseries by including time of first and last trade and amount of trades executed inside period.📄️ Historical data by exchangeGet OHLCV timeseries data returned in time ascending order. Data can be requested by the period and for the specific exchange eg `BITSTAMP`📄️ Historical dataGet OHLCV timeseries data returned in time ascending order. Data can be requested by the period and for the specific symbol eg `BITSTAMP_SPOT_BTC_USD`, if you need to query timeseries by asset pairs eg. `BTC/USD`, then please reffer to the Exchange Rates Timeseries data📄️ Latest dataGet OHLCV latest timeseries data returned in time descending order. Data can be requested by the period and for the specific symbol eg `BITSTAMP_SPOT_BTC_USD`, if you need to query timeseries by asset pairs eg. `BTC/USD`, then please reffer to the Exchange Rates Timeseries data📄️ List all periodsGet full list of supported time periods available for requesting OHLCV timeseries data.Was this section helpful?12345PreviousListing of all supported metrics for symbolNext Historical data by exchangeCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/ohlcv)"
480,i.io market data rest api metadata list all exchanges,"i.io market data rest api metadata list all exchanges.   List all exchanges | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataList all asset iconsList all assets by asset IDList all assetsList all exchanges by exchange_idList all exchangesList all symbolsList of icons for the exchangesList of symbols for the exchangeList symbol mapping for the exchangeMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIMetadataList all exchangesList all exchangesGET /v1/exchangesGet a detailed list of exchanges provided by the system.infoProperties of the output are providing aggregated information from across all symbols related to the specific exchange. If you need to calculate your aggregation (e.g., limiting only the particular type of symbols), you should use /v1/symbols endpoint as a data source.Query Parametersfilter_exchange_id stringComma or semicolon delimited exchange identifiers used to filter response. (optional, eg. BITSTAMP;GEMINI)Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [exchange_id string nullableGets or sets the exchange ID.website string nullableGets or sets the website URL of the exchange.name string nullableGets or sets the name of the exchange.data_start string nullabledata_end string nullabledata_quote_start date-time nullableGets or sets the start date of quote data.data_quote_end date-time nullableGets or sets the end date of quote data.data_orderbook_start date-time nullableGets or sets the start date of order book data.data_orderbook_end date-time nullableGets or sets the end date of order book data.data_trade_start date-time nullableGets or sets the start date of trade data.data_trade_end date-time nullableGets or sets the end date of trade data.data_trade_count int64 nullableGets or sets the number of trades.data_symbols_count int64 nullableGets or sets the number of symbols.volume_1hrs_usd double nullableGets or sets the USD volume in the last 1 hour.volume_1day_usd double nullableGets or sets the USD volume in the last 1 day.volume_1mth_usd double nullableGets or sets the USD volume in the last 1 month.metric_id string[] nullableGets or sets the list of metric IDs.icons object[] nullableGets or sets the list of icons for the exchange.Array [exchange_id string nullableGets or sets the exchange ID associated with the icon.asset_id string nullableGets or sets the asset ID associated with the icon.url string nullableGets or sets the URL of the icon.]][ { ""exchange_id"": ""string"", ""website"": ""string"", ""name"": ""string"", ""data_start"": ""string"", ""data_end"": ""string"", ""data_quote_start"": ""2024-07-16T12:55:05.245Z"", ""data_quote_end"": ""2024-07-16T12:55:05.245Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.245Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.245Z"", ""data_trade_start"": ""2024-07-16T12:55:05.245Z"", ""data_trade_end"": ""2024-07-16T12:55:05.245Z"", ""data_trade_count"": 0, ""data_symbols_count"": 0, ""volume_1hrs_usd"": 0, ""volume_1day_usd"": 0, ""volume_1mth_usd"": 0, ""metric_id"": [  ""string"" ], ""icons"": [  {  ""exchange_id"": ""string"",  ""asset_id"": ""string"",  ""url"": ""string""  } ] }][ { ""exchange_id"": ""OKCOIN_CNY"", ""website"": ""https://www.okcoin.cn/"", ""name"": ""OKCoin CNY"", ""data_quote_start"": ""2015-02-15T12:53:50.3430000Z"", ""data_quote_end"": ""2018-03-09T23:34:52.5800000Z"", ""data_orderbook_start"": ""2015-02-15T12:53:50.3430000Z"", ""data_orderbook_end"": ""2018-03-09T23:34:52.5800000Z"", ""data_trade_start"": ""2013-06-12T14:24:24.0000000Z"", ""data_trade_end"": ""2017-11-01T16:30:39.7077259Z"", ""data_symbols_count"": 2, ""volume_1hrs_usd"": 0, ""volume_1day_usd"": 0, ""volume_1mth_usd"": 0 }, { ""exchange_id"": ""HUOBI"", ""website"": ""https://www.huobi.com/"", ""name"": ""Huobi (HBUS)"", ""data_quote_start"": ""2015-03-29T21:46:06.2630000Z"", ""data_quote_end"": ""2019-11-03T18:22:29.1837496Z"", ""data_orderbook_start"": ""2015-03-29T21:46:06.2630000Z"", ""data_orderbook_end"": ""2019-11-03T18:23:53.2859878Z"", ""data_trade_start"": ""2015-03-29T21:46:08.7030000Z"", ""data_trade_end"": ""2019-11-03T18:21:48.2770000Z"", ""data_symbols_count"": 403, ""volume_1hrs_usd"": 1605.8, ""volume_1day_usd"": 59957.44, ""volume_1mth_usd"": 1259508.43 }]SchemaExample (from schema)Example responseSchemaArray [exchange_id string nullableGets or sets the exchange ID.website string nullableGets or sets the website URL of the exchange.name string nullableGets or sets the name of the exchange.data_start string nullabledata_end string nullabledata_quote_start date-time nullableGets or sets the start date of quote data.data_quote_end date-time nullableGets or sets the end date of quote data.data_orderbook_start date-time nullableGets or sets the start date of order book data.data_orderbook_end date-time nullableGets or sets the end date of order book data.data_trade_start date-time nullableGets or sets the start date of trade data.data_trade_end date-time nullableGets or sets the end date of trade data.data_trade_count int64 nullableGets or sets the number of trades.data_symbols_count int64 nullableGets or sets the number of symbols.volume_1hrs_usd double nullableGets or sets the USD volume in the last 1 hour.volume_1day_usd double nullableGets or sets the USD volume in the last 1 day.volume_1mth_usd double nullableGets or sets the USD volume in the last 1 month.metric_id string[] nullableGets or sets the list of metric IDs.icons object[] nullableGets or sets the list of icons for the exchange.Array [exchange_id string nullableGets or sets the exchange ID associated with the icon.asset_id string nullableGets or sets the asset ID associated with the icon.url string nullableGets or sets the URL of the icon.]][ { ""exchange_id"": ""string"", ""website"": ""string"", ""name"": ""string"", ""data_start"": ""string"", ""data_end"": ""string"", ""data_quote_start"": ""2024-07-16T12:55:05.245Z"", ""data_quote_end"": ""2024-07-16T12:55:05.245Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.245Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.245Z"", ""data_trade_start"": ""2024-07-16T12:55:05.245Z"", ""data_trade_end"": ""2024-07-16T12:55:05.245Z"", ""data_trade_count"": 0, ""data_symbols_count"": 0, ""volume_1hrs_usd"": 0, ""volume_1day_usd"": 0, ""volume_1mth_usd"": 0, ""metric_id"": [  ""string"" ], ""icons"": [  {  ""exchange_id"": ""string"",  ""asset_id"": ""string"",  ""url"": ""string""  } ] }][ { ""exchange_id"": ""OKCOIN_CNY"", ""website"": ""https://www.okcoin.cn/"", ""name"": ""OKCoin CNY"", ""data_quote_start"": ""2015-02-15T12:53:50.3430000Z"", ""data_quote_end"": ""2018-03-09T23:34:52.5800000Z"", ""data_orderbook_start"": ""2015-02-15T12:53:50.3430000Z"", ""data_orderbook_end"": ""2018-03-09T23:34:52.5800000Z"", ""data_trade_start"": ""2013-06-12T14:24:24.0000000Z"", ""data_trade_end"": ""2017-11-01T16:30:39.7077259Z"", ""data_symbols_count"": 2, ""volume_1hrs_usd"": 0, ""volume_1day_usd"": 0, ""volume_1mth_usd"": 0 }, { ""exchange_id"": ""HUOBI"", ""website"": ""https://www.huobi.com/"", ""name"": ""Huobi (HBUS)"", ""data_quote_start"": ""2015-03-29T21:46:06.2630000Z"", ""data_quote_end"": ""2019-11-03T18:22:29.1837496Z"", ""data_orderbook_start"": ""2015-03-29T21:46:06.2630000Z"", ""data_orderbook_end"": ""2019-11-03T18:23:53.2859878Z"", ""data_trade_start"": ""2015-03-29T21:46:08.7030000Z"", ""data_trade_end"": ""2019-11-03T18:21:48.2770000Z"", ""data_symbols_count"": 403, ""volume_1hrs_usd"": 1605.8, ""volume_1day_usd"": 59957.44, ""volume_1mth_usd"": 1259508.43 }]SchemaExample (from schema)Example responseSchemaArray [exchange_id string nullableGets or sets the exchange ID.website string nullableGets or sets the website URL of the exchange.name string nullableGets or sets the name of the exchange.data_start string nullabledata_end string nullabledata_quote_start date-time nullableGets or sets the start date of quote data.data_quote_end date-time nullableGets or sets the end date of quote data.data_orderbook_start date-time nullableGets or sets the start date of order book data.data_orderbook_end date-time nullableGets or sets the end date of order book data.data_trade_start date-time nullableGets or sets the start date of trade data.data_trade_end date-time nullableGets or sets the end date of trade data.data_trade_count int64 nullableGets or sets the number of trades.data_symbols_count int64 nullableGets or sets the number of symbols.volume_1hrs_usd double nullableGets or sets the USD volume in the last 1 hour.volume_1day_usd double nullableGets or sets the USD volume in the last 1 day.volume_1mth_usd double nullableGets or sets the USD volume in the last 1 month.metric_id string[] nullableGets or sets the list of metric IDs.icons object[] nullableGets or sets the list of icons for the exchange.Array [exchange_id string nullableGets or sets the exchange ID associated with the icon.asset_id string nullableGets or sets the asset ID associated with the icon.url string nullableGets or sets the URL of the icon.]][ { ""exchange_id"": ""string"", ""website"": ""string"", ""name"": ""string"", ""data_start"": ""string"", ""data_end"": ""string"", ""data_quote_start"": ""2024-07-16T12:55:05.245Z"", ""data_quote_end"": ""2024-07-16T12:55:05.245Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.245Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.245Z"", ""data_trade_start"": ""2024-07-16T12:55:05.245Z"", ""data_trade_end"": ""2024-07-16T12:55:05.245Z"", ""data_trade_count"": 0, ""data_symbols_count"": 0, ""volume_1hrs_usd"": 0, ""volume_1day_usd"": 0, ""volume_1mth_usd"": 0, ""metric_id"": [  ""string"" ], ""icons"": [  {  ""exchange_id"": ""string"",  ""asset_id"": ""string"",  ""url"": ""string""  } ] }][ { ""exchange_id"": ""OKCOIN_CNY"", ""website"": ""https://www.okcoin.cn/"", ""name"": ""OKCoin CNY"", ""data_quote_start"": ""2015-02-15T12:53:50.3430000Z"", ""data_quote_end"": ""2018-03-09T23:34:52.5800000Z"", ""data_orderbook_start"": ""2015-02-15T12:53:50.3430000Z"", ""data_orderbook_end"": ""2018-03-09T23:34:52.5800000Z"", ""data_trade_start"": ""2013-06-12T14:24:24.0000000Z"", ""data_trade_end"": ""2017-11-01T16:30:39.7077259Z"", ""data_symbols_count"": 2, ""volume_1hrs_usd"": 0, ""volume_1day_usd"": 0, ""volume_1mth_usd"": 0 }, { ""exchange_id"": ""HUOBI"", ""website"": ""https://www.huobi.com/"", ""name"": ""Huobi (HBUS)"", ""data_quote_start"": ""2015-03-29T21:46:06.2630000Z"", ""data_quote_end"": ""2019-11-03T18:22:29.1837496Z"", ""data_orderbook_start"": ""2015-03-29T21:46:06.2630000Z"", ""data_orderbook_end"": ""2019-11-03T18:23:53.2859878Z"", ""data_trade_start"": ""2015-03-29T21:46:08.7030000Z"", ""data_trade_end"": ""2019-11-03T18:21:48.2770000Z"", ""data_symbols_count"": 403, ""volume_1hrs_usd"": 1605.8, ""volume_1day_usd"": 59957.44, ""volume_1mth_usd"": 1259508.43 }]SchemaExample (from schema)Example responseSchemaArray [exchange_id string nullableGets or sets the exchange ID.website string nullableGets or sets the website URL of the exchange.name string nullableGets or sets the name of the exchange.data_start string nullabledata_end string nullabledata_quote_start date-time nullableGets or sets the start date of quote data.data_quote_end date-time nullableGets or sets the end date of quote data.data_orderbook_start date-time nullableGets or sets the start date of order book data.data_orderbook_end date-time nullableGets or sets the end date of order book data.data_trade_start date-time nullableGets or sets the start date of trade data.data_trade_end date-time nullableGets or sets the end date of trade data.data_trade_count int64 nullableGets or sets the number of trades.data_symbols_count int64 nullableGets or sets the number of symbols.volume_1hrs_usd double nullableGets or sets the USD volume in the last 1 hour.volume_1day_usd double nullableGets or sets the USD volume in the last 1 day.volume_1mth_usd double nullableGets or sets the USD volume in the last 1 month.metric_id string[] nullableGets or sets the list of metric IDs.icons object[] nullableGets or sets the list of icons for the exchange.Array [exchange_id string nullableGets or sets the exchange ID associated with the icon.asset_id string nullableGets or sets the asset ID associated with the icon.url string nullableGets or sets the URL of the icon.]][ { ""exchange_id"": ""string"", ""website"": ""string"", ""name"": ""string"", ""data_start"": ""string"", ""data_end"": ""string"", ""data_quote_start"": ""2024-07-16T12:55:05.246Z"", ""data_quote_end"": ""2024-07-16T12:55:05.246Z"", ""data_orderbook_start"": ""2024-07-16T12:55:05.246Z"", ""data_orderbook_end"": ""2024-07-16T12:55:05.246Z"", ""data_trade_start"": ""2024-07-16T12:55:05.246Z"", ""data_trade_end"": ""2024-07-16T12:55:05.246Z"", ""data_trade_count"": 0, ""data_symbols_count"": 0, ""volume_1hrs_usd"": 0, ""volume_1day_usd"": 0, ""volume_1mth_usd"": 0, ""metric_id"": [  ""string"" ], ""icons"": [  {  ""exchange_id"": ""string"",  ""asset_id"": ""string"",  ""url"": ""string""  } ] }][ { ""exchange_id"": ""OKCOIN_CNY"", ""website"": ""https://www.okcoin.cn/"", ""name"": ""OKCoin CNY"", ""data_quote_start"": ""2015-02-15T12:53:50.3430000Z"", ""data_quote_end"": ""2018-03-09T23:34:52.5800000Z"", ""data_orderbook_start"": ""2015-02-15T12:53:50.3430000Z"", ""data_orderbook_end"": ""2018-03-09T23:34:52.5800000Z"", ""data_trade_start"": ""2013-06-12T14:24:24.0000000Z"", ""data_trade_end"": ""2017-11-01T16:30:39.7077259Z"", ""data_symbols_count"": 2, ""volume_1hrs_usd"": 0, ""volume_1day_usd"": 0, ""volume_1mth_usd"": 0 }, { ""exchange_id"": ""HUOBI"", ""website"": ""https://www.huobi.com/"", ""name"": ""Huobi (HBUS)"", ""data_quote_start"": ""2015-03-29T21:46:06.2630000Z"", ""data_quote_end"": ""2019-11-03T18:22:29.1837496Z"", ""data_orderbook_start"": ""2015-03-29T21:46:06.2630000Z"", ""data_orderbook_end"": ""2019-11-03T18:23:53.2859878Z"", ""data_trade_start"": ""2015-03-29T21:46:08.7030000Z"", ""data_trade_end"": ""2019-11-03T18:21:48.2770000Z"", ""data_symbols_count"": 403, ""volume_1hrs_usd"": 1605.8, ""volume_1day_usd"": 59957.44, ""volume_1mth_usd"": 1259508.43 }]Loading...Was this section helpful?12345PreviousList all exchanges by exchange_idNextList all symbolsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/metadata/list-all-exchanges)"
481,i.io general faq general OHLCV Aggregation using the REST API,"i.io general faq general OHLCV Aggregation using the REST API.   OHLCV Aggregation using the REST API | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralOHLCV Aggregation using the REST APIOn this pageOHLCV Aggregation using the REST APIQuestion​When querying OHLCV data, how can I filter by specific coins under a specific exchange(s) using 1 Rest API request (like you can in Metadata)?When querying OHLCV data, how can I filter by an exchange(s) and get all the OHLCV data for the particular timeframe (example 1MIN)?Answer​You need to execute a query against each symbol of the specific exchange separately.If you need bulk load historical data then flat files are usually the better option than API access which works good for application integrations or adding real-time data into already acquired historical flat files. In the flat files, we are providing all the symbols across all exchanges in the single file. Our flat files can be acquired through (www.cryptotick.com) website.Sample file: (https://s3.amazonaws.com/coinapi-samples/ohlcv_active_consolidated/20171203/1HRS.csv.gz)Documentation: (https://www.cryptotick.com/Faq)Was this section helpful?12345PreviousIs there an SLA agreement available?NextREST API empty array/collection response and 550 error explained.QuestionAnswerCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/OHLCV-Aggregation-using-the-REST-API)"
482,i.io faq general What data is delivered using the local sites,"i.io faq general What data is delivered using the local sites.   What data is delivered using the local sites? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralWhat data is delivered using the local sites?What data is delivered using the local sites?We deliver all the real-time data using local sites, and we consider real-time data as:REST API all /current endpointsREST API /trades/latest endpointREST API /ohlcv/latestWebSocket APIFIX APIWas this section helpful?12345PreviousWhat are the inclusions of the Enterprise Plan?NextWhat exchanges are supported?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/What-data-is-delivered-using-the-local-sites)"
483,i.io general faq account,i.io general faq account.   Customer Account | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountHow I can update my credit card / billing information?How can I change my CoinAPI account's email address?How can I get an invoice or receipt?How do I make an account?I want to change my account's name?Managing Team MembersCan I add other users to my account?How do I get an additional API key?APIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQCustomer AccountCustomer AccountWas this section helpful?12345PreviousHow to setup AWS VPC peering?NextHow I can update my credit card / billing information?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/account)
484,i.io general faq account Managing Team Members,"i.io general faq account Managing Team Members.   Managing Team Members | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountHow I can update my credit card / billing information?How can I change my CoinAPI account's email address?How can I get an invoice or receipt?How do I make an account?I want to change my account's name?Managing Team MembersCan I add other users to my account?How do I get an additional API key?APIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQCustomer AccountManaging Team MembersManaging Team MembersEvery CoinAPI account has defined:AdminUserAdmin is defined and can be changed in Customer Portal.Log in to the Customer Portal using your Primary Contact email.Go to the Team Members section.Add the email associated to the team memberMake sure your new Admin team member is correct as this email will able to log into the Customer Portal, and has the same capabilities as the owner of the account.Click Invite User.Log out from the Customer Portal.(optionally) Log in to the Customer portal using email.Users are defined and managed in the Customer Portal:Log in to the Customer Portal using your Primary Contact email.Go to the Team Members sectionAdd the email associated with the team memberMake sure your new User team member is correct. Users will be able to see the usage of the account and track metrics.Click Invite User.Log out from the Customer Portal.(optionally) Log in to the Customer portal using email.Was this section helpful?12345PreviousI want to change my account's name?NextCan I add other users to my account?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/account/Managing-Team-Members)"
485,i.io market data rest api metadata list all asset icons,"i.io market data rest api metadata list all asset icons.   List all asset icons | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataList all asset iconsList all assets by asset IDList all assetsList all exchanges by exchange_idList all exchangesList all symbolsList of icons for the exchangesList of symbols for the exchangeList symbol mapping for the exchangeMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIMetadataList all asset iconsList all asset iconsGET /v1/assets/icons/:sizeGets the list of icons (of the given size) for all the assets.Path Parameterssize int32 requiredThe size of the icons.Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [exchange_id string nullableGets or sets the exchange ID associated with the icon.asset_id string nullableGets or sets the asset ID associated with the icon.url string nullableGets or sets the URL of the icon.][ { ""exchange_id"": ""string"", ""asset_id"": ""string"", ""url"": ""string"" }][ { ""asset_id"": ""BTC"", ""url"": ""https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/f231d7382689406f9a50dde841418c64.png"" }, { ""asset_id"": ""ETH"", ""url"": ""https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/04836ff3bc4d4d95820e0155594dca86.png"" }, { ""asset_id"": ""USD"", ""url"": ""https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/4873707f25fe4de3b4bca6fa5c631011.png"" }]SchemaExample (from schema)Example responseSchemaArray [exchange_id string nullableGets or sets the exchange ID associated with the icon.asset_id string nullableGets or sets the asset ID associated with the icon.url string nullableGets or sets the URL of the icon.][ { ""exchange_id"": ""string"", ""asset_id"": ""string"", ""url"": ""string"" }][ { ""asset_id"": ""BTC"", ""url"": ""https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/f231d7382689406f9a50dde841418c64.png"" }, { ""asset_id"": ""ETH"", ""url"": ""https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/04836ff3bc4d4d95820e0155594dca86.png"" }, { ""asset_id"": ""USD"", ""url"": ""https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/4873707f25fe4de3b4bca6fa5c631011.png"" }]SchemaExample (from schema)Example responseSchemaArray [exchange_id string nullableGets or sets the exchange ID associated with the icon.asset_id string nullableGets or sets the asset ID associated with the icon.url string nullableGets or sets the URL of the icon.][ { ""exchange_id"": ""string"", ""asset_id"": ""string"", ""url"": ""string"" }][ { ""asset_id"": ""BTC"", ""url"": ""https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/f231d7382689406f9a50dde841418c64.png"" }, { ""asset_id"": ""ETH"", ""url"": ""https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/04836ff3bc4d4d95820e0155594dca86.png"" }, { ""asset_id"": ""USD"", ""url"": ""https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/4873707f25fe4de3b4bca6fa5c631011.png"" }]SchemaExample (from schema)Example responseSchemaArray [exchange_id string nullableGets or sets the exchange ID associated with the icon.asset_id string nullableGets or sets the asset ID associated with the icon.url string nullableGets or sets the URL of the icon.][ { ""exchange_id"": ""string"", ""asset_id"": ""string"", ""url"": ""string"" }][ { ""asset_id"": ""BTC"", ""url"": ""https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/f231d7382689406f9a50dde841418c64.png"" }, { ""asset_id"": ""ETH"", ""url"": ""https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/04836ff3bc4d4d95820e0155594dca86.png"" }, { ""asset_id"": ""USD"", ""url"": ""https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/4873707f25fe4de3b4bca6fa5c631011.png"" }]Loading...Was this section helpful?12345PreviousMetadataNextList all assets by asset IDCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/metadata/list-all-asset-icons)"
486,i.io faq api How are exchange rates calculated,"i.io faq api How are exchange rates calculated.   How are exchange rates calculated? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQAPIHow are exchange rates calculated?How are exchange rates calculated?Exchange rates [1] are calculated by averaging multiple market prices across various exchanges, weighted by volume traded on them in the last 24 hours (VWAP 24h).To calculate the fair market value, we use both passive (Orderbook) and active (Executed transactions) market data.Our algorithm uses direct and indirect symbols to calculate the exchange rate by crossing indirect symbols using central banks’ foreign exchange reference rates. For example, to calculate the exchange rates of BTC/USD, we also incorporate BTC/CNY, BTC/JPY, BTC/GBP, BTC/EUR.Exchanges are representing a different level of market data quality. To account for that factor our algorithm uses trustworthy exchanges first and if the data could not be produced using this set of exchanges, for example, a specific asset requested is not available on any of the trustworthy exchanges, then we are using all other exchanges to produce requested data. This approach of combining credible and less trusted data sources, giving our customers an overview of the whole market without compromising the data quality.Reference:[1] https://docs.coinapi.io/market-data/rest-api/exchange-ratesWas this section helpful?12345PreviousGeographic locations and the LatencyNextHow can I get OHLCV data by asset pair?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/api/How-are-exchange-rates-calculated)"
487,i.io general faq general How to check historical API usage,"i.io general faq general How to check historical API usage.   How to check historical API usage? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralHow to check historical API usage?How to check historical API usage?Historical API usage is available through the Customer Portal. You may go to the Metrics tab after logging in to your portal: https://customerportal.coinapi.io/metricsIn addition to that number of requests left is included in your response header according to the docs: https://docs.coinapi.io/market-data/rest-api#request-limit--apikeyWas this section helpful?12345PreviousHow to be notified about the issues/incidents?NextHow to get more than 100 items in response?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/How-to-check-historical-API-usage)"
488,i.io market data websocket ds endpoints,"i.io market data websocket ds endpoints.   Endpoints | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1WebSocket API DSEndpointsGeneralMessagesJSON RPCFIX APIHow-to guidesPerformance Testing GuideWebSocket API DSEndpointsEndpointsEnviromentEncryptionValueProductionYeswss://lowecase-exchange-name.ws-ds.md.coinapi.io/(eg. wss://coinbase.ws-ds.md.coinapi.io/)ProductionYeswss://cross-connect-endpoint/ws/ws-ds-lowecase-exchange-name/(eg. wss://cross-connect-endpoint/ws/ws-ds-coinbase/)ProductionNows://lowecase-exchange-name.ws-ds.md.coinapi.io/(eg. ws://coinbase.ws-ds.md.coinapi.io/)ProductionNows://cross-connect-endpoint/ws/ws-ds-lowecase-exchange-name/(eg. ws://cross-connect-endpoint/ws/ws-ds-coinbase/)For testing, debugging and development purposes we are recommending:wscat client from the npm package repository: https://github.com/websockets/wscatsandy standalone WebSocket client with our message templates available at: https://app.gosandy.io/?url=https://raw.githubusercontent.com/coinapi/coinapi-sdk/master/data-api/sandy-ws-v1.json&u=ArWas this section helpful?12345PreviousWebSocket API DSNextGeneralCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/websocket-ds/endpoints)"
489,i.io naas api bitcoin Methods getreceivedbyaddress,"i.io naas api bitcoin Methods getreceivedbyaddress.   getreceivedbyaddress | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetreceivedbyaddressOn this pagegetreceivedbyaddressOverview​The 'getreceivedbyaddress' method allows you to retrieve the total amount received by a specified Bitcoin address in transactions with at least a minimum number of confirmations (minconf).Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""getreceivedbyaddress"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""getreceivedbyaddress\"",\""params\"": [ ]}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getreceivedbyaddress"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection(""mainnet-bitcoin.node.coinapi.io"")payload = json.dumps({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""getreceivedbyaddress"",""params"": []})headers = {'Content-Type': 'application/json','accept': 'application/json','X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}conn.request(""POST"", ""/"", payload, headers)res = conn.getresponse()data = res.read()print(data.decode(""utf-8""))var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getreceivedbyaddress"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""id"":1,""method"":""getreceivedbyaddress"",""params"": [ ]}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""getreceivedbyaddress"",""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""getreceivedbyaddress\"",\""params\"": [ ]}"");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​address (string, required): The Bitcoin address for which the transactions are to be retrieved.minconf (numeric, optional, default=1): Only include transactions that have been confirmed at least this many times.Response​Response when verbose is true:{ ""result"": { ""n"": ""numeric"", ""description"": ""The total amount in BTC received at this address."" }}Was this section helpful?12345PreviousgetrawtransactionNextgetreceivedbylabelOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getreceivedbyaddress)"
490,i.io general faq api How are exchange rates calculated,"i.io general faq api How are exchange rates calculated.   How are exchange rates calculated? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer EMS Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What is the rate limit for EMS Trading API?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQAPIHow are exchange rates calculated?How are exchange rates calculated?Exchange rates [1] are calculated by averaging multiple market prices across various exchanges, weighted by volume traded on them in the last 24 hours (VWAP 24h).To calculate the fair market value, we use both passive (Orderbook) and active (Executed transactions) market data.Our algorithm uses direct and indirect symbols to calculate the exchange rate by crossing indirect symbols using central banks’ foreign exchange reference rates. For example, to calculate the exchange rates of BTC/USD, we also incorporate BTC/CNY, BTC/JPY, BTC/GBP, BTC/EUR.Exchanges are representing a different level of market data quality. To account for that factor our algorithm uses trustworthy exchanges first and if the data could not be produced using this set of exchanges, for example, a specific asset requested is not available on any of the trustworthy exchanges, then we are using all other exchanges to produce requested data. This approach of combining credible and less trusted data sources, giving our customers an overview of the whole market without compromising the data quality.Reference:[1] https://docs.coinapi.io/market-data/rest-api/exchange-ratesWas this section helpful?12345PreviousGeographic locations and the LatencyNextHow can I get OHLCV data by asset pair?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/api/How-are-exchange-rates-calculated)"
491,i.io general faq general How is trade volume calculated,"i.io general faq general How is trade volume calculated.   How is trade volume calculated? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralHow is trade volume calculated?How is trade volume calculated?Volumes are calculated from the trades recorded through the API provided by the data source. We do not use the aggregated values provided by the source; all aggregations are performed using raw market data.Was this section helpful?12345PreviousHow granular is your data?NextHow long does it take to integrate CoinAPI?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/How-is-trade-volume-calculated)"
492,i.io general faq security and privacy What security mechanisms does CoinAPI use to protect my data,"i.io general faq security and privacy What security mechanisms does CoinAPI use to protect my data.   What security mechanisms does CoinAPI use to protect my data? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIBilling and SubscriptionsSecurity and PrivacyWhat CDN does the API use?What information do I need to provide in order to subscribe?What security mechanisms does CoinAPI use to protect my data?What should I do if my API key was compromised?GlossaryChangelogFAQSecurity and PrivacyWhat security mechanisms does CoinAPI use to protect my data?What security mechanisms does CoinAPI use to protect my data?Your sensitive information is stored inside the service provider, which is constantly audited and certified as a PCI-DSS Level 1 Service Provider. This is the most stringent level of certification available in the payments industry. To retain the certification, a payment provider must use world-class security tools and techniques to maintain a high level of security.Was this section helpful?12345PreviousWhat information do I need to provide in order to subscribe?NextWhat should I do if my API key was compromised?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/security-and-privacy/What-security-mechanisms-does-CoinAPI-use-to-protect-my-data)"
493,i.io flat files api s3 api authentication,"i.io flat files api s3 api authentication.   Authentication < S3 API < Flat Files | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyFlat FilesBilling and UsageData & StructureS3 APIAuthenticationSDK GuidePush APIS3 APIAuthenticationOn this pageAuthentication for Flat Files S3 APIThe Flat Files S3 API uses S3-compatible authentication methods. This allows you to use existing S3 tools and libraries to access our data securely.Authentication Methods​API Key as Access Key ID: Your CoinAPI key serves as the Access Key ID.Static Secret Key: Use ""coinapi"" as the Secret Access Key.AWS Signature: Requests should be signed using AWS Signature Version 2 or 4.Configuration Examples​AWS CLI​Configure the AWS CLI with the following command:aws configureEnter the following information when prompted:AWS Access Key ID: YOUR_COINAPI_KEYAWS Secret Access Key: coinapiDefault region name: us-east-1Default output format: jsonS3 Browser​In S3 Browser, create a new account with these settings:Account Name: CoinAPI Flat FilesAccess Key ID: YOUR_COINAPI_KEYSecret Access Key: coinapiRest Endpoint: https://s3.flatfiles.coinapi.ioSDK Usage​When using S3 SDKs, configure the client as follows:import boto3s3 = boto3.client('s3', aws_access_key_id='YOUR_COINAPI_KEY', aws_secret_access_key='coinapi', endpoint_url='http://s3.flatfiles.coinapi.io')Remember to replace 'YOUR_COINAPI_KEY' with your actual CoinAPI key in all examples.AWS Signature Authentication​AWS Signature Version 2​For this method of authorization, please put the API Key in both the Access Key ID and Secret Access Key fields.AWS Signature Version 4​Amazon S3 uses the Authorization request header to provide authorization information. The value for this header must follow a specific pattern described as AWS Signature Version 4.The example below shows the Authorization header value compliant with AWS Signature Version 4.Please note that the Credential string contains our apikey as access-key-id. Assuming that your API key is 73034021-THIS-IS-SAMPLE-KEY, then the authorization header you should send to us will look like:Authorization: AWS4-HMAC-SHA256Credential=73034021-THIS-IS-SAMPLE-KEY/20211203/us-east-1/s3/aws4_request,SignedHeaders=host;Signature=65e655c69da9906ac6076a28f75d9e4947aaed3be1f419757a3a84e24662673dAlthough AWS Signature Version 4 is very strict about each of the signature components, our API takes only our apikey value into account.Security Best Practices​Keep your API key confidential.Use HTTPS endpoints in production environments.Regularly rotate your API keys.Use the principle of least privilege when setting up IAM-like policies.For any questions or support needs regarding authentication, please contact our support team.Was this section helpful?12345PreviousS3 APINextSDK GuideAuthentication MethodsConfiguration ExamplesAWS CLIS3 BrowserSDK UsageAWS Signature AuthenticationAWS Signature Version 2AWS Signature Version 4Security Best PracticesCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/flat-files-api/s3-api/authentication)"
494,i.io naas api ethereum Methods trace replayTransaction,"i.io naas api ethereum Methods trace replayTransaction.   trace_replayTransaction | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodstrace_replayTransactionOn this pagetrace_replayTransactionOverview​The 'trace_replayTransaction' method is used to replay a transaction and retrieve trace data which can be useful for debugging. This method is available by default for all Build & Scale plans. If you are using the Discover plan, you will need to upgrade to a paid plan to utilize this method. For more information on pricing, please refer to our pricing page. Note that this method is supported only on OpenEthereum & Erigon.Request​{ ""jsonrpc"": ""2.0"", ""method"": ""trace_replayTransaction"", ""params"": [""0x...transactionHash..."", [""trace"", ""vmTrace"", ""stateDiff""]], ""id"": 1}Request Parameters​transactionHash (String): The hash of the transaction you want to replay.traceTypes (Array of Strings): The types of traces to return. Options include ""trace"", ""vmTrace"", and ""stateDiff"".Response​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": { ""output"": ""0x..."", ""stateDiff"": {}, ""trace"": [], ""vmTrace"": {} }}Errors​Invalid Request: This error is returned if the request format is incorrect.Internal Error: This error is returned if there's a server-side issue processing the request.Rate Limits​Please note that there are rate limits applied to the API to ensure fair usage. Free-tier users are limited to 100 requests per day, while premium users can make up to 1000 or more requests per day.Support​If you encounter any issues or have further questions regarding the eth_getBlockByHash method, please contact our support team at [email protected].Was this section helpful?12345Previoustrace_replayBlockTransactionsNexttrace_transactionOverviewRequestRequest ParametersResponseErrorsRate LimitsSupportCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/trace_replayTransaction)"
495,i.io faq general Did you have market data in flat files,"i.io faq general Did you have market data in flat files.   Did you have market data in flat files? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralDid you have market data in flat files?Did you have market data in flat files?Yes. We can upload flat files to the customer-owned Amazon S3 bucket (initial upload + daily updates) for the CoinAPI Enterprise plan customers.For the retail customers, we operate another website: www.cryptotick.com where selected flat files or directories can be purchased and downloaded on demand.The samples and documentation of the flat files format is available in the CryptoTick FAQ: https://www.cryptotick.com/faqWas this section helpful?12345PreviousCrossed books / bid >= askNextDid you offer discount for University/non-profit/research-only usage?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/Did-you-have-market-data-in-flat-files)"
496,i.io market data rest api metadata list of icons for the exchanges,"i.io market data rest api metadata list of icons for the exchanges.   List of icons for the exchanges | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataList all asset iconsList all assets by asset IDList all assetsList all exchanges by exchange_idList all exchangesList all symbolsList of icons for the exchangesList of symbols for the exchangeList symbol mapping for the exchangeMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIMetadataList of icons for the exchangesList of icons for the exchangesGET /v1/exchanges/icons/:sizeList of icons for the exchangesPath Parameterssize int32 requiredThe size of the icons.Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [exchange_id string nullableGets or sets the exchange ID associated with the icon.asset_id string nullableGets or sets the asset ID associated with the icon.url string nullableGets or sets the URL of the icon.][ { ""exchange_id"": ""string"", ""asset_id"": ""string"", ""url"": ""string"" }][ { ""exchange_id"": ""CHAINCE"", ""url"": ""https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/204e55dd8dab4a0d823c21f04be6be4b.png"" }, { ""exchange_id"": ""BILAXY"", ""url"": ""https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/4958c92dbddd4936b1f655e5063dc782.png"" }, { ""exchange_id"": ""BCOINSG"", ""url"": ""https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/b7c77041cdef4f359b4044b2d73c7741.png"" }]SchemaExample (from schema)Example responseSchemaArray [exchange_id string nullableGets or sets the exchange ID associated with the icon.asset_id string nullableGets or sets the asset ID associated with the icon.url string nullableGets or sets the URL of the icon.][ { ""exchange_id"": ""string"", ""asset_id"": ""string"", ""url"": ""string"" }][ { ""exchange_id"": ""CHAINCE"", ""url"": ""https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/204e55dd8dab4a0d823c21f04be6be4b.png"" }, { ""exchange_id"": ""BILAXY"", ""url"": ""https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/4958c92dbddd4936b1f655e5063dc782.png"" }, { ""exchange_id"": ""BCOINSG"", ""url"": ""https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/b7c77041cdef4f359b4044b2d73c7741.png"" }]SchemaExample (from schema)Example responseSchemaArray [exchange_id string nullableGets or sets the exchange ID associated with the icon.asset_id string nullableGets or sets the asset ID associated with the icon.url string nullableGets or sets the URL of the icon.][ { ""exchange_id"": ""string"", ""asset_id"": ""string"", ""url"": ""string"" }][ { ""exchange_id"": ""CHAINCE"", ""url"": ""https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/204e55dd8dab4a0d823c21f04be6be4b.png"" }, { ""exchange_id"": ""BILAXY"", ""url"": ""https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/4958c92dbddd4936b1f655e5063dc782.png"" }, { ""exchange_id"": ""BCOINSG"", ""url"": ""https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/b7c77041cdef4f359b4044b2d73c7741.png"" }]SchemaExample (from schema)Example responseSchemaArray [exchange_id string nullableGets or sets the exchange ID associated with the icon.asset_id string nullableGets or sets the asset ID associated with the icon.url string nullableGets or sets the URL of the icon.][ { ""exchange_id"": ""string"", ""asset_id"": ""string"", ""url"": ""string"" }][ { ""exchange_id"": ""CHAINCE"", ""url"": ""https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/204e55dd8dab4a0d823c21f04be6be4b.png"" }, { ""exchange_id"": ""BILAXY"", ""url"": ""https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/4958c92dbddd4936b1f655e5063dc782.png"" }, { ""exchange_id"": ""BCOINSG"", ""url"": ""https://s3.eu-central-1.amazonaws.com/bbxt-static-icons/type-id/png_16/b7c77041cdef4f359b4044b2d73c7741.png"" }]Loading...Was this section helpful?12345PreviousList all symbolsNextList of symbols for the exchangeCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/metadata/list-of-icons-for-the-exchanges)"
497,i.io naas api bitcoin Methods getbalance,"i.io naas api bitcoin Methods getbalance.   getbalance | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetbalanceOn this pagegetbalanceOverview​The 'getbalance' Returns the total available balance.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""getbalance"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""getbalance\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""getbalance"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""2.0"", ""method"": ""getbalance"", ""params"": [], ""id"": 1})headers = { 'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type': 'application/json', 'accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""getbalance"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""getbalance"",""params"": [],""id"":1}`) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"") req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""method"": ""getbalance"", ""params"": [], ""id"": 1})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder().build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""2.0\"",\r \""id\"": \""1\"",\r \""method\"": \""getbalance\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();};$.ajax(settings).done(function (response) { console.log(response);});Request Parameters​dummy: Remains for backward compatibility. Must be excluded or set to “*”.minconf: Only include transactions confirmed at least this many times.include_watchonly: Also include balance in watch-only addresses (see ‘importaddress’)avoid_reuse: (only available if avoid_reuse wallet flag is set) Do not include balance in dirty outputs; addresses are considered dirty if they have previously been used in a transaction.Response​{ ""result"": null, ""error"": { ""code"": -18, ""message"": ""Load a wallet using loadwallet or create a new one with createwallet. (Note: A default wallet is no longer automatically created)"" }, ""id"": 1}Was this section helpful?12345PreviousgetaddressesbylabelNextgetbalancesOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getbalance)"
498,i.io cdn cgi l email protection#4d3e383d3d223f390d2e2224232c3d24632422,"i.io cdn cgi l email protection#4d3e383d3d223f390d2e2224232c3d24632422.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 86784cf28eeffc8b •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#4d3e383d3d223f390d2e2224232c3d24632422)"
499,i.io general faq api How can I get the USD price for multiple assets at the same time,"i.io general faq api How can I get the USD price for multiple assets at the same time.   How can I get the USD price for multiple assets at the same time? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer EMS Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What is the rate limit for EMS Trading API?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQAPIHow can I get the USD price for multiple assets at the same time?How can I get the USD price for multiple assets at the same time?You can do so by using our /v1/assets endpoint as the output includes price_usd data, using the filter_asset_id parameter, and separating the assets with a semicolon (;). Here are some examples:To get the actual USD price for both BTC and ETH:https://rest.coinapi.io/v1/assets?filter_asset_id=BTC;ETHTo get the actual USD price for XRP, LINK, MATIC, QNT and MANA:https://rest.coinapi.io/v1/assets?filter_asset_id=XRP;LINK;MATIC;QNT;MANATo learn more, please refer to our documentation: https://docs.coinapi.io/market-data/rest-api/metadata#list-all-assets-getWas this section helpful?12345PreviousHow can I get OHLCV data by asset pair?NextHow can I see a list of symbols related to a specific exchange, market, or asset?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/api/How-can-I-get-the-USD-price-for-multiple-assets-at-the-same-time)"
500,i.io naas api bitcoin Methods createpsbt x,"i.io naas api bitcoin Methods createpsbt x.   createpsbt | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodscreatepsbtOn this pagecreatepsbtOverview​The 'createpsbt' method is utilized to create a transaction in the Partially Signed Transaction format, implementing the Creator role in the transaction process. This method is essential for initiating transactions within the Bitcoin network through CoinAPI.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""createpsbt"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""createpsbt\"",\r \""params\"": []\r }\r "", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""createpsbt"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""createpsbt"", ""params"": []})headers = { 'Content-Type': 'application/json', 'accept': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var myHeaders = new Headers();myHeaders.append(""Content-Type"", ""application/json"");myHeaders.append(""accept"", ""application/json"");myHeaders.append(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var raw = JSON.stringify({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""createpsbt"", ""params"": []});var requestOptions = { method: 'POST', headers: myHeaders, body: raw, redirect: 'follow'};fetch(""https://bitcoin-mainnet.node.coinapi.io"", requestOptions) .then(response => response.text()) .then(result => console.log(result)) .catch(error => console.log('error', error));package mainpackage mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{`+""""+` ""jsonrpc"": ""1.0"",`+""""+` ""id"": ""1"",`+""""+` ""method"": ""createpsbt"",`+""""+` ""params"": []`+""""+`}`+""""+``)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""createpsbt"", ""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder().build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""createpsbt\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​Inputs: JSON array, required. Contains the JSON objects representing the transaction inputs.Outputs: JSON array, required. Contains the outputs as key-value pairs where none of the keys are duplicated. Each address can only appear once and there can only be one 'data' object.Locktime: Numeric, optional, default=0. Represents the raw locktime. A non-zero value also locktime-activates inputs.Replaceable: Boolean, optional, default=false. Marks the transaction as BIP125 replaceable, allowing it to be replaced by a transaction with higher fees.Response​{ ""id"": 1, ""result"": { ""str"": ""string"", ""description"": ""The resulting raw transaction (base64-encoded string)"" }, ""error"": null, ""jsonrpc"": ""2.0""}Was this section helpful?12345PreviouscreatemultisigNextcreaterawtransactionOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/createpsbt_x)"
501,i.io naas api bitcoin,"i.io naas api bitcoin.   Bitcoin | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsEthereumBitcoinOn this pageBitcoininfoTo access the official documentation, please visit bitcoin.org.Endpoints​The following lists all the Bitcoin network endpoints supported by CoinAPI.ChainNetworkNode URLSoftwareSoftware VersionModeBitcoinMainnethttps://bitcoin-mainnet.node.coinapi.ioBitcoin Core23.0.0archivedBitcoinMainnethttps://bitcoin-mainnet-archive.node.coinapi.ioBitcoin Core23.0.0archivedClients​Bitcoin Core​Was this section helpful?12345PreviousAPI limits and billingNextabandontransactionEndpointsClientsBitcoin CoreCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin)"
502,i.io market data rest api trades trades historical data,"i.io market data rest api trades trades historical data.   Historical data | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcvOrder BookOrder Book L3QuotesTrades Historical data Latest data by symbol_id Latest dataWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APITrades Historical data Historical dataGET /v1/trades/:symbol_id/historyGet history transactions from specific symbol, returned in time ascending order.Path Parameterssymbol_id string requiredSymbol identifier for requested timeseries (from the Metadata -> Symbols)Query Parameterstime_start stringStarting time in ISO 8601 (required)time_end stringTimeseries ending time in ISO 8601 (optional, if not supplied then the data is returned to the end or when result elements count reaches the limit)limit int32Default value: 100Amount of items to return (optional, mininum is 1, maximum is 100000, default value is 100, if the parameter is used then every 100 output items are counted as one request)include_id booleanInformation that additional exchange trade identifier should be included in the id_trade parameter of the trade if exchange providing identifiers.Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe time of trade reported by the exchange.time_coinapi date-timeThe time when the trade was received by CoinAPI.uuid uuidThe unique identifier for the trade.price doubleThe price of the transaction.size doubleThe base asset amount traded in the transaction.taker_side string nullableThe aggressor side of the transaction (BUY/SELL/BUY_ESTIMATED/SELL_ESTIMATED/UNKNOWN).id_trade string nullableThe trade identifier.id_order_maker string nullableThe order maker identifier.id_order_taker string nullableThe order taker identifier.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.289Z"", ""time_coinapi"": ""2024-07-16T12:55:05.289Z"", ""uuid"": ""3fa85f64-5717-4562-b3fc-2c963f66afa6"", ""price"": 0, ""size"": 0, ""taker_side"": ""string"", ""id_trade"": ""string"", ""id_order_maker"": ""string"", ""id_order_taker"": ""string"" }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""uuid"": ""770c7a3b-7258-4441-8182-83740f3e2457"", ""price"": 770, ""size"": 0.05, ""taker_side"": ""BUY"" }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T23:12:59.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""uuid"": ""1ea8adc5-6459-47ca-adbf-0c3f8c729bb2"", ""price"": 770, ""size"": 0.05, ""taker_side"": ""SELL"" }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe time of trade reported by the exchange.time_coinapi date-timeThe time when the trade was received by CoinAPI.uuid uuidThe unique identifier for the trade.price doubleThe price of the transaction.size doubleThe base asset amount traded in the transaction.taker_side string nullableThe aggressor side of the transaction (BUY/SELL/BUY_ESTIMATED/SELL_ESTIMATED/UNKNOWN).id_trade string nullableThe trade identifier.id_order_maker string nullableThe order maker identifier.id_order_taker string nullableThe order taker identifier.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.289Z"", ""time_coinapi"": ""2024-07-16T12:55:05.289Z"", ""uuid"": ""3fa85f64-5717-4562-b3fc-2c963f66afa6"", ""price"": 0, ""size"": 0, ""taker_side"": ""string"", ""id_trade"": ""string"", ""id_order_maker"": ""string"", ""id_order_taker"": ""string"" }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""uuid"": ""770c7a3b-7258-4441-8182-83740f3e2457"", ""price"": 770, ""size"": 0.05, ""taker_side"": ""BUY"" }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T23:12:59.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""uuid"": ""1ea8adc5-6459-47ca-adbf-0c3f8c729bb2"", ""price"": 770, ""size"": 0.05, ""taker_side"": ""SELL"" }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe time of trade reported by the exchange.time_coinapi date-timeThe time when the trade was received by CoinAPI.uuid uuidThe unique identifier for the trade.price doubleThe price of the transaction.size doubleThe base asset amount traded in the transaction.taker_side string nullableThe aggressor side of the transaction (BUY/SELL/BUY_ESTIMATED/SELL_ESTIMATED/UNKNOWN).id_trade string nullableThe trade identifier.id_order_maker string nullableThe order maker identifier.id_order_taker string nullableThe order taker identifier.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.289Z"", ""time_coinapi"": ""2024-07-16T12:55:05.289Z"", ""uuid"": ""3fa85f64-5717-4562-b3fc-2c963f66afa6"", ""price"": 0, ""size"": 0, ""taker_side"": ""string"", ""id_trade"": ""string"", ""id_order_maker"": ""string"", ""id_order_taker"": ""string"" }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""uuid"": ""770c7a3b-7258-4441-8182-83740f3e2457"", ""price"": 770, ""size"": 0.05, ""taker_side"": ""BUY"" }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T23:12:59.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""uuid"": ""1ea8adc5-6459-47ca-adbf-0c3f8c729bb2"", ""price"": 770, ""size"": 0.05, ""taker_side"": ""SELL"" }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableThe symbol identifier.time_exchange date-timeThe time of trade reported by the exchange.time_coinapi date-timeThe time when the trade was received by CoinAPI.uuid uuidThe unique identifier for the trade.price doubleThe price of the transaction.size doubleThe base asset amount traded in the transaction.taker_side string nullableThe aggressor side of the transaction (BUY/SELL/BUY_ESTIMATED/SELL_ESTIMATED/UNKNOWN).id_trade string nullableThe trade identifier.id_order_maker string nullableThe order maker identifier.id_order_taker string nullableThe order taker identifier.][ { ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.289Z"", ""time_coinapi"": ""2024-07-16T12:55:05.289Z"", ""uuid"": ""3fa85f64-5717-4562-b3fc-2c963f66afa6"", ""price"": 0, ""size"": 0, ""taker_side"": ""string"", ""id_trade"": ""string"", ""id_order_maker"": ""string"", ""id_order_taker"": ""string"" }][ { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T22:40:50.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""uuid"": ""770c7a3b-7258-4441-8182-83740f3e2457"", ""price"": 770, ""size"": 0.05, ""taker_side"": ""BUY"" }, { ""symbol_id"": ""BITSTAMP_SPOT_BTC_USD"", ""time_exchange"": ""2013-09-28T23:12:59.0000000Z"", ""time_coinapi"": ""2017-03-18T22:42:21.3763342Z"", ""uuid"": ""1ea8adc5-6459-47ca-adbf-0c3f8c729bb2"", ""price"": 770, ""size"": 0.05, ""taker_side"": ""SELL"" }]Loading...Was this section helpful?12345PreviousTradesNext Latest data by symbol_idCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/trades/trades-historical-data)"
503,i.io market data rest api#limits,"i.io market data rest api#limits.   REST API | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIOn this pageVersion: v1REST APIRESTful endpoint provides the widest range of data, based on HTTP protocol which works in Request-Reply scheme.Implemented Standards:HTTP1.0HTTP1.1HTTP2.0OpenAPI v3Note: We adhere to the OpenAPI standards for documenting our API.OpenAPI Specification​To access our API's OpenAPI specification, you can use the following link: OpenAPI v3If you need to import the OpenAPI file into software like Postman, simply copy and paste the link below:https://raw.githubusercontent.com/coinapi/coinapi-sdk/master/data-api/coinapi-marketdata-rest.yamlEndpoints​EnviromentEncryptionValueProductionYeshttps://rest.coinapi.io/ProductionNohttp://rest.coinapi.io/infoFor real-time market data streaming, you should use WebSockets. REST API only supports pooling, meaning you can periodically request the current market data state. In streaming, you subscribe and data or updates are delivered to you continuously.General​If you want to learn how to authenticate to this API, you can find detailed instructions and guidance in authentication section of this documentation.HTTP Requests​Each HTTP request must contain the header Accept: application/json as all our responses are in JSON format.We encourage you to use the HTTP request header Accept-Encoding: deflate, gzip for all requests. This will indicate to us that we can deliver compressed data to you which on your side should be decompressed transparently.tipBy allowing data compression you are lowering bandwidth requirements by approximately 80%. This is important for requesting large amounts of data or using WebSocket Streaming API, as we can deliver data to you faster and more effectively.HTTP Success​Successful HTTP responses have the status code 200 and the body in a format according to documentation of the requested resource.infoYou should always check that your HTTP response status code is equal to 200, otherwise the requested was not successful.HTTP Errors​Error message is returned in JSON structured like this:{ ""error"": ""Invalid API key""}All HTTP requests with response status codes different to 200 must be considered as failed and you should expect additional JSON inside the body of the response with the error message encapsulated inside it as shown in the example. We use the following error codes:Error CodeMeaning400Bad Request -- There is something wrong with your request401Unauthorized -- Your API key is wrong403Forbidden -- Your API key doesnt't have enough privileges to access this resource429Too many requests -- You have exceeded your API key rate limits550No data -- You requested specific single item that we don't have at this moment.infoGood practice is to store all error messages somewhere along with request data for further manual review.Output data format​By default we are using JSON output data format for all of our endpoints, you can control format of data by using output_format variable in query string parameters.URL Parameters​ParameterTypeDescriptionoutput_formatstringOutput data format (optional, default value is json, possible values are json, xml or csv)csv_include_headerboolIgnore header line in CSV output? (optional, default value is true, true to include CSV header line, false otherwise)csv_include_quotesboolEncapsulate strings with quotes in CSV output? (optional, default value is false, true to encapsulate all strings with "", false to leave them unquoted)csv_exclude_colstringComma delimited list of column names to ignore in CSV output (optional, by default all columns are included)csv_set_delimiterstringCharacter that will be used as column delimiter in CSV output (optional, default value is ;)csv_set_dec_markstringCharacter that will be used as decimal separator in CSV output (optional, default value is .)csv_set_timeformatstringFormat for datetime type in CSV output or unix for unix timestamp (optional, default value is yyyy-MM-ddTHH:mm:ss.fffffffZ)csv_set_newlinestringNew line type (optional, default value is unix, possible values win, mac, unix)Excel / G-Sheets​There are several ways to use data from our REST API inside the Excel, Google Sheets, or similar calculation sheet application. This section will do as best as possible to keep all information up to date on how you could load the data into these applications. Feel free to contact support if we are missing an option.CSV download, import:​Open the data in the CSV format from the browser eg. https://rest.coinapi.io/v1/exchangerate/USD?apikey=YOUR_API_KEY&invert=true&output_format=csvSave the data to the file with the .csv extension.Use the file saved and import it into the software.When configuring import, refer to the parameters like delimiter from the Output data formatThe platform-independent way described above is based on CSV but could also be used in other formats like JSON and XML as long as the software support it, but the import procedure needs to be adjusted accordingly.Microsoft Excel​Use PowerQuery to load the URL directly into the CSV import without saving the file locally. Use the =WEBSERVICE function to load the API response directly into the sheet, but this will not parse the data; additional processing is required.Google Sheets​Use =IMPORT function to load the REST API endpoint and automatically parse the CSV format data into the cells. eg. =IMPORTDATA(""https://rest.coinapi.io/v1/exchangerate/USD?apikey=YOUR_API_KEY&invert=true&output_format=csvOpenOffice Calc​Select the menu Insert -> Sheet From File, 2. In the Insert dialog, put the URL eg. https://rest.coinapi.io/v1/exchangerate/USD?apikey=YOUR_API_KEY&invert=true&output_format=csv in the File Name box at the bottom. Set the drop-down list next to that to Web Page Query and click Open. The Text Import dialog opens where you can change the defaults if needed. Authentication​API Key: ApiKeyCoinApi API key needed to access the endpointsSecurity Scheme Type:apiKeyHeader parameter name:X-CoinAPI-KeyContactCOINAPI LTD: [email protected]URL: https://www.coinapi.ioLicenseMIT LicenseWas this section helpful?12345PreviousAPI limits and billingNextExchange RatesOpenAPI SpecificationEndpointsGeneralHTTP RequestsOutput data formatExcel / G-SheetsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api#limits)"
504,i.io market data rest api metadata#symbol identifier,i.io market data rest api metadata#symbol identifier.   Metadata | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataList all asset iconsList all assets by asset IDList all assetsList all exchanges by exchange_idList all exchangesList all symbolsList of icons for the exchangesList of symbols for the exchangeList symbol mapping for the exchangeMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIMetadataMetadata📄️ List all asset iconsGets the list of icons (of the given size) for all the assets.📄️ List all assets by asset IDList all assets by asset ID📄️ List all assetsRetrieves all assets.📄️ List all exchanges by exchange_idList all exchanges by exchange_id📄️ List all exchangesGet a detailed list of exchanges provided by the system.📄️ List all symbolsRetrieves all symbols with optional filtering.📄️ List of icons for the exchangesList of icons for the exchanges📄️ List of symbols for the exchangeList of symbols for the exchange📄️ List symbol mapping for the exchangeList symbol mapping for the exchangeWas this section helpful?12345PreviousTimeseries Index ValueNextList all asset iconsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/metadata#symbol-identifier)
505,i.io how to guides import api into postman,i.io how to guides import api into postman.   Import API into Postman | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesAcquire exchange rates with different programming languagesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPICreating a historical crypto price chart using CoinAPI and D3.jsFetching market data with KNIMEGet Historical OHLCV Data Using CoinAPIGet symbol funding rate metric data using CoinAPIImport API into PostmanImport data to Google Sheets/ExcelReal-time data visualization with javascriptReal-time trades stream using WebSocket with different languagesRetrieve and analyze crypto order book data using a cryptocurrency APITrading Essentials: QuickstartMarket Data APIEMS APIFAQCustomer PortalChangelogHow-to guidesImport API into PostmanOn this pageImport API into PostmanIntroduction​Postman allows you to import OpenAPI specifications effortlessly.Step-by-step process​Copy the OpenAPI URL from the CoinAPI websiteOpen Postman's workspaceImport an OpenAPI specification by providing its URL.Review and confirm the generated collection.Start using your API collection for testing and development.Here's how to do it for Market Data API:Was this section helpful?12345PreviousGet symbol funding rate metric data using CoinAPINextImport data to Google Sheets/ExcelIntroductionStep-by-step processCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/how-to-guides/import-api-into-postman)
506,i.io ems api managed cloud rest api location,i.io ems api managed cloud rest api location.   Location | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIAccountCertificateEndpointsExchangeLocationGet site locationsREST APIWebSocket APIFIX APISelf Hosted GuideManaged Cloud REST APILocationLocationIn the location section we provide information about the server sites used in the EMS API.📄️ Get site locationsThis endpoint providing information about the server site locations supported in the EMS API.Was this section helpful?12345PreviousGet exchange configurationNextGet site locationsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/managed-cloud-rest-api/location)
507,i.io naas api ethereum Methods eth newFilter,"i.io naas api ethereum Methods eth newFilter.   eth_newFilter | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_newFilterOn this pageeth_newFilterOverview​The 'eth_newFilter' method creates a filter object based on the given filter options, to notify when the state changes (logs). To check if the state has changed, call 'eth_getFilterChanges'.'Duration':Filter IDs will be valid for up to fifteen minutes and can be polled by any connection using the same YOUR-COINAPI-KEY.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \ --url https://ethereum-mainnet-geth-archive.node.coinapi.io \ --header 'accept: application/json' \ --header 'content-type: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --data '{ ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_newFilter"", ""params"": [ {  ""address"": [  ""0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907""  ],  ""fromBlock"": ""0x429d3b"",  ""toBlock"": ""latest"",  ""topics"": [  ""0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"",  ""0x00000000000000000000000000b46c2526e227482e2ebb8f4c69e4674d262e75"",  ""0x00000000000000000000000054a2d42a40f51259dedd1978f6c118a0f0eff078""  ] } ]}'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_newFilter\"",\""params\"":[{\""address\"":[\""0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907\""],\""fromBlock\"":\""0x429d3b\"",\""toBlock\"":\""latest\"",\""topics\"":[\""0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"",\""0x00000000000000000000000000b46c2526e227482e2ebb8f4c69e4674d262e75\"",\""0x00000000000000000000000054a2d42a40f51259dedd1978f6c118a0f0eff078\""]}]}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"",CURLOPT_RETURNTRANSFER => true,CURLOPT_ENCODING => """",CURLOPT_MAXREDIRS => 10,CURLOPT_TIMEOUT => 30,CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,CURLOPT_CUSTOMREQUEST => ""POST"",CURLOPT_POSTFIELDS => json_encode(['id' => 1,'jsonrpc' => '2.0','method' => 'eth_newFilter','params' => [['address' => ['0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907'],'fromBlock' => '0x429d3b','toBlock' => 'latest','topics' => ['0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef','0x00000000000000000000000000b46c2526e227482e2ebb8f4c69e4674d262e75','0x00000000000000000000000054a2d42a40f51259dedd1978f6c118a0f0eff078']]]]),CURLOPT_HTTPHEADER => [""accept: application/json"",""content-type: application/json"",""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY""],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) {echo ""cURL Error #:"" . $err;} else {echo $response;} ?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_newFilter"", ""params"": [  {   ""address"": [""0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907""],   ""fromBlock"": ""0x429d3b"",   ""toBlock"": ""latest"",   ""topics"": [""0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"", ""0x00000000000000000000000000b46c2526e227482e2ebb8f4c69e4674d262e75"", ""0x00000000000000000000000054a2d42a40f51259dedd1978f6c118a0f0eff078""]  } ]}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"" ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text) const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({ id: 1, jsonrpc: '2.0', method: 'eth_newFilter', params: [  {  address: ['0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907'],  fromBlock: '0x429d3b',  toBlock: 'latest',  topics: [   '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef',   '0x00000000000000000000000000b46c2526e227482e2ebb8f4c69e4674d262e75',   '0x00000000000000000000000054a2d42a40f51259dedd1978f6c118a0f0eff078'  ]  } ] })};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_newFilter\"",\""params\"":[{\""address\"":[\""0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907\""],\""fromBlock\"":\""0x429d3b\"",\""toBlock\"":\""latest\"",\""topics\"":[\""0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"",\""0x00000000000000000000000000b46c2526e227482e2ebb8f4c69e4674d262e75\"",\""0x00000000000000000000000054a2d42a40f51259dedd1978f6c118a0f0eff078\""]}]}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_newFilter\"",\""params\"":[{\""address\"":[\""0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907\""],\""fromBlock\"":\""0x429d3b\"",\""toBlock\"":\""latest\"",\""topics\"":[\""0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"",\""0x00000000000000000000000000b46c2526e227482e2ebb8f4c69e4674d262e75\"",\""0x00000000000000000000000054a2d42a40f51259dedd1978f6c118a0f0eff078\""]}]}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_newFilter\"",\""params\"":[{\""address\"":[\""0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907\""],\""fromBlock\"":\""0x429d3b\"",\""toBlock\"":\""latest\"",\""topics\"":[\""0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"",\""0x00000000000000000000000000b46c2526e227482e2ebb8f4c69e4674d262e75\"",\""0x00000000000000000000000054a2d42a40f51259dedd1978f6c118a0f0eff078\""]}]}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​A filter object with the following keys and their values:'address': [optional] A contract address or a list of addresses from which logs should originate.fromBlock': [optional, default is latest] A hexadecimal block number, or the string latest, earliest, or pending. See the default block parameter.'toBlock': [optional, default is latest] A hexadecimal block number, or the string latest, earliest, or pending. See the default block parameter.'topics': [optional] An array of 32 bytes DATA topics. Topics are order-dependent.Topic Filters:​Topics are order-dependent. A transaction with a log with topics '[A, B]' will be matched by the following topic filters:'[]': Anything.'[A]': 'A' in the first position, and anything after.'[null, B]': Anything in the first position AND 'B' in the second position, and anything after.'[A, B]': 'A' in the first position AND 'B' in the second position, and anything after.'[[A, B], [A, B]]': '(A OR B)' in the first position AND '(A OR B)' in the second position, and anything after.Response​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": ""0x7da018f96a3cd71bef5eedd3fc66596e""}filter ID: A hexadecimal denoting the newly created filter ID.Was this section helpful?12345Previouseth_newBlockFilterNexteth_newPendingTransactionFilterOverviewRequestRequest ParametersTopic Filters:ResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_newFilter)"
508,i.io authentication,i.io authentication.   Page Not Found | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyPage Not FoundWe could not find what you were looking for.Please contact the owner of the site that linked you to the original URL and let them know their link is broken.Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/authentication)
509,i.io market data rest api indexes retrieve historical composition value timeseries retrieves historical timeseries for the specific composition value for an index,"i.io market data rest api indexes retrieve historical composition value timeseries retrieves historical timeseries for the specific composition value for an index.   Retrieve Historical Composition Value Timeseries Retrieves historical timeseries for the specific composition value for an index | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIREST APIExchange RatesIndexesCreate indexGet index dataList of available indexesRetrieve Historical Composition Value Timeseries Retrieves historical timeseries for the specific composition value for an indexRetrieve Historical Index Value and CompositionRetrieve Historical Index Value TimeseriesUpdate indexMetadataMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket APIFIX APIS3 APIJSON RPCEMS APIFAQCustomer PortalChangelogMarket Data APIREST APIIndexesRetrieve Historical Composition Value Timeseries Retrieves historical timeseries for the specific composition value for an indexRetrieve Historical Composition Value Timeseries Retrieves historical timeseries for the specific composition value for an indexGET /v1/indexes/:index_id/timeseries/TO_BE_ANNOUNCEDRetrieve Historical Composition Value Timeseries Retrieves historical timeseries for the specific composition value for an indexPath Parametersindex_id string requiredQuery Parameterssource_id stringsource_type stringtime_start date-timetime_end date-timelimit int32Default value: 100Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)SchemaArray [time_period_start date-timeThe start time of the time period.time_period_end date-timeThe end time of the time period.time_open date-time nullableThe time when the value opened.time_close date-time nullableThe time when the value closed.value_open double nullableThe opening value.value_high double nullableThe highest value during the time period.value_low double nullableThe lowest value during the time period.value_close double nullableThe closing value.value_count int64The number of values during the time period.][ { ""time_period_start"": ""2024-03-20T19:55:16.382Z"", ""time_period_end"": ""2024-03-20T19:55:16.382Z"", ""time_open"": ""2024-03-20T19:55:16.382Z"", ""time_close"": ""2024-03-20T19:55:16.382Z"", ""value_open"": 0, ""value_high"": 0, ""value_low"": 0, ""value_close"": 0, ""value_count"": 0 }]SchemaExample (from schema)SchemaArray [time_period_start date-timeThe start time of the time period.time_period_end date-timeThe end time of the time period.time_open date-time nullableThe time when the value opened.time_close date-time nullableThe time when the value closed.value_open double nullableThe opening value.value_high double nullableThe highest value during the time period.value_low double nullableThe lowest value during the time period.value_close double nullableThe closing value.value_count int64The number of values during the time period.][ { ""time_period_start"": ""2024-03-20T19:55:16.382Z"", ""time_period_end"": ""2024-03-20T19:55:16.382Z"", ""time_open"": ""2024-03-20T19:55:16.382Z"", ""time_close"": ""2024-03-20T19:55:16.382Z"", ""value_open"": 0, ""value_high"": 0, ""value_low"": 0, ""value_close"": 0, ""value_count"": 0 }]SchemaExample (from schema)SchemaArray [time_period_start date-timeThe start time of the time period.time_period_end date-timeThe end time of the time period.time_open date-time nullableThe time when the value opened.time_close date-time nullableThe time when the value closed.value_open double nullableThe opening value.value_high double nullableThe highest value during the time period.value_low double nullableThe lowest value during the time period.value_close double nullableThe closing value.value_count int64The number of values during the time period.][ { ""time_period_start"": ""2024-03-20T19:55:16.382Z"", ""time_period_end"": ""2024-03-20T19:55:16.382Z"", ""time_open"": ""2024-03-20T19:55:16.382Z"", ""time_close"": ""2024-03-20T19:55:16.382Z"", ""value_open"": 0, ""value_high"": 0, ""value_low"": 0, ""value_close"": 0, ""value_count"": 0 }]SchemaExample (from schema)SchemaArray [time_period_start date-timeThe start time of the time period.time_period_end date-timeThe end time of the time period.time_open date-time nullableThe time when the value opened.time_close date-time nullableThe time when the value closed.value_open double nullableThe opening value.value_high double nullableThe highest value during the time period.value_low double nullableThe lowest value during the time period.value_close double nullableThe closing value.value_count int64The number of values during the time period.][ { ""time_period_start"": ""2024-03-20T19:55:16.382Z"", ""time_period_end"": ""2024-03-20T19:55:16.382Z"", ""time_open"": ""2024-03-20T19:55:16.382Z"", ""time_close"": ""2024-03-20T19:55:16.382Z"", ""value_open"": 0, ""value_high"": 0, ""value_low"": 0, ""value_close"": 0, ""value_count"": 0 }]Loading...Was this section helpful?12345PreviousList of available indexesNextRetrieve Historical Index Value and CompositionCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/indexes/retrieve-historical-composition-value-timeseries-retrieves-historical-timeseries-for-the-specific-composition-value-for-an-index)"
510,i.io naas api bitcoin Methods gettxoutsetinfo,"i.io naas api bitcoin Methods gettxoutsetinfo.   gettxoutsetinfo | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgettxoutsetinfoOn this pagegettxoutsetinfoOverview​The 'gettxoutsetinfo' RPC method returns detailed information about the set of unspent transaction outputs (UTXOs).Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""gettxoutsetinfo"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""gettxoutsetinfo\"",\""params\"": [ ]}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""gettxoutsetinfo"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection(""mainnet-bitcoin.node.coinapi.io"")payload = json.dumps({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""gettxoutsetinfo"",""params"": []})headers = {'Content-Type': 'application/json','accept': 'application/json','X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}conn.request(""POST"", ""/"", payload, headers)res = conn.getresponse()data = res.read()print(data.decode(""utf-8""))var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""gettxoutsetinfo"", ""params"": [] }),};$.ajax(settings).done(function (response) {console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""id"":1,""method"":""gettxoutsetinfo"",""params"": [ ]}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""gettxoutsetinfo"",""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""gettxoutsetinfo\"",\""params\"": [ ]}"");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​hash_type (string)default: hash_serialized_2Description: Specifies the type of UTXO set hash to be calculated.Options:""hash_serialized_2"": Computes a serialized hash which helps in verifying the UTXO set's integrity by comparing it with other nodes.""none"": Does not calculate a hash.Response​{ ""result"": { ""height"": 687293, ""bestblock"": ""00000000000000000008adb1c65c7358b2989d183a5e875a3b853f12ac4b89d7"", ""txouts"": 9552849, ""bogosize"": 676484713, ""hash_serialized_2"": ""3e4f22d8fd4ea1c1fb5da1c3f6d0297b12f1f602699ada01e9ad608aa13f7969"", ""total_amount"": 18546728.293476, ""transactions"": 5362819, ""disk_size"": 25467893456, ""error"": null }, ""id"": ""curltest"", ""status"": ""success""}A JSON object containing the following fields:result: An object encapsulating the response data with the following attributes:height: Indicates the height of the current block in the blockchain.bestblock: The hash of the most recent block at the tip of the blockchain.txouts: Represents the number of unspent transaction outputs.bogosize: A metric representing the UTXO set size; however, it doesn't convey any meaningful information.hash_serialized_2: This field contains the serialized hash value (only appears if the hash_type is set to 'hash_serialized_2'). It assists in verifying the integrity of the UTXO set through comparison with other nodes.total_amount: The cumulative value (in BTC) of all unspent outputs.transactions: Denotes the number of transactions with unspent outputs.disk_size: The estimated size of the chainstate on the disk in bytes.error: If an error occurs during the execution, this field will contain the error message; otherwise, it remains empty.Was this section helpful?12345PreviousgettxoutproofNexthelpOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/gettxoutsetinfo)"
511,i.io market data rest api metrics historical metrics for asset,"i.io market data rest api metrics historical metrics for asset.   Historical metrics for asset | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsCurrent metrics for given assetCurrent metrics for given exchangeCurrent metrics for given symbolHistorical metrics for assetHistorical metrics for symbolHistorical metrics for the exchangeListing of all supported metrics by CoinAPIListing of all supported exchange metricsListing of all supported metrics for assetListing of all supported metrics for symbolOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIMetricsHistorical metrics for assetHistorical metrics for assetGET /v1/metrics/asset/historyGet asset metrics history.Query Parametersmetric_id string requiredMetric identifier (from the Metrics -> Listing)asset_id stringAsset identifier (from the Metadata -> Assets)asset_id_external stringExchange asset identifierexchange_id string requiredExchange identifier (from the Metadata -> Exchanges)time_start date-timeStarting time in ISO 8601time_end date-timeEnding time in ISO 8601time_format stringIf set, returned values will be in unix timestamp format (valid values: unix_sec, unix_millisec, unix_microsec, unix_nanosec)period_id stringIdentifier of requested timeseries period (e.g. 5SEC or 2MTH), default value is 1SEClimit int32Default value: 100Amount of items to return (optional, mininum is 1, maximum is 100000, default value is 100, if the parameter is used then every 100 output items are counted as one request)Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)SchemaArray [symbol_id string nullableGets or sets the symbol id.time date-timeGets or sets the time at which the value is recorded.value doubleGets or sets the value of the metric.][ { ""symbol_id"": ""string"", ""time"": ""2024-07-16T12:55:05.262Z"", ""value"": 0 }]SchemaExample (from schema)SchemaArray [symbol_id string nullableGets or sets the symbol id.time date-timeGets or sets the time at which the value is recorded.value doubleGets or sets the value of the metric.][ { ""symbol_id"": ""string"", ""time"": ""2024-07-16T12:55:05.263Z"", ""value"": 0 }]SchemaExample (from schema)SchemaArray [symbol_id string nullableGets or sets the symbol id.time date-timeGets or sets the time at which the value is recorded.value doubleGets or sets the value of the metric.][ { ""symbol_id"": ""string"", ""time"": ""2024-07-16T12:55:05.263Z"", ""value"": 0 }]SchemaExample (from schema)SchemaArray [symbol_id string nullableGets or sets the symbol id.time date-timeGets or sets the time at which the value is recorded.value doubleGets or sets the value of the metric.][ { ""symbol_id"": ""string"", ""time"": ""2024-07-16T12:55:05.263Z"", ""value"": 0 }]Loading...Was this section helpful?12345PreviousCurrent metrics for given symbolNextHistorical metrics for symbolCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/metrics/historical-metrics-for-asset)"
512,i.io market data rest api metrics current metrics for given asset,"i.io market data rest api metrics current metrics for given asset.   Current metrics for given asset | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsCurrent metrics for given assetCurrent metrics for given exchangeCurrent metrics for given symbolHistorical metrics for assetHistorical metrics for symbolHistorical metrics for the exchangeListing of all supported metrics by CoinAPIListing of all supported exchange metricsListing of all supported metrics for assetListing of all supported metrics for symbolOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIMetricsCurrent metrics for given assetCurrent metrics for given assetGET /v1/metrics/asset/currentGet current asset metrics.Query Parametersmetric_id stringMetric identifier (from the Metrics -> Listing)asset_id stringAsset identifier (from the Metadata -> Assets)asset_id_external stringExchange asset identifierexchange_id stringExchange identifier (from the Metadata -> Exchanges)Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [entry_time date-timeGets or sets the entry time for the data point.recv_time date-timeGets or sets the received time for the data point.exchange_id string nullableGets or sets the identifier for the exchange.asset_id string nullableGets or sets the identifier for the asset.symbol_id string nullableGets or sets the identifier for the symbol.metric_id string nullableGets or sets the identifier for the metric.value_decimal double nullableGets or sets the decimal value for the metric.value_text string nullableGets or sets the textual representation of the value for the metric.value_time date-time nullableGets or sets the timestamp value for the metric.][ { ""entry_time"": ""2024-07-16T12:55:05.261Z"", ""recv_time"": ""2024-07-16T12:55:05.261Z"", ""exchange_id"": ""string"", ""asset_id"": ""string"", ""symbol_id"": ""string"", ""metric_id"": ""string"", ""value_decimal"": 0, ""value_text"": ""string"", ""value_time"": ""2024-07-16T12:55:05.261Z"" }][ { ""entry_time"": ""2023-06-16T07:55:07.2787756Z"", ""recv_time"": ""2023-06-16T07:55:07.0010000Z"", ""exchange_id"": ""DERIBIT"", ""metric_id"": ""DERIVATIVES_MARK_PRICE"", ""value_decimal"": 0.0086 }, { ""entry_time"": ""2023-06-26T07:05:39.9865633Z"", ""recv_time"": ""2023-06-26T07:05:39.9000000Z"", ""exchange_id"": ""DERIBIT"", ""metric_id"": ""IV_UNDERLYING_PRICE"", ""value_decimal"": 30743.29 }, { ""entry_time"": ""2023-06-26T07:05:17.0768012Z"", ""recv_time"": ""2023-06-26T07:05:16.8420000Z"", ""exchange_id"": ""DERIBIT"", ""metric_id"": ""DERIVATIVES_MARK_PRICE_IV"", ""value_decimal"": 60.77 }]SchemaExample (from schema)Example responseSchemaArray [entry_time date-timeGets or sets the entry time for the data point.recv_time date-timeGets or sets the received time for the data point.exchange_id string nullableGets or sets the identifier for the exchange.asset_id string nullableGets or sets the identifier for the asset.symbol_id string nullableGets or sets the identifier for the symbol.metric_id string nullableGets or sets the identifier for the metric.value_decimal double nullableGets or sets the decimal value for the metric.value_text string nullableGets or sets the textual representation of the value for the metric.value_time date-time nullableGets or sets the timestamp value for the metric.][ { ""entry_time"": ""2024-07-16T12:55:05.262Z"", ""recv_time"": ""2024-07-16T12:55:05.262Z"", ""exchange_id"": ""string"", ""asset_id"": ""string"", ""symbol_id"": ""string"", ""metric_id"": ""string"", ""value_decimal"": 0, ""value_text"": ""string"", ""value_time"": ""2024-07-16T12:55:05.262Z"" }][ { ""entry_time"": ""2023-06-16T07:55:07.2787756Z"", ""recv_time"": ""2023-06-16T07:55:07.0010000Z"", ""exchange_id"": ""DERIBIT"", ""metric_id"": ""DERIVATIVES_MARK_PRICE"", ""value_decimal"": 0.0086 }, { ""entry_time"": ""2023-06-26T07:05:39.9865633Z"", ""recv_time"": ""2023-06-26T07:05:39.9000000Z"", ""exchange_id"": ""DERIBIT"", ""metric_id"": ""IV_UNDERLYING_PRICE"", ""value_decimal"": 30743.29 }, { ""entry_time"": ""2023-06-26T07:05:17.0768012Z"", ""recv_time"": ""2023-06-26T07:05:16.8420000Z"", ""exchange_id"": ""DERIBIT"", ""metric_id"": ""DERIVATIVES_MARK_PRICE_IV"", ""value_decimal"": 60.77 }]SchemaExample (from schema)Example responseSchemaArray [entry_time date-timeGets or sets the entry time for the data point.recv_time date-timeGets or sets the received time for the data point.exchange_id string nullableGets or sets the identifier for the exchange.asset_id string nullableGets or sets the identifier for the asset.symbol_id string nullableGets or sets the identifier for the symbol.metric_id string nullableGets or sets the identifier for the metric.value_decimal double nullableGets or sets the decimal value for the metric.value_text string nullableGets or sets the textual representation of the value for the metric.value_time date-time nullableGets or sets the timestamp value for the metric.][ { ""entry_time"": ""2024-07-16T12:55:05.262Z"", ""recv_time"": ""2024-07-16T12:55:05.262Z"", ""exchange_id"": ""string"", ""asset_id"": ""string"", ""symbol_id"": ""string"", ""metric_id"": ""string"", ""value_decimal"": 0, ""value_text"": ""string"", ""value_time"": ""2024-07-16T12:55:05.262Z"" }][ { ""entry_time"": ""2023-06-16T07:55:07.2787756Z"", ""recv_time"": ""2023-06-16T07:55:07.0010000Z"", ""exchange_id"": ""DERIBIT"", ""metric_id"": ""DERIVATIVES_MARK_PRICE"", ""value_decimal"": 0.0086 }, { ""entry_time"": ""2023-06-26T07:05:39.9865633Z"", ""recv_time"": ""2023-06-26T07:05:39.9000000Z"", ""exchange_id"": ""DERIBIT"", ""metric_id"": ""IV_UNDERLYING_PRICE"", ""value_decimal"": 30743.29 }, { ""entry_time"": ""2023-06-26T07:05:17.0768012Z"", ""recv_time"": ""2023-06-26T07:05:16.8420000Z"", ""exchange_id"": ""DERIBIT"", ""metric_id"": ""DERIVATIVES_MARK_PRICE_IV"", ""value_decimal"": 60.77 }]SchemaExample (from schema)Example responseSchemaArray [entry_time date-timeGets or sets the entry time for the data point.recv_time date-timeGets or sets the received time for the data point.exchange_id string nullableGets or sets the identifier for the exchange.asset_id string nullableGets or sets the identifier for the asset.symbol_id string nullableGets or sets the identifier for the symbol.metric_id string nullableGets or sets the identifier for the metric.value_decimal double nullableGets or sets the decimal value for the metric.value_text string nullableGets or sets the textual representation of the value for the metric.value_time date-time nullableGets or sets the timestamp value for the metric.][ { ""entry_time"": ""2024-07-16T12:55:05.262Z"", ""recv_time"": ""2024-07-16T12:55:05.262Z"", ""exchange_id"": ""string"", ""asset_id"": ""string"", ""symbol_id"": ""string"", ""metric_id"": ""string"", ""value_decimal"": 0, ""value_text"": ""string"", ""value_time"": ""2024-07-16T12:55:05.262Z"" }][ { ""entry_time"": ""2023-06-16T07:55:07.2787756Z"", ""recv_time"": ""2023-06-16T07:55:07.0010000Z"", ""exchange_id"": ""DERIBIT"", ""metric_id"": ""DERIVATIVES_MARK_PRICE"", ""value_decimal"": 0.0086 }, { ""entry_time"": ""2023-06-26T07:05:39.9865633Z"", ""recv_time"": ""2023-06-26T07:05:39.9000000Z"", ""exchange_id"": ""DERIBIT"", ""metric_id"": ""IV_UNDERLYING_PRICE"", ""value_decimal"": 30743.29 }, { ""entry_time"": ""2023-06-26T07:05:17.0768012Z"", ""recv_time"": ""2023-06-26T07:05:16.8420000Z"", ""exchange_id"": ""DERIBIT"", ""metric_id"": ""DERIVATIVES_MARK_PRICE_IV"", ""value_decimal"": 60.77 }]Loading...Was this section helpful?12345PreviousMetricsNextCurrent metrics for given exchangeCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/metrics/current-metrics-for-given-asset)"
513,i.io faq general Is latency higher for the exchanges which are providing only REST API,"i.io faq general Is latency higher for the exchanges which are providing only REST API.   Is latency higher for the exchanges which are providing only REST API? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralIs latency higher for the exchanges which are providing only REST API?Is latency higher for the exchanges which are providing only REST API?If the exchange has only REST API then latency is usually higher in comparison to typical WebSocket exchange, in that case on our end we are using hundreds of the servers to get the data faster and avoid limits imposed by the REST API's.Was this section helpful?12345Previous""Invalid API Key"" error for a newly purchased keyNextIs there an SLA agreement available?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/Is-latency-higher-for-the-exchanges-which-are-providing-only-REST-API)"
514,i.io general glossary blokchain block,"i.io general glossary blokchain block.   Blockchain Block | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGlossaryBlockchain Address and OutputBlockchain NodeChain (Blockchain)EndpointJSONNetworkSatoshiTransactionWalletBlockchain BlockChangelogGlossaryBlockchain BlockBlockchain BlockA blockchain block is a fundamental component of a blockchain, which is a decentralized digital ledger used to record transactions across multiple computers. Each block contains a set of transactions and is linked to the previous block, forming a chain. Below are the key aspects related to a blockchain block:Block StructureHeader: Contains metadata such as the block number, timestamp, previous block hash, nonce, and root hash of the Merkle tree.Block Body: Contains the actual transactions, which include the sender, receiver, amount, and transaction metadata.Block Header ComponentsPrevious Block Hash: A reference to the hash of the preceding block in the chain, ensuring the immutability and chronological order.Merkle Root: A hash that represents all the transactions within the block. It is derived from a Merkle tree, which enables efficient and secure verification of transactions.Timestamp: Records the time when the block was created.Nonce: A number used once in cryptographic communication. It is used in the process of mining to generate a valid hash for the block.Difficulty Target: Indicates the difficulty of the problem that the miners must solve to add the block to the blockchain.TransactionsEach transaction within a block includes details of the sender, receiver, amount transferred, and other necessary metadata.Transactions are verified and validated by network nodes through consensus mechanisms.Mining and ConsensusMining: The process by which new blocks are added to the blockchain. Miners solve complex cryptographic puzzles to find a valid nonce that, when hashed, meets the difficulty target.Consensus Mechanisms: Methods used to achieve agreement on the blockchain state among distributed nodes. Common mechanisms include Proof of Work (PoW) and Proof of Stake (PoS).Block Creation ProcessTransaction Collection: Pending transactions are collected and organized into a block.Hashing: The block header is hashed repeatedly with different nonces until a hash meeting the difficulty target is found.Validation and Propagation: Once a valid block is mined, it is validated by other nodes and added to the blockchain. The block is then propagated throughout the network.Security and IntegrityImmutability: Once a block is added to the blockchain, altering the data in the block would require re-mining all subsequent blocks, which is computationally impractical.Cryptographic Hashing: Ensures the integrity and security of the data within the block.Understanding these aspects of a blockchain block is essential for grasping how blockchain technology ensures security, transparency, and decentralization in digital transactions. This forms the basis for applications such as cryptocurrencies, smart contracts, and decentralized applications (DApps).Was this section helpful?12345PreviousWalletNextChangelogCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/glossary/blokchain_block)"
515,i.io ems api rest api orders get order execution report,"i.io ems api rest api orders get order execution report.   Get order execution report | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIREST APIBalancesOrdersCancel all orders requestCancel order requestGet open ordersGet order execution reportHistory of order changesSend new orderPositionsWebSocket APIFIX APISelf Hosted GuideREST APIOrdersGet order execution reportGet order execution reportGET /v1/orders/status/:client_order_idGet the last order execution report for the specified order. The requested order does not need to be active or opened.Path Parametersclient_order_id string requiredThe unique identifier of the order assigned by the client.Responses200404The last execution report of the requested order.application/jsonSchemaExample (from schema)Schemaexchange_id string requiredExchange identifier used to identify the routing destination.client_order_id string requiredThe unique identifier of the order assigned by the client.symbol_id_exchange stringExchange symbol. One of the properties (symbol_id_exchange, symbol_id_coinapi) is required to identify the market for the new order.symbol_id_coinapi stringCoinAPI symbol. One of the properties (symbol_id_exchange, symbol_id_coinapi) is required to identify the market for the new order.amount_order number requiredOrder quantity.price number requiredOrder price.side OrdSide requiredPossible values: [BUY, SELL]Side of order.order_type OrdType requiredPossible values: [LIMIT]Order types are documented in the separate section: EMS / Starter Guide / Order parameters / Order typetime_in_force TimeInForce requiredPossible values: [GOOD_TILL_CANCEL, GOOD_TILL_TIME_EXCHANGE, GOOD_TILL_TIME_OMS, FILL_OR_KILL, IMMEDIATE_OR_CANCEL]Order time in force options are documented in the separate section: EMS / Starter Guide / Order parameters / Time in forceexpire_time dateExpiration time. Conditionaly required for orders with time_in_force = GOOD_TILL_TIME_EXCHANGE or GOOD_TILL_TIME_OEML.exec_inst string[]Possible values: [MAKER_OR_CANCEL, AUCTION_ONLY, INDICATION_OF_INTEREST]Order execution instructions are documented in the separate section: EMS / Starter Guide / Order parameters / Execution instructionsclient_order_id_format_exchange string requiredThe unique identifier of the order assigned by the client converted to the exchange order tag format for the purpose of tracking it.exchange_order_id stringUnique identifier of the order assigned by the exchange or executing system.amount_open number requiredQuantity open for further execution. amount_open = amount_order - amount_filledamount_filled number requiredTotal quantity filled.avg_px numberCalculated average price of all fills on this order.status OrdStatus requiredPossible values: [RECEIVED, ROUTING, ROUTED, NEW, PENDING_CANCEL, PARTIALLY_FILLED, FILLED, CANCELED, REJECTED]Order statuses and the lifecycle are documented in the separate section: EMS / Starter Guide / Order Lifecyclestatus_history array[]Timestamped history of order status changes.error_message stringError message.fills object[]Relay fill information on working orders.Array [time dateExecution time.price numberExecution price.amount numberExecuted quantity.]{ ""exchange_id"": ""KRAKEN"", ""client_order_id"": ""6ab36bc1-344d-432e-ac6d-0bf44ee64c2b"", ""symbol_id_exchange"": ""XBT/USDT"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_BTC_USDT"", ""amount_order"": 0.045, ""price"": 0.0783, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": ""2020-01-01T10:45:20.1677709Z"", ""exec_inst"": [ ""MAKER_OR_CANCEL"" ], ""client_order_id_format_exchange"": ""f81211e2-27c4-b86a-8143-01088ba9222c"", ""exchange_order_id"": 3456456754, ""amount_open"": 0.22, ""amount_filled"": 0, ""avg_px"": 0.0783, ""status"": ""RECEIVED"", ""status_history"": [ [  [  [   ""RECEIVED"",   ""2020-05-27T11:16:20.1677709Z""  ],  [   ""REJECTED"",   ""2020-05-27T11:16:20.1677710Z""  ]  ] ] ], ""error_message"": ""{\""result\"":\""error\"",\""reason\"":\""InsufficientFunds\"",\""message\"":\""Failed to place buy order on symbol 'BTCUSD' for price $7,000.00 and quantity 0.22 BTC due to insufficient funds\""}"", ""fills"": [ {  ""time"": ""2020-01-01T10:45:20.1677709Z"",  ""price"": 10799.2,  ""amount"": 0.002 } ]}The requested order was not found.application/jsonSchemaExample (from schema)Schematype stringMessage type, constant.reject_reason RejectReasonPossible values: [OTHER, EXCHANGE_UNREACHABLE, EXCHANGE_RESPONSE_TIMEOUT, ORDER_ID_NOT_FOUND, INVALID_TYPE, METHOD_NOT_SUPPORTED, JSON_ERROR]Cause of rejection.exchange_id stringIf the message related to exchange, then the identifier of the exchange will be provided.message stringMessage text.rejected_message stringValue of rejected request, if available.{ ""type"": ""MESSAGE_REJECT"", ""reject_reason"": ""ORDER_ID_NOT_FOUND"", ""exchange_id"": ""BINANCE"", ""message"": ""Order with ID: BINANCE-7d8a-4888 not found"", ""rejected_message"": ""{\""client_order_id\"":\""BINANCE-7d8a-4888\"",\""exchange_id\"":\""BINANCE\"",\""type\"":\""ORDER_CANCEL_SINGLE_REQUEST\""}""}Loading...Was this section helpful?12345PreviousGet open ordersNextHistory of order changesCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/rest-api/orders/get-order-execution-report)"
516,i.io ems api authentication,"i.io ems api authentication.   Authentication | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIREST APIWebSocket APIFIX APISelf Hosted GuideAuthenticationOn this pageAuthenticationIn this section, you will find comprehensive information about the process of CoinAPI authentication. It covers the fundamental aspects and procedures involved in obtaining authentication for CoinAPI usage. Whether you are new to CoinAPI or seeking to enhance your understanding of the authentication process, this section will provide you with a valuable overview of the topic.There are different types of authentication methods available to secure and control access to its services.API Key - fundamental method of authentication that involves the usage of an API key for authentication and access control.API Key + JWT token - extended authentication method that combines the use of an API key along with a JWT token for enhanced security and authentication. Useful when you need to share the API Key publicly, for example when accessing the CoinAPI endpoints from the frontend JavaScript code exposed to the end-users. JWT token will be required along the API Key from the CoinAPI side to perform successful authentication, and the JWT tokens can be only generated from your side as you know the secret (private key or secret) based on which JWT token with the specified expiration time are issued.Authentication methods supported by the API​Here's an overview of the various products offered by CoinAPI and the supported authentication methods for each product. To use resources that require authorized access, you will need to use one of the many authentication methods described below.Product nameAPIX-CoinAPI-Key headerQuery paramTLS Client CertSenderCompIDEMSManaged Cloud REST✅✅❌❌EMSREST✅✅✅❌EMSWS✅✅✅❌EMSFIX❌❌✅✅cautionIf you are using the Authorization header to pass the API key, please note that it cannot be used together with a JWT token. In case you have enabled JWT authentication, we recommend using alternative methods to pass the API key such as: a Custom authentication header, Query string parameter, or API Key in the URL.X-CoinAPI-Key header​You can authorize by providing an additional custom header named X-CoinAPI-Key and API key as its value.Assuming that your API key is 73034021-THIS-IS-SAMPLE-KEY, then the authentication header you should send to us will look like:X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEYQuery string parameter (apikey)​You can authorize by providing an additional parameter named apikey with a value equal to your API key in the query string of your HTTP request.Assuming that your API key is 73034021-THIS-IS-SAMPLE-KEY and that you want to request all exchange rates from BTC asset, then your query string should look like this: GET /v1/exchangerate/BTC?apikey=73034021-THIS-IS-SAMPLE-KEYcautionThe Query string method may be more practical for development activities.TLS Client Cert​TLS Client Certificate acquired from the Managed Cloud REST API (/v1/certificate/pem endpoint) provided while establishing a TLS session with us.SenderCompID​This method of authentication is FIX protocol-specific. The exact message that needs to be sent to us will be described in the documentation of the specific API protocol Logon (35=A) message page.Was this section helpful?12345PreviousEMS APINextAPI limits and billingAuthentication methods supported by the APIX-CoinAPI-Key headerQuery string parameter (apikey)TLS Client CertSenderCompIDCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/authentication)"
517,i.io general faq general Did you have market data in flat files,"i.io general faq general Did you have market data in flat files.   Did you have market data in flat files? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralDid you have market data in flat files?Did you have market data in flat files?Yes. We can upload flat files to the customer-owned Amazon S3 bucket (initial upload + daily updates) for the CoinAPI Enterprise plan customers.For the retail customers, we operate another website: www.cryptotick.com where selected flat files or directories can be purchased and downloaded on demand.The samples and documentation of the flat files format is available in the CryptoTick FAQ: https://www.cryptotick.com/faqWas this section helpful?12345PreviousCrossed books / bid >= askNextDid you offer discount for University/non-profit/research-only usage?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/Did-you-have-market-data-in-flat-files)"
518,i.io faq general We need a OneZero FIX API session is this possible,"i.io faq general We need a OneZero FIX API session is this possible.   We need a OneZero FIX API session, is this possible? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralWe need a OneZero FIX API session, is this possible?We need a OneZero FIX API session, is this possible?Yes, our interface is certified with OneZero as an external data provider. This feature, however, requires an additional subscription on a yearly billing period. If you're interested in subscribing to this, please follow these steps:Log in to your account via the Customer Portal (https://customerportal.coinapi.io/login). Navigate to Subscriptions > CoinAPI oneZero Hub Link > Buy. After submitting and initiating the payment, we will send you a separate invoice for the subscription fee.Was this section helpful?12345PreviousWas my free API Key banned/blocked?NextWhat are the benefits of using the WebSocket SDK?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/We-need-a-OneZero-FIX-API-session-is-this-possible)"
519,i.io general glossary Blockchain Address and Output,"i.io general glossary Blockchain Address and Output.   Blockchain Address and Output | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGlossaryBlockchain Address and OutputBlockchain NodeChain (Blockchain)EndpointJSONNetworkSatoshiTransactionWalletBlockchain BlockChangelogGlossaryBlockchain Address and OutputOn this pageBlockchain Address and OutputBlockchain Address​A blockchain address is a unique identifier used to send and receive transactions on a blockchain network. It functions similarly to an email address for cryptocurrency payments, allowing users to receive funds from others. Blockchain addresses are usually derived from a public key and are presented as a string of alphanumeric characters. They are crucial for maintaining the security and integrity of transactions within the blockchain ecosystem.Key Characteristics​Uniqueness: Each blockchain address is unique, ensuring that transactions are accurately routed to the correct recipient.Public Key Derivation: Addresses are typically generated from the public key of a public-private key pair.Format: The format of a blockchain address varies depending on the cryptocurrency (e.g., Bitcoin, Ethereum) and often includes a checksum to detect errors.Blockchain Output​A blockchain output refers to the part of a transaction that specifies the amount of cryptocurrency being sent and the destination address. It is an essential component of the transaction structure in blockchain networks, determining how much value is transferred and to whom.Key Characteristics​Value: The amount of cryptocurrency specified in the output.Destination Address: The blockchain address that will receive the specified amount of cryptocurrency.UTXO (Unspent Transaction Output): In UTXO-based cryptocurrencies like Bitcoin, outputs that have not been spent are considered UTXOs and can be used as inputs for new transactions.Transaction Process​When a transaction is created, it includes one or more inputs (sources of funds) and one or more outputs (destinations of funds). The sum of the inputs must be equal to or greater than the sum of the outputs, and any difference is usually given as a transaction fee to the miners.Example​In a Bitcoin transaction:Input: Previous unspent transaction outputs (UTXOs) being used to fund the new transaction.Output: New UTXOs specifying the amounts and addresses receiving the funds.Understanding blockchain addresses and outputs is fundamental to comprehending how transactions are structured and processed in a blockchain network, ensuring secure and efficient transfer of value.Was this section helpful?12345PreviousGlossaryNextBlockchain NodeBlockchain AddressBlockchain OutputTransaction ProcessCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/glossary/Blockchain_Address_and_Output)"
520,i.io market data websocket general,"i.io market data websocket general.   General | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1EndpointsGeneralMessagesWebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideWebSocket API V1GeneralOn this pageGeneralHello OUT​Example hello message for trades subscription to all symbols from COINBASE and ITBIT exchange and additional for 2 selected symbols from BITSTAMP and BITFINEX exchange:{ ""type"": ""hello"", ""apikey"": ""73034021-THIS-IS-SAMPLE-KEY"", ""heartbeat"": false, ""subscribe_data_type"": [""trade""], ""subscribe_filter_exchange_id"": [ ""COINBASE"", ""ITBIT"" ], ""subscribe_filter_symbol_id"": [ ""BITSTAMP_SPOT_BTC_USD$"", ""BITFINEX_SPOT_BTC_LTC$"" ]}Another example of a hello message for subscription to quotes related to the BTC or ETH assets:{ ""type"": ""hello"", ""apikey"": ""73034021-THIS-IS-SAMPLE-KEY"", ""heartbeat"": false, ""subscribe_data_type"": [""quote""], ""subscribe_filter_asset_id"": [""BTC"", ""ETH""]}Another example of a hello message for subscription to quotes related to the BTC/USD asset pair:{ ""type"": ""hello"", ""apikey"": ""73034021-THIS-IS-SAMPLE-KEY"", ""heartbeat"": false, ""subscribe_data_type"": [""quote""], ""subscribe_filter_asset_id"": [""BTC/USD""]}Another example of a hello message for subscription of multiple data types from specific exchange:{ ""type"": ""hello"", ""apikey"": ""73034021-THIS-IS-SAMPLE-KEY"", ""heartbeat"": false, ""subscribe_data_type"": [""trade"", ""quote"", ""book20""] ""subscribe_filter_exchange_id"": [ ""BITSTAMP"" ]}Subscribe OUT​The WebSocket API has been enhanced to support dynamic subscription management through subscribe and unsubscribe messages. These allow for more granular control over the data streams without the need to resend the entire subscription scope as previously required with the hello message.To subscribe to additional data types or filters without overriding existing subscriptions, send a subscribe message:Example subscribe message for book data related to ""BTC"" and ""ETH"":{ ""type"": ""subscribe"", ""apikey"": ""a54fdcca-2d82-44c2-ae53-b95ab2363309"", ""heartbeat"": true, ""subscribe_data_type"": [""book""], ""subscribe_filter_asset_id"": [""BTC"", ""ETH""]}This message adds subscriptions to the specified data types and filters, augmenting any existing subscriptions maintained in the session.Unsubscribe OUT​Similarly, to remove specific data types or filters from your current subscription, send an unsubscribe message:Example unsubscribe message to remove book data subscription for ""BTC"":{ ""type"": ""unsubscribe"", ""apikey"": ""a54fdcca-2d82-44c2-ae53-b95ab2363309"", ""heartbeat"": true, ""subscribe_data_type"": [""book""], ""subscribe_filter_asset_id"": [""BTC""]}The unsubscribe message removes the specified subscriptions without affecting other existing subscriptions.Subscribe vs Hello​In the realm of subscription management, three key actions allow you to fine-tune your information feed according to evolving requirements:Subscribe: This action expands your current subscription scope by adding new elements without discarding any existing ones. It's particularly useful for tailoring your feed as your interests or information needs grow.Unsubscribe: Through this option, you can selectively remove specific elements from your current subscription. It's an efficient way to declutter your feed by eliminating content that no longer serves your needs, without affecting the rest of your subscriptions.Hello: Use this command to initiate a fresh start. It clears your existing subscription slate and sets up a new scope from scratch. Opt for this when a complete overhaul of your subscriptions is needed, rather than just an adjustment.After your WebSocket connection is established, you must send us a hello or subscribe message which contains:Stream preferences (Heartbeat and subscription details)API key for authorizationIf your message will be incorrect, we will send you error message and disconnect connection afterwards.Hello message can be repeated, each one will cause subscription scope override without interruption of your WebSocket connection.Message parameters​ParameterTypeDescriptiontypestringMessage type, must be equal to one of the values: hello, subscribe or unsubscribeapikeystringYour API keyheartbeatbooltrue to receive Heartbeat message every second, otherwise falsesubscribe_data_typestring[]List of data types you want to receive (required, possible values listed in table below)subscribe_filter_symbol_idstring[]Filter data to symbols whose identifiers match at least one of the listed prefixes. If symbol is ended with $ character then exact match is used instead of prefix match. (optional, if not provided then stream will not filtered by symbols)subscribe_filter_asset_idstring[]Filter data to messages which are related to the at least one of the listed asset identifiers or to specific asset pair (e.g. BTC/USD) (optional, if not provided then stream will not be filtered by assets)subscribe_filter_period_idstring[]Filter data to specific OHLCV periods (optional, if not provided then OHLCV stream will not be filtered by periods)subscribe_filter_exchange_idstring[]Filter data to symbols from the listed exchange identifiers (optional, if not provided then stream will not be filtered by exchanges)subscribe_update_limit_ms_quoteintMinimum delay in milliseconds between quote updates for the same symbol (optional)subscribe_update_limit_ms_book_snapshotintMinumum delay in milliseconds between book snapshot (book5, book20, book50) updates for the same symbol (optional)subscribe_update_limit_ms_exrateintMinumum delay in milliseconds between exchange rate updates for the same asset pair (optional)Data types​Listed below are all allowed values for subscribe_data_type variables from hello message. Data typeDescriptiontradeExecuted transactions feed (order book matches)quoteQuote updates feed (order book level 1)bookOrder book snapshots and updates feed (order book level 2, full order book snapshot and real-time updates). To use this data type you need to define a filter in the hello or subscribe message.book5Order book snapshots feed (order book level 2, 5 best levels from each side of book). To use this data type you need to define a filter in the hello or subscribe message.book20Order book snapshots feed (order book level 2, 20 best levels from each side of book). To use this data type you need to define a filter in the hello or subscribe message.book50Order book snapshots feed (order book level 2, 50 best levels from each side of book). To use this data type you need to define a filter in the hello or subscribe message.ohlcvOHLCV updates per symbol on periods between 1SEC and 1MINexrateExchange rate updates (VWAP-24H)assetAssets feed.exchangeExchanges feed.symbolSymbols feed.Error handling​Example JSON error message is structured like this:{ ""type"": ""error"", ""message"": ""Invalid API key""}You need to be prepared to receive an error message from us when you send something wrong; all errors are permanent and you should expect that the underlying WebSocket connection will be closed by us after sending an error message.infoGood practice is to store all error messages somewhere for further manual review.Data buffering​Data buffering JSON error message is structured like this:{ ""type"": ""error"", ""message"": ""Reached maximum allowed buffered messages for this connection.""}The stream will send the data to the client as fast as possible; this can result in a high volume of data in cases where the subscription scope is broad. If our server cannot write data to the stream because of the TCP backpressure most likely caused by your client is not reading the data fast enough, or there is not enough network bandwidth available, we will buffer the messages to allow your client to catch up. However, when the buffer is full, a disconnect will be initiated from the server-side, and the buffered messages are dropped, and they will not be resent to the client.One way to identify when your client is falling behind is to compare the CoinAPI time of the messages being received with your current time on the client and track this metric over time. Make sure your clock is synchronized correctly and do not have a drift.The possible causes of the buffering are limited and are related to:Bandwidth bottleneck, eg.Internet connection instabilityNot enough bandwidth to receive a full stream.Network card or link saturation.I am not receiving messages fast enough, eg.Lack of the thread separation between the (a) receiving thread or (b) parsing or (c) processing operations.No CPU affinity on the receiving thread.CPU bottleneck on the receiving thread.Infrequent collection of the data from the TCP stack.Heap allocation per message and Garbage Collector pressure.If your client is unable to receive messages fast enough because of the issues listed above, then these things will happen:Your client TCP stack will be full, and TCP window will be closed to inform us that you can't receive more data and we should not send to youOur TCP stack queue will be full because we couldn't send you more dataWe will internally create a limited queue of the messages to deliver when the channel is available again (this could cause the delay on the real-time data before the gaps will appear)If the queue is full, then we will disconnect you.To minimize the occurrence of disconnects:Make sure that your client is reading the stream fast enough. Typically you should not do any real processing work as you read the stream. Read the stream and hand the activity to another thread/process/data store to do your processing asynchronously.Make sure that your data center has inbound bandwidth sufficient to accomodate large sustained data volumes as well as significantly larger spikes (e.g. 10x normal volume). The current default queue size per connection is 131 072 messages.For more information please google: TCP Flow Control.Was this section helpful?12345PreviousEndpointsNextMessagesHello OUTSubscribe OUTUnsubscribe OUTSubscribe vs HelloMessage parametersData typesError handlingData bufferingCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/websocket/general)"
521,i.io naas api bitcoin Methods deriveaddresses,"i.io naas api bitcoin Methods deriveaddresses.   deriveaddresses | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsderiveaddressesOn this pagederiveaddressesOverview​The 'deriveaddresses' method derives one or more addresses corresponding to an output descriptor.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --body-data '{ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""deriveaddresses"", ""params"": []}' \'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""deriveaddresses\"",\r \""params\"": []\r }\r "", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""deriveaddresses"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""deriveaddresses"", ""params"": []})headers = { 'Content-Type': 'application/json', 'accept': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""deriveaddresses"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{`+""""+` ""jsonrpc"": ""1.0"",`+""""+` ""id"": ""1"",`+""""+` ""method"": ""deriveaddresses"",`+""""+` ""params"": []`+""""+`}`+""""+``)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""deriveaddresses"", ""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder().build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""deriveaddresses\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​descriptor (string, required): The descriptor.range (numeric or array, optional): If a ranged descriptor is used, this specifies the end or the range (in [begin,end] notation) to derive.Response​Was this section helpful?12345PreviousDecodescriptNextdisconnectnodeOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/deriveaddresses)"
522,i.io faq general Do you have a Status Page,"i.io faq general Do you have a Status Page.   Do you have a Status Page? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralDo you have a Status Page?Do you have a Status Page?Yes, we have a Status Page at: http://status.coinapi.ioWas this section helpful?12345PreviousDid you offer discount for University/non-profit/research-only usage?NextDoes CoinAPI provide asset icons/images of the cryptocurrencies?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/Do-you-have-a-Status-Page)"
523,i.io flat files api data types limitbook,"i.io flat files api data types limitbook.   Full Limit Order Book | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyFlat FilesBilling and UsageData & StructureQuotesTradesFull Limit Order BookS3 APIPush APIData & StructureFull Limit Order BookOn this pageFull Limit Order BookOverview​The Full Limit Order Book (LOB) data type provides a comprehensive view of the order book for a specific trading pair on an exchange. It captures all changes to the order book, allowing for a detailed reconstruction of the market state at any given moment.File Organization​Full Limit Order Book data is organized in the S3 bucket as follows:limitbook_full/└── YYYYMMDD/ └── [EXCHANGE_ID]-[SYMBOL_ID].csv.gzExample: limitbook_full/20230701/BINANCE-BTCUSDT.csv.gzFile Format​Files are in CSV format, compressed with gzip. Each row represents a single update to the order book.Data Fields​Column NameTypeDescriptiontime_exchangedatetimeUTC timestamp of the update provided by the exchange or estimated using the exchange API delay.time_coinapidatetimeUTC timestamp when CoinAPI first received the update.is_buybooleanIndicates if the update is related to the bid side of the book. 0 for ask (sell), 1 for bid (buy).update_typestringType of the update. Possible values: ADD, SUB, MATCH, SET, DELETE, SNAPSHOT.entry_pxdecimalPrice identifying the book level.entry_sxdecimalVolume associated with the specific update item.order_idstringID of the order if the format is Level 3 (order-by-order), empty if the format is Level 2.Example Data​time_exchange,time_coinapi,is_buy,update_type,entry_px,entry_sx,order_id2023-07-01T12:00:00.123456Z,2023-07-01T12:00:00.234567Z,1,ADD,30000.00,1.5,ord1232023-07-01T12:00:01.123456Z,2023-07-01T12:00:01.234567Z,0,DELETE,30005.00,0.5,ord1242023-07-01T12:00:02.123456Z,2023-07-01T12:00:02.234567Z,1,SUB,30000.00,0.5,ord123Data Collection Process​We maintain a real-time connection to each supported exchange.Every change to the order book is captured and recorded.The data is processed, normalized, and stored in our system.At the end of each day (UTC), the data is aggregated into daily files and uploaded to the S3 bucket.Update Types Explained​ADD: Adds a new order to the book.SUB: Subtracts volume from an existing order.MATCH: Similar to SUB, but indicates the subtraction was due to a trade execution.SET: Sets a new volume for an existing order.DELETE: Removes an order from the book.SNAPSHOT: Provides a full snapshot of the order book. All previous data should be discarded before processing a SNAPSHOT.Corner Cases and Special Considerations​Order ID Usage: Some exchanges provide order IDs (Level 3 data), while others don't (Level 2 data). When order IDs are not available, the order_id field will be empty.Snapshots: Snapshots are typically provided at the start of each day or after a disconnection. Always process SNAPSHOT updates by clearing the existing book first.High Frequency Updates: During periods of high volatility, you may observe a very high frequency of updates.File Splitting​For highly liquid trading pairs, a single day's data may be split across multiple files:limitbook_full/20230701/BINANCE-BTCUSDT_001.csv.gzlimitbook_full/20230701/BINANCE-BTCUSDT_002.csv.gzUsage Tips​To reconstruct the full order book, process updates sequentially, maintaining the state of the book in memory.Use the time_exchange field for accurate sequencing of updates.Pay attention to the update_type field to correctly apply changes to your local order book representation.For any questions or issues with the Full Limit Order Book data, please contact our support team.Was this section helpful?12345PreviousTradesNextS3 APIOverviewFile OrganizationFile FormatData FieldsExample DataData Collection ProcessUpdate Types ExplainedCorner Cases and Special ConsiderationsFile SplittingUsage TipsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/flat-files-api/data-types/limitbook)"
524,i.io how to guides real time data visualization with javascript,i.io how to guides real time data visualization with javascript.   Page Not Found | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyPage Not FoundWe could not find what you were looking for.Please contact the owner of the site that linked you to the original URL and let them know their link is broken.Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/how-to-guides/real-time-data-visualization-with-javascript)
525,i.io general faq general How to handle order book flat files can go back in time,"i.io general faq general How to handle order book flat files can go back in time.   How to handle order book flat files can go back in time? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralHow to handle order book flat files can go back in time?How to handle order book flat files can go back in time?It's expected behavior by design, we sometimes need to go back and failover to stream from another geographical site if we detect the issues with the feed. This mechanism will still exist in the future, however, we have assigned work to remove this backward jump in this or next quarter; it's not our priority at the moment as the impact is too low and it does not affect the quality of the data.You should always process all items in the file in the order in which they are recorded in the file and never change this order.When processing items according to the file order you will have the book which you can use for further processing. The current timestamp of the book is determined by the last processed line in the flat file (timestamps on this last line). In the event when the time going backward you should still normally process the file, but you can restrict supplying the book outside the flat-file processing algorithm until flat-file book time will be greater again than maximum seen timestamp; using this algorithm you will process the backward snapshot and corresponding updates to it transparently.Take a look at the example source code that describes the algorithm above: https://github.com/coinapi/coinapi-sdk/blob/master/csharp-flatfiles-example/Program.csWas this section helpful?12345PreviousHow to get more than 100 items in response?NextHow to handle payment errors during sign upCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/How-to-handle-order-book-flat-files-can-go-back-in-time)"
526,i.io general faq api How can I see a list of symbols related to a specific exchange market or asset,"i.io general faq api How can I see a list of symbols related to a specific exchange market or asset.   How can I see a list of symbols related to a specific exchange, market, or asset? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer EMS Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What is the rate limit for EMS Trading API?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQAPIHow can I see a list of symbols related to a specific exchange, market, or asset?How can I see a list of symbols related to a specific exchange, market, or asset?You can filter through different exchanges and symbols on our /v1/symbols endpoint.To get a list of all symbols related to a particular exchange or asset, you can use the filter_exchange_id and filter_asset_id parameter. Here are some examples:To see a list of symbols for Coinbase exchange:https://rest.coinapi.io/v1/symbols?filter_exchange_id=COINBASETo see a list of symbols for Chainlink (LINK):https://rest.coinapi.io/v1/symbols?filter_asset_id=LINKYou can also specify particular exchanges, markets, and assets with the filter_symbol_id parameter.To see a list of symbols for Binance exchange (as an alternative to using filter_exchange_id)https://rest.coinapi.io/v1/symbols?filter_symbol_id=BINANCE_To see a list of symbols for Binance's Spot market:https://rest.coinapi.io/v1/symbols?filter_symbol_id=BINANCE_SPOT_To see a list of symbols for Binance's Spot market with BTC as the asset base:https://rest.coinapi.io/v1/symbols?filter_symbol_id=BINANCE_SPOT_BTC_To see a list of symbols with ETH as the base and BTC as the quote:https://rest.coinapi.io/v1/symbols?filter_symbol_id=_ETH_BTCTo see a list of symbols for Spot markets with XRP as the base and USD as the quote:https://rest.coinapi.io/v1/symbols?filter_symbol_id=_SPOT_XRP_USDYou may refer to this section of our documentation to learn more about the pattern we use for different symbol types: https://docs.coinapi.io/market-data/rest-api/metadata#symbol-identifier To learn more about symbols, please see here: https://docs.coinapi.io/market-data/rest-api/metadata#list-all-symbols-getWas this section helpful?12345PreviousHow can I get the USD price for multiple assets at the same time?NextHow can I unsubscribe from Websocket?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/api/How-can-I-see-a-list-of-symbols-related-to-a-specific-exchange-market-or-asset)"
527,i.io naas api ethereum Methods getTxPoolStatus,"i.io naas api ethereum Methods getTxPoolStatus.   getTxPoolStatus | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodsgetTxPoolStatusOn this pagegetTxPoolStatusOverview​The 'getTxPoolStatus' method provides information about the current status of the Ethereum transaction pool.Request​{ ""method"": ""getTxPoolStatus"", ""params"": [], ""id"": 1, ""jsonrpc"": ""2.0""}Request Parameters​method: The name of the method being called, in this case, ""getTxPoolStatus"".params: An array of parameters to pass to the method. For getTxPoolStatus, this is typically an empty array.id: A unique identifier for the request.jsonrpc: The version of the JSON-RPC protocol being used, typically ""2.0"" for Ethereum.Response​{ ""id"": 1, ""jsonrpc"": ""2.0"", ""result"": { ""pending"": ""0x1"", ""queued"": ""0x2"" }}Was this section helpful?12345PreviousgetBlockByRootNextnet_listeningOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/getTxPoolStatus)"
528,i.io market data rest api metadata,i.io market data rest api metadata.   Metadata | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataList all asset iconsList all assets by asset IDList all assetsList all exchanges by exchange_idList all exchangesList all symbolsList of icons for the exchangesList of symbols for the exchangeList symbol mapping for the exchangeMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIMetadataMetadata📄️ List all asset iconsGets the list of icons (of the given size) for all the assets.📄️ List all assets by asset IDList all assets by asset ID📄️ List all assetsRetrieves all assets.📄️ List all exchanges by exchange_idList all exchanges by exchange_id📄️ List all exchangesGet a detailed list of exchanges provided by the system.📄️ List all symbolsRetrieves all symbols with optional filtering.📄️ List of icons for the exchangesList of icons for the exchanges📄️ List of symbols for the exchangeList of symbols for the exchange📄️ List symbol mapping for the exchangeList symbol mapping for the exchangeWas this section helpful?12345PreviousTimeseries Index ValueNextList all asset iconsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/metadata)
529,i.io market data fix messages,"i.io market data fix messages.   Messages | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1WebSocket API DSJSON RPCFIX APIMessagesHow-to guidesPerformance Testing GuideFIX APIMessagesOn this pageMessagesAll FIX messages are equipped with Standard Header and Trailer, below we will describe what is required in them in accordance with FIX 4.4, the standard that we use.Standard Header​TagNameDescription8BeginStringFIX.4.49BodyLengthMessage length, in bytes, forward to the CheckSum <10> field35MsgTypeDefines message type49SenderCompIDAssigned value used to identify message sender56TargetCompIDAssigned value used to identify message receiver34MsgSeqNumInteger message sequence number. Reset on Logon, Logout and Disconnect.52SendingTimeTime of message transmission always expressed in UTC (Universal Time Coordinated, also known as ""GMT"")Standard Trailer​TagNameDescription10CheckSumThree byte, simple checksum. Always the last field in a message, i.e. serves, with the trailing, as the end-of-message delimiter. Always defined as three charactersLogon 35=A​8=FIX.4.4|9=97|35=A|34=1|49=COINAPI|52=20170503-22:00:56.743|56=73034021-THIS-IS-SAMPLE-KEY|98=0|108=1|10=245|First message sent by the client to CoinAPI FIX Gateway after connection to initiate a FIX session. After successful authorization, server will respond with same message type and start delivering market data messages to you.TagNameDescription49SenderCompIDYour API key56TargetCompIDCOINAPI_V2108HeartBtInt1 (seconds)98EncryptMethod0Logout 35x5​Message sent by any side to close established session. If received, should be sent back unchanged to confirm session termination.Security List Request 35=x​Security List Request message is used to request full symbol list or narrowed to specific criteria.Message to request all symbols:TagNameDescription320SecurityReqIDUnique ID of your request, used to link Security List (y) message to the request.559SecurityListRequestType4 = Request all symbols.Message to request all symbols where our symbol identifier starts with specific string eg. all securities from BITSTAMP exchange to USD.TagNameDescription320SecurityReqIDUnique ID of your request, used to link Security List (y) message to the request.559SecurityListRequestType0 = Filter symbols by Symbol (55) or SecurityExchange (207) fields.55SymbolExact match or regex for the symbol identifier filtering, eg. ^BITSTAMP_(.*)_USD$ or BITSTAMP_SPOT_BTC_USD, have in mind that regex is enabled only if value string starts with ^ or/and ends with $.Message to request all symbols from specific exchange eg. GEMINI.TagNameDescription320SecurityReqIDUnique ID of your request, used to link Security List (y) message to the request.559SecurityListRequestType0 = Filter symbols by Symbol (55) or SecurityExchange (207) fields.207SecurityExchangeExchange identifier used to filter the symbolsSecurity List 35=y​Response to the Security List Request (x) message.TagNameDescription320SecurityReqIDSecurityReqID (320) from Security List Request (x) message.322SecurityResponseIDUnique ID of the response message.560SecurityRequestResultResult of the Security List Request. Valid values: 0 = Valid request.1 = Response is empty. We couldn't find any symbols matching selection criteria.4 = Data temportantly unavailable. Reserved for unlikely event of issue beyond the client control.393TotNoRelatedSymTotal number of symbols in the response.898LastFragmentIndicates if this is a last message146NoRelatedSymSpecifies the number of repeating symbols (instruments) specified.=> 55SymbolOur Symbol identifier (full list available here)=> 207SecurityExchangeOur exchange identifier, eg. BITSTAMP. (full list available here)Market Data Request 35=V​Market Data Request (V) message is used to request market data.TagNameDescription262MDReqIdMust be unique, or the ID of previous Market Data Request (V) to disable if SubscriptionRequestType (263) = Disable previous Snapshot + Updates Request.263SubscriptionRequestTypeSubcriptionRequestType indicates what type of response is expected. A snapshot request only asks for current information. A subscribe request asks for updates as the status changes. Unsubscribe will cancel any future update messages. Valid values: 0 = Snapshot. We will deliver only one order book snapshot per symbol requested.1 = Snapshot + Updates (Subscribe). We will deliver the initial snapshot per order book requested and then updates for the order book and trades.2 = Disable previous Snapshot + Update Request (Unsubscribe).264MarketDepthDepth of market for Book Snapshot, value ignored for trades. Valid values: 0 = Full book1 = QuotesOther value indicating snapshot limited to provided number of best levels. Use the 0 for the trades as value is required.265MDUpdateTypeRequired if SubscriptionRequestType (263) = Snapshot + Updates (1) and apply only for the orderbook data.Valid values: 0 = Full refresh (Instead of the updates for the order book, each time the snapshot will be delivered. MDMarketDepth need to be in range of <1;20>)1 = Incremental Refresh (MDMarketDepth must be 0 as incremential refresh is possible only for the full order book, for other use-cases you should set MDUpdateType to 0 (Full Refresh))267NoMDEntryTypesNumber of MDEntryType (269) fields requested.=> 269MDEntryTypeThis is a list of all the types of Market Data Type requested. Valid values: 0 = Orderbook bids1 = Orderbook asks2 = Trades Only possible combinations here are 012 (Orderbook and Trades), 01 (Orderbook) and 2 (Trades), the client is not allowed to ask only for the one-side of the book.146NoRelatedSymNumber of symbols (instruments) requested.=> 55SymbolExact match or regex for the symbol identifier filtering, eg. ^BITSTAMP_(.*)_USD$ or BITSTAMP_SPOT_BTC_USD, have in mind that regex is enabled only if value string starts with ^ or/and ends with $.Market Data Request Reject 35=Y​Market Data Request Reject (Y) message is used to reject the request for the market data.TagNameDescription262MDReqIdMDReqId (262) from Market Data Request (V) message.281MDReqRejReasonReason for the rejection of a Market Data request. Valid values: 0 = Unknown symbol.4 = Unsupported SubscriptionRequestType (263)5 = Unsupported MarketDepth (264)8 = Unsupported MDEntryType (269)58TextError messageMarket Data Incremental 35=X​Market Data - Incremental Refresh (X) message, representing new executed transaction or orderbook update.TagNameDescription262MDReqIdMDReqId (262) from Market Data Request (V) message. Used to link request to the Market Data, eg. with your internal identifier.268NoMdEntriesNumber of trades in the message=> 279MDUpdateActionType of Market Data update action. Valid values: 0 = New. Used for the trades.1 = Change. Used for all changes of the order book.=> 269MDEntryTypeType of Market Data entry. Valid values: 0 = Bids1 = Ask/Offer2 = Trades=> 278MDEntryIDOur unique trade identifier in the form of UUIDv4=> 55SymbolOur Symbol identifier (full list available here)=> 270MDEntryPxEntry price=> 271MDEntrySizeEntry size in base amount=> 272MDEntryDateDate of the entry reported by the exchange=> 273MDEntryTimeTime of the entry reported by the exchange with milliseconds=> 282MDEntryOriginatorUsed only when MDEntryType (269) is Trade. Aggressor side of the transaction. (BUY/SELL/BUY_ESTIMATED/SELL_ESTIMATED/UNKNOWN)Possible MDEntryOriginator values​If exchange has not reported who the aggressor side of the transaction was, we will classNameify who it most probably was based on current market view.taker_sideDescriptionBUYExchange has reported that transaction aggressor was buyingSELLExchange has reported that transaction aggressor was sellingBUY_ESTIMATEDExchange has not reported transaction aggressor, we estimated that more likely it was buyingSELL_ESTIMATEDExchange has not reported transaction aggressor, we estimated that more likely it was sellingUNKNOWNExchange has not reported transaction aggressor and we have not estimated who it wastipTo classNameify who the aggressor of the transaction was, we using a proprietary algorithm that extends the method described in the paper ""Inferring trade direction from intraday data (1991) by Lee and Ready""Market Data Snapshot 35=W​Market Data - Snapshot/Full Refresh (W) message, representing orderbook snapshot.8=FIX.4.4|9=2814|35=W|34=7|49=COINAPI|52=20170503-22:35:18.590|56=73034021-THIS-IS-SAMPLE-KEY|55=COINBASE_SPOT_BTC_EUR|268=40|269=1|270=1397.84000000|271=0.25620000|272=20170503|273=22:35:18.408|269=1|270=1397.85000000|271=0.24000000|272=20170503|273=22:35:18.408|269=1|270=1397.86000000|271=0.50000000|272=20170503|273=22:35:18.408|269=1|270=1399.96000000|271=0.08000000|272=20170503|273=22:35:18.408|269=1|270=1399.98000000|271=0.11000000|272=20170503|273=22:35:18.408|269=1|270=1399.99000000|271=0.93340628|272=20170503|273=22:35:18.408|269=1|270=1400.0|271=4.37155883|272=20170503|273=22:35:18.408|269=1|270=1401.22000000|271=0.11000000|272=20170503|273=22:35:18.408|269=1|270=1401.23|271=0.01|272=20170503|273=22:35:18.408|269=1|270=1402.12|271=0.10000000|272=20170503|273=22:35:18.408|269=1|270=1402.60000000|271=5.30086000|272=20170503|273=22:35:18.408|269=1|270=1402.68000000|271=0.11000000|272=20170503|273=22:35:18.408|269=1|270=1402.69|271=0.02000000|272=20170503|273=22:35:18.408|269=1|270=1404.0|271=1.0|272=20170503|273=22:35:18.408|269=1|270=1404.01000000|271=0.47000000|272=20170503|273=22:35:18.408|269=1|270=1405.0|271=0.24577401|272=20170503|273=22:35:18.408|269=1|270=1405.07|271=0.01264284|272=20170503|273=22:35:18.408|269=1|270=1405.11|271=0.01943044|272=20170503|273=22:35:18.408|269=1|270=1405.61000000|271=1.68316924|272=20170503|273=22:35:18.408|269=1|270=1405.67000000|271=4.13101588|272=20170503|273=22:35:18.408|269=0|270=1396.00000000|271=0.73076211|272=20170503|273=22:35:18.408|269=0|270=1395.82000000|271=0.31000000|272=20170503|273=22:35:18.408|269=0|270=1395.81000000|271=4.07759372|272=20170503|273=22:35:18.408|269=0|270=1395.47000000|271=0.40000000|272=20170503|273=22:35:18.408|269=0|270=1395.01000000|271=0.56000000|272=20170503|273=22:35:18.408|269=0|270=1395.00000000|271=0.05000000|272=20170503|273=22:35:18.408|269=0|270=1394.34000000|271=0.50000000|272=20170503|273=22:35:18.408|269=0|270=1393.79000000|271=0.02000000|272=20170503|273=22:35:18.408|269=0|270=1393.78000000|271=0.10000000|272=20170503|273=22:35:18.408|269=0|270=1393.50000000|271=0.10000000|272=20170503|273=22:35:18.408|269=0|270=1393.23000000|271=0.13000000|272=20170503|273=22:35:18.408|269=0|270=1393.11000000|271=1.00000000|272=20170503|273=22:35:18.408|269=0|270=1393.02000000|271=0.33524135|272=20170503|273=22:35:18.408|269=0|270=1393.00000000|271=0.50000000|272=20170503|273=22:35:18.408|269=0|270=1392.52000000|271=0.02000000|272=20170503|273=22:35:18.408|269=0|270=1392.51000000|271=0.11000000|272=20170503|273=22:35:18.408|269=0|270=1392.50000000|271=0.10000000|272=20170503|273=22:35:18.408|269=0|270=1392.36000000|271=2.62000000|272=20170503|273=22:35:18.408|269=0|270=1392.31000000|271=0.02000000|272=20170503|273=22:35:18.408|269=0|270=1392.01000000|271=0.41000000|272=20170503|273=22:35:18.408|10=075|public void OnMessage(QuickFix.FIX44.MarketDataSnapshotFullRefresh msg, SessionID s){ for (int idx = 0; idx < msg.NoMDEntries.getValue(); idx++) {  var level = new QuickFix.FIX44.MarketDataSnapshotFullRefresh.NoMDEntriesGroup();  msg.GetGroup(idx + 1, level);  Console.WriteLine($""Orderbook {level.MDEntryType} @ {msg.Symbol}:"");  Console.WriteLine($"" Date: {level.MDEntryDate}"");  Console.WriteLine($"" Time: {level.MDEntryTime}"");  Console.WriteLine($"" Px: {level.MDEntryPx}"");  Console.WriteLine($"" Size: {level.MDEntrySize}""); }}TagNameDescription55SymbolOur Symbol identifier (full list available here)262MDReqIdMDReqId (262) from Market Data Request (V) message. Used to link request to the Market Data, eg. with your internal identifier.268NoMdEntriesNumber of levels in the orderbook.=> 269MDEntryTypeType Market Data entry. Valid values: 0 = Bid1 = Ask/Offer=> 270MDEntryPxPrice level of the orderbook level=> 271MDEntrySizeVolume resting on this orderbook level=> 272MDEntryDateDate of the orderbook reported by the exchange=> 273MDEntryTimeTime of the orderbook reported by the exchange with millisecondsHeartbeat 35=0​8=FIX.4.4|9=87|35=0|34=13|49=COINAPI|52=20170503-22:21:27.545|56=73034021-THIS-IS-SAMPLE-KEY|10=048|Message sent by any side after defined amount of seconds in communication silence.Was this section helpful?12345PreviousFIX APINextHow-to guidesStandard HeaderStandard TrailerLogon 35=ALogout 35x5Security List Request 35=xSecurity List 35=yMarket Data Request 35=VMarket Data Request Reject 35=YMarket Data Incremental 35=XPossible MDEntryOriginator valuesMarket Data Snapshot 35=WHeartbeat 35=0Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/fix/messages)"
530,i.io general glossary,"i.io general glossary.   Glossary of Terms | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGlossaryBlockchain Address and OutputBlockchain NodeChain (Blockchain)EndpointJSONNetworkSatoshiTransactionWalletBlockchain BlockChangelogGlossaryGlossary of TermsWelcome to the CoinAPI Glossary. This section is dedicated to providing clear and concise definitions for key terms and concepts used throughout our documentation. Understanding these terms will help you navigate our API features and make the most of our services. Below you will find an alphabetically organized list of terms commonly used in the cryptocurrency and API space, along with their definitions.Was this section helpful?12345PreviousWhat should I do if my API key was compromised?NextBlockchain Address and OutputCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/glossary)"
531,i.io naas api bitcoin Methods generatetoaddress,"i.io naas api bitcoin Methods generatetoaddress.   generatetoaddress | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgeneratetoaddressOn this pagegeneratetoaddressOverview​The 'generatetoaddress' method allows you to generate a specified number of blocks to a particular address. This can be useful for mining applications or for generating new blocks in a test environment.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""generatetoaddress"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""generatetoaddress\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""generatetoaddress"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""2.0"", ""method"": ""generatetoaddress"", ""params"": [], ""id"": 1})headers = { 'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type': 'application/json', 'accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""generatetoaddress"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""generatetoaddress"",""params"": [],""id"":1}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"")req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({""jsonrpc"": ""2.0"",""method"": ""generatetoaddress"",""params"": [],""id"": 1})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder().build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""generatetoaddress\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​number_of_blocks (integer): The number of blocks to generate.address (string): The address to which the newly generated blocks should be sent.Response​{ ""result"": null, ""error"": { ""code"": -1, ""message"": ""generatetoaddress nblocks \""address\"" ( maxtries ) Mine to a specified address and return the block hashes. Arguments: 1. nblocks  (numeric, required) How many blocks are generated. 2. address  (string, required) The address to send the newly generated bitcoin to. 3. maxtries (numeric, optional, default=1000000) How many iterations to try. Result: [   (json array) hashes of blocks generated \""hex\"", (string) blockhash ... ] Examples: Generate 11 blocks to myaddress > bitcoin-cli generatetoaddress 11 \""myaddress\"" If you are using the Bitcoin Core wallet, you can get a new address to send the newly generated bitcoin to with: > bitcoin-cli getnewaddress "" }, ""id"": 1}Was this section helpful?12345PreviousgenerateBlockNextgeneratetodescriptorOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/generatetoaddress)"
532,i.io faq general I didnt receive an email,"i.io faq general I didnt receive an email.   I didn't receive an email | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralI didn't receive an emailI didn't receive an emailIn case you didn't receive an email from us, kindly process this checklist before submitting a support ticket:Make sure you refreshed the email list in the client and waited at least 2 minutes in case of latency on the email provider sideCheck if the email is in the SPAM folderIf your email is a Google Groups alias, check if the Group was filtering the messages ""for moderation."" If possible, try the same operation again, e.g. requesting a free key or resending the login verification code.If possible, try using another email to check if the issue is limited only to your email service.After processing that checklist, let us know about the results here (https://support.coinapi.io/hc/en-us/requests/new), and we will act accordingly.Was this section helpful?12345PreviousHow to handle payment errors during sign upNextI forgot my paid subscription API keyCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/I-didnt-receive-an-email)"
533,i.io naas api ethereum Methods eth hashrate,"i.io naas api ethereum Methods eth hashrate.   eth_hashrate | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_hashrateOn this pageeth_hashrateOverview​The ""eth_hashrate"" method returns the number of hashes per second that the node is mining with. Only applicable when the node is mining.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'content-type: application/json' \  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data '{""id"": 1,""jsonrpc"": ""2.0"",""method"": ""eth_hashrate""}'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_hashrate\""}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [ CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"", CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => """", CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 30, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => ""POST"", CURLOPT_POSTFIELDS => json_encode([ 'id' => 1, 'jsonrpc' => '2.0', 'method' => 'eth_hashrate' ]), CURLOPT_HTTPHEADER => [ ""accept: application/json"", ""content-type: application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" ],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) { echo ""cURL Error #:"" . $err;} else { echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_hashrate""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text) const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({id: 1, jsonrpc: '2.0', method: 'eth_hashrate'})};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_hashrate\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))} require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_hashrate\""}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_hashrate\""}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​Response​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""error"": {  ""code"": -32601,  ""message"": """" }}Was this section helpful?12345Previouseth_getWorkNexteth_maxPriorityFeePerGasOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_hashrate)"
534,i.io faq api What timezone is used for date time values,"i.io faq api What timezone is used for date time values.   What timezone is used for date/time values? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQAPIWhat timezone is used for date/time values?What timezone is used for date/time values?We are using the UTC timezone for all date and time data.More information about the time handling is available in our documentation: https://docs.coinapi.io/market-data#timeWas this section helpful?12345PreviousWhat languages do you support?NextWhere can I find examples and SDK source codes for API?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/api/What-timezone-is-used-for-date-time-values)"
535,i.io market data rest api trades,"i.io market data rest api trades.   Trades | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcvOrder BookOrder Book L3QuotesTrades Historical data Latest data by symbol_id Latest dataWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APITradesTradesController for retrieving trade data related to executed transactions.📄️ Historical dataGet history transactions from specific symbol, returned in time ascending order.📄️ Latest data by symbol_idGet latest trades executed up to 1 minute ago. Latest data is always returned in time descending order.📄️ Latest dataGet latest trades executed up to 1 minute ago. Latest data is always returned in time descending order.Was this section helpful?12345Previous Latest quote updates for a specific symbolNext Historical dataCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/trades)"
536,i.io cdn cgi l email protection#2d5e585d5d425f596d4e4244434c5d44034442,"i.io cdn cgi l email protection#2d5e585d5d425f596d4e4244434c5d44034442.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 8aad2702bbf56e95 •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#2d5e585d5d425f596d4e4244434c5d44034442)"
537,i.io faq general Are subscription payments executed automatically,"i.io faq general Are subscription payments executed automatically.   Are subscription payments executed automatically? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralAre subscription payments executed automatically?Are subscription payments executed automatically?Yes, subscription payments are executed automatically on your primary payment method when the subscription remains active.Was this section helpful?12345PreviousAPI Usage LimitsNextCan I get exchange wallet deposit and withdrawal status?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/Are-subscription-payments-executed-automatically)"
538,i.io market data rest api indexes historical index value w composition,"i.io market data rest api indexes historical index value w composition.   Historical Index Value w/Composition | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesHistorical Index Value w/CompositionList indexesTimeseries Index ValueMetadataMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIIndexesHistorical Index Value w/CompositionHistorical Index Value w/CompositionGET /v1/indexes/:index_id/historyHistorical Index Value w/CompositionPath Parametersindex_id string requiredQuery Parameterstime_start date-timetime_end date-timelimit int32Default value: 100Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)SchemaArray [timestamp date-timevalue doublecomposition object[] nullableArray [component_id string nullablecomponent_value double]][ { ""timestamp"": ""2024-07-16T12:55:05.250Z"", ""value"": 0, ""composition"": [  {  ""component_id"": ""string"",  ""component_value"": 0  } ] }]SchemaExample (from schema)SchemaArray [timestamp date-timevalue doublecomposition object[] nullableArray [component_id string nullablecomponent_value double]][ { ""timestamp"": ""2024-07-16T12:55:05.250Z"", ""value"": 0, ""composition"": [  {  ""component_id"": ""string"",  ""component_value"": 0  } ] }]SchemaExample (from schema)SchemaArray [timestamp date-timevalue doublecomposition object[] nullableArray [component_id string nullablecomponent_value double]][ { ""timestamp"": ""2024-07-16T12:55:05.250Z"", ""value"": 0, ""composition"": [  {  ""component_id"": ""string"",  ""component_value"": 0  } ] }]SchemaExample (from schema)SchemaArray [timestamp date-timevalue doublecomposition object[] nullableArray [component_id string nullablecomponent_value double]][ { ""timestamp"": ""2024-07-16T12:55:05.250Z"", ""value"": 0, ""composition"": [  {  ""component_id"": ""string"",  ""component_value"": 0  } ] }]Loading...Was this section helpful?12345PreviousIndexesNextList indexesCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/indexes/historical-index-value-w-composition)"
539,i.io market data rest api metrics listing of all supported metrics for symbol,"i.io market data rest api metrics listing of all supported metrics for symbol.   Listing of all supported metrics for symbol | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsCurrent metrics for given assetCurrent metrics for given exchangeCurrent metrics for given symbolHistorical metrics for assetHistorical metrics for symbolHistorical metrics for the exchangeListing of all supported metrics by CoinAPIListing of all supported exchange metricsListing of all supported metrics for assetListing of all supported metrics for symbolOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIMetricsListing of all supported metrics for symbolListing of all supported metrics for symbolGET /v1/metrics/symbol/listingGet data metrics for symbol.Query Parametersmetric_id stringMetric identifier (from the Metrics -> Listing)exchange_id stringExchange identifier (from the Metadata -> Exchanges)symbol_id stringSymbol identifier (from the Metadata -> Symbols)Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [metric_id string nullableGets or sets the metric ID.symbol_id string nullableGets or sets the symbol ID.symbol_id_external string nullableGets or sets the symbol ID from the exchange.exchange_id string nullableGets or sets the exchange ID.asset_id string nullableGets or sets the asset ID.asset_id_external string nullableGets or sets the asset ID from the exchange.chain_id string nullableGets or sets the chain id.network_id string nullableGets or sets the network id.][ { ""metric_id"": ""string"", ""symbol_id"": ""string"", ""symbol_id_external"": ""string"", ""exchange_id"": ""string"", ""asset_id"": ""string"", ""asset_id_external"": ""string"", ""chain_id"": ""string"", ""network_id"": ""string"" }][ { ""metric_id"": ""LIQUIDATION_TIME_IN_FORCE"", ""symbol_id"": ""BINANCEFTS_PERP_ETC_USDT"", ""exchange_id"": ""BINANCEFTS"" }, { ""metric_id"": ""LIQUIDATION_ORDER_TYPE"", ""symbol_id"": ""BINANCEFTS_PERP_EOS_USDT"", ""exchange_id"": ""BINANCEFTS"" }, { ""metric_id"": ""LIQUIDATION_ORDER_STATUS"", ""symbol_id"": ""BINANCEFTS_PERP_EOS_USDT"", ""exchange_id"": ""BINANCEFTS"" }]SchemaExample (from schema)Example responseSchemaArray [metric_id string nullableGets or sets the metric ID.symbol_id string nullableGets or sets the symbol ID.symbol_id_external string nullableGets or sets the symbol ID from the exchange.exchange_id string nullableGets or sets the exchange ID.asset_id string nullableGets or sets the asset ID.asset_id_external string nullableGets or sets the asset ID from the exchange.chain_id string nullableGets or sets the chain id.network_id string nullableGets or sets the network id.][ { ""metric_id"": ""string"", ""symbol_id"": ""string"", ""symbol_id_external"": ""string"", ""exchange_id"": ""string"", ""asset_id"": ""string"", ""asset_id_external"": ""string"", ""chain_id"": ""string"", ""network_id"": ""string"" }][ { ""metric_id"": ""LIQUIDATION_TIME_IN_FORCE"", ""symbol_id"": ""BINANCEFTS_PERP_ETC_USDT"", ""exchange_id"": ""BINANCEFTS"" }, { ""metric_id"": ""LIQUIDATION_ORDER_TYPE"", ""symbol_id"": ""BINANCEFTS_PERP_EOS_USDT"", ""exchange_id"": ""BINANCEFTS"" }, { ""metric_id"": ""LIQUIDATION_ORDER_STATUS"", ""symbol_id"": ""BINANCEFTS_PERP_EOS_USDT"", ""exchange_id"": ""BINANCEFTS"" }]SchemaExample (from schema)Example responseSchemaArray [metric_id string nullableGets or sets the metric ID.symbol_id string nullableGets or sets the symbol ID.symbol_id_external string nullableGets or sets the symbol ID from the exchange.exchange_id string nullableGets or sets the exchange ID.asset_id string nullableGets or sets the asset ID.asset_id_external string nullableGets or sets the asset ID from the exchange.chain_id string nullableGets or sets the chain id.network_id string nullableGets or sets the network id.][ { ""metric_id"": ""string"", ""symbol_id"": ""string"", ""symbol_id_external"": ""string"", ""exchange_id"": ""string"", ""asset_id"": ""string"", ""asset_id_external"": ""string"", ""chain_id"": ""string"", ""network_id"": ""string"" }][ { ""metric_id"": ""LIQUIDATION_TIME_IN_FORCE"", ""symbol_id"": ""BINANCEFTS_PERP_ETC_USDT"", ""exchange_id"": ""BINANCEFTS"" }, { ""metric_id"": ""LIQUIDATION_ORDER_TYPE"", ""symbol_id"": ""BINANCEFTS_PERP_EOS_USDT"", ""exchange_id"": ""BINANCEFTS"" }, { ""metric_id"": ""LIQUIDATION_ORDER_STATUS"", ""symbol_id"": ""BINANCEFTS_PERP_EOS_USDT"", ""exchange_id"": ""BINANCEFTS"" }]SchemaExample (from schema)Example responseSchemaArray [metric_id string nullableGets or sets the metric ID.symbol_id string nullableGets or sets the symbol ID.symbol_id_external string nullableGets or sets the symbol ID from the exchange.exchange_id string nullableGets or sets the exchange ID.asset_id string nullableGets or sets the asset ID.asset_id_external string nullableGets or sets the asset ID from the exchange.chain_id string nullableGets or sets the chain id.network_id string nullableGets or sets the network id.][ { ""metric_id"": ""string"", ""symbol_id"": ""string"", ""symbol_id_external"": ""string"", ""exchange_id"": ""string"", ""asset_id"": ""string"", ""asset_id_external"": ""string"", ""chain_id"": ""string"", ""network_id"": ""string"" }][ { ""metric_id"": ""LIQUIDATION_TIME_IN_FORCE"", ""symbol_id"": ""BINANCEFTS_PERP_ETC_USDT"", ""exchange_id"": ""BINANCEFTS"" }, { ""metric_id"": ""LIQUIDATION_ORDER_TYPE"", ""symbol_id"": ""BINANCEFTS_PERP_EOS_USDT"", ""exchange_id"": ""BINANCEFTS"" }, { ""metric_id"": ""LIQUIDATION_ORDER_STATUS"", ""symbol_id"": ""BINANCEFTS_PERP_EOS_USDT"", ""exchange_id"": ""BINANCEFTS"" }]Loading...Was this section helpful?12345PreviousListing of all supported metrics for assetNextOhlcvCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/metrics/listing-of-all-supported-metrics-for-symbol)"
540,i.io cdn cgi l email protection#89fafcf9f9e6fbfdc9eae6e0e7e8f9e0a7e0e6,"i.io cdn cgi l email protection#89fafcf9f9e6fbfdc9eae6e0e7e8f9e0a7e0e6.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 8aad2828fbd26e98 •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#89fafcf9f9e6fbfdc9eae6e0e7e8f9e0a7e0e6)"
541,i.io naas api ethereum Methods eth sendRawTransaction,"i.io naas api ethereum Methods eth sendRawTransaction.   eth_sendRawTransaction | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_sendRawTransactionOn this pageeth_sendRawTransactionOverview​The 'eth_sendRawTransaction' method submits a pre-signed transaction for broadcast to the Ethereum network.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \ --url https://ethereum-mainnet-geth-archive.node.coinapi.io \ --header 'accept: application/json' \ --header 'content-type: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --data '{ ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_sendRawTransaction""}'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_sendRawTransaction\""}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"",CURLOPT_RETURNTRANSFER => true,CURLOPT_ENCODING => """",CURLOPT_MAXREDIRS => 10,CURLOPT_TIMEOUT => 30,CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,CURLOPT_CUSTOMREQUEST => ""POST"",CURLOPT_POSTFIELDS => json_encode(['id' => 1,'jsonrpc' => '2.0','method' => 'eth_sendRawTransaction']),CURLOPT_HTTPHEADER => [""accept: application/json"",""content-type: application/json"",""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY""],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) {echo ""cURL Error #:"" . $err;} else {echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_sendRawTransaction""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text)const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({id: 1, jsonrpc: '2.0', method: 'eth_sendRawTransaction'})};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_sendRawTransaction\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_sendRawTransaction\""}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_sendRawTransaction\""}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​NoneResponse​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": ""0x3bbc64139084e1e915dca87e990d708f""}A transaction object, or null when no transaction was found. The transaction object will consist of the following keys and their values:transaction hash: 32 bytes. The transaction hash, or the zero hash if the transaction is not yet available. Useeth_getTransactionReceipt: 32 bytes. to get the contract address, after the transaction was mined, when you created a contract.Was this section helpful?12345Previouseth_protocolVersionNexteth_signOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_sendRawTransaction)"
542,i.io ems api managed cloud rest api account get account,"i.io ems api managed cloud rest api account get account.   Get accounts | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIAccountDelete accountDelete all accountsGet accountsAdd or update accountCertificateEndpointsExchangeLocationREST APIWebSocket APIFIX APISelf Hosted GuideManaged Cloud REST APIAccountGet accountsGet accountsGET /v1/accountsGet all accounts maintained for your subscription in the EMS API.Query Parametersfilter_exchange_id anyExchange id of the specific account to provide single account instead of the list of all accountsResponses200OKapplication/jsonSchemaExample (from schema)SchemaArray [exchange_id stringExchange identifier and optional tag identifying specific account configured when the software will be managing multiple accounts on the same exchange; for eg: BITSTAMP BITSTAMP/7c177641-74bd-4dbe-9b01-2497c12a5f70` BITSTAMP/2574 Allowed separators between the exchange identifier and the tag: ~/.,:;!@#$%^&*-_+=.parameters object[]Exchange specific configuration parametersArray [key stringvalue string]][ { ""exchange_id"": ""string"", ""parameters"": [  {  ""key"": ""PublicApiKey"",  ""value"": ""36279b02-d24f-40be-a61b-e9fd7de46dd6""  } ] }]Loading...Was this section helpful?12345PreviousDelete all accountsNextAdd or update accountCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/managed-cloud-rest-api/account/get-account)"
543,i.io market data rest api order book get current order book,"i.io market data rest api order book get current order book.   Get current order book | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcvOrder BookGet current order book Current depth of the order book Historical data Latest dataOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIOrder BookGet current order bookGet current order bookGET /v1/orderbooks/:symbol_id/currentRetrieves the current order book for the specified symbol.Path Parameterssymbol_id string requiredThe symbol ID (from the Metadata -> Symbols)Query Parameterslimit_levels int32The maximum number of levels to include in the response.Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemasymbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the order book.time_coinapi date-timeThe CoinAPI time when the order book was received.asks nullableThe asks made by market makers.bids nullableThe bids made by market makers.{ ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.265Z"", ""time_coinapi"": ""2024-07-16T12:55:05.265Z""}{ ""symbol_id"": ""COINBASE_SPOT_BCH_USD"", ""time_exchange"": ""2020-08-27T10:28:35.6111130Z"", ""time_coinapi"": ""2020-08-27T10:28:35.6766461Z"", ""asks"": [ {  ""id"": ""3c5e789c-4c84-448a-9c5d-50532ea1ccbb"",  ""price"": 272.89,  ""size"": 1 }, {  ""id"": ""c64a76ba-5107-4c1b-b788-271ee88df318"",  ""price"": 272.9,  ""size"": 18 } ], ""bids"": [ {  ""id"": ""100d5004-f4e0-4e92-a571-392403d5b073"",  ""price"": 272.83,  ""size"": 18 }, {  ""id"": ""0889cf06-4a9d-4519-98e6-fac5dcb7afbf"",  ""price"": 272.83,  ""size"": 0.64185083 } ]}SchemaExample (from schema)Example responseSchemasymbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the order book.time_coinapi date-timeThe CoinAPI time when the order book was received.asks nullableThe asks made by market makers.bids nullableThe bids made by market makers.{ ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.265Z"", ""time_coinapi"": ""2024-07-16T12:55:05.265Z""}{ ""symbol_id"": ""COINBASE_SPOT_BCH_USD"", ""time_exchange"": ""2020-08-27T10:28:35.6111130Z"", ""time_coinapi"": ""2020-08-27T10:28:35.6766461Z"", ""asks"": [ {  ""id"": ""3c5e789c-4c84-448a-9c5d-50532ea1ccbb"",  ""price"": 272.89,  ""size"": 1 }, {  ""id"": ""c64a76ba-5107-4c1b-b788-271ee88df318"",  ""price"": 272.9,  ""size"": 18 } ], ""bids"": [ {  ""id"": ""100d5004-f4e0-4e92-a571-392403d5b073"",  ""price"": 272.83,  ""size"": 18 }, {  ""id"": ""0889cf06-4a9d-4519-98e6-fac5dcb7afbf"",  ""price"": 272.83,  ""size"": 0.64185083 } ]}SchemaExample (from schema)Example responseSchemasymbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the order book.time_coinapi date-timeThe CoinAPI time when the order book was received.asks nullableThe asks made by market makers.bids nullableThe bids made by market makers.{ ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.265Z"", ""time_coinapi"": ""2024-07-16T12:55:05.265Z""}{ ""symbol_id"": ""COINBASE_SPOT_BCH_USD"", ""time_exchange"": ""2020-08-27T10:28:35.6111130Z"", ""time_coinapi"": ""2020-08-27T10:28:35.6766461Z"", ""asks"": [ {  ""id"": ""3c5e789c-4c84-448a-9c5d-50532ea1ccbb"",  ""price"": 272.89,  ""size"": 1 }, {  ""id"": ""c64a76ba-5107-4c1b-b788-271ee88df318"",  ""price"": 272.9,  ""size"": 18 } ], ""bids"": [ {  ""id"": ""100d5004-f4e0-4e92-a571-392403d5b073"",  ""price"": 272.83,  ""size"": 18 }, {  ""id"": ""0889cf06-4a9d-4519-98e6-fac5dcb7afbf"",  ""price"": 272.83,  ""size"": 0.64185083 } ]}SchemaExample (from schema)Example responseSchemasymbol_id string nullableThe symbol identifier.time_exchange date-timeThe exchange time of the order book.time_coinapi date-timeThe CoinAPI time when the order book was received.asks nullableThe asks made by market makers.bids nullableThe bids made by market makers.{ ""symbol_id"": ""string"", ""time_exchange"": ""2024-07-16T12:55:05.265Z"", ""time_coinapi"": ""2024-07-16T12:55:05.265Z""}{ ""symbol_id"": ""COINBASE_SPOT_BCH_USD"", ""time_exchange"": ""2020-08-27T10:28:35.6111130Z"", ""time_coinapi"": ""2020-08-27T10:28:35.6766461Z"", ""asks"": [ {  ""id"": ""3c5e789c-4c84-448a-9c5d-50532ea1ccbb"",  ""price"": 272.89,  ""size"": 1 }, {  ""id"": ""c64a76ba-5107-4c1b-b788-271ee88df318"",  ""price"": 272.9,  ""size"": 18 } ], ""bids"": [ {  ""id"": ""100d5004-f4e0-4e92-a571-392403d5b073"",  ""price"": 272.83,  ""size"": 18 }, {  ""id"": ""0889cf06-4a9d-4519-98e6-fac5dcb7afbf"",  ""price"": 272.83,  ""size"": 0.64185083 } ]}Loading...Was this section helpful?12345PreviousOrder BookNext Current depth of the order bookCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/order-book/get-current-order-book)"
544,i.io naas api bitcoin Methods getnetworkinfo,"i.io naas api bitcoin Methods getnetworkinfo.   getnetworkinfo | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetnetworkinfoOn this pagegetnetworkinfoOverview​The 'getnetworkinfo' method returns an object containing various state info regarding P2P networking.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KE' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""getnetworkinfo"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KE"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""getnetworkinfo\"",\""params\"": [ ]}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KE'];$body = '{ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getnetworkinfo"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection(""mainnet-bitcoin.node.coinapi.io"")payload = json.dumps({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getnetworkinfo"", ""params"": []})headers = { 'Content-Type': 'application/json', 'accept': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KE'}conn.request(""POST"", ""/"", payload, headers)res = conn.getresponse()data = res.read()print(data.decode(""utf-8""))var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KE"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getnetworkinfo"", ""params"": [] }),};$.ajax(settings).done(function (response) {console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{""jsonrpc"":""2.0"",""id"":1,""method"":""getnetworkinfo"",""params"": [ ]}`) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KE"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KE""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getnetworkinfo"", ""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""getnetworkinfo\"",\""params\"": [ ]}"");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KE"") .build();Response response = client.newCall(request).execute();Request Parameters​Response​{ ""result"": [ ""n"", ... ], ""error"": null, ""id"": 1}Was this section helpful?12345PreviousgetnetworkhashpsNextgetNewAddressOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getnetworkinfo)"
545,i.io general faq general Is SOR included in the basic EMS Trading API package,"i.io general faq general Is SOR included in the basic EMS Trading API package.   Is SOR included in the basic EMS Trading API package? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralIs SOR included in the basic EMS Trading API package?Is SOR included in the basic EMS Trading API package?Yes, it’s included in the base version.Was this section helpful?12345Previous""Invalid API Key"" error for a newly purchased keyNextIs latency higher for the exchanges which are providing only REST API?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/Is-SOR-included-in-the-basic-EMS-Trading-API-package)"
546,i.io naas api ethereum Methods web3 sha3,"i.io naas api ethereum Methods web3 sha3.   web3_sha3 | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodsweb3_sha3On this pageweb3_sha3Overview​The 'web3_sha3' returns Keccak-256 (not the standardized SHA3-256) of the given data.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'content-type: application/json' \  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data ' {  ""id"": 1,  ""jsonrpc"": ""2.0"",  ""method"": ""web3_sha3"" }'using RestSharp;var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""web3_sha3\""}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); <?php$curl = curl_init();curl_setopt_array($curl, [ CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"", CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => """", CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 30, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => ""POST"", CURLOPT_POSTFIELDS => json_encode([ 'id' => 1, 'jsonrpc' => '2.0', 'method' => 'web3_sha3' ]), CURLOPT_HTTPHEADER => [ ""accept: application/json"", ""content-type: application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" ],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) { echo ""cURL Error #:"" . $err;} else { echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""web3_sha3""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text)const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({id: 1, jsonrpc: '2.0', method: 'web3_sha3'})};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""web3_sha3\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = {\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""web3_sha3\""}response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();{MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""web3_sha3\""}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();}Response​The method returns an array of 20-byte addresses associated with the client, formatted as hexadecimal strings.{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": []}Data - the SHA3 result of the given string.Was this section helpful?12345Previousweb3_clientVersionOverviewRequestResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/web3_sha3)"
547,i.io faq security and privacy What should I do if my API key was compromised,"i.io faq security and privacy What should I do if my API key was compromised.   What should I do if my API key was compromised? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIBilling and SubscriptionsSecurity and PrivacyWhat CDN does the API use?What information do I need to provide in order to subscribe?What security mechanisms does CoinAPI use to protect my data?What should I do if my API key was compromised?Customer PortalChangelogFAQSecurity and PrivacyWhat should I do if my API key was compromised?What should I do if my API key was compromised?Please contact support immediately, and we will generate the new key for you. If your old key is still in production use, we will give you time to migrate to the new one.Submit a request here: https://support.coinapi.io/hc/en-us/requests/newWas this section helpful?12345PreviousWhat security mechanisms does CoinAPI use to protect my data?NextCustomer PortalCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/security-and-privacy/What-should-I-do-if-my-API-key-was-compromised)"
548,i.io general faq api What timezone is used for date time values,"i.io general faq api What timezone is used for date time values.   What timezone is used for date/time values? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer EMS Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What is the rate limit for EMS Trading API?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQAPIWhat timezone is used for date/time values?What timezone is used for date/time values?We are using the UTC timezone for all date and time data.More information about the time handling is available in our documentation: https://docs.coinapi.io/market-data#timeWas this section helpful?12345PreviousWhat languages do you support?NextWhere can I find examples and SDK source codes for API?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/api/What-timezone-is-used-for-date-time-values)"
549,i.io market data how to guides import api into postman,i.io market data how to guides import api into postman.   Import API into Postman | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesAcquire exchange rates with different programming languagesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPIBuilding a cryptocurrency exchange comparison tool using Market Data APICreating a historical crypto price chart using CoinAPI and D3.jsFetching market data with KNIMEGet Historical OHLCV Data Using CoinAPIGet symbol funding rate metric data using CoinAPIImport API into PostmanImport data to Google Sheets/ExcelReal-time data visualization with javascriptReal-time trades stream using WebSocket with different languagesRetrieve and analyze crypto order book data using a cryptocurrency APITrading Essentials: QuickstartPerformance Testing GuideHow-to guidesImport API into PostmanOn this pageImport API into PostmanIntroduction​Postman allows you to import OpenAPI specifications effortlessly.Step-by-step process​Copy the OpenAPI URL from the CoinAPI websiteOpen Postman's workspaceImport an OpenAPI specification by providing its URL.Review and confirm the generated collection.Start using your API collection for testing and development.Here's how to do it for Market Data API:Was this section helpful?12345PreviousGet symbol funding rate metric data using CoinAPINextImport data to Google Sheets/ExcelIntroductionStep-by-step processCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/how-to-guides/import-api-into-postman)
550,i.io how to guides trading essentials quickstart,"i.io how to guides trading essentials quickstart.   Trading Essentials: Quickstart | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesAcquire exchange rates with different programming languagesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPICreating a historical crypto price chart using CoinAPI and D3.jsFetching market data with KNIMEGet Historical OHLCV Data Using CoinAPIGet symbol funding rate metric data using CoinAPIImport API into PostmanImport data to Google Sheets/ExcelReal-time data visualization with javascriptReal-time trades stream using WebSocket with different languagesRetrieve and analyze crypto order book data using a cryptocurrency APITrading Essentials: QuickstartMarket Data APIEMS APIFAQCustomer PortalChangelogHow-to guidesTrading Essentials: QuickstartOn this pageTrading Essentials: QuickstartIntroduction​In this tutorial, you'll learn how to leverage our crypto trading API to automate and streamline your trading across multiple exchanges. Discover how to connect your accounts, execute trades, and efficiently manage your portfolio with just a few clicks.With our solution, you gain the power to control trades on various exchanges using just one API. Background​The EMS Trading API lets you manage multiple trading accounts on different exchanges all in one place, making trading easier with combined and consistent data. It gives you up-to-date market info, past data, and options to use it through the cloud or on your systems. Perfect for traders, big companies, and experts like developers and analysts, this API is fast, efficient, and reliable, providing a complete trading solution with easy access to unique insights and information.On the Agenda​Obtain a Free API Key: Secure your gateway to multi-exchange trading with a free API key from our site.Check available exchanges: Verify the list of supported exchanges via EMS APIConnect your Exchanges: Quickly integrate your accounts with exchanges like BITMEX and KRAKEN.Execute BUY on KRAKEN: Check your balance, initiate the BUY order, and confirm the status of the orderExecute SELL on KRAKEN: Initiate SELL order and check the order status reportGetting started​To execute the EMS Trading API, you'll need a Free API Key from our website.Check available exchanges​To access a list of supported exchanges that can be connected via the EMS API, execute the following:import requestsurl = ""https://ems-mgmt.coinapi.io/v1/exchanges""payload={}headers = { 'Accept': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-COINAPI-KEY'}response = requests.request(""GET"", url, headers=headers, data=payload)print(response.text)Here's a snippet extracted from the server's reply:[ {  ""exchange_id"": ""BITMEX"",  ""location_id"": ""aws-eu-west-1-prd"",  ""required_parameters"": [   ""PrivateApiKey"",   ""PublicApiKey""  ] }, {  ""exchange_id"": ""COINBASE"",  ""location_id"": ""aws-us-east-1-prd"",  ""required_parameters"": [   ""PassPhrase"",   ""PrivateApiKey"",   ""PublicApiKey""  ] },  {  ""exchange_id"": ""GEMINI"",  ""location_id"": ""aws-us-east-1-prd"",  ""required_parameters"": [   ""PrivateApiKey"",   ""PublicApiKey""  ] }, {  ""exchange_id"": ""KRAKEN"",  ""location_id"": ""aws-us-west-2-prd"",  ""required_parameters"": [   ""PrivateApiKey"",   ""PublicApiKey""  ] }]// other exchanges and their parameters...infoTo access the full list of supported exchanges, you can execute the endpoint https://ems-mgmt.coinapi.io/v1/exchanges. Above, we only showcase a partial list as an example.Connect your Exchanges​To begin trading on cryptocurrency exchanges, you'll need to connect your accounts. Below are examples of integrating with two popular exchanges:BITMEX exampleKRAKEN exampleinfoWhile the examples in this quickstart provided are focused on integrating with BITMEX and KRAKEN, the process is quite similar for various exchanges.BITMEX​BITMEX stands as a premier cryptocurrency exchange, offering a robust platform for traders and investors worldwide.Obtain Public key​To begin trading on BITMEX, you'll need to obtain your public and private keys from BITMEX.Connect your account​After acquiring keys, the initial step includes sharing your exchange keys through the account creation process for the designated exchange.import requestsimport jsonurl = ""https://ems-mgmt.coinapi.io/v1/accounts""payload = { ""exchange_id"": ""BITMEX/JOHN"", ""parameters"": [  {   ""key"": ""PublicApiKey"",   ""value"": ""73034021-THIS-IS-SAMPLE-PUBLIC-KEY-FROM-BITMEX""  },    {   ""key"": ""PrivateApiKey"",   ""value"": ""73034021-THIS-IS-SAMPLE-PRIVATE-KEY-FROM-BITMEX""  } ]}headers = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Convert payload to JSON stringjson_payload = json.dumps(payload)# Make the requestresponse = requests.post(url, data=json_payload, headers=headers)# Print the responseprint(""Response Code:"", response.status_code)Once the update is successful, you'll receive an HTTP status code of 200.KRAKEN​Obtain Public key​To begin trading on KRAKEN, you'll need to obtain your public and private keys from KRAKEN.Connect your account​After acquiring keys, the initial step includes sharing your exchange keys through the account creation process for the designated exchange.import requestsimport jsonurl = ""https://ems-mgmt.coinapi.io/v1/accounts""payload = { ""exchange_id"": ""KRAKEN/JOHN"", ""parameters"": [  {   ""key"": ""PublicApiKey"",   ""value"": ""73034021-THIS-IS-SAMPLE-PUBLIC-KEY-FROM-KRAKEN""  },    {   ""key"": ""PrivateApiKey"",   ""value"": ""73034021-THIS-IS-SAMPLE-PRIVATE-KEY-FROM-KRAKEN""  } ]}headers = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Convert payload to JSON stringjson_payload = json.dumps(payload)# Make the requestresponse = requests.post(url, data=json_payload, headers=headers)# Print the responseprint(""Response Code:"", response.status_code)Get the list of Connected Exchanges​To check which accounts have been created on our side, execute the following code:import requestsimport jsonurl = ""https://ems-mgmt.coinapi.io/v1/accounts""headers = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY""}# Make the requestresponse = requests.get(url, headers=headers)if response.status_code == 200: accounts_json = response.json() print(json.dumps(accounts_json, indent=4))else: print(""Error:"", response.status_code)Here's an example response, listing all accounts created with your API KEY:[ {  ""exchange_id"": ""BITMEX/JOHN"",  ""parameters"": [   {    ""key"": ""PublicApiKey"",    ""value"": ""73034021-THIS-IS-SAMPLE-PUBLIC-KEY-FROM-BITMEX""   },   {    ""key"": ""PrivateApiKey"",    ""value"": ""73034021-THIS-IS-SAMPLE-PRIVATE-KEY-FROM-BITMEX""   }  ] }, {  ""exchange_id"": ""KRAKEN/JOHN"",  ""parameters"": [   {    ""key"": ""PublicApiKey"",    ""value"": ""73034021-THIS-IS-SAMPLE-PUBLIC-KEY-FROM-KRAKEN""     },   {    ""key"": ""PrivateApiKey"",    ""value"": ""73034021-THIS-IS-SAMPLE-PRIVATE-KEY-FROM-KRAKEN""   }  ] }]Trades execution​Placing an order on an exchange involves providing instructions for executing a trade at a designated price and quantity.Check balance (Optional)​Before diving into trading, it's a good idea to check the balance on your account(s). Here's an example of checking the account balance for all of the exchanges associated with the account.import requestsimport jsonurl = ""https://global.ems.coinapi.net/v1/balances""payload={}headers = { 'Accept': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-COINAPI-KEY'}# Make the requestresponse = requests.get(url, headers=headers)if response.status_code == 200: accounts_json = response.json() print(json.dumps(accounts_json, indent=4))else: print(""Error:"", response.status_code)The response may be as follows (for BITMEX/JOHN and KRAKEN/JOHN accounts):[ {  ""type"": ""BALANCE_SNAPSHOT"",  ""exchange_id"": ""BITMEX/JOHN"",  ""data"": [   {    ""id"": ""XBT"",    ""asset_id_exchange"": ""XBT"",    ""asset_id_coinapi"": ""BTC"",    ""balance"": 0.02164794,    ""available"": 0.02164794,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",      ""rate_usd"": 52357.18111158658     },   {    ""id"": ""BMEx"",    ""asset_id_exchange"": ""BMEx"",    ""asset_id_coinapi"": ""BMEX"",    ""balance"": 300000.0,    ""available"": 300000.0,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",      ""rate_usd"": 0.2521371329127946     }  ] }, {  ""type"": ""BALANCE_SNAPSHOT"",  ""exchange_id"": ""KRAKEN/JOHN"",  ""data"": [   {    ""id"": ""ETHW"",    ""asset_id_exchange"": ""ETHW"",    ""asset_id_coinapi"": ""ETHW"",    ""balance"": 1.73e-05,    ""available"": 1.73e-05,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 2.9136466899640077   },   {    ""id"": ""BCH"",    ""asset_id_exchange"": ""BCH"",    ""asset_id_coinapi"": ""BCH"",    ""balance"": 2.9e-09,    ""available"": 2.9e-09,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 265.7082181877394   },   {    ""id"": ""ZCAD"",    ""asset_id_exchange"": ""ZCAD"",    ""asset_id_coinapi"": ""CAD"",    ""balance"": 0.7905,    ""available"": 0.7905,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 0.7405719177575096   },   {    ""id"": ""ZEUR"",    ""asset_id_exchange"": ""ZEUR"",    ""asset_id_coinapi"": ""EUR"",    ""balance"": 0.0098,    ""available"": 0.0098,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 1.0809450373867444   },   {    ""id"": ""ADA"",    ""asset_id_exchange"": ""ADA"",    ""asset_id_coinapi"": ""ADA"",    ""balance"": 2e-08,    ""available"": 2e-08,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 0.6244338769954291   },   {    ""id"": ""ZUSD"",    ""asset_id_exchange"": ""ZUSD"",    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": null   },   {    ""id"": ""XXBT"",    ""asset_id_exchange"": ""XXBT"",    ""asset_id_coinapi"": ""BTC"",    ""balance"": 8.58e-08,    ""available"": 8.58e-08,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 52320.9229657045   }  ] }]Submit Order (SELL)​Here's an example of submitting a SELL order on the KRAKEN exchange with the following details: Desired amount of USD to sell: 10Expected price to be executed at: 150Initial balance of USD: 77.3669Save down somewhere the YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001 identifier to track the status of the orderimport requestsimport jsonfrom datetime import datetime, timedeltaurl = ""https://global.ems.coinapi.net/v1/orders""payload = json.dumps({ ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_USD_JPY"", ""amount_order"": 10, ""price"": 150, ""side"": ""SELL"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""exec_inst"": [ ""MAKER_OR_CANCEL"" ]})# Headersheaders = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Make the requesttry: response = requests.post(url, data=payload, headers=headers) # Check status code if response.status_code == 200:  print(""Response JSON:"", response.json()) else:  print(""Response Code:"", response.status_code) except Exception as e: print(""An error occurred:"", e)Examples of Possible Responses:Successful RoutingInvalid Volume ErrorInsufficient Funds ErrorThe order has been sent to the exchange:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""client_order_id_format_exchange"": ""74733759"", ""exchange_order_id"": ""OX6EKO-67KDQ-KGNYFI"", ""amount_open"": 10.0, ""amount_filled"": 0.0, ""status"": ""ROUTED"", ""status_history"": [ [""RECEIVED"", ""2024-02-22T23:55:31.5424443Z""], [""ROUTING"", ""2024-02-22T23:55:31.5439512Z""], [""ROUTED"", ""2024-02-22T23:55:31.8127436Z""] ], ""error_message"": null, ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""symbol_id_exchange"": ""USDJPY"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_USD_JPY"", ""amount_order"": 10.0, ""price"": 150.0, ""avg_px"": 0.0, ""side"": ""SELL"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}If you encounter a volume error due to a mismatch with the minimum order size:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""client_order_id_format_exchange"": ""74733759"", ""exchange_order_id"": null, ""amount_open"": 5e-15, ""amount_filled"": 0.0, ""status"": ""REJECTED"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T00:04:36.8301287Z""], [""ROUTING"", ""2024-02-23T00:04:36.8315182Z""], [""REJECTED"", ""2024-02-23T00:04:36.9940661Z""] ], ""error_message"": ""EGeneral:Invalid arguments:volume"", ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""symbol_id_exchange"": ""USDJPY"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_USD_JPY"", ""amount_order"": 5e-15, ""price"": 150.0, ""avg_px"": 0.0, ""side"": ""SELL"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}If you encounter an insufficient funds error due to insufficient balance in your account:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""client_order_id_format_exchange"": ""74733759"", ""exchange_order_id"": null, ""amount_open"": 555555555555555.0, ""amount_filled"": 0.0, ""status"": ""REJECTED"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T00:05:34.6909879Z""], [""ROUTING"", ""2024-02-23T00:05:34.6918765Z""], [""REJECTED"", ""2024-02-23T00:05:34.8518753Z""] ], ""error_message"": ""EGeneral:Invalid arguments:volume"", ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""symbol_id_exchange"": ""USDJPY"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_USD_JPY"", ""amount_order"": 555555555555555.0, ""price"": 150.0, ""avg_px"": 0.0, ""side"": ""SELL"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}infoHere you can check the comprehensive list of execution instructions for the exec_inst parameterYou can find available values for the time_in_force parameter hereEMS exclusively supports the LIMIT order_type.The supported values for symbol_id_coinapi can be found by executing the endpoint provided here.The meaning of the order status in the response (ROUTED, REJECTED, etc.) can be found hereTo view the possible values for the order lifecycle, click hereInstead of utilizing CoinAPI's symbol_id_coinapi, you can opt for the symbol provided by the exchange through symbol_id_exchangeHere are some of the most common codes that may be returned for order creation:Http Status CodeDescription200 (ok)Order accepted400 (bad request)Incorrect input parameters.490 (unreachable)Exchange cannot be reached.504 (timeout)Exchange didn't respond in the defined timeout.Verify order status​Ensure that you've saved the client_order_id parameter associated with your specific order. This identifier will be necessary to check its status.import requestsimport jsonfrom datetime import datetime, timedeltaurl = ""https://global.ems.coinapi.net/v1/orders/status/YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001""# Headersheaders = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Make the requesttry: response = requests.get(url, headers=headers) # Check status code if response.status_code == 200:  print(""Response JSON:"", response.json()) else:  print(""Response Code:"", response.status_code)   for header, value in response.headers.items():  print(header + ': ' + value) except Exception as e: print(""An error occurred:"", e)An example order status report that was executed with YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001 identifier and which was CANCELED.{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""client_order_id_format_exchange"": ""1945919824"", ""exchange_order_id"": ""OUQMAY-ODBWL-AXG4ZE"", ""amount_open"": 10.0, ""amount_filled"": 0.0, ""status"": ""CANCELED"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T00:16:20.2139293Z""], [""ROUTING"", ""2024-02-23T00:16:20.2389572Z""], [""ROUTED"", ""2024-02-23T00:16:20.4016779Z""], [""NEW"", ""2024-02-23T00:16:20.4021975Z""], [""CANCELED"", ""2024-02-23T00:16:20.4026337Z""] ], ""error_message"": null, ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""symbol_id_exchange"": ""USDJPY"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_USD_JPY"", ""amount_order"": 10.0, ""price"": 150.0, ""avg_px"": 0.0, ""side"": ""SELL"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}Check all open orders​You can also check all of the open orders.import requestsimport jsonfrom datetime import datetime, timedeltaurl = "" https://global.ems.coinapi.net/v1/orders""# Headersheaders = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Make the requesttry: response = requests.get(url, headers=headers) # Check status code if response.status_code == 200:  print(""Response JSON:"", response.json()) else:  print(""Response Code:"", response.status_code)   for header, value in response.headers.items():  print(header + ': ' + value) except Exception as e: print(""An error occurred:"", e)infoAfter an order is closed/finalized, it will no longer be visible through the endpoint mentioned above.Submit Order (BUY)​Here's an example of submitting a BUY order on the KRAKEN exchange with the following details: Desired amount of OXT to buy: 100Expected price to be executed at: 0.11Save down somewhere the YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007 identifier to track the status of the orderimport requestsimport jsonfrom datetime import datetime, timedeltaurl = ""https://global.ems.coinapi.net/v1/orders""payload = json.dumps({ ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_OXT_USD"", ""amount_order"": 100, ""price"": 0.11, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""exec_inst"": [ ""MAKER_OR_CANCEL"" ]})# Headersheaders = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Make the requesttry: response = requests.post(url, data=payload, headers=headers) # Check status code if response.status_code == 200:  print(""Response JSON:"", response.json()) else:  print(""Response Code:"", response.status_code)   for header, value in response.headers.items():  print(header + ': ' + value) except Exception as e: print(""An error occurred:"", e)Successfully routed order Response:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""client_order_id_format_exchange"": ""1946142760"", ""exchange_order_id"": ""OJCPEO-PO7WD-VTPUF2"", ""amount_open"": 100.0, ""amount_filled"": 0.0, ""status"": ""ROUTED"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T01:13:15.6096269Z""], [""ROUTING"", ""2024-02-23T01:13:15.6102840Z""], [""ROUTED"", ""2024-02-23T01:13:15.7772494Z""] ], ""error_message"": null, ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""symbol_id_exchange"": ""OXTUSD"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_OXT_USD"", ""amount_order"": 100.0, ""price"": 0.11, ""avg_px"": 0.0, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}Below is the order status report response for a BUY operation with the client_order_id set as YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""client_order_id_format_exchange"": ""1946142760"", ""exchange_order_id"": ""OJCPEO-PO7WD-VTPUF2"", ""amount_open"": 100.0, ""amount_filled"": 0.0, ""status"": ""NEW"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T01:13:15.6096269Z""], [""ROUTING"", ""2024-02-23T01:13:15.6102840Z""], [""ROUTED"", ""2024-02-23T01:13:15.7772494Z""], [""NEW"", ""2024-02-23T01:13:15.8077026Z""] ], ""error_message"": null, ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""symbol_id_exchange"": ""OXTUSD"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_OXT_USD"", ""amount_order"": 100.0, ""price"": 0.11, ""avg_px"": 0.0, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}Cancelling all open orders​To cancel all open orders associated with the KRAKEN/JOHN:import requestsimport jsonfrom datetime import datetime, timedeltaurl = ""https://global.ems.coinapi.net/v1/orders/cancel/all""payload = json.dumps({""exchange_id "": ""KRAKEN/JOHN""})# Headersheaders = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Make the requesttry: response = requests.post(url, data=payload, headers=headers) # Check status code if response.status_code == 200:  print(""Response JSON:"", response.json()) else:  print(""Response Code:"", response.status_code)   for header, value in response.headers.items():  print(header + ': ' + value) except Exception as e: print(""An error occurred:"", e)Here's a sample order report for a canceled BUY order via the EMS API:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""client_order_id_format_exchange"": ""1946142760"", ""exchange_order_id"": ""OJCPEO-PO7WD-VTPUF2"", ""amount_open"": 100.0, ""amount_filled"": 0.0, ""status"": ""CANCELED"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T01:13:15.6096269Z""], [""ROUTING"", ""2024-02-23T01:13:15.6102840Z""], [""ROUTED"", ""2024-02-23T01:13:15.7772494Z""], [""NEW"", ""2024-02-23T01:13:15.8077026Z""], [""PENDING_CANCEL"", ""2024-02-23T01:18:49.2279836Z""], [""CANCELED"", ""2024-02-23T01:18:49.4245926Z""] ], ""error_message"": null, ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""symbol_id_exchange"": ""OXTUSD"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_OXT_USD"", ""amount_order"": 100.0, ""price"": 0.11, ""avg_px"": 0.0, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}The explanations and practical code examples provided should let you have a better understanding of how to leverage the EMS API for cryptocurrency trading across multiple exchanges.Was this section helpful?12345PreviousRetrieve and analyze crypto order book data using a cryptocurrency APINextMarket Data APIIntroductionBackgroundOn the AgendaGetting startedCheck available exchangesConnect your ExchangesBITMEXObtain Public keyConnect your accountKRAKENObtain Public keyConnect your accountGet the list of Connected ExchangesTrades executionCheck balance (Optional)Submit Order (SELL)Verify order statusCheck all open ordersSubmit Order (BUY)Cancelling all open ordersCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/how-to-guides/trading-essentials-quickstart)"
551,i.io general glossary Endpoint,"i.io general glossary Endpoint.   Endpoint | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGlossaryBlockchain Address and OutputBlockchain NodeChain (Blockchain)EndpointJSONNetworkSatoshiTransactionWalletBlockchain BlockChangelogGlossaryEndpointOn this pageEndpointEndpoint​An Endpoint is a specific URL where an API can be accessed to retrieve, send, or manipulate data. Endpoints are crucial in the interaction between different software systems, providing precise locations where services can be requested and data can be exchanged.Key Characteristics​URL Structure: Each endpoint is identified by a unique URL, which specifies the path to a particular resource or service within the API.Methods: Endpoints support various HTTP methods such as GET, POST, PUT, DELETE, which define the type of operation to be performed.Parameters: Endpoints often accept parameters, either as part of the URL or in the request body, to filter, sort, or specify the data to be manipulated.Importance​Access Control: Endpoints help in defining the scope of access, ensuring that only authorized requests can retrieve or modify the data.Modularity: By structuring APIs into distinct endpoints, developers can create modular and maintainable code.Interoperability: Endpoints enable different systems to communicate and share data seamlessly, fostering integration and interoperability.Was this section helpful?12345PreviousChain (Blockchain)NextJSONEndpointCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/glossary/Endpoint)"
552,i.io naas api bitcoin Methods getmempooldescendants,"i.io naas api bitcoin Methods getmempooldescendants.   getmempooldescendants | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetmempooldescendantsOn this pagegetmempooldescendantsOverview​The 'getmempooldescendants' RPC Method returns all in-mempool descendants for a transaction in the mempool.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --body-data '{""jsonrpc"":""2.0"",""method"":""getmempooldescendants"",""params"": [],""id"":1}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""getmempooldescendants\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""getmempooldescendants"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection(""mainnet-bitcoin.node.coinapi.io"")payload = json.dumps({ ""jsonrpc"": ""2.0"", ""method"": ""getmempooldescendants"", ""params"": [], ""id"": 1})headers = { 'Content-Type': 'application/json', 'accept': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}conn.request(""POST"", ""/"", payload, headers)res = conn.getresponse()data = res.read()print(data.decode(""utf-8""))var settings = {""url"": ""https://bitcoin-mainnet.node.coinapi.io"",""method"": ""POST"",""timeout"": 0,""headers"": {""Content-Type"": ""application/json"",""accept"": ""application/json"",""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY""},""data"": JSON.stringify({""jsonrpc"": ""2.0"",""method"": ""getmempooldescendants"",""params"": [],""id"": 1}),};$.ajax(settings).done(function (response) {console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""getmempooldescendants"",""params"": [],""id"":1}`) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""method"": ""getmempooldescendants"", ""params"": [], ""id"": 1})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""jsonrpc\"":\""2.0\"",\""method\"":\""getmempooldescendants\"",\""params\"": [],\""id\"":1}"");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​txid (string, required): The transaction id, and it must be in mempool verbose (string): default=false. It's true for a JSON object and false for array of transaction idsResponse​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": 1234567.890123}(for verbose = false) hex: The transaction id of an in-mempool ancestor transaction (for verbose = true) transactionid: The transaction id vsize: The virtual transaction size as defined in BIP 141. This is different from actual serialized size for witness transactions as witness data is discounted weight: The transaction weight as defined in BIP 141 time: The local time transaction entered pool in seconds since 1 Jan 1970 GMT height: The block height when the transaction entered pool descendantcount: The number of in-mempool descendant transactions (including this one) descendantsize: The virtual transaction size of in-mempool descendants (including this one) ancestorcount: The number of in-mempool ancestor transactions (including this one) wtxid: The hash of serialized transaction, including witness data fees: A JSON array containing information about the transaction fee paid by the transaction base: The transaction fee in BTC modified: The transaction fee with fee deltas used for mining priority in BTC ancestor: The modified fees of in-mempool ancestors (including this one) in BTC descendant: The modified fees of in-mempool descendants (including this one) in BTC depends: Unconfirmed transactions used as inputs for this transaction hex: The parent transaction id spentby: Unconfirmed transactions spending outputs from this transaction hex: The child transaction id bip125-replaceable: Whether this transaction could be replaced due to BIP125 (replace-by-fee) unbroadcast: Whether this transaction is currently unbroadcast (initial broadcast not yet acknowledged by any peers)Was this section helpful?12345PreviousgetmempoolancestorsNextgetmempoolentryOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getmempooldescendants)"
553,i.io changelog,"i.io changelog.   Changelog | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQCustomer PortalChangelogChangelogOn this pageChangelogThis section will cover the technical changes to the products or documentation. The Changelog section is not just a record of changes; it's a communication tool that bridges the gap between developers and users, ensuring that the latter has a clear understanding of the product's evolution and current state.It's a log of: BREAKING CHANGES, FEATURES, IMPROVEMENTS, BUG FIXES, INTEGRATIONS or other NOTES per public version.March, 2024​FEATURES​Market Data WebSocket API: Added 2 new messages (subscribe and unsubscribe) to allow control the state of the connection without repeating the complete state using hello message at every change. IMPROVEMENTS​Market Data REST API: Added example responses in the REST API in OpenAPI and in the documentation.Market Data API: Several improvements exeucted for the BEQUANT CRYPTOCOM HUOBIFTS~ BITKUB data sources.Market Data REST API: OHLCV by Exchange endpoint can now be called while time_start and time_end crossing midnight UTC.Market Data API: Multiple unrelated stability and latency improvements executed.Documentation: Added the API limits and billing metrics page.BUG FIXES​Market Data REST API: Resolved issue causing the REST API Credits to be counted incorrectly while having multiple API Keys for some customers.February, 2024​FEATURES​Market Data REST API: Added Index API feature for the testing and early feedback in alpha version.Market Data REST API: Added OHLCV historical data by exchange.IMPROVEMENTS​Documentation: Added the EMS Trading API QuickStart How-to Guide.Website: Released Metadata Explorer covering the exchanges and symbols that we support.January, 2024​BREAKING CHANGES​EMS API: Public release of the product, promotion from the beta phase.IMPROVEMENTS​Market Data API: Increased stability and reduced latency by 50% for the Exchange Rates and OHLCV endpoints.Support: Intoduced AI Bot that has the information about the product and answering questions on the support.Market Data API: Increased the frequency and stability of the data feeds reducing the latencies and variance of latencies.Documentation: Migrating the FAQ section to the documentation.Website: Improved free plan subscription flow.INTEGRATIONS​Market Data API: Added new integration DYDX to the DYDX v3.EMS API: Added new integration DYDX to the DYDX v3.FEATURES​Market Data FIX API: Improved feed L2 feed to make sure each L2 update is trackable to specific L3 updates if the data source distributing data in L3 format.BUG FIXES​EMS API: Resolved issue related to the fact that we reported errors on invalid orders received from the customer side in non descriptive manner.NOTES​We focused mostly on the stability of the platform and improvements that we can execute on multiple fronts.Was this section helpful?12345PreviousMetrics tab explainedMarch, 2024February, 2024January, 2024Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/changelog)"
554,i.io naas api bitcoin Methods importprivkey,"i.io naas api bitcoin Methods importprivkey.   importprivkey | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsimportprivkeyOn this pageimportprivkeyOverview​The 'importprivkey' method allows you to Add a private key (as returned by dumpprivkey) to your wallet. Requires a new wallet backup.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""importprivkey"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""importprivkey\"",\""params\"": [ ]}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""importprivkey"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection(""mainnet-bitcoin.node.coinapi.io"")payload = json.dumps({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""importprivkey"",""params"": []})headers = {'Content-Type': 'application/json','accept': 'application/json','X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}conn.request(""POST"", ""/"", payload, headers)res = conn.getresponse()data = res.read()print(data.decode(""utf-8""))var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""importprivkey"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""id"":1,""method"":""importprivkey"",""params"": [ ]}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""importprivkey"",""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""importprivkey\"",\""params\"": [ ]}"");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​privkey: The private keylabel: An optional labelrescan: Rescan the wallet for transactionsResponse​{ // Response structure here}Was this section helpful?12345PreviousimportmultiNextimportprunedfundsOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/importprivkey)"
555,i.io faq api Why do some symbols have additional prefix,"i.io faq api Why do some symbols have additional prefix.   Why do some symbols have additional prefix? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQAPIWhy do some symbols have additional prefix?Why do some symbols have additional prefix?This is documented in the notice part of our API documentation for Symbols:In the unlikely event when the symbol_id for more than one market is the same. We will append the additional term prefixed with the _ at the end of the duplicated identifiers to differentiate them.More information can be found here: https://docs.coinapi.io/#list-all-symbols-getWas this section helpful?12345PreviousWhy are there no Exchange Rates data for some assets for a given period?NextDocumenting Connectivity issuesCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/api/Why-do-some-symbols-have-additional-prefix)"
556,i.io faq api What languages do you support,"i.io faq api What languages do you support.   What languages do you support? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQAPIWhat languages do you support?What languages do you support?Technically any language, but we have SDK and examples available in our GitHub repository [1] for:PythonRMATLABC#.NETC++JavaRubyGoJavaScriptTypeScriptNode.jsPHPHaskellObjective-CReference:[1] https://github.com/coinapi/coinapi-sdkWas this section helpful?12345PreviousWhat happens if I exceed my plan’s REST API daily request limit?NextWhat timezone is used for date/time values?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/api/What-languages-do-you-support)"
557,i.io faq general How can I set custom timezone in the data,"i.io faq general How can I set custom timezone in the data.   How can I set custom timezone in the data? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralHow can I set custom timezone in the data?How can I set custom timezone in the data?We do not support custom timezones, data is always processed in the UTC.If you need to operate in the custom timezone then input and output values should be converted on the client-side before a request is sent to us or output data processed.In the corner cases like OHLCV data on the higher than 1HRS periods (eg. 1DAY), you should execute queries only to the 1HRS period at the maximum and assemble higher periods like 1DAY on the client-side, as our 1DAY always starts and ends at the UTC midnight.Was this section helpful?12345PreviousExchange chart is different OHLCVNextHow do I enable overage?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/How-can-I-set-custom-timezone-in-the-data)"
558,i.io general changelog,"i.io general changelog.   Changelog | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGlossaryChangelogChangelogOn this pageChangelogThis section will cover the technical changes to the products or documentation. The Changelog section is not just a record of changes; it's a communication tool that bridges the gap between developers and users, ensuring that the latter has a clear understanding of the product's evolution and current state.It's a log of: BREAKING CHANGES, FEATURES, IMPROVEMENTS, BUG FIXES, INTEGRATIONS, or other NOTES per public version.July, 2024​IMPROVEMENTS​Market Data API: Effective immediately, we have increased the publishing frequency of our historical exchange rates from 1-second intervals to 100-millisecond intervals to enable more precise analysis and decision-making for our users who rely on historical exchange rate data.Historical exchange rates now updated every 100 milliseconds (previously every 1 second)This change applies to all currency pairs in our historical data setNo action required from customers to access this enhanced dataCustomer Portal: A new, more user-friendly way to log in. When you are logged in into the Customer or Support portal then you can switch between them without logging again separately. June, 2024​FEATURES​Customer Portal: The release of an improved Usage Metrics view with new features.Extended Time Interval Querying: Customers can now query usage metrics over a wider range of time intervals, including 1 hour, 6 hours, 1 day, 3 days, 1 week, 2 weeks, and 1 month. This enables better trend analysis and long-term tracking of data usage patterns.Advanced Filtering Options: The updated view allows fine-grained filtering by several parameters: Data Center, API Key, Data Source, Operation Name, Protocol Name, Service Name.More Metrics Available for Tracking: Customers can track a variety of metrics using the new view, including: Data Messages Received, Data Messages Sent, Data Bytes Received, Data Bytes Sent, Connection Time, API Calls, API Calls Received, API Calls Sent, Market Data API REST CreditsWebSocket DS API:Exchange-Specific Connections: The new setup ensures that issues with one exchange do not affect other data streams.Direct Routing with Optimized DNS: Connections are routed directly to the infrastructure closest to the exchange, reducing latency by eliminating unnecessary hops and aggregation points.Enhanced Authorization: Authorization now supports query-string, URL path, header, or JWT (JSON Web Token), removing the need for the API key field in the hello message.Precise Symbol Filtering: Requires exact symbol identifiers, with error messaging for invalid symbols while keeping the connection active. Supports both our format and the exchange format for symbol identifiers.Supported Data Types: Includes quote, trade, and book data types for comprehensive data access.INTEGRATIONS​Market Data API: We have integrated our Market Data API with the BITRUE exchange.EMS Trading API: Integrated the Institutional API using FIX.EMS Trading API: Refreshed our integration with Poloniex to utilize their newest APIIMPROVEMENTS​API Limits: X-CoinAPI-Limits: ForceInclude header is no longer interpreted on our side and information about the Limits is provided in each API Call response headers.Support: We have added support for the Coinbase Advanced API (WebSocket) to our EMS API. EMS Trading API: We have also conducted various tests on our existing integrations and made a few improvements.WebSocket DS API:Better Latency: By routing connections directly to the nearest infrastructure to the exchange, one hop in the data transmission path is eliminated, resulting in faster data delivery.Optimized for High Volume: Designed to handle high data volumes efficiently, addressing the limitations of the original WebSocket API under high traffic conditions.ONGOING SUPPORT​WebSocket API V1: Continued support with no plans for deprecation. Users can continue using the V1 API as usual while benefiting from the new features of the WebSocket DS API.May, 2024​INTEGRATIONS​Market Data API: Integration of BitMEX Options - Users can now trade options for BTC, ETH, DOGE, SOL, BNB, and XRP with multiple expiration dates. The new multi-coin margining system supports BTC, USDT, and USDC.Market Data API: Reintegration with LMAX Digital exchangeFEATURES​Market Data API: New feature to access on-chain addresses for each asset, including details such as chain ID, network ID, and specific addresses for networks like ARBITRUM and ETHEREUM.Customer Portal: Introduced Traces View to provide detailed logs of all API calls, including filtering options for time ranges and HTTP status. This feature enhances transparency and allows real-time monitoring of API interactions.April, 2024​FEATURES​Index API: We’ve released the Alpha version of the feature with the IDX_REFRATE_VWAP indexes family. Values have been filled backward for almost 15 years. Current values are also available. Index endpoints have been refreshed to reflect available operations and fit usage scenarios. The documentation is updated.Index API: The feature is designed to give a comprehensive view of the market by aggregating data from many sources. This can be particularly useful for traders and investors who want to get a broad overview of the market conditions. More information about the Index API can be found at https://docs.coinapi.io/market-data/rest-api/indexesCoinAPI SDK: .NET console application for SDK exchange data throughput/latency testsMarket Data WebSocket API: We added the possibility to subscribe to any asset pair in exchange rates (previously only USD or stablecoins were allowed on the quote).Market Data REST API: In the metadata of assets, for each asset, we now provide the on-chain addresses per network chain.IMPROVEMENTS​Status Page: We are now collecting new Prometheus metrics from the integrations that will be charted in Grafana. In the next step, we will provide dashboards with performance metrics for our API, so that customers have more insight into our statistics.Customer Portal: A new, more transparent view of subscriptions is introduced: https://customerportal.coinapi.io/subscriptionsMarket Data API: Exchange Rates API – Historical Exchange Rates using now the same data source as Index API.Market Data API: Multiple unrelated stability and latency improvements executed.INTEGRATIONS​Market Data API: General stability and performance improvements for DERIBIT, POLONIEXFTS, CRYPTOCOMNOTES​Websocket API: Changed book data type to require a defined filter in the hello or subscribe messageMarch, 2024​FEATURES​Market Data WebSocket API: Added 2 new messages (subscribe and unsubscribe) to allow control the state of the connection without repeating the complete state using hello message at every change. IMPROVEMENTS​Market Data REST API: Added example responses in the REST API in OpenAPI and in the documentation.Market Data API: Several improvements exeucted for the BEQUANT CRYPTOCOM HUOBIFTS~ BITKUB data sources.Market Data REST API: OHLCV by Exchange endpoint can now be called while time_start and time_end crossing midnight UTC.Market Data API: Multiple unrelated stability and latency improvements executed.Documentation: Added the API limits and billing metrics page.Documentation: Added the performance testing guide page.BUG FIXES​Market Data REST API: Resolved issue causing the REST API Credits to be counted incorrectly while having multiple API Keys for some customers.February, 2024​FEATURES​Market Data REST API: Added Index API feature for the testing and early feedback in alpha version.Market Data REST API: Added OHLCV historical data by exchange.IMPROVEMENTS​Documentation: Added the EMS Trading API QuickStart How-to Guide.Website: Released Metadata Explorer covering the exchanges and symbols that we support.January, 2024​BREAKING CHANGES​EMS API: Public release of the product, promotion from the beta phase.IMPROVEMENTS​Market Data API: Increased stability and reduced latency by 50% for the Exchange Rates and OHLCV endpoints.Support: Intoduced AI Bot that has the information about the product and answering questions on the support.Market Data API: Increased the frequency and stability of the data feeds reducing the latencies and variance of latencies.Documentation: Migrating the FAQ section to the documentation.Website: Improved free plan subscription flow.INTEGRATIONS​Market Data API: Added new integration DYDX to the DYDX v3.EMS API: Added new integration DYDX to the DYDX v3.FEATURES​Market Data FIX API: Improved feed L2 feed to make sure each L2 update is trackable to specific L3 updates if the data source distributing data in L3 format.BUG FIXES​EMS API: Resolved issue related to the fact that we reported errors on invalid orders received from the customer side in non descriptive manner.NOTES​We focused mostly on the stability of the platform and improvements that we can execute on multiple fronts.Was this section helpful?12345PreviousBlockchain BlockJuly, 2024June, 2024May, 2024April, 2024March, 2024February, 2024January, 2024Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/changelog)"
559,i.io market data rest api#request limit  apikey,"i.io market data rest api#request limit  apikey.   REST API | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIOn this pageVersion: v1REST APIRESTful endpoint provides the widest range of data, based on HTTP protocol which works in Request-Reply scheme.Implemented Standards:HTTP1.0HTTP1.1HTTP2.0OpenAPI v3Note: We adhere to the OpenAPI standards for documenting our API.OpenAPI Specification​To access our API's OpenAPI specification, you can use the following link: OpenAPI v3If you need to import the OpenAPI file into software like Postman, simply copy and paste the link below:https://raw.githubusercontent.com/coinapi/coinapi-sdk/master/data-api/coinapi-marketdata-rest.yamlEndpoints​EnviromentEncryptionValueProductionYeshttps://rest.coinapi.io/ProductionNohttp://rest.coinapi.io/infoFor real-time market data streaming, you should use WebSockets. REST API only supports pooling, meaning you can periodically request the current market data state. In streaming, you subscribe and data or updates are delivered to you continuously.General​If you want to learn how to authenticate to this API, you can find detailed instructions and guidance in authentication section of this documentation.HTTP Requests​Each HTTP request must contain the header Accept: application/json as all our responses are in JSON format.We encourage you to use the HTTP request header Accept-Encoding: deflate, gzip for all requests. This will indicate to us that we can deliver compressed data to you which on your side should be decompressed transparently.tipBy allowing data compression you are lowering bandwidth requirements by approximately 80%. This is important for requesting large amounts of data or using WebSocket Streaming API, as we can deliver data to you faster and more effectively.HTTP Success​Successful HTTP responses have the status code 200 and the body in a format according to documentation of the requested resource.infoYou should always check that your HTTP response status code is equal to 200, otherwise the requested was not successful.HTTP Errors​Error message is returned in JSON structured like this:{ ""error"": ""Invalid API key""}All HTTP requests with response status codes different to 200 must be considered as failed and you should expect additional JSON inside the body of the response with the error message encapsulated inside it as shown in the example. We use the following error codes:Error CodeMeaning400Bad Request -- There is something wrong with your request401Unauthorized -- Your API key is wrong403Forbidden -- Your API key doesnt't have enough privileges to access this resource429Too many requests -- You have exceeded your API key rate limits550No data -- You requested specific single item that we don't have at this moment.infoGood practice is to store all error messages somewhere along with request data for further manual review.Output data format​By default we are using JSON output data format for all of our endpoints, you can control format of data by using output_format variable in query string parameters.URL Parameters​ParameterTypeDescriptionoutput_formatstringOutput data format (optional, default value is json, possible values are json, xml or csv)csv_include_headerboolIgnore header line in CSV output? (optional, default value is true, true to include CSV header line, false otherwise)csv_include_quotesboolEncapsulate strings with quotes in CSV output? (optional, default value is false, true to encapsulate all strings with "", false to leave them unquoted)csv_exclude_colstringComma delimited list of column names to ignore in CSV output (optional, by default all columns are included)csv_set_delimiterstringCharacter that will be used as column delimiter in CSV output (optional, default value is ;)csv_set_dec_markstringCharacter that will be used as decimal separator in CSV output (optional, default value is .)csv_set_timeformatstringFormat for datetime type in CSV output or unix for unix timestamp (optional, default value is yyyy-MM-ddTHH:mm:ss.fffffffZ)csv_set_newlinestringNew line type (optional, default value is unix, possible values win, mac, unix)Excel / G-Sheets​There are several ways to use data from our REST API inside the Excel, Google Sheets, or similar calculation sheet application. This section will do as best as possible to keep all information up to date on how you could load the data into these applications. Feel free to contact support if we are missing an option.CSV download, import:​Open the data in the CSV format from the browser eg. https://rest.coinapi.io/v1/exchangerate/USD?apikey=YOUR_API_KEY&invert=true&output_format=csvSave the data to the file with the .csv extension.Use the file saved and import it into the software.When configuring import, refer to the parameters like delimiter from the Output data formatThe platform-independent way described above is based on CSV but could also be used in other formats like JSON and XML as long as the software support it, but the import procedure needs to be adjusted accordingly.Microsoft Excel​Use PowerQuery to load the URL directly into the CSV import without saving the file locally. Use the =WEBSERVICE function to load the API response directly into the sheet, but this will not parse the data; additional processing is required.Google Sheets​Use =IMPORT function to load the REST API endpoint and automatically parse the CSV format data into the cells. eg. =IMPORTDATA(""https://rest.coinapi.io/v1/exchangerate/USD?apikey=YOUR_API_KEY&invert=true&output_format=csvOpenOffice Calc​Select the menu Insert -> Sheet From File, 2. In the Insert dialog, put the URL eg. https://rest.coinapi.io/v1/exchangerate/USD?apikey=YOUR_API_KEY&invert=true&output_format=csv in the File Name box at the bottom. Set the drop-down list next to that to Web Page Query and click Open. The Text Import dialog opens where you can change the defaults if needed. Authentication​API Key: ApiKeyCoinApi API key needed to access the endpointsSecurity Scheme Type:apiKeyHeader parameter name:X-CoinAPI-KeyContactCOINAPI LTD: [email protected]URL: https://www.coinapi.ioLicenseMIT LicenseWas this section helpful?12345PreviousAPI limits and billingNextExchange RatesOpenAPI SpecificationEndpointsGeneralHTTP RequestsOutput data formatExcel / G-SheetsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api#request-limit--apikey)"
560,i.io market data websocket endpoints,"i.io market data websocket endpoints.   Endpoints | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1EndpointsGeneralMessagesWebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideWebSocket API V1EndpointsEndpointsEnviromentEncryptionValueProductionYeswss://ws.coinapi.io/v1/ProductionNows://ws.coinapi.io/v1/For testing, debugging and development purposes we are recommending:wscat client from the npm package repository: https://github.com/websockets/wscatsandy standalone WebSocket client with our message templates available at: https://app.gosandy.io/?url=https://raw.githubusercontent.com/coinapi/coinapi-sdk/master/data-api/sandy-ws-v1.json&u=ArWas this section helpful?12345PreviousWebSocket API V1NextGeneralCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/websocket/endpoints)"
561,i.io cdn cgi l email protection#f1828481819e8385b1929e989f908198df989e,"i.io cdn cgi l email protection#f1828481819e8385b1929e989f908198df989e.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 8aad26cc58074114 •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#f1828481819e8385b1929e989f908198df989e)"
562,i.io ems api rest api balances get balances,"i.io ems api rest api balances get balances.   Get balances | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIREST APIBalancesGet balancesOrdersPositionsWebSocket APIFIX APISelf Hosted GuideREST APIBalancesGet balancesGet balancesGET /v1/balancesGet current currency balance from all or single exchange.Query Parametersexchange_id stringFilter the balances to the specific exchange.Responses200490Collection of balances.application/jsonSchemaExample (from schema)SchemaArray [exchange_id stringExchange identifier used to identify the routing destination.data object[]Array [asset_id_exchange stringExchange currency code.asset_id_coinapi stringCoinAPI currency code.balance doubleValue of the current total currency balance on the exchange.available doubleValue of the current available currency balance on the exchange that can be used as collateral.locked doubleValue of the current locked currency balance by the exchange.last_updated_by stringPossible values: [INITIALIZATION, BALANCE_MANAGER, EXCHANGE]Source of the last modification.rate_usd doubleCurrent exchange rate to the USD for the single unit of the currency.traded doubleValue of the current total traded.]][ { ""exchange_id"": ""KRAKEN"", ""data"": [  {  ""asset_id_exchange"": ""XBT"",  ""asset_id_coinapi"": ""BTC"",  ""balance"": 0.00134444,  ""available"": 0.00134444,  ""locked"": 0,  ""last_updated_by"": ""EXCHANGE"",  ""rate_usd"": 1355.12,  ""traded"": 0.007  } ] }]Exchange is unreachable.appliction/jsonSchemaExample (from schema)Schematype stringMessage type, constant.reject_reason RejectReasonPossible values: [OTHER, EXCHANGE_UNREACHABLE, EXCHANGE_RESPONSE_TIMEOUT, ORDER_ID_NOT_FOUND, INVALID_TYPE, METHOD_NOT_SUPPORTED, JSON_ERROR]Cause of rejection.exchange_id stringIf the message related to exchange, then the identifier of the exchange will be provided.message stringMessage text.rejected_message stringValue of rejected request, if available.{ ""type"": ""MESSAGE_REJECT"", ""reject_reason"": ""ORDER_ID_NOT_FOUND"", ""exchange_id"": ""BINANCE"", ""message"": ""Order with ID: BINANCE-7d8a-4888 not found"", ""rejected_message"": ""{\""client_order_id\"":\""BINANCE-7d8a-4888\"",\""exchange_id\"":\""BINANCE\"",\""type\"":\""ORDER_CANCEL_SINGLE_REQUEST\""}""}Loading...Was this section helpful?12345PreviousBalancesNextOrdersCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/rest-api/balances/get-balances)"
563,i.io market data rest api,"i.io market data rest api.   REST API | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIOn this pageVersion: v1REST APIRESTful endpoint provides the widest range of data, based on HTTP protocol which works in Request-Reply scheme.Implemented Standards:HTTP1.0HTTP1.1HTTP2.0OpenAPI v3Note: We adhere to the OpenAPI standards for documenting our API.OpenAPI Specification​To access our API's OpenAPI specification, you can use the following link: OpenAPI v3If you need to import the OpenAPI file into software like Postman, simply copy and paste the link below:https://raw.githubusercontent.com/coinapi/coinapi-sdk/master/data-api/coinapi-marketdata-rest.yamlEndpoints​EnviromentEncryptionValueProductionYeshttps://rest.coinapi.io/ProductionNohttp://rest.coinapi.io/infoFor real-time market data streaming, you should use WebSockets. REST API only supports pooling, meaning you can periodically request the current market data state. In streaming, you subscribe and data or updates are delivered to you continuously.General​If you want to learn how to authenticate to this API, you can find detailed instructions and guidance in authentication section of this documentation.HTTP Requests​Each HTTP request must contain the header Accept: application/json as all our responses are in JSON format.We encourage you to use the HTTP request header Accept-Encoding: deflate, gzip for all requests. This will indicate to us that we can deliver compressed data to you which on your side should be decompressed transparently.tipBy allowing data compression you are lowering bandwidth requirements by approximately 80%. This is important for requesting large amounts of data or using WebSocket Streaming API, as we can deliver data to you faster and more effectively.HTTP Success​Successful HTTP responses have the status code 200 and the body in a format according to documentation of the requested resource.infoYou should always check that your HTTP response status code is equal to 200, otherwise the requested was not successful.HTTP Errors​Error message is returned in JSON structured like this:{ ""error"": ""Invalid API key""}All HTTP requests with response status codes different to 200 must be considered as failed and you should expect additional JSON inside the body of the response with the error message encapsulated inside it as shown in the example. We use the following error codes:Error CodeMeaning400Bad Request -- There is something wrong with your request401Unauthorized -- Your API key is wrong403Forbidden -- Your API key doesnt't have enough privileges to access this resource429Too many requests -- You have exceeded your API key rate limits550No data -- You requested specific single item that we don't have at this moment.infoGood practice is to store all error messages somewhere along with request data for further manual review.Output data format​By default we are using JSON output data format for all of our endpoints, you can control format of data by using output_format variable in query string parameters.URL Parameters​ParameterTypeDescriptionoutput_formatstringOutput data format (optional, default value is json, possible values are json, xml or csv)csv_include_headerboolIgnore header line in CSV output? (optional, default value is true, true to include CSV header line, false otherwise)csv_include_quotesboolEncapsulate strings with quotes in CSV output? (optional, default value is false, true to encapsulate all strings with "", false to leave them unquoted)csv_exclude_colstringComma delimited list of column names to ignore in CSV output (optional, by default all columns are included)csv_set_delimiterstringCharacter that will be used as column delimiter in CSV output (optional, default value is ;)csv_set_dec_markstringCharacter that will be used as decimal separator in CSV output (optional, default value is .)csv_set_timeformatstringFormat for datetime type in CSV output or unix for unix timestamp (optional, default value is yyyy-MM-ddTHH:mm:ss.fffffffZ)csv_set_newlinestringNew line type (optional, default value is unix, possible values win, mac, unix)Excel / G-Sheets​There are several ways to use data from our REST API inside the Excel, Google Sheets, or similar calculation sheet application. This section will do as best as possible to keep all information up to date on how you could load the data into these applications. Feel free to contact support if we are missing an option.CSV download, import:​Open the data in the CSV format from the browser eg. https://rest.coinapi.io/v1/exchangerate/USD?apikey=YOUR_API_KEY&invert=true&output_format=csvSave the data to the file with the .csv extension.Use the file saved and import it into the software.When configuring import, refer to the parameters like delimiter from the Output data formatThe platform-independent way described above is based on CSV but could also be used in other formats like JSON and XML as long as the software support it, but the import procedure needs to be adjusted accordingly.Microsoft Excel​Use PowerQuery to load the URL directly into the CSV import without saving the file locally. Use the =WEBSERVICE function to load the API response directly into the sheet, but this will not parse the data; additional processing is required.Google Sheets​Use =IMPORT function to load the REST API endpoint and automatically parse the CSV format data into the cells. eg. =IMPORTDATA(""https://rest.coinapi.io/v1/exchangerate/USD?apikey=YOUR_API_KEY&invert=true&output_format=csvOpenOffice Calc​Select the menu Insert -> Sheet From File, 2. In the Insert dialog, put the URL eg. https://rest.coinapi.io/v1/exchangerate/USD?apikey=YOUR_API_KEY&invert=true&output_format=csv in the File Name box at the bottom. Set the drop-down list next to that to Web Page Query and click Open. The Text Import dialog opens where you can change the defaults if needed. Authentication​API Key: ApiKeyCoinApi API key needed to access the endpointsSecurity Scheme Type:apiKeyHeader parameter name:X-CoinAPI-KeyContactCOINAPI LTD: [email protected]URL: https://www.coinapi.ioLicenseMIT LicenseWas this section helpful?12345PreviousAPI limits and billingNextExchange RatesOpenAPI SpecificationEndpointsGeneralHTTP RequestsOutput data formatExcel / G-SheetsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api)"
564,i.io naas api bitcoin Methods getmempoolinfo,"i.io naas api bitcoin Methods getmempoolinfo.   getmempoolinfo | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetmempoolinfoOn this pagegetmempoolinfoOverview​The 'getmempoolinfo' Returns information about the active state of the TX memory pool.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KE' \ --body-data '{""jsonrpc"":""1.0"",""id"":1,""method"":""getmempoolinfo"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""getmempoolinfo\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""getmempoolinfo"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({""jsonrpc"": ""2.0"",""method"": ""getmempoolinfo"",""params"": [],""id"": 1})headers = {'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY','Content-Type': 'application/json','accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""getmempoolinfo"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""getmempoolinfo"",""params"": [],""id"":1}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"")req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({""jsonrpc"": ""2.0"",""method"": ""getmempoolinfo"",""params"": [],""id"": 1})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""getmempoolinfo\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​This method does not require any parameters.Response​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""result"": 1234567.890123}result: The result is a JSON object with the following fields: loaded: It's true if the mempool is fully loaded otherwise false size: The current transaction count bytes: The sum of all virtual transaction sizes as defined in BIP 141. Differs from actual serialized size because witness data is discounted usage: Total memory usage for the mempool total_fee: The total fees for the mempool in BTC, ignoring modified fees through prioritisetransaction maxmempool: Maximum memory usage for the mempool mempoolminfee: Minimum fee rate in BTC/kB for tx to be accepted minrelaytxfee: Current minimum relay fee for transactions incrementalrelayfee: The minimum fee rate increment for mempool limiting or replacement in BTC/kvB unbroadcastcount: Current number of transactions that haven't passed initial broadcast yet fullrbf: It's true if the mempool accepts RBF without replaceability signaling inspection otherwise falseWas this section helpful?12345PreviousgetmempoolentryNextgetmininginfoOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getmempoolinfo)"
565,i.io faq general Did you offer discount for University non profit research only usage,"i.io faq general Did you offer discount for University non profit research only usage.   Did you offer discount for University/non-profit/research-only usage? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralDid you offer discount for University/non-profit/research-only usage?On this pageDid you offer discount for University/non-profit/research-only usage?How to apply the discount for CoinAPI​Kindly settle the full amount of the subscription using your university domain as a requirement. Then send the university email address and proof of payment to us. We will apply the discount internally, then half of the payment will be credited into your account and it will be used to cover the next invoice.How to apply the discount for CryptoTick​We offer a 50% discount if you will purchase from the university domain for non-profit/research-only use for the CoinAPI and CryptoTick products if you will disclose us as the data source in any public paper that will be produced based on the data.In that case use coupon code: edu-nonprofit-50Was this section helpful?12345PreviousDid you have market data in flat files?NextDo you have a Status Page?How to apply the discount for CoinAPIHow to apply the discount for CryptoTickCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general/Did-you-offer-discount-for-University-non-profit-research-only-usage)"
566,i.io market data rest api metrics historical metrics for the exchange,"i.io market data rest api metrics historical metrics for the exchange.   Historical metrics for the exchange | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsCurrent metrics for given assetCurrent metrics for given exchangeCurrent metrics for given symbolHistorical metrics for assetHistorical metrics for symbolHistorical metrics for the exchangeListing of all supported metrics by CoinAPIListing of all supported exchange metricsListing of all supported metrics for assetListing of all supported metrics for symbolOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIMetricsHistorical metrics for the exchangeHistorical metrics for the exchangeGET /v1/metrics/exchange/historyGet exchange metrics history.Query Parametersmetric_id string requiredMetric identifier (from the Metrics -> Listing)exchange_id string requiredExchange identifier (from the Metadata -> Exchanges)time_start date-timeStarting time in ISO 8601time_end date-timeEnding time in ISO 8601time_format stringIf set, returned values will be in unix timestamp format (valid values: unix_sec, unix_millisec, unix_microsec, unix_nanosec)period_id stringIdentifier of requested timeseries period (e.g. 5SEC or 2MTH), default value is 1SEClimit int32Default value: 100Amount of items to return (optional, mininum is 1, maximum is 100000, default value is 100, if the parameter is used then every 100 output items are counted as one request)Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableGets or sets the symbol id.time date-timeGets or sets the time at which the value is recorded.value doubleGets or sets the value of the metric.][ { ""symbol_id"": ""string"", ""time"": ""2024-07-16T12:55:05.255Z"", ""value"": 0 }][ { ""time_period_start"": ""2023-07-03T14:29:02.0000000Z"", ""time_period_end"": ""2023-07-03T14:29:03.0000000Z"", ""time_open"": ""2023-07-03T14:29:02.5699837Z"", ""time_close"": ""2023-07-03T14:29:02.5699837Z"", ""first"": 0, ""last"": 0, ""min"": 0, ""max"": 0, ""count"": 0, ""sum"": 30668.476938 }, { ""time_period_start"": ""2023-07-03T14:29:03.0000000Z"", ""time_period_end"": ""2023-07-03T14:29:04.0000000Z"", ""time_open"": ""2023-07-03T14:29:03.1076159Z"", ""time_close"": ""2023-07-03T14:29:03.1076159Z"", ""first"": 0, ""last"": 0, ""min"": 0, ""max"": 0, ""count"": 0, ""sum"": 0.05485331 }, { ""time_period_start"": ""2023-07-03T14:29:04.0000000Z"", ""time_period_end"": ""2023-07-03T14:29:05.0000000Z"", ""time_open"": ""2023-07-03T14:29:04.5792149Z"", ""time_close"": ""2023-07-03T14:29:04.9459786Z"", ""first"": 0, ""last"": 0, ""min"": 0, ""max"": 0, ""count"": 0, ""sum"": 7.0257000000000005 }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableGets or sets the symbol id.time date-timeGets or sets the time at which the value is recorded.value doubleGets or sets the value of the metric.][ { ""symbol_id"": ""string"", ""time"": ""2024-07-16T12:55:05.255Z"", ""value"": 0 }][ { ""time_period_start"": ""2023-07-03T14:29:02.0000000Z"", ""time_period_end"": ""2023-07-03T14:29:03.0000000Z"", ""time_open"": ""2023-07-03T14:29:02.5699837Z"", ""time_close"": ""2023-07-03T14:29:02.5699837Z"", ""first"": 0, ""last"": 0, ""min"": 0, ""max"": 0, ""count"": 0, ""sum"": 30668.476938 }, { ""time_period_start"": ""2023-07-03T14:29:03.0000000Z"", ""time_period_end"": ""2023-07-03T14:29:04.0000000Z"", ""time_open"": ""2023-07-03T14:29:03.1076159Z"", ""time_close"": ""2023-07-03T14:29:03.1076159Z"", ""first"": 0, ""last"": 0, ""min"": 0, ""max"": 0, ""count"": 0, ""sum"": 0.05485331 }, { ""time_period_start"": ""2023-07-03T14:29:04.0000000Z"", ""time_period_end"": ""2023-07-03T14:29:05.0000000Z"", ""time_open"": ""2023-07-03T14:29:04.5792149Z"", ""time_close"": ""2023-07-03T14:29:04.9459786Z"", ""first"": 0, ""last"": 0, ""min"": 0, ""max"": 0, ""count"": 0, ""sum"": 7.0257000000000005 }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableGets or sets the symbol id.time date-timeGets or sets the time at which the value is recorded.value doubleGets or sets the value of the metric.][ { ""symbol_id"": ""string"", ""time"": ""2024-07-16T12:55:05.256Z"", ""value"": 0 }][ { ""time_period_start"": ""2023-07-03T14:29:02.0000000Z"", ""time_period_end"": ""2023-07-03T14:29:03.0000000Z"", ""time_open"": ""2023-07-03T14:29:02.5699837Z"", ""time_close"": ""2023-07-03T14:29:02.5699837Z"", ""first"": 0, ""last"": 0, ""min"": 0, ""max"": 0, ""count"": 0, ""sum"": 30668.476938 }, { ""time_period_start"": ""2023-07-03T14:29:03.0000000Z"", ""time_period_end"": ""2023-07-03T14:29:04.0000000Z"", ""time_open"": ""2023-07-03T14:29:03.1076159Z"", ""time_close"": ""2023-07-03T14:29:03.1076159Z"", ""first"": 0, ""last"": 0, ""min"": 0, ""max"": 0, ""count"": 0, ""sum"": 0.05485331 }, { ""time_period_start"": ""2023-07-03T14:29:04.0000000Z"", ""time_period_end"": ""2023-07-03T14:29:05.0000000Z"", ""time_open"": ""2023-07-03T14:29:04.5792149Z"", ""time_close"": ""2023-07-03T14:29:04.9459786Z"", ""first"": 0, ""last"": 0, ""min"": 0, ""max"": 0, ""count"": 0, ""sum"": 7.0257000000000005 }]SchemaExample (from schema)Example responseSchemaArray [symbol_id string nullableGets or sets the symbol id.time date-timeGets or sets the time at which the value is recorded.value doubleGets or sets the value of the metric.][ { ""symbol_id"": ""string"", ""time"": ""2024-07-16T12:55:05.256Z"", ""value"": 0 }][ { ""time_period_start"": ""2023-07-03T14:29:02.0000000Z"", ""time_period_end"": ""2023-07-03T14:29:03.0000000Z"", ""time_open"": ""2023-07-03T14:29:02.5699837Z"", ""time_close"": ""2023-07-03T14:29:02.5699837Z"", ""first"": 0, ""last"": 0, ""min"": 0, ""max"": 0, ""count"": 0, ""sum"": 30668.476938 }, { ""time_period_start"": ""2023-07-03T14:29:03.0000000Z"", ""time_period_end"": ""2023-07-03T14:29:04.0000000Z"", ""time_open"": ""2023-07-03T14:29:03.1076159Z"", ""time_close"": ""2023-07-03T14:29:03.1076159Z"", ""first"": 0, ""last"": 0, ""min"": 0, ""max"": 0, ""count"": 0, ""sum"": 0.05485331 }, { ""time_period_start"": ""2023-07-03T14:29:04.0000000Z"", ""time_period_end"": ""2023-07-03T14:29:05.0000000Z"", ""time_open"": ""2023-07-03T14:29:04.5792149Z"", ""time_close"": ""2023-07-03T14:29:04.9459786Z"", ""first"": 0, ""last"": 0, ""min"": 0, ""max"": 0, ""count"": 0, ""sum"": 7.0257000000000005 }]Loading...Was this section helpful?12345PreviousHistorical metrics for symbolNextListing of all supported metrics by CoinAPICopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/metrics/historical-metrics-for-the-exchange)"
567,i.io naas api bitcoin Methods getblockchainInfo,"i.io naas api bitcoin Methods getblockchainInfo.   getblockchaininfo | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetblockchaininfoOn this pagegetblockchaininfoOverview​The 'getblockchaininfo ' method returns a comprehensive object that encapsulates various details about the current state of blockchain processing.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""getblockchaininfo"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""getblockchainInfo\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""getblockchainInfo"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""2.0"", ""method"": ""getblockchainInfo"", ""params"": [], ""id"": 1})headers = { 'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type': 'application/json', 'accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""getblockchainInfo"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() { url := ""https://bitcoin-mainnet.node.coinapi.io"" method := ""POST"" payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""getblockchainInfo"",""params"": [],""id"":1}`) client := &http.Client { } req, err := http.NewRequest(method, url, payload) if err != nil { fmt.Println(err) return } req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"") req.Header.Add(""Content-Type"", ""application/json"") req.Header.Add(""accept"", ""application/json"") res, err := client.Do(req) if err != nil { fmt.Println(err) return } defer res.Body.Close() body, err := ioutil.ReadAll(res.Body) if err != nil { fmt.Println(err) return } fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""method"": ""getblockchainInfo"", ""params"": [], ""id"": 1})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder().build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""2.0\"",\r \""id\"": \""1\"",\r \""method\"": \""getblockchainInfo\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​This method does not require any parameters.Response​An object containing the following properties:chain: Specifies the name of the network currently in use (options include main, test, or regtest).blocks: Represents the height of the most-work fully-validated chain. Note that the genesis block is denoted as height 0.headers: Indicates the total number of headers that have been validated up to this point.bestblockhash: Provides the hash of the block that is currently considered the best block.difficulty: Displays the difficulty level associated with the block at the highest height.time: Specifies the timestamp associated with the current best block.mediantime: Denotes the median time calculated for the current best block.verificationprogress: Gives an estimated value of the verification progress, ranging between 0 and 1.initialblockdownload: (Debug Information) An estimation that indicates whether the node is in the Initial Block Download mode.chainwork: Represents the total amount of work in the active chain, displayed in hexadecimal format.size_on_disk: An estimation of the combined size of the block and undo files stored on the disk.pruned: A flag that indicates whether the blocks are subject to pruning or not.warnings: Contains any warnings related to the network and blockchain.error: In case of an error, this field will contain the respective error message.Was this section helpful?12345PreviousgetblockNextgetblockcountOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getblockchainInfo)"
568,i.io naas api ethereum Methods eth submitWork,"i.io naas api ethereum Methods eth submitWork.   eth_submitWork | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_submitWorkOn this pageeth_submitWorkOverview​The ""eth_submitWork"" is used for submitting a proof-of-work solution.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'content-type: application/json' \  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data ' {  ""id"": 1,  ""jsonrpc"": ""2.0"",  ""method"": ""eth_submitWork""}'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_submitWork\""}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [ CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"", CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => """", CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 30, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => ""POST"", CURLOPT_POSTFIELDS => json_encode([ 'id' => 1, 'jsonrpc' => '2.0', 'method' => 'eth_submitWork' ]), CURLOPT_HTTPHEADER => [ ""accept: application/json"", ""content-type: application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" ],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) { echo ""cURL Error #:"" . $err;} else { echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""method"": ""eth_submitWork""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text)const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({id: 1, jsonrpc: '2.0', method: 'eth_submitWork'})};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_submitWork\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_submitWork\""}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""method\"":\""eth_submitWork\""}"");Request request = new Request.Builder() .url(""https://ethereum-mainnet-geth-archive.node.coinapi.io"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​Response​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""error"": {  ""code"": -32601,  ""message"": """" }}Was this section helpful?12345Previouseth_signTransactionNexteth_subscribeOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_submitWork)"
569,i.io general faq security and privacy What information do I need to provide in order to subscribe,"i.io general faq security and privacy What information do I need to provide in order to subscribe.   What information do I need to provide in order to subscribe? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIBilling and SubscriptionsSecurity and PrivacyWhat CDN does the API use?What information do I need to provide in order to subscribe?What security mechanisms does CoinAPI use to protect my data?What should I do if my API key was compromised?GlossaryChangelogFAQSecurity and PrivacyWhat information do I need to provide in order to subscribe?What information do I need to provide in order to subscribe?To use our API product, you will need to provide us:Your email address. We use this to deliver an API key.Payment information, if you are subscribing to a paid plan.You may subscribe to our plans via the pricing page here: https://www.coinapi.io/market-data-api/pricingWas this section helpful?12345PreviousWhat CDN does the API use?NextWhat security mechanisms does CoinAPI use to protect my data?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/security-and-privacy/What-information-do-I-need-to-provide-in-order to-subscribe)"
570,i.io general faq general How to avoid losing the messages or delay on the WebSocket,"i.io general faq general How to avoid losing the messages or delay on the WebSocket.   How to avoid losing the messages or delay on the WebSocket? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralHow to avoid losing the messages or delay on the WebSocket?How to avoid losing the messages or delay on the WebSocket?The problem of lost messages in the WebSocket stream can be identified:1. directly on the stream by the gaps in the sequence numberPossible causes are limited and are related to the:1. Bandwidth bottleneck2. Lack of the separation between the receiving thread and parsing, processing operations3. No CPU affinity on the receiving thread4. CPU bottleneck on the receiving thread5. Infrequent collection of the data from the TCP stack6. Heap allocation per message and Garbage Collector pressureIf your client is unable to receive messages fast enough because of the issues listed above then these things will happen:1. Your client TCP stack will be full, and TCP window will be closed to inform us that you can't receive more data and we should not send to you2. Our TCP stack queue will be full because we couldn't send you more data3. We will internally create a limited queue of the messages to deliver when the channel is available again (this could cause the delay on the real-time data before the gaps will appear)4. We will start dropping the messagesMore information is available by googling ""TCP Flow Control"".Was this section helpful?12345PreviousHow long does it take to integrate CoinAPI?NextHow to be notified about the issues/incidents?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/How-to-avoid-losing-the-messages-or-delay-on-the-WebSocket)"
571,i.io faq api,"i.io faq api.   API | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQAPIAPIWas this section helpful?12345PreviousHow do I get an additional API key?NextDo you accept bank or wire transfers?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/api)"
572,i.io market data rest api metrics current metrics for given exchange,"i.io market data rest api metrics current metrics for given exchange.   Current metrics for given exchange | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIExchange RatesIndexesMetadataMetricsCurrent metrics for given assetCurrent metrics for given exchangeCurrent metrics for given symbolHistorical metrics for assetHistorical metrics for symbolHistorical metrics for the exchangeListing of all supported metrics by CoinAPIListing of all supported exchange metricsListing of all supported metrics for assetListing of all supported metrics for symbolOhlcvOrder BookOrder Book L3QuotesTradesWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideREST APIMetricsCurrent metrics for given exchangeCurrent metrics for given exchangeGET /v1/metrics/exchange/currentGet current exchange metrics values.Query Parametersmetric_id stringThe metric identifier (from the Metrics -> Listing)exchange_id string requiredThe exchange identifier (from the Metadata -> Exchanges)Responses200successful operationtext/plainapplication/jsontext/jsonapplication/x-msgpackSchemaExample (from schema)Example responseSchemaArray [entry_time date-timeGets or sets the entry time for the data point.recv_time date-timeGets or sets the received time for the data point.exchange_id string nullableGets or sets the identifier for the exchange.asset_id string nullableGets or sets the identifier for the asset.symbol_id string nullableGets or sets the identifier for the symbol.metric_id string nullableGets or sets the identifier for the metric.value_decimal double nullableGets or sets the decimal value for the metric.value_text string nullableGets or sets the textual representation of the value for the metric.value_time date-time nullableGets or sets the timestamp value for the metric.][ { ""entry_time"": ""2024-07-16T12:55:05.254Z"", ""recv_time"": ""2024-07-16T12:55:05.254Z"", ""exchange_id"": ""string"", ""asset_id"": ""string"", ""symbol_id"": ""string"", ""metric_id"": ""string"", ""value_decimal"": 0, ""value_text"": ""string"", ""value_time"": ""2024-07-16T12:55:05.254Z"" }][ { ""entry_time"": ""2023-06-16T07:55:07.2787756Z"", ""recv_time"": ""2023-06-16T07:55:07.0010000Z"", ""exchange_id"": ""DERIBIT"", ""metric_id"": ""DERIVATIVES_MARK_PRICE"", ""value_decimal"": 0.0086 }, { ""entry_time"": ""2023-06-26T07:05:39.9865633Z"", ""recv_time"": ""2023-06-26T07:05:39.9000000Z"", ""exchange_id"": ""DERIBIT"", ""metric_id"": ""IV_UNDERLYING_PRICE"", ""value_decimal"": 30743.29 }, { ""entry_time"": ""2023-06-26T07:05:17.0768012Z"", ""recv_time"": ""2023-06-26T07:05:16.8420000Z"", ""exchange_id"": ""DERIBIT"", ""metric_id"": ""DERIVATIVES_MARK_PRICE_IV"", ""value_decimal"": 60.77 }]SchemaExample (from schema)Example responseSchemaArray [entry_time date-timeGets or sets the entry time for the data point.recv_time date-timeGets or sets the received time for the data point.exchange_id string nullableGets or sets the identifier for the exchange.asset_id string nullableGets or sets the identifier for the asset.symbol_id string nullableGets or sets the identifier for the symbol.metric_id string nullableGets or sets the identifier for the metric.value_decimal double nullableGets or sets the decimal value for the metric.value_text string nullableGets or sets the textual representation of the value for the metric.value_time date-time nullableGets or sets the timestamp value for the metric.][ { ""entry_time"": ""2024-07-16T12:55:05.254Z"", ""recv_time"": ""2024-07-16T12:55:05.254Z"", ""exchange_id"": ""string"", ""asset_id"": ""string"", ""symbol_id"": ""string"", ""metric_id"": ""string"", ""value_decimal"": 0, ""value_text"": ""string"", ""value_time"": ""2024-07-16T12:55:05.254Z"" }][ { ""entry_time"": ""2023-06-16T07:55:07.2787756Z"", ""recv_time"": ""2023-06-16T07:55:07.0010000Z"", ""exchange_id"": ""DERIBIT"", ""metric_id"": ""DERIVATIVES_MARK_PRICE"", ""value_decimal"": 0.0086 }, { ""entry_time"": ""2023-06-26T07:05:39.9865633Z"", ""recv_time"": ""2023-06-26T07:05:39.9000000Z"", ""exchange_id"": ""DERIBIT"", ""metric_id"": ""IV_UNDERLYING_PRICE"", ""value_decimal"": 30743.29 }, { ""entry_time"": ""2023-06-26T07:05:17.0768012Z"", ""recv_time"": ""2023-06-26T07:05:16.8420000Z"", ""exchange_id"": ""DERIBIT"", ""metric_id"": ""DERIVATIVES_MARK_PRICE_IV"", ""value_decimal"": 60.77 }]SchemaExample (from schema)Example responseSchemaArray [entry_time date-timeGets or sets the entry time for the data point.recv_time date-timeGets or sets the received time for the data point.exchange_id string nullableGets or sets the identifier for the exchange.asset_id string nullableGets or sets the identifier for the asset.symbol_id string nullableGets or sets the identifier for the symbol.metric_id string nullableGets or sets the identifier for the metric.value_decimal double nullableGets or sets the decimal value for the metric.value_text string nullableGets or sets the textual representation of the value for the metric.value_time date-time nullableGets or sets the timestamp value for the metric.][ { ""entry_time"": ""2024-07-16T12:55:05.254Z"", ""recv_time"": ""2024-07-16T12:55:05.254Z"", ""exchange_id"": ""string"", ""asset_id"": ""string"", ""symbol_id"": ""string"", ""metric_id"": ""string"", ""value_decimal"": 0, ""value_text"": ""string"", ""value_time"": ""2024-07-16T12:55:05.254Z"" }][ { ""entry_time"": ""2023-06-16T07:55:07.2787756Z"", ""recv_time"": ""2023-06-16T07:55:07.0010000Z"", ""exchange_id"": ""DERIBIT"", ""metric_id"": ""DERIVATIVES_MARK_PRICE"", ""value_decimal"": 0.0086 }, { ""entry_time"": ""2023-06-26T07:05:39.9865633Z"", ""recv_time"": ""2023-06-26T07:05:39.9000000Z"", ""exchange_id"": ""DERIBIT"", ""metric_id"": ""IV_UNDERLYING_PRICE"", ""value_decimal"": 30743.29 }, { ""entry_time"": ""2023-06-26T07:05:17.0768012Z"", ""recv_time"": ""2023-06-26T07:05:16.8420000Z"", ""exchange_id"": ""DERIBIT"", ""metric_id"": ""DERIVATIVES_MARK_PRICE_IV"", ""value_decimal"": 60.77 }]SchemaExample (from schema)Example responseSchemaArray [entry_time date-timeGets or sets the entry time for the data point.recv_time date-timeGets or sets the received time for the data point.exchange_id string nullableGets or sets the identifier for the exchange.asset_id string nullableGets or sets the identifier for the asset.symbol_id string nullableGets or sets the identifier for the symbol.metric_id string nullableGets or sets the identifier for the metric.value_decimal double nullableGets or sets the decimal value for the metric.value_text string nullableGets or sets the textual representation of the value for the metric.value_time date-time nullableGets or sets the timestamp value for the metric.][ { ""entry_time"": ""2024-07-16T12:55:05.254Z"", ""recv_time"": ""2024-07-16T12:55:05.254Z"", ""exchange_id"": ""string"", ""asset_id"": ""string"", ""symbol_id"": ""string"", ""metric_id"": ""string"", ""value_decimal"": 0, ""value_text"": ""string"", ""value_time"": ""2024-07-16T12:55:05.254Z"" }][ { ""entry_time"": ""2023-06-16T07:55:07.2787756Z"", ""recv_time"": ""2023-06-16T07:55:07.0010000Z"", ""exchange_id"": ""DERIBIT"", ""metric_id"": ""DERIVATIVES_MARK_PRICE"", ""value_decimal"": 0.0086 }, { ""entry_time"": ""2023-06-26T07:05:39.9865633Z"", ""recv_time"": ""2023-06-26T07:05:39.9000000Z"", ""exchange_id"": ""DERIBIT"", ""metric_id"": ""IV_UNDERLYING_PRICE"", ""value_decimal"": 30743.29 }, { ""entry_time"": ""2023-06-26T07:05:17.0768012Z"", ""recv_time"": ""2023-06-26T07:05:16.8420000Z"", ""exchange_id"": ""DERIBIT"", ""metric_id"": ""DERIVATIVES_MARK_PRICE_IV"", ""value_decimal"": 60.77 }]Loading...Was this section helpful?12345PreviousCurrent metrics for given assetNextCurrent metrics for given symbolCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/rest-api/metrics/current-metrics-for-given-exchange)"
573,i.io ems api rest api,"i.io ems api rest api.   REST API | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIREST APIBalancesOrdersPositionsWebSocket APIFIX APISelf Hosted GuideREST APIOn this pageVersion: v1REST APIThis section will provide necessary information about the CoinAPI EMS REST API protocol. This API is also available in the Postman application: https://postman.coinapi.io/ Implemented Standards:HTTP1.0HTTP1.1HTTP2.0Endpoints​Deployment methodEnvironmentUrlManaged CloudProductionUse Managed Cloud REST API /v1/locations to get specific endpoints to each server site where your deployments spanSelf HostedProductionIP Address of the ems-gateway container/excecutable in the closest server site to the caller locationAuthentication​If the software is deployed as Self-Hosted then API do not require authentication as inside your infrastructure, your company is responsible for the security and access controls. If the software is deployed in our Managed Cloud, there are 2 methods for authenticating with us, you only need to use one:Custom authorization header named X-CoinAPI-Key with the API KeyQuery string parameter named apikey with the API KeyTLS Client Certificate from the `Managed Cloud REST API` (/v1/certificate/pem endpoint) while establishing a TLS session with us.Custom authorization header​You can authorize by providing additional custom header named X-CoinAPI-Key and API key as its value. Assuming that your API key is 73034021-THIS-IS-SAMPLE-KEY, then the authorization header you should send to us will look like: X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEYtipThis method is recommended by us and you should use it in production environments.Query string authorization parameter​You can authorize by providing an additional parameter named apikey with a value equal to your API key in the query string of your HTTP request. Assuming that your API key is 73034021-THIS-IS-SAMPLE-KEY and that you want to request all balances, then your query string should look like this: GET /v1/balances?apikey=73034021-THIS-IS-SAMPLE-KEYinfoQuery string method may be more practical for development activities.ContactCOINAPI LTD: [email protected]URL: https://www.coinapi.ioTerms of Servicehttps://www.coinapi.io/legalLicense28961Was this section helpful?12345PreviousGet site locationsNextBalancesEndpointsAuthenticationCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/rest-api)"
574,i.io general faq general How can I set custom timezone in the data,"i.io general faq general How can I set custom timezone in the data.   How can I set custom timezone in the data? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralHow can I set custom timezone in the data?How can I set custom timezone in the data?We do not support custom timezones, data is always processed in the UTC.If you need to operate in the custom timezone then input and output values should be converted on the client-side before a request is sent to us or output data processed.In the corner cases like OHLCV data on the higher than 1HRS periods (eg. 1DAY), you should execute queries only to the 1HRS period at the maximum and assemble higher periods like 1DAY on the client-side, as our 1DAY always starts and ends at the UTC midnight.Was this section helpful?12345PreviousExchange chart is different OHLCVNextHow do I enable overage?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/How-can-I-set-custom-timezone-in-the-data)"
575,i.io market data websocket general#hello message parameters,"i.io market data websocket general#hello message parameters.   General | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1EndpointsGeneralMessagesWebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideWebSocket API V1GeneralOn this pageGeneralHello OUT​Example hello message for trades subscription to all symbols from COINBASE and ITBIT exchange and additional for 2 selected symbols from BITSTAMP and BITFINEX exchange:{ ""type"": ""hello"", ""apikey"": ""73034021-THIS-IS-SAMPLE-KEY"", ""heartbeat"": false, ""subscribe_data_type"": [""trade""], ""subscribe_filter_exchange_id"": [ ""COINBASE"", ""ITBIT"" ], ""subscribe_filter_symbol_id"": [ ""BITSTAMP_SPOT_BTC_USD$"", ""BITFINEX_SPOT_BTC_LTC$"" ]}Another example of a hello message for subscription to quotes related to the BTC or ETH assets:{ ""type"": ""hello"", ""apikey"": ""73034021-THIS-IS-SAMPLE-KEY"", ""heartbeat"": false, ""subscribe_data_type"": [""quote""], ""subscribe_filter_asset_id"": [""BTC"", ""ETH""]}Another example of a hello message for subscription to quotes related to the BTC/USD asset pair:{ ""type"": ""hello"", ""apikey"": ""73034021-THIS-IS-SAMPLE-KEY"", ""heartbeat"": false, ""subscribe_data_type"": [""quote""], ""subscribe_filter_asset_id"": [""BTC/USD""]}Another example of a hello message for subscription of multiple data types from specific exchange:{ ""type"": ""hello"", ""apikey"": ""73034021-THIS-IS-SAMPLE-KEY"", ""heartbeat"": false, ""subscribe_data_type"": [""trade"", ""quote"", ""book20""] ""subscribe_filter_exchange_id"": [ ""BITSTAMP"" ]}Subscribe OUT​The WebSocket API has been enhanced to support dynamic subscription management through subscribe and unsubscribe messages. These allow for more granular control over the data streams without the need to resend the entire subscription scope as previously required with the hello message.To subscribe to additional data types or filters without overriding existing subscriptions, send a subscribe message:Example subscribe message for book data related to ""BTC"" and ""ETH"":{ ""type"": ""subscribe"", ""apikey"": ""a54fdcca-2d82-44c2-ae53-b95ab2363309"", ""heartbeat"": true, ""subscribe_data_type"": [""book""], ""subscribe_filter_asset_id"": [""BTC"", ""ETH""]}This message adds subscriptions to the specified data types and filters, augmenting any existing subscriptions maintained in the session.Unsubscribe OUT​Similarly, to remove specific data types or filters from your current subscription, send an unsubscribe message:Example unsubscribe message to remove book data subscription for ""BTC"":{ ""type"": ""unsubscribe"", ""apikey"": ""a54fdcca-2d82-44c2-ae53-b95ab2363309"", ""heartbeat"": true, ""subscribe_data_type"": [""book""], ""subscribe_filter_asset_id"": [""BTC""]}The unsubscribe message removes the specified subscriptions without affecting other existing subscriptions.Subscribe vs Hello​In the realm of subscription management, three key actions allow you to fine-tune your information feed according to evolving requirements:Subscribe: This action expands your current subscription scope by adding new elements without discarding any existing ones. It's particularly useful for tailoring your feed as your interests or information needs grow.Unsubscribe: Through this option, you can selectively remove specific elements from your current subscription. It's an efficient way to declutter your feed by eliminating content that no longer serves your needs, without affecting the rest of your subscriptions.Hello: Use this command to initiate a fresh start. It clears your existing subscription slate and sets up a new scope from scratch. Opt for this when a complete overhaul of your subscriptions is needed, rather than just an adjustment.After your WebSocket connection is established, you must send us a hello or subscribe message which contains:Stream preferences (Heartbeat and subscription details)API key for authorizationIf your message will be incorrect, we will send you error message and disconnect connection afterwards.Hello message can be repeated, each one will cause subscription scope override without interruption of your WebSocket connection.Message parameters​ParameterTypeDescriptiontypestringMessage type, must be equal to one of the values: hello, subscribe or unsubscribeapikeystringYour API keyheartbeatbooltrue to receive Heartbeat message every second, otherwise falsesubscribe_data_typestring[]List of data types you want to receive (required, possible values listed in table below)subscribe_filter_symbol_idstring[]Filter data to symbols whose identifiers match at least one of the listed prefixes. If symbol is ended with $ character then exact match is used instead of prefix match. (optional, if not provided then stream will not filtered by symbols)subscribe_filter_asset_idstring[]Filter data to messages which are related to the at least one of the listed asset identifiers or to specific asset pair (e.g. BTC/USD) (optional, if not provided then stream will not be filtered by assets)subscribe_filter_period_idstring[]Filter data to specific OHLCV periods (optional, if not provided then OHLCV stream will not be filtered by periods)subscribe_filter_exchange_idstring[]Filter data to symbols from the listed exchange identifiers (optional, if not provided then stream will not be filtered by exchanges)subscribe_update_limit_ms_quoteintMinimum delay in milliseconds between quote updates for the same symbol (optional)subscribe_update_limit_ms_book_snapshotintMinumum delay in milliseconds between book snapshot (book5, book20, book50) updates for the same symbol (optional)subscribe_update_limit_ms_exrateintMinumum delay in milliseconds between exchange rate updates for the same asset pair (optional)Data types​Listed below are all allowed values for subscribe_data_type variables from hello message. Data typeDescriptiontradeExecuted transactions feed (order book matches)quoteQuote updates feed (order book level 1)bookOrder book snapshots and updates feed (order book level 2, full order book snapshot and real-time updates). To use this data type you need to define a filter in the hello or subscribe message.book5Order book snapshots feed (order book level 2, 5 best levels from each side of book). To use this data type you need to define a filter in the hello or subscribe message.book20Order book snapshots feed (order book level 2, 20 best levels from each side of book). To use this data type you need to define a filter in the hello or subscribe message.book50Order book snapshots feed (order book level 2, 50 best levels from each side of book). To use this data type you need to define a filter in the hello or subscribe message.ohlcvOHLCV updates per symbol on periods between 1SEC and 1MINexrateExchange rate updates (VWAP-24H)assetAssets feed.exchangeExchanges feed.symbolSymbols feed.Error handling​Example JSON error message is structured like this:{ ""type"": ""error"", ""message"": ""Invalid API key""}You need to be prepared to receive an error message from us when you send something wrong; all errors are permanent and you should expect that the underlying WebSocket connection will be closed by us after sending an error message.infoGood practice is to store all error messages somewhere for further manual review.Data buffering​Data buffering JSON error message is structured like this:{ ""type"": ""error"", ""message"": ""Reached maximum allowed buffered messages for this connection.""}The stream will send the data to the client as fast as possible; this can result in a high volume of data in cases where the subscription scope is broad. If our server cannot write data to the stream because of the TCP backpressure most likely caused by your client is not reading the data fast enough, or there is not enough network bandwidth available, we will buffer the messages to allow your client to catch up. However, when the buffer is full, a disconnect will be initiated from the server-side, and the buffered messages are dropped, and they will not be resent to the client.One way to identify when your client is falling behind is to compare the CoinAPI time of the messages being received with your current time on the client and track this metric over time. Make sure your clock is synchronized correctly and do not have a drift.The possible causes of the buffering are limited and are related to:Bandwidth bottleneck, eg.Internet connection instabilityNot enough bandwidth to receive a full stream.Network card or link saturation.I am not receiving messages fast enough, eg.Lack of the thread separation between the (a) receiving thread or (b) parsing or (c) processing operations.No CPU affinity on the receiving thread.CPU bottleneck on the receiving thread.Infrequent collection of the data from the TCP stack.Heap allocation per message and Garbage Collector pressure.If your client is unable to receive messages fast enough because of the issues listed above, then these things will happen:Your client TCP stack will be full, and TCP window will be closed to inform us that you can't receive more data and we should not send to youOur TCP stack queue will be full because we couldn't send you more dataWe will internally create a limited queue of the messages to deliver when the channel is available again (this could cause the delay on the real-time data before the gaps will appear)If the queue is full, then we will disconnect you.To minimize the occurrence of disconnects:Make sure that your client is reading the stream fast enough. Typically you should not do any real processing work as you read the stream. Read the stream and hand the activity to another thread/process/data store to do your processing asynchronously.Make sure that your data center has inbound bandwidth sufficient to accomodate large sustained data volumes as well as significantly larger spikes (e.g. 10x normal volume). The current default queue size per connection is 131 072 messages.For more information please google: TCP Flow Control.Was this section helpful?12345PreviousEndpointsNextMessagesHello OUTSubscribe OUTUnsubscribe OUTSubscribe vs HelloMessage parametersData typesError handlingData bufferingCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/websocket/general#hello-message-parameters)"
576,i.io general faq api Why do some symbols have additional prefix,"i.io general faq api Why do some symbols have additional prefix.   Why do some symbols have additional prefix? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer EMS Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What is the rate limit for EMS Trading API?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQAPIWhy do some symbols have additional prefix?Why do some symbols have additional prefix?This is documented in the notice part of our API documentation for Symbols:In the unlikely event when the symbol_id for more than one market is the same. We will append the additional term prefixed with the _ at the end of the duplicated identifiers to differentiate them.More information can be found here: https://docs.coinapi.io/#list-all-symbols-getWas this section helpful?12345PreviousWhy are there no Exchange Rates data for some assets for a given period?NextDocumenting Connectivity issuesCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/api/Why-do-some-symbols-have-additional-prefix)"
577,i.io ems api #oeml order params type,"i.io ems api #oeml order params type.   EMS - Starter Guide | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIREST APIWebSocket APIFIX APISelf Hosted GuideEMS APIOn this pageEMS - Starter GuideThis section will provide general information about the Execution Management System API (EMS API) software product and enumerate a number of features that it provides.infoThe keywords ""MUST"", ""MUST NOT"", ""REQUIRED"", ""SHALL"", ""SHALL NOT"", ""SHOULD"", ""SHOULD NOT"", ""RECOMMENDED"", ""MAY"", and ""OPTIONAL"" in this document are to be interpreted as described in RFC 2119.What is EMS API?​Execution Management System (EMS) is a software that manages orders, executions, and exposure in an efficient, fast, cost-effective, and straightforward manner. An EMS allows you to route orders to multiple cryptocurrency exchanges simultaneously using a simple, robust, and unified Application Programming Interface (API).The software can be used in 2 different ways:Managed Cloud - Everything on our side. Hosted in the Cloud by CoinAPI. You manage the deployment using the REST API.Self-Hosted - Software on our side, on everything else.Dimension ComparisonManaged CloudSelf-HostedEase of use/installationVery easyHardTime to marketFastSlowDevOps team required to maintainNoYesOrder flow sent directly to the destinationNoYesWho manages the infrastructure (incl. monitoring)CoinAPIYouWho optimizes the latencyCoinAPIYou (CoinAPI only in software)How to installInstruct our Cloud Mgmt APIInstall on your infrastructurecautionWe recommend starting with the Managed Cloud and possibly upgrading to the Self-Hosted if the requirements of the integration/project will make that commercially reasonable.Architecture and components​A self-hosted EMS cluster can be deployed on a single server or multiple servers that will span multiple geographical locations, server sites, or cloud providers. In the Managed Cloud version, you did not care about that as we manage the server sites to be as close to the order destinations as possible.EMS consists of several components listed and ordered by dependency relationship:Exchange - Order destination, exchange, or broker.CoinAPI EMS Edge - Software that's responsible for communicating with the single specific order destination for which is deployed. This component exposes the EMS API for diagnostics purposes which functions visibility are limited to this single destination.CoinAPI EMS API - Software that's responsible for exposing fully functional the EMS API, maintaining the connection with all instances of CoinAPI EMS Edge.Customer Application - Customer software using the EMS API exposed by the CoinAPI EMS API component.Benefits and features​Low latency support​Specific projects usually involve High-Frequency Trading (HFT) or Market Making (MM) requiring low latency access to the order destination. EMS API was designed to have native support for this kind of activity.For every order destination in the cluster to which the submillisecond latency is required, these components should be deployed on a single server as close as possible to the order destination:CoinAPI EMS EdgeCoinAPI EMS APICustomer Application The closest proximity can be achieved using the:cloud region and/or availability zone the same as the destinationcollocation near the destinationcross-connect or direct-connect to the destination network infrastructureshortcutting the routers, SNAT/DNAT hosts, or proxies like CloudFlareThe cluster can naturally contain other order destinations at the same time in this setup, and this fact doesn't affect the latency to the locally provisioned destination(s).Normalized API abstraction​Our EMS API provides an abstraction layer that consolidates all supported third-party APIs into a single set of simple and robust data models and protocols. The Exchanges and the Assets are standardized using the Market Data REST API with which this product is compatible. More information about the exchanges and asset standardization can be found in the Documentation of the Market Data Product.Industry-standard protocols​Our API's can be accessed using multiple protocols widely adopted by the industry as a standard:RESTWebSocketFIX 4.4, 5.0FIXT 1.1Self-host or in Cloud​Deploy your property applications and trading algorithms in your company's collocated data centers or cloud providers if you need that, otherwise, let us manage the infrastructure and focus on using the API.Security & Privacy​Don't need to worry about the issues at the audit. Order flow, exchange API keys, or execution reports never leave your company infrastructure as the product is self-hosted.tipThe software complies with the ""SOC 2"" and ""ISO/IEC 27001 information security certifications.Multi-account support​Manage an unlimited number of exchange accounts in the cluster (for example, on behalf of your customers).SDK and samples for 40+ languages​We have the SDK libraries and code samples available for more than 40+ languages. The full list is available here: https://github.com/coinapi/coinapi-sdk/tree/masterComprehensive support​Leverage support for all market types and order types.High-quality integrations​Our integrations with third-party APIs are heavily tested and crafted with stability and latency in mind. For several third parties, we usually use multiple protocols simultaneously or tricks to acquire valuable pieces of information faster.Enterprise-grade support and maintenance​EMS product is fully supported and maintained to stay ahead of the curve. This approach offloads the often disliked responsibilities of the Software and DevOps Engineers in the organization and enables them to focus on the core business.High availability​The EMS software is designed to support high-availability deployments out of the box. For each order destination, we/you deploy multiple CoinAPI EMS Edge and CoinAPI EMS API components on different servers, availability zones, or cloud/infrastructure providers. Cluster using the service discovery backend, all components are automatically detected and interconnected.P&L and asset monitoring​Using the EMS, your organization can manage exposure and positions in real-time across all supported order destinations and build sophisticated risk management controls.Order lifecycle​This section will describe the lifecycle of the order in the EMS software.Order status description​This table describes how to interpret a specific order status.NameCan transit toStatus descriptionRECEIVEDREJECTEDROUTINGThe order is processed by the EMS.ROUTINGROUTEDThe order is (on the wire) between the EMS and the Exchange.ROUTEDREJECTEDNEWPARTIALLY_FILLEDFILLEDCANCELEDThe order has been sent to the exchange and not yet active in the order book.NEWPARTIALLY_FILLEDFILLEDPENDING_CANCELCANCELEDThe order is active in the book in its original state.PENDING_CANCELNEWPARTIALLY_FILLEDFILLEDCANCELEDThe order cancelation message has been sent to the Order destination.PARTIALLY_FILLEDFILLEDPENDING_CANCELCANCELEDThe order is partially filled and active in the order book.FILLEDThe order is filled and removed from the order book. This state is terminal.CANCELEDThe order is canceled and removed from the order book. This state is terminal.REJECTEDThe order is rejected. This state is terminal.Order status lifecycle​This table describes how to interpret transitions between order statuses and their initial values.Source StatusDestination statusDescriptionRECEIVEDEMS received a new order via the API.NEWEMS received an unseen new order from the Order destination. The order was relayed to the destination outside the EMS.PARTIALLY_FILLEDEMS received unseen partially filled order from the Order destination. The order was relayed to the destination outside the EMS.RECEIVEDREJECTEDEMS rejected the order.RECEIVEDROUTINGEMS delivering the order to the Order destination.ROUTINGROUTEDEMS sent the order to the Order destination.ROUTEDREJECTEDEMS received a message from the exchange that the order was rejected.ROUTEDNEWEMS received a message from the exchange that the order is active in the book in its original state.ROUTEDPARTIALLY_FILLEDEMS received a message from the exchange that part of the order was executed aggressively (removed liquidity). The remaining passive part is active in the book.ROUTEDFILLEDEMS received a message from the exchange that the order was executed aggressively (removed liquidity).ROUTEDCANCELEDEMS received a message from the exchange that the order is in the canceled state. The order has not been in the book as the conditions for the entry were not satisfied.NEWPARTIALLY_FILLEDEMS received a message from the exchange that part of the passive order was filled.NEWFILLEDEMS received a message from the exchange that the passive order is filled.NEWPENDING_CANCELEMS received cancel request for the order and successfully relayed it to the Order destination.NEWCANCELEDEMS received a message from the exchange that the passive order was canceled.PARTIALLY_FILLEDFILLEDEMS received a message from the exchange that the remaining part of the passive order is filled.PARTIALLY_FILLEDPENDING_CANCELEMS received cancel request for the remaining part of the passive order and successfully relayed it to the Order destination.PARTIALLY_FILLEDCANCELEDEMS received a message from the exchange that the remaining part of the passive order is canceled.PENDING_CANCELNEWEMS received a message from the exchange that updated the order before processing the cancellation request or the order cancellation request was rejected.PENDING_CANCELPARTIALLY_FILLEDEMS received a message from the exchange that updated the order before processing the cancellation request or the order cancellation request was rejected.PENDING_CANCELFILLEDEMS received a message from the exchange that updated the order before processing the cancellation request or the order cancellation request was rejected.PENDING_CANCELCANCELEDEMS received a message from exchange` that updated the order before processing the cancellation request or the order cancellation request was rejected.Order parameters​This section will describe parameters of the order in the EMS sofware.Order type​EMS supports only the LIMIT order type. Market orders don't have price protection, and because of that, they are not supported. As an alternative, you can use the Immediate or Cancel IOC order and provide the worst execution price to achieve the same result.Time in force​Time in force is a special instruction used when placing a trade to indicate how long an order will remain active before it expires.The table below describes how to interpret time in force parameter values.Time in forceShortcodeDescriptionGOOD_TILL_CANCELGTCA Good Till Cancel (GTC) is a default type of time-in-force. The order that lasts until is completed or canceled.GOOD_TILL_TIME_EXCHANGEGTTEThe Good Till Time Exchange (GTTE) time in force lets you set an expiration date and time up until which an order will be active in the book. The exchange handles the execution of the cancel originated from parameter.GOOD_TILL_TIME_OEMLGTTOThe Good Till Time OEML (GTTO) time in force lets you set an expiration date and time up until which an order will be active in the book. The CoinAPI EMS Edge sending the cancel request originated from the parameter. Worth mentioning that: (a) The cancellation request will not be sent if the software will be not be running at the time of expiration. (b) This parameter does not depend on the exchange. (c) The clock of the server running CoinAPI EMS Edge is used to trigger the cancelation request at the expiration.FILL_OR_KILLFOKFill or kill (FOK) is a type of time in force used to instruct an exchange to execute a transaction immediately and completely or not at all. This order will only remove liquidity from the order book. It must be filled in its entirety or canceled (killed).IMMEDIATE_OR_CANCELIOCAn immediate or cancel order (IOC) is a type of time in force used to instruct an exchange to execute all or part immediately and cancels any unfilled portion of the order. This order will only remove liquidity from the order book. It will fill whatever part of the order it can immediately and cancel any remaining amount so that no part of the order is added to the order book.The table below displays a breakdown of the EMS support of specific time in force values by the Order destination. Order destination idGTCGTTEGTTOFOKIOCBINANCEXXXXBINANCEUATXXXXBINANCEJEXXXXBINANCEUSXXXXBINANCEFTSXXXXBINANCEFTSUATXXXXBINANCEFTSCXXXXBINANCEFTSCUATXXXXBINANCEOPTVXXXXBINANCEOPTVUATXXXXBITFINEXXXXXXBITMEXXXXXBITMEXUATXXXXBITSTAMPXXXXBLOCKCHAINEXCHANGEXXXXCOINBASEXXXXGEMINIXXXXHITBTCXXXXXKRAKENXXXKRAKENFTSXXXPOLONIEXXXXXLMAXDIGITALXXXXLMAXDIGITALUATXXXXDERIBITXXXXDERIBITUATXXXXDYDXXXXXXLegend: X - supported.Execution instructions​Execution instruction puts restrictions on order handling at the matching engine. More than one instruction can apply to an order. The table below describes how to interpret execution instructions parameter values. Legend: X - supported.InstructionShortcodeDescriptionAUCTION_ONLYAOAn Auction Only (AO) instructs exchange that this order is for the auction only book for the next auction. The order may be cancelled up until the the auction locks, after which cancel requests will be rejected.INDICATION_OF_INTERESTIOIAn indication of interest (IOI) instructs exchange that this order should be processed as request for liquidity from block trading market markets.MAKER_OR_CANCELMOCA Maker or cancel (MOC) instructs exchange that this order will only add liquidity to the order book. If any part of the order could be filled immediately, the whole order will instead be rejected before any execution occurs. This instruction is also known as Post only or Participate don't initiate.CANCEL_ON_DISCONNECTCODCancel on System Failure (Cancel on disconnect)DO_NOT_CANCEL_ON_DISCONNECTNCODReinstate on System Failure (Do not cancel on disconnect)DO_NOT_INCREASEDNI(Reduce only) If part of a position is closed by any other means than the reduce-only order, the reduce-only order will be automatically adjusted downwards. If the trader decides to increase their position before the reduce-only order is executed, the quantity of the reduce-only order will not increase as well.The table below displays a breakdown of the EMS support of specific execution instructions by the Order destination. Order destination idMOCAOIOICODNCODDNIBINANCEXBINANCEUATXBINANCEJEXBINANCEUSXBINANCEFTSXBINANCEFTSUATXBINANCEFTSCXBINANCEFTSCUATXBINANCEOPTVXBINANCEOPTVUATXBITFINEXXBITMEXXBITMEXUATXBITSTAMPBLOCKCHAINEXCHANGEXCOINBASEXGEMINIXXXHITBTCKRAKENFTSXKRAKENXPOLONIEXXLMAXDIGITALXXLMAXDIGITALUATXXDERIBITXXDERIBITUATXXDYDXXXLegend: X - supported.Market Orders​While our API inherently supports limit orders, we understand the necessity for some clients to operate with market orders. This documentation provides a technical solution for simulating market orders using our limit order functionality with the Fill or Kill (FOK) option.Technical Solution​To mimic the behavior of a market order using our API, which inherently supports limit orders, clients can place a limit order with a Fill or Kill (FOK) condition. This approach effectively replicates the immediate execution characteristic of a market order while requiring the specification of a maximum (for buy orders) or minimum (for sell orders) price limit.Implementation Steps:Prepare the Order:Define the order as a limit order. Set the price limit to the maximum price the client is willing to pay for a buy order or the minimum price they are willing to accept for a sell order. Ensure that the order quantity meets the client's requirement for the transaction.Set the FOK Condition:Apply the Fill or Kill condition to the order. This condition mandates that the order must be executed immediately in its entirety or not executed at all. It ensures that partial fills do not occur, closely aligning with the nature of a market order.Execution and Validation:Upon submission, the EMS will attempt to fill the order immediately based on the specified price limits and the FOK condition. If the order cannot be filled immediately and completely within the defined price range, it will be automatically cancelled, ensuring no partial fills.Advantages and Considerations​Immediate Execution: The FOK condition ensures that the order, if executed, is filled immediately, mirroring the behavior of a market order.Price Control: Clients maintain control over the maximum or minimum price limits, adding a layer of price protection that standard market orders do not provide.Simplicity: This method avoids the need for additional development or integration, utilizing the existing infrastructure of our API.Using a limit order API can be considered simpler and more straightforward for several reasons, especially when compared to other types of trading orders. Here are some factors that contribute to the perceived simplicity:Predictability and Control:Price Certainty: Limit orders allow users to specify the maximum or minimum price at which they are willing to buy or sell an asset. This provides certainty about the price, which is not the case with market orders, where the execution price can vary.Control over Execution: Users have better control over their trades. They can decide not to execute a trade if the market does not reach their specified price, avoiding unwanted entries or exits in volatile market conditions.Consistent behaviour: Not all the order destinations support market orders or when they support it, usually they are implmeneted in form of limit orders.Straightforward Implementation:Simplicity in API Design: Limit order APIs are generally straightforward to implement and integrate because the parameters are clear and well-defined (quantity, price, and sometimes duration).Fewer Real-time Considerations: Unlike market orders, where getting the best available price in real-time is crucial, limit orders are placed based on predefined criteria. This can reduce the complexity associated with rapid decision-making and real-time data processing.Reduced Need for Immediate Market Data:Less Dependency on Real-time Pricing: Since the execution of a limit order is based on the user's specified price, there's less need for immediate or real-time market data, unlike market orders where knowing the current market price is crucial for order execution.Cost Predictability:Avoidance of Slippage: With limit orders, the risk of slippage (the difference between the expected price of a trade and the price at which the trade is executed) is eliminated. Users can be more confident about the cost of their trades, making financial planning and risk management more straightforward.Ease of Monitoring and Management:Set and Forget: Users can place limit orders and not worry about monitoring the market constantly. The order will only execute if the market price meets the user's criteria, making it a more passive form of trading.Batch Processing Friendly: For applications or trading strategies that place numerous orders, limit orders can be more manageable as they don't require immediate processing or constant monitoring of market prices.Reduced Impact on Market Price:Minimized Market Disruption: Limit orders can be less disruptive to the market price, especially for large orders. They are executed only at the user's specified price, avoiding large, sudden impacts on the market price that can occur with large market orders.In summary, a limit order API can offer a simpler and more controlled trading experience, with price certainty, reduced need for real-time market data, straightforward implementation, and predictable costs. These factors contribute to its appeal, especially for users or systems focusing on strategic, planned trading activities rather than immediate, real-time market engagement.Time​For all input and output time values ISO 8601 standard is used.Format specifierDescriptionyyyyThe year as a four-digit number.MMThe month, from 01 through 12.ddThe day of the month, from 01 through 31.HHThe hour, using a 24-hour clock from 00 to 23.mmThe minute, from 00 through 59.ssThe second, from 00 through 59.fffThe milliseconds in a date and time value.fffffffThe ten millionths of a second in a date and time value.Input time values are parsed using the following formats as far as possible:yyyy-MM-ddTHH:mm:ss.fffffffyyyy-MM-ddTHH:mm:ss.fffyyyy-MM-ddTHH:mm:ssyyyy-MM-ddTHH:mmyyyy-MM-ddTHHyyyy-MM-ddyyyyMMddTHHmmssfffffffyyyyMMddTHHmmssfffyyyyMMddTHHmmssyyyyMMddTHHmmyyyyMMddTHHyyyyMMddinfoWhen time zone information is not supplied, we will assume the UTC time zone.Output time values are formatted using the following patterns:yyyy-MM-ddTHH:mm:ss.fffffffZyyyy-MM-ddinfoAll time values we provide are UTC time zone. Do not assume otherwise.Was this section helpful?12345NextAuthenticationWhat is EMS API?Architecture and componentsBenefits and featuresLow latency supportNormalized API abstractionIndustry-standard protocolsSelf-host or in CloudSecurity & PrivacyMulti-account supportSDK and samples for 40+ languagesComprehensive supportHigh-quality integrationsEnterprise-grade support and maintenanceHigh availabilityP&L and asset monitoringOrder status descriptionOrder status lifecycleMarket OrdersTechnical SolutionAdvantages and ConsiderationsTimeCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/#oeml-order-params-type)"
578,i.io cdn cgi l email protection#30434540405f424470535f595e5140591e595f,"i.io cdn cgi l email protection#30434540405f424470535f595e5140591e595f.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 8aad281ed8c7b35f •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#30434540405f424470535f595e5140591e595f)"
579,i.io market data how to guides trading essentials quickstart,"i.io market data how to guides trading essentials quickstart.   Trading Essentials: Quickstart | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1WebSocket API DSJSON RPCFIX APIHow-to guidesAcquire exchange rates with different programming languagesBuilding a Cryptocurrency Portfolio Tracker Using React and CoinAPIBuilding a cryptocurrency exchange comparison tool using Market Data APICreating a historical crypto price chart using CoinAPI and D3.jsFetching market data with KNIMEGet Historical OHLCV Data Using CoinAPIGet symbol funding rate metric data using CoinAPIImport API into PostmanImport data to Google Sheets/ExcelReal-time data visualization with javascriptReal-time trades stream using WebSocket with different languagesRetrieve and analyze crypto order book data using a cryptocurrency APITrading Essentials: QuickstartPerformance Testing GuideHow-to guidesTrading Essentials: QuickstartOn this pageTrading Essentials: QuickstartIntroduction​In this tutorial, you'll learn how to leverage our crypto trading API to automate and streamline your trading across multiple exchanges. Discover how to connect your accounts, execute trades, and efficiently manage your portfolio with just a few clicks.With our solution, you gain the power to control trades on various exchanges using just one API. Background​The EMS Trading API lets you manage multiple trading accounts on different exchanges all in one place, making trading easier with combined and consistent data. It gives you up-to-date market info, past data, and options to use it through the cloud or on your systems. Perfect for traders, big companies, and experts like developers and analysts, this API is fast, efficient, and reliable, providing a complete trading solution with easy access to unique insights and information.On the Agenda​Obtain a Free API Key: Secure your gateway to multi-exchange trading with a free API key from our site.Check available exchanges: Verify the list of supported exchanges via EMS APIConnect your Exchanges: Quickly integrate your accounts with exchanges like BITMEX and KRAKEN.Execute BUY on KRAKEN: Check your balance, initiate the BUY order, and confirm the status of the orderExecute SELL on KRAKEN: Initiate SELL order and check the order status reportGetting started​To execute the EMS Trading API, you'll need a Free API Key from our website.Check available exchanges​To access a list of supported exchanges that can be connected via the EMS API, execute the following:import requestsurl = ""https://ems-mgmt.coinapi.io/v1/exchanges""payload={}headers = { 'Accept': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-COINAPI-KEY'}response = requests.request(""GET"", url, headers=headers, data=payload)print(response.text)Here's a snippet extracted from the server's reply:[ {  ""exchange_id"": ""BITMEX"",  ""location_id"": ""aws-eu-west-1-prd"",  ""required_parameters"": [   ""PrivateApiKey"",   ""PublicApiKey""  ] }, {  ""exchange_id"": ""COINBASE"",  ""location_id"": ""aws-us-east-1-prd"",  ""required_parameters"": [   ""PassPhrase"",   ""PrivateApiKey"",   ""PublicApiKey""  ] },  {  ""exchange_id"": ""GEMINI"",  ""location_id"": ""aws-us-east-1-prd"",  ""required_parameters"": [   ""PrivateApiKey"",   ""PublicApiKey""  ] }, {  ""exchange_id"": ""KRAKEN"",  ""location_id"": ""aws-us-west-2-prd"",  ""required_parameters"": [   ""PrivateApiKey"",   ""PublicApiKey""  ] }]// other exchanges and their parameters...infoTo access the full list of supported exchanges, you can execute the endpoint https://ems-mgmt.coinapi.io/v1/exchanges. Above, we only showcase a partial list as an example.Connect your Exchanges​To begin trading on cryptocurrency exchanges, you'll need to connect your accounts. Below are examples of integrating with two popular exchanges:BITMEX exampleKRAKEN exampleinfoWhile the examples in this quickstart provided are focused on integrating with BITMEX and KRAKEN, the process is quite similar for various exchanges.BITMEX​BITMEX stands as a premier cryptocurrency exchange, offering a robust platform for traders and investors worldwide.Obtain Public key​To begin trading on BITMEX, you'll need to obtain your public and private keys from BITMEX.Connect your account​After acquiring keys, the initial step includes sharing your exchange keys through the account creation process for the designated exchange.import requestsimport jsonurl = ""https://ems-mgmt.coinapi.io/v1/accounts""payload = { ""exchange_id"": ""BITMEX/JOHN"", ""parameters"": [  {   ""key"": ""PublicApiKey"",   ""value"": ""73034021-THIS-IS-SAMPLE-PUBLIC-KEY-FROM-BITMEX""  },    {   ""key"": ""PrivateApiKey"",   ""value"": ""73034021-THIS-IS-SAMPLE-PRIVATE-KEY-FROM-BITMEX""  } ]}headers = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Convert payload to JSON stringjson_payload = json.dumps(payload)# Make the requestresponse = requests.post(url, data=json_payload, headers=headers)# Print the responseprint(""Response Code:"", response.status_code)Once the update is successful, you'll receive an HTTP status code of 200.KRAKEN​Obtain Public key​To begin trading on KRAKEN, you'll need to obtain your public and private keys from KRAKEN.Connect your account​After acquiring keys, the initial step includes sharing your exchange keys through the account creation process for the designated exchange.import requestsimport jsonurl = ""https://ems-mgmt.coinapi.io/v1/accounts""payload = { ""exchange_id"": ""KRAKEN/JOHN"", ""parameters"": [  {   ""key"": ""PublicApiKey"",   ""value"": ""73034021-THIS-IS-SAMPLE-PUBLIC-KEY-FROM-KRAKEN""  },    {   ""key"": ""PrivateApiKey"",   ""value"": ""73034021-THIS-IS-SAMPLE-PRIVATE-KEY-FROM-KRAKEN""  } ]}headers = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Convert payload to JSON stringjson_payload = json.dumps(payload)# Make the requestresponse = requests.post(url, data=json_payload, headers=headers)# Print the responseprint(""Response Code:"", response.status_code)Get the list of Connected Exchanges​To check which accounts have been created on our side, execute the following code:import requestsimport jsonurl = ""https://ems-mgmt.coinapi.io/v1/accounts""headers = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY""}# Make the requestresponse = requests.get(url, headers=headers)if response.status_code == 200: accounts_json = response.json() print(json.dumps(accounts_json, indent=4))else: print(""Error:"", response.status_code)Here's an example response, listing all accounts created with your API KEY:[ {  ""exchange_id"": ""BITMEX/JOHN"",  ""parameters"": [   {    ""key"": ""PublicApiKey"",    ""value"": ""73034021-THIS-IS-SAMPLE-PUBLIC-KEY-FROM-BITMEX""   },   {    ""key"": ""PrivateApiKey"",    ""value"": ""73034021-THIS-IS-SAMPLE-PRIVATE-KEY-FROM-BITMEX""   }  ] }, {  ""exchange_id"": ""KRAKEN/JOHN"",  ""parameters"": [   {    ""key"": ""PublicApiKey"",    ""value"": ""73034021-THIS-IS-SAMPLE-PUBLIC-KEY-FROM-KRAKEN""     },   {    ""key"": ""PrivateApiKey"",    ""value"": ""73034021-THIS-IS-SAMPLE-PRIVATE-KEY-FROM-KRAKEN""   }  ] }]Trades execution​Placing an order on an exchange involves providing instructions for executing a trade at a designated price and quantity.Check balance (Optional)​Before diving into trading, it's a good idea to check the balance on your account(s). Here's an example of checking the account balance for all of the exchanges associated with the account.import requestsimport jsonurl = ""https://global.ems.coinapi.net/v1/balances""payload={}headers = { 'Accept': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-COINAPI-KEY'}# Make the requestresponse = requests.get(url, headers=headers)if response.status_code == 200: accounts_json = response.json() print(json.dumps(accounts_json, indent=4))else: print(""Error:"", response.status_code)The response may be as follows (for BITMEX/JOHN and KRAKEN/JOHN accounts):[ {  ""type"": ""BALANCE_SNAPSHOT"",  ""exchange_id"": ""BITMEX/JOHN"",  ""data"": [   {    ""id"": ""XBT"",    ""asset_id_exchange"": ""XBT"",    ""asset_id_coinapi"": ""BTC"",    ""balance"": 0.02164794,    ""available"": 0.02164794,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",      ""rate_usd"": 52357.18111158658     },   {    ""id"": ""BMEx"",    ""asset_id_exchange"": ""BMEx"",    ""asset_id_coinapi"": ""BMEX"",    ""balance"": 300000.0,    ""available"": 300000.0,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",      ""rate_usd"": 0.2521371329127946     }  ] }, {  ""type"": ""BALANCE_SNAPSHOT"",  ""exchange_id"": ""KRAKEN/JOHN"",  ""data"": [   {    ""id"": ""ETHW"",    ""asset_id_exchange"": ""ETHW"",    ""asset_id_coinapi"": ""ETHW"",    ""balance"": 1.73e-05,    ""available"": 1.73e-05,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 2.9136466899640077   },   {    ""id"": ""BCH"",    ""asset_id_exchange"": ""BCH"",    ""asset_id_coinapi"": ""BCH"",    ""balance"": 2.9e-09,    ""available"": 2.9e-09,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 265.7082181877394   },   {    ""id"": ""ZCAD"",    ""asset_id_exchange"": ""ZCAD"",    ""asset_id_coinapi"": ""CAD"",    ""balance"": 0.7905,    ""available"": 0.7905,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 0.7405719177575096   },   {    ""id"": ""ZEUR"",    ""asset_id_exchange"": ""ZEUR"",    ""asset_id_coinapi"": ""EUR"",    ""balance"": 0.0098,    ""available"": 0.0098,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 1.0809450373867444   },   {    ""id"": ""ADA"",    ""asset_id_exchange"": ""ADA"",    ""asset_id_coinapi"": ""ADA"",    ""balance"": 2e-08,    ""available"": 2e-08,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 0.6244338769954291   },   {    ""id"": ""ZUSD"",    ""asset_id_exchange"": ""ZUSD"",    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": null   },   {    ""id"": ""XXBT"",    ""asset_id_exchange"": ""XXBT"",    ""asset_id_coinapi"": ""BTC"",    ""balance"": 8.58e-08,    ""available"": 8.58e-08,    ""locked"": 0.0,    ""traded"": 0.0,    ""last_updated_by"": ""EXCHANGE"",    ""rate_usd"": 52320.9229657045   }  ] }]Submit Order (SELL)​Here's an example of submitting a SELL order on the KRAKEN exchange with the following details: Desired amount of USD to sell: 10Expected price to be executed at: 150Initial balance of USD: 77.3669Save down somewhere the YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001 identifier to track the status of the orderimport requestsimport jsonfrom datetime import datetime, timedeltaurl = ""https://global.ems.coinapi.net/v1/orders""payload = json.dumps({ ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_USD_JPY"", ""amount_order"": 10, ""price"": 150, ""side"": ""SELL"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""exec_inst"": [ ""MAKER_OR_CANCEL"" ]})# Headersheaders = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Make the requesttry: response = requests.post(url, data=payload, headers=headers) # Check status code if response.status_code == 200:  print(""Response JSON:"", response.json()) else:  print(""Response Code:"", response.status_code) except Exception as e: print(""An error occurred:"", e)Examples of Possible Responses:Successful RoutingInvalid Volume ErrorInsufficient Funds ErrorThe order has been sent to the exchange:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""client_order_id_format_exchange"": ""74733759"", ""exchange_order_id"": ""OX6EKO-67KDQ-KGNYFI"", ""amount_open"": 10.0, ""amount_filled"": 0.0, ""status"": ""ROUTED"", ""status_history"": [ [""RECEIVED"", ""2024-02-22T23:55:31.5424443Z""], [""ROUTING"", ""2024-02-22T23:55:31.5439512Z""], [""ROUTED"", ""2024-02-22T23:55:31.8127436Z""] ], ""error_message"": null, ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""symbol_id_exchange"": ""USDJPY"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_USD_JPY"", ""amount_order"": 10.0, ""price"": 150.0, ""avg_px"": 0.0, ""side"": ""SELL"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}If you encounter a volume error due to a mismatch with the minimum order size:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""client_order_id_format_exchange"": ""74733759"", ""exchange_order_id"": null, ""amount_open"": 5e-15, ""amount_filled"": 0.0, ""status"": ""REJECTED"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T00:04:36.8301287Z""], [""ROUTING"", ""2024-02-23T00:04:36.8315182Z""], [""REJECTED"", ""2024-02-23T00:04:36.9940661Z""] ], ""error_message"": ""EGeneral:Invalid arguments:volume"", ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""symbol_id_exchange"": ""USDJPY"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_USD_JPY"", ""amount_order"": 5e-15, ""price"": 150.0, ""avg_px"": 0.0, ""side"": ""SELL"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}If you encounter an insufficient funds error due to insufficient balance in your account:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""client_order_id_format_exchange"": ""74733759"", ""exchange_order_id"": null, ""amount_open"": 555555555555555.0, ""amount_filled"": 0.0, ""status"": ""REJECTED"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T00:05:34.6909879Z""], [""ROUTING"", ""2024-02-23T00:05:34.6918765Z""], [""REJECTED"", ""2024-02-23T00:05:34.8518753Z""] ], ""error_message"": ""EGeneral:Invalid arguments:volume"", ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""symbol_id_exchange"": ""USDJPY"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_USD_JPY"", ""amount_order"": 555555555555555.0, ""price"": 150.0, ""avg_px"": 0.0, ""side"": ""SELL"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}infoHere you can check the comprehensive list of execution instructions for the exec_inst parameterYou can find available values for the time_in_force parameter hereEMS exclusively supports the LIMIT order_type.The supported values for symbol_id_coinapi can be found by executing the endpoint provided here.The meaning of the order status in the response (ROUTED, REJECTED, etc.) can be found hereTo view the possible values for the order lifecycle, click hereInstead of utilizing CoinAPI's symbol_id_coinapi, you can opt for the symbol provided by the exchange through symbol_id_exchangeHere are some of the most common codes that may be returned for order creation:Http Status CodeDescription200 (ok)Order accepted400 (bad request)Incorrect input parameters.490 (unreachable)Exchange cannot be reached.504 (timeout)Exchange didn't respond in the defined timeout.Verify order status​Ensure that you've saved the client_order_id parameter associated with your specific order. This identifier will be necessary to check its status.import requestsimport jsonfrom datetime import datetime, timedeltaurl = ""https://global.ems.coinapi.net/v1/orders/status/YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001""# Headersheaders = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Make the requesttry: response = requests.get(url, headers=headers) # Check status code if response.status_code == 200:  print(""Response JSON:"", response.json()) else:  print(""Response Code:"", response.status_code)   for header, value in response.headers.items():  print(header + ': ' + value) except Exception as e: print(""An error occurred:"", e)An example order status report that was executed with YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001 identifier and which was CANCELED.{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""client_order_id_format_exchange"": ""1945919824"", ""exchange_order_id"": ""OUQMAY-ODBWL-AXG4ZE"", ""amount_open"": 10.0, ""amount_filled"": 0.0, ""status"": ""CANCELED"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T00:16:20.2139293Z""], [""ROUTING"", ""2024-02-23T00:16:20.2389572Z""], [""ROUTED"", ""2024-02-23T00:16:20.4016779Z""], [""NEW"", ""2024-02-23T00:16:20.4021975Z""], [""CANCELED"", ""2024-02-23T00:16:20.4026337Z""] ], ""error_message"": null, ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-001"", ""symbol_id_exchange"": ""USDJPY"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_USD_JPY"", ""amount_order"": 10.0, ""price"": 150.0, ""avg_px"": 0.0, ""side"": ""SELL"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}Check all open orders​You can also check all of the open orders.import requestsimport jsonfrom datetime import datetime, timedeltaurl = "" https://global.ems.coinapi.net/v1/orders""# Headersheaders = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Make the requesttry: response = requests.get(url, headers=headers) # Check status code if response.status_code == 200:  print(""Response JSON:"", response.json()) else:  print(""Response Code:"", response.status_code)   for header, value in response.headers.items():  print(header + ': ' + value) except Exception as e: print(""An error occurred:"", e)infoAfter an order is closed/finalized, it will no longer be visible through the endpoint mentioned above.Submit Order (BUY)​Here's an example of submitting a BUY order on the KRAKEN exchange with the following details: Desired amount of OXT to buy: 100Expected price to be executed at: 0.11Save down somewhere the YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007 identifier to track the status of the orderimport requestsimport jsonfrom datetime import datetime, timedeltaurl = ""https://global.ems.coinapi.net/v1/orders""payload = json.dumps({ ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_OXT_USD"", ""amount_order"": 100, ""price"": 0.11, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""exec_inst"": [ ""MAKER_OR_CANCEL"" ]})# Headersheaders = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Make the requesttry: response = requests.post(url, data=payload, headers=headers) # Check status code if response.status_code == 200:  print(""Response JSON:"", response.json()) else:  print(""Response Code:"", response.status_code)   for header, value in response.headers.items():  print(header + ': ' + value) except Exception as e: print(""An error occurred:"", e)Successfully routed order Response:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""client_order_id_format_exchange"": ""1946142760"", ""exchange_order_id"": ""OJCPEO-PO7WD-VTPUF2"", ""amount_open"": 100.0, ""amount_filled"": 0.0, ""status"": ""ROUTED"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T01:13:15.6096269Z""], [""ROUTING"", ""2024-02-23T01:13:15.6102840Z""], [""ROUTED"", ""2024-02-23T01:13:15.7772494Z""] ], ""error_message"": null, ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""symbol_id_exchange"": ""OXTUSD"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_OXT_USD"", ""amount_order"": 100.0, ""price"": 0.11, ""avg_px"": 0.0, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}Below is the order status report response for a BUY operation with the client_order_id set as YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""client_order_id_format_exchange"": ""1946142760"", ""exchange_order_id"": ""OJCPEO-PO7WD-VTPUF2"", ""amount_open"": 100.0, ""amount_filled"": 0.0, ""status"": ""NEW"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T01:13:15.6096269Z""], [""ROUTING"", ""2024-02-23T01:13:15.6102840Z""], [""ROUTED"", ""2024-02-23T01:13:15.7772494Z""], [""NEW"", ""2024-02-23T01:13:15.8077026Z""] ], ""error_message"": null, ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""symbol_id_exchange"": ""OXTUSD"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_OXT_USD"", ""amount_order"": 100.0, ""price"": 0.11, ""avg_px"": 0.0, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}Cancelling all open orders​To cancel all open orders associated with the KRAKEN/JOHN:import requestsimport jsonfrom datetime import datetime, timedeltaurl = ""https://global.ems.coinapi.net/v1/orders/cancel/all""payload = json.dumps({""exchange_id "": ""KRAKEN/JOHN""})# Headersheaders = { ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-COINAPI-KEY"", ""Content-Type"": ""application/json""}# Make the requesttry: response = requests.post(url, data=payload, headers=headers) # Check status code if response.status_code == 200:  print(""Response JSON:"", response.json()) else:  print(""Response Code:"", response.status_code)   for header, value in response.headers.items():  print(header + ': ' + value) except Exception as e: print(""An error occurred:"", e)Here's a sample order report for a canceled BUY order via the EMS API:{ ""type"": ""ORDER_EXEC_REPORT_UPDATE"", ""id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""client_order_id_format_exchange"": ""1946142760"", ""exchange_order_id"": ""OJCPEO-PO7WD-VTPUF2"", ""amount_open"": 100.0, ""amount_filled"": 0.0, ""status"": ""CANCELED"", ""status_history"": [ [""RECEIVED"", ""2024-02-23T01:13:15.6096269Z""], [""ROUTING"", ""2024-02-23T01:13:15.6102840Z""], [""ROUTED"", ""2024-02-23T01:13:15.7772494Z""], [""NEW"", ""2024-02-23T01:13:15.8077026Z""], [""PENDING_CANCEL"", ""2024-02-23T01:18:49.2279836Z""], [""CANCELED"", ""2024-02-23T01:18:49.4245926Z""] ], ""error_message"": null, ""fills"": [], ""exchange_id"": ""KRAKEN/JOHN"", ""client_order_id"": ""YOUR-UNIQUE-IDENTIFIER-FOR-ORDER-007"", ""symbol_id_exchange"": ""OXTUSD"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_OXT_USD"", ""amount_order"": 100.0, ""price"": 0.11, ""avg_px"": 0.0, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": null, ""exec_inst"": [""MAKER_OR_CANCEL""]}The explanations and practical code examples provided should let you have a better understanding of how to leverage the EMS API for cryptocurrency trading across multiple exchanges.Was this section helpful?12345PreviousRetrieve and analyze crypto order book data using a cryptocurrency APINextPerformance Testing GuideIntroductionBackgroundOn the AgendaGetting startedCheck available exchangesConnect your ExchangesBITMEXObtain Public keyConnect your accountKRAKENObtain Public keyConnect your accountGet the list of Connected ExchangesTrades executionCheck balance (Optional)Submit Order (SELL)Verify order statusCheck all open ordersSubmit Order (BUY)Cancelling all open ordersCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/how-to-guides/trading-essentials-quickstart)"
580,i.io faq api How to solve certificate validation error,"i.io faq api How to solve certificate validation error.   How to solve certificate validation error? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIDo you accept bank or wire transfers?Do you offer Trading API?Empty response when using EMS endpointsFIX API Logon TroubleshootingGeographic locations and the LatencyHow are exchange rates calculated?How can I get OHLCV data by asset pair?How can I get the USD price for multiple assets at the same time?How can I see a list of symbols related to a specific exchange, market, or asset?How can I unsubscribe from Websocket?How to solve certificate validation error?How to use CoinAPI from Matlab?I received a reconnect message from WebsocketWhat are the restrictions on usage of real-time protocols?What are the time periods I can use for Exchange Rates and OHLCV?What happens if I exceed my plan’s REST API daily request limit?What languages do you support?What timezone is used for date/time values?Where can I find examples and SDK source codes for API?Why are limit headers not always showing on a request?Why are there no Exchange Rates data for some assets for a given period?Why do some symbols have additional prefix?Documenting Connectivity issuesBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQAPIHow to solve certificate validation error?How to solve certificate validation error?The issue with the certificate validation can happen when your operating system doesn't have updated CA certificates. On the Windows operating systems, CA certificates are updated with the Windows Update. Make sure that you have all updates installed on the server.On the Ubuntu/Debian Linux systems you can update by executing this command:`update-ca-certificates`Alternatively, you can use an unencrypted connection, if maintaining up to date database of CA certificates in the operating system is not an option.Was this section helpful?12345PreviousHow can I unsubscribe from Websocket?NextHow to use CoinAPI from Matlab?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/api/How-to-solve-certificate-validation-error)"
581,i.io naas api bitcoin Methods finalizepsbt,"i.io naas api bitcoin Methods finalizepsbt.   finalizepsbt | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsfinalizepsbtOn this pagefinalizepsbtOverview​The 'finalizepsbt' method is used to finalize the inputs of a PSBT (Partially Signed Bitcoin Transaction). If the transaction is fully signed, it will generate a network serialized transaction which can be broadcast with a method such as sendrawtransaction. If not, a PSBT will be created which has the final_scriptSig and final_scriptWitness fields filled for inputs that are complete. This method implements the Finalizer and Extractor roles.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \ --body-data '{ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""finalizepsbt"", ""params"": []}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"");var content = new StringContent(""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""finalizepsbt\"",\r \""params\"": []\r }\r "", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""finalizepsbt"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""finalizepsbt"", ""params"": []})headers = { 'Content-Type': 'application/json', 'accept': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text)var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""finalizepsbt"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainpackage mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{`+""""+` ""jsonrpc"": ""1.0"",`+""""+` ""id"": ""1"",`+""""+` ""method"": ""finalizepsbt"",`+""""+` ""params"": []`+""""+`}`+""""+``)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KEY""request.body = JSON.dump({ ""jsonrpc"": ""1.0"", ""id"": ""1"", ""method"": ""finalizepsbt"", ""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder().build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\r \""jsonrpc\"": \""1.0\"",\r \""id\"": \""1\"",\r \""method\"": \""finalizepsbt\"",\r \""params\"": []\r }\r "");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") .build();Response response = client.newCall(request).execute();Request Parameters​psbt (string, required): A base64 string of a PSBT.Response​{ ""psbt"": ""string"", ""hex"": ""string"", ""complete"": ""boolean""}psbt (string): The base64-encoded partially signed transaction if not extracted.hex (string): The hex-encoded network transaction if extracted.complete (boolean): Indicates if the transaction has a complete set of signatures.Was this section helpful?12345PreviousestimatesmartfeeNextfundrawtransactionOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/finalizepsbt)"
582,i.io cdn cgi l email protection#0b787e7b7b64797f4b686462656a7b62256264,"i.io cdn cgi l email protection#0b787e7b7b64797f4b686462656a7b62256264.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 86784e180a4dbf97 •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://docs.coinapi.io/cdn-cgi/l/email-protection#0b787e7b7b64797f4b686462656a7b62256264)"
583,i.io naas api ethereum Methods trace call,"i.io naas api ethereum Methods trace call.   trace_call | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodstrace_callOn this pagetrace_callOverview​The 'trace_call' method allows you to simulate a call transaction without actually executing it. This can be useful for debugging and understanding the potential outcome of a transaction.Request​{ ""to"": ""0x..."", ""data"": ""0x..."" // Additional parameters can be added as needed}Request Parameters​to (required): The address of the contract or recipient.data (optional): Encoded data, representing the function- and its arguments.Response​{ ""output"": ""0x..."", ""stateDiff"": {}, ""trace"": [], ""vmTrace"": {} // Additional fields can be added as needed}Errors​Invalid Request: This error is returned if the request format is incorrect.Internal Error: This error is returned if there's a server-side issue processing the request.Rate Limits​Please note that there are rate limits applied to the API to ensure fair usage. Free-tier users are limited to 100 requests per day, while premium users can make up to 1000 or more requests per day.Support​If you encounter any issues or have further questions regarding the eth_getBlockByHash method, please contact our support team at [email protected].Was this section helpful?12345Previoustrace_blockNexttrace_callManyOverviewRequestRequest ParametersResponseErrorsRate LimitsSupportCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/trace_call)"
584,i.io faq billing and subscriptions How to subscribe to the API,i.io faq billing and subscriptions How to subscribe to the API.   How to subscribe to the API? | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralCustomer AccountAPIBilling and SubscriptionsCan I cancel my subscription anytime?Can I still use my API key if I cancel my subscription?How to reactivate my canceled subscription?How to subscribe to the API?How to upgrade/downgrade my subscription?Security and PrivacyCustomer PortalChangelogFAQBilling and SubscriptionsHow to subscribe to the API?How to subscribe to the API?Subscriptions for the predefined plans are sold through our Pricing page. [1]Enterprise Plan agreement is custom-tailored to specific project needs. Please contact support or sales to get more information. [2]References:[1] https://www.coinapi.io/Pricing [2] https://support.coinapi.io/hc/en-us/requests/newWas this section helpful?12345PreviousHow to reactivate my canceled subscription?NextHow to upgrade/downgrade my subscription?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/billing-and-subscriptions/How-to-subscribe-to-the-API)
585,i.io general faq general How to be notified about the issues incidents,"i.io general faq general How to be notified about the issues incidents.   How to be notified about the issues/incidents? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralHow to be notified about the issues/incidents?How to be notified about the issues/incidents?We communicate status updates via the separate status page: https://status.coinapi.io/Please subscribe to the email notifications on this Status Page.If you do not agree with our status page or you need to report an incident, kindly submit a request here: https://support.coinapi.io/hc/en-us/requests/newWas this section helpful?12345PreviousHow to avoid losing the messages or delay on the WebSocket?NextHow to check historical API usage?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/How-to-be-notified-about-the-issues-incidents)"
586,i.io naas api bitcoin Methods bumpfee x,"i.io naas api bitcoin Methods bumpfee x.   bumpfee | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsbumpfeeOn this pagebumpfeeOverview​The 'bumpfee' Bumps the fee of an opt-in-RBF transaction T, replacing it with a new transaction B.Request​shellcsharpphppythongorubywget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""bumpfee"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"");request.Headers.Add(""accept"", ""application/json"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""method\"":\""bumpfee\"",\""params\"": [],\""id\"":1}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY', 'Content-Type' => 'application/json', 'accept' => 'application/json'];$body = '{ ""jsonrpc"": ""2.0"", ""method"": ""bumpfee"", ""params"": [], ""id"": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = ""https://bitcoin-mainnet.node.coinapi.io""payload = json.dumps({""jsonrpc"": ""2.0"",""method"": ""bumpfee"",""params"": [],""id"": 1})headers = {'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY','Content-Type': 'application/json','accept': 'application/json'}response = requests.request(""POST"", url, headers=headers, data=payload)print(response.text) ``` </TabItem><TabItem value=""javascript""> ```javascriptvar settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""x-coinapi-key"": ""4303fb63-adec-42dc-b571-74bc2f2a5167"", ""Content-Type"": ""application/json"", ""accept"": ""application/json"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""method"": ""bumpfee"", ""params"": [], ""id"": 1 }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""method"":""bumpfee"",""params"": [],""id"":1}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""x-coinapi-key"", ""73034021-THIS-IS-SAMPLE-KEY"")req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""x-coinapi-key""] = ""73034021-THIS-IS-SAMPLE-KEY""request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request.body = JSON.dump({""jsonrpc"": ""2.0"",""method"": ""bumpfee"",""params"": [],""id"": 1})response = https.request(request)puts response.read_bodyRequest Parameters​txid: The txid to be bumpedoptionsResponse​{ ""result"": null, ""error"": { ""code"": -1, ""message"": ""bumpfee \""txid\"" ( options ) Bumps the fee of an opt-in-RBF transaction T, replacing it with a new transaction B. An opt-in RBF transaction with the given txid must be in the wallet. The command will pay the additional fee by reducing change outputs or adding inputs when necessary. It may add a new change output if one does not already exist. All inputs in the original transaction will be included in the replacement transaction. The command will fail if the wallet or mempool contains a transaction that spends one of T's outputs. By default, the new fee will be calculated automatically using the estimatesmartfee RPC. The user can specify a confirmation target for estimatesmartfee. Alternatively, the user can specify a fee rate in sat/vB for the new transaction. At a minimum, the new fee rate must be high enough to pay an additional new relay fee (incrementalfee returned by getnetworkinfo) to enter the node's mempool. * WARNING: before version 0.21, fee_rate was in BTC/kvB. As of 0.21, fee_rate is in sat/vB. * Arguments: 1. txid       (string, required) The txid to be bumped 2. options      (json object, optional)  {  \""conf_target\"": n,   (numeric, optional, default=wallet -txconfirmtarget) Confirmation target in blocks           \""fee_rate\"": amount,  (numeric or string, optional, default=not set, fall back to wallet fee estimation)         Specify a fee rate in sat/vB instead of relying on the built-in fee estimator.         Must be at least 1.000 sat/vB higher than the current transaction fee rate.         WARNING: before version 0.21, fee_rate was in BTC/kvB. As of 0.21, fee_rate is in sat/vB.           \""replaceable\"": bool,  (boolean, optional, default=true) Whether the new transaction should still be         marked bip-125 replaceable. If true, the sequence numbers in the transaction will         be left unchanged from the original. If false, any input sequence numbers in the         original transaction that were less than 0xfffffffe will be increased to 0xfffffffe         so the new transaction will not be explicitly bip-125 replaceable (though it may         still be replaceable in practice, for example if it has unconfirmed ancestors which         are replaceable).           \""estimate_mode\"": \""str\"", (string, optional, default=\""unset\"") The fee estimate mode, must be one of (case insensitive):         \""unset\""         \""economical\""         \""conservative\""  } Result: {     (json object) \""txid\"" : \""hex\"", (string) The id of the new transaction. \""origfee\"" : n,  (numeric) The fee of the replaced transaction. \""fee\"" : n,   (numeric) The fee of the new transaction. \""errors\"" : [  (json array) Errors encountered during processing (may be empty).  \""str\"",   (string)  ... ] } Examples: Bump the fee, get the new transaction's txid > bitcoin-cli bumpfee <txid> "" }, ""id"": 1}Was this section helpful?12345PreviousanalyzepsbtNextcombinepsbtOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/bumpfee_x)"
587,i.io ems api rest api orders get open orders,"i.io ems api rest api orders get open orders.   Get open orders | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIREST APIBalancesOrdersCancel all orders requestCancel order requestGet open ordersGet order execution reportHistory of order changesSend new orderPositionsWebSocket APIFIX APISelf Hosted GuideREST APIOrdersGet open ordersGet open ordersGET /v1/ordersGet last execution reports for open orders across all or single exchange.Query Parametersexchange_id stringFilter the open orders to the specific exchange.Responses200490Collection of order execution reports.application/jsonSchemaExample (from schema)SchemaArray [exchange_id string requiredExchange identifier used to identify the routing destination.client_order_id string requiredThe unique identifier of the order assigned by the client.symbol_id_exchange stringExchange symbol. One of the properties (symbol_id_exchange, symbol_id_coinapi) is required to identify the market for the new order.symbol_id_coinapi stringCoinAPI symbol. One of the properties (symbol_id_exchange, symbol_id_coinapi) is required to identify the market for the new order.amount_order number requiredOrder quantity.price number requiredOrder price.side OrdSide requiredPossible values: [BUY, SELL]Side of order.order_type OrdType requiredPossible values: [LIMIT]Order types are documented in the separate section: EMS / Starter Guide / Order parameters / Order typetime_in_force TimeInForce requiredPossible values: [GOOD_TILL_CANCEL, GOOD_TILL_TIME_EXCHANGE, GOOD_TILL_TIME_OMS, FILL_OR_KILL, IMMEDIATE_OR_CANCEL]Order time in force options are documented in the separate section: EMS / Starter Guide / Order parameters / Time in forceexpire_time dateExpiration time. Conditionaly required for orders with time_in_force = GOOD_TILL_TIME_EXCHANGE or GOOD_TILL_TIME_OEML.exec_inst string[]Possible values: [MAKER_OR_CANCEL, AUCTION_ONLY, INDICATION_OF_INTEREST]Order execution instructions are documented in the separate section: EMS / Starter Guide / Order parameters / Execution instructionsclient_order_id_format_exchange string requiredThe unique identifier of the order assigned by the client converted to the exchange order tag format for the purpose of tracking it.exchange_order_id stringUnique identifier of the order assigned by the exchange or executing system.amount_open number requiredQuantity open for further execution. amount_open = amount_order - amount_filledamount_filled number requiredTotal quantity filled.avg_px numberCalculated average price of all fills on this order.status OrdStatus requiredPossible values: [RECEIVED, ROUTING, ROUTED, NEW, PENDING_CANCEL, PARTIALLY_FILLED, FILLED, CANCELED, REJECTED]Order statuses and the lifecycle are documented in the separate section: EMS / Starter Guide / Order Lifecyclestatus_history array[]Timestamped history of order status changes.error_message stringError message.fills object[]Relay fill information on working orders.Array [time dateExecution time.price numberExecution price.amount numberExecuted quantity.]][ { ""exchange_id"": ""KRAKEN"", ""client_order_id"": ""6ab36bc1-344d-432e-ac6d-0bf44ee64c2b"", ""symbol_id_exchange"": ""XBT/USDT"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_BTC_USDT"", ""amount_order"": 0.045, ""price"": 0.0783, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": ""2020-01-01T10:45:20.1677709Z"", ""exec_inst"": [  ""MAKER_OR_CANCEL"" ], ""client_order_id_format_exchange"": ""f81211e2-27c4-b86a-8143-01088ba9222c"", ""exchange_order_id"": 3456456754, ""amount_open"": 0.22, ""amount_filled"": 0, ""avg_px"": 0.0783, ""status"": ""RECEIVED"", ""status_history"": [  [  [   [   ""RECEIVED"",   ""2020-05-27T11:16:20.1677709Z""   ],   [   ""REJECTED"",   ""2020-05-27T11:16:20.1677710Z""   ]  ]  ] ], ""error_message"": ""{\""result\"":\""error\"",\""reason\"":\""InsufficientFunds\"",\""message\"":\""Failed to place buy order on symbol 'BTCUSD' for price $7,000.00 and quantity 0.22 BTC due to insufficient funds\""}"", ""fills"": [  {  ""time"": ""2020-01-01T10:45:20.1677709Z"",  ""price"": 10799.2,  ""amount"": 0.002  } ] }]Filtered exchange is unreachable.appliction/jsonSchemaExample (from schema)Schematype stringMessage type, constant.reject_reason RejectReasonPossible values: [OTHER, EXCHANGE_UNREACHABLE, EXCHANGE_RESPONSE_TIMEOUT, ORDER_ID_NOT_FOUND, INVALID_TYPE, METHOD_NOT_SUPPORTED, JSON_ERROR]Cause of rejection.exchange_id stringIf the message related to exchange, then the identifier of the exchange will be provided.message stringMessage text.rejected_message stringValue of rejected request, if available.{ ""type"": ""MESSAGE_REJECT"", ""reject_reason"": ""ORDER_ID_NOT_FOUND"", ""exchange_id"": ""BINANCE"", ""message"": ""Order with ID: BINANCE-7d8a-4888 not found"", ""rejected_message"": ""{\""client_order_id\"":\""BINANCE-7d8a-4888\"",\""exchange_id\"":\""BINANCE\"",\""type\"":\""ORDER_CANCEL_SINGLE_REQUEST\""}""}Loading...Was this section helpful?12345PreviousCancel order requestNextGet order execution reportCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/rest-api/orders/get-open-orders)"
588,i.io naas api bitcoin Methods getnodeaddresses,"i.io naas api bitcoin Methods getnodeaddresses.   getnodeaddresses | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetnodeaddressesOn this pagegetnodeaddressesOverview​The 'getnodeaddresses' method allows you to retrieve information about various nodes in the Bitcoin network. The method returns a JSON array containing details such as the last seen time, services offered, address, and port of the nodes.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \ --method POST \ --timeout=0 \ --header 'Content-Type: application/json' \ --header 'accept: application/json' \ --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KE' \ --body-data '{""jsonrpc"":""2.0"",""id"":1,""method"":""getnodeaddresses"",""params"": [ ]}' \ 'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, ""https://bitcoin-mainnet.node.coinapi.io"");request.Headers.Add(""accept"", ""application/json"");request.Headers.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KE"");var content = new StringContent(""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""getnodeaddresses\"",\""params\"": [ ]}"", null, ""application/json"");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [ 'Content-Type' => 'application/json', 'accept' => 'application/json', 'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KE'];$body = '{ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getnodeaddresses"", ""params"": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection(""mainnet-bitcoin.node.coinapi.io"")payload = json.dumps({""jsonrpc"": ""2.0"",""id"": 1,""method"": ""getnodeaddresses"",""params"": []})headers = {'Content-Type': 'application/json','accept': 'application/json','X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KE'}conn.request(""POST"", ""/"", payload, headers)res = conn.getresponse()data = res.read()print(data.decode(""utf-8""))var settings = { ""url"": ""https://bitcoin-mainnet.node.coinapi.io"", ""method"": ""POST"", ""timeout"": 0, ""headers"": { ""Content-Type"": ""application/json"", ""accept"": ""application/json"", ""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KE"" }, ""data"": JSON.stringify({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getnodeaddresses"", ""params"": [] }),};$.ajax(settings).done(function (response) { console.log(response);});package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io/ioutil"")func main() {url := ""https://bitcoin-mainnet.node.coinapi.io""method := ""POST""payload := strings.NewReader(`{""jsonrpc"":""2.0"",""id"":1,""method"":""getnodeaddresses"",""params"": [ ]}`)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add(""Content-Type"", ""application/json"")req.Header.Add(""accept"", ""application/json"")req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KE"")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require ""uri""require ""json""require ""net/http""url = URI(""https://bitcoin-mainnet.node.coinapi.io"")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""Content-Type""] = ""application/json""request[""accept""] = ""application/json""request[""X-CoinAPI-Key""] = ""73034021-THIS-IS-SAMPLE-KE""request.body = JSON.dump({ ""jsonrpc"": ""2.0"", ""id"": 1, ""method"": ""getnodeaddresses"", ""params"": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder() .build();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""jsonrpc\"":\""2.0\"",\""id\"":1,\""method\"":\""getnodeaddresses\"",\""params\"": [ ]}"");Request request = new Request.Builder() .url(""https://bitcoin-mainnet.node.coinapi.io"") .method(""POST"", body) .addHeader(""Content-Type"", ""application/json"") .addHeader(""accept"", ""application/json"") .addHeader(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KE"") .build();Response response = client.newCall(request).execute();Request Parameters​method: (string) The method name, in this case, ""getNodeAddresses"".params: (array) An array of parameters. This method does not require any parameters.id: (numeric) A unique identifier for the request.jsonrpc: (string) The version of the JSON-RPC protocol, which should be ""2.0"".Response​[ { ""time"": xxx, ""services"": n, ""address"": ""str"", ""port"": n }]Was this section helpful?12345PreviousgetNewAddressNextgetpeerinfoOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/bitcoin/Methods/getnodeaddresses)"
589,i.io api limits and billing metrics,"i.io api limits and billing metrics.   API limits and billing metrics | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQCustomer PortalChangelogAPI limits and billingOn this pageAPI limits and billing metricsAPI limits are a crucial aspect of any API product, and they exist for several important reasons. They are designed to ensure fair usage and maintain the quality of service for all users. By implementing these limits, we can prevent any single user from overloading the system, which could potentially degrade the performance for others. This is a standard practice across the industry and is essential for maintaining a high level of service.One of the key limits we have in place is the Concurrency limit. This limit is specifically designed to protect our infrastructure. It controls the number of simultaneous API calls/requests that can be executed at any given moment. Each API call/request increases the Concurrency limit against your quota, and it decreases when the call/request finishes. This ensures that our servers are not overwhelmed by too many simultaneous requests, thereby ensuring smooth and efficient operation.The specific limits that apply to you depend on several factors. These include the plan you have subscribed to, the product you are using, and the protocol you are utilizing. Different products and protocols may have different limits, reflecting their varying requirements and capabilities.We understand that different users may have different needs, and we try to accommodate these requests whenever possible. Therefore, some limits, such as the Concurrency limit, can be requested to be increased through our support team. We review these requests on a case-by-case basis, taking into account factors such as your usage history and the capacity of our infrastructure.There are also limits that depend on your plan, such as the Request limit or the Node as a Service units limit. If you exceed these limits, you can continue to use our services by paying an overage fee. This allows us to maintain a high level of service for all users, even during periods of high demand.In conclusion, API limits are a necessary and important part of our service. They ensure that all users can enjoy a high-quality, reliable service, and they protect our infrastructure from being overwhelmed.Limits applied to our products​Product nameLimitsMarket Data REST APICredits LimitConcurrency LimitMarket Data WebSocket APIRequest Limit / IPHello Limit / IPConcurrency limit / APIKeyMarket Data FIX APISession / APIKey Each API Key can have one session, and when next session is stablished then current is disconnectedMarket Data S3 APITODOEMS API Cloud MgmtConcurrency limit / APIKeyEMS API REST APINo limitsEMS API WebSokcet APINo limitsEMS FIX APISession / APIKeyEach API Key can have one session, and when next session is stablished then current is disconnectedNAAS REST APINAAS Credits LimitNAAS Concurrency LimitNAAS WebSocket APINAAS Credits Limit NAAS Concurrency LimitMultiple API keys for a subscription​At CoinAPI, we understand that our customers may have diverse needs and may require multiple API keys for a single subscription. We have designed our system to accommodate this requirement, allowing you to add additional API keys to your subscription. These keys operate within the confines of a single limit, ensuring that you have the flexibility you need without compromising on control.Each API key can be further customized with a more precise limit. This feature allows you to manage your usage effectively, ensuring that each key is used optimally and within its designated limit. This level of control can be particularly useful in managing resources and preventing overuse.In addition to these features, we also offer the ability for API calls using a specific API key to generate overage, i.e., exceed the quota. This can be particularly useful in situations where you anticipate a higher volume of calls. However, it's important to note that if the limit is exceeded, the API calls may be rejected to prevent overuse and maintain system integrity. All these settings, including the limits and the ability to set overage, can be managed from the Customer Portal. This ensures that you have complete control over your subscription and can make adjustments as and when needed.Customizing Limits for API Keys within a Subscription​If both API keys, each with a limit of 500, exhaust their allotted limits, reaching a combined total of 1000, further requests made using either key will be rejected until the limit resets. This ensures that the total usage across all keys within the subscription does not exceed the subscription limit.Exceeding Limits for API Keys within a Subscription​If one API key within the subscription exceeds its limit of 500, while the other key is still within its limit, requests made using the exceeded key will be rejected until the limit resets. However, requests made using the other key, which is still within its limit, will continue to be processed without interruption.infoIn summary, managing limits within a subscription involves ensuring that the usage across all API keys and services remains within the specified limits, with mechanisms in place to handle potential overages and maintain service availability and quality.X-CoinAPI-Limits Header​Overview​The X-CoinAPI-Limits header provides information about the usage limits and quota status for your API requests. By including the ForceInclude value in this header, you can ensure that you consistently receive information about the remaining and used limits in the response. While usage limit data is typically included in responses, it may be occasionally omitted for performance reasons. Using ForceInclude guarantees that the limit information is always included, ensuring up-to-date insights into your API usage.Usage​To receive real-time usage limit information in the response headers, include the X-CoinAPI-Limits header with the value set to ForceInclude in your API requests.Example:curl -X GET \ https://coinapi.io/v1/exchanges/ECB/apiKey-ED802AF4-E855-YOUR-API-KEY \ -H 'X-CoinAPI-Limits: ForceInclude' \ -H 'Content-Type: application/json'Cache Duration​Please note that to optimize performance, the usage limit information is typically cached for 60 seconds. However, if the data is not available in the cache, the server may need to retrieve it from the backend system, potentially resulting in longer response times. Therefore, in scenarios where the data is not cached, response times may vary based on the current load on the system and backend processing times.Market Data / REST API​Any authenticated endpoint is providing (in HTTP response headers) information about the current state of the limits associated with API Key. In this section we will describe each limit.Request limit / APIKey​X-RateLimit-Limit: 1000000X-RateLimit-Remaining: 999989X-RateLimit-Request-Cost: 1X-RateLimit-Reset: 2018-01-22T15:25:15.1234567ZThe request limit define number of maximum requests that could be executed in the 24 hours period (sliding/rollowing window - always last 24 hours from specific moment) for your subscription.We define request as data request credits and this is not always equal to the number of API calls executed against the API. A request is deemed to be a single one if the limit query parameter on the endpoint isn’t available, isn’t used or it's stated otherwise in the API documentation. Otherwise — if the limit query parameter is available and is used — then each of the 100 data points returned in the response is counted as one request.For example at the 2019-08-22 13:00 UTC value of the requests remaining (X-RateLimit-Remaining) will be equal to the allocated quota (X-RateLimit-Limit) decreased by the sum of the request costs (SUM(X-RateLimit-Request-Cost)) executed in the period 2019-08-21 13:00 UTC - 2019-08-22 13:00 UTC (last 24 hours).HTTP HeaderTypeDescriptionX-RateLimit-UsedintProvides information about the request limit that has been used within the last 24-hour period. This header indicates the amount of request capacity consumed based on the usage history. It is important to note that the header is not always appended to every request to optimize the operation of the API.X-RateLimit-LimitintIs an optional feature that can be enabled via the customer portal to impose a limit on the capabilities of a specific API key. It allows you to define a threshold for the number of requests that can be made using a single API key within a 24-hour time frame.X-RateLimit-RemainingintProvides information about the number of requests that can still be made within the last 24-hour period based on the usage history. This header serves as a helpful indicator of the remaining request capacity, allowing API consumers to manage their usage effectively. It is important to note that the header is not always appended to every request to optimize the operation of the API.X-RateLimit-Request-CostintThe number of requests used to generate current HTTP response.X-RateLimit-ResettimestringThe time when all provisioned requests are available to execute again if no more requests will be executed.X-RateLimit-Quota-OveragestringProvides information about whether a given API key may exceed the plan quota within a 24-hour time frame, which could result in additional charges. This header is fully defined and configured in the customer portal.X-RateLimit-Quota-AllocatedstringTotal number of requests that can be made within a specific subscription during a 24-hour time frame. This quota allocation is determined based on the user's subscription purchase.X-RateLimit-Quota-RemainingstringProvides valuable information about the remaining quota within the subscription for making requests within a 24-hour time frame. This header indicates the number of requests that can still be made within the allocated quota for the current 24-hour period.GET v1/exchanges/ECB/apiKey-ED802AF4-E855-YOUR-API-KEYHost: coinapi.ioX-RateLimit-Used: 1000X-RateLimit-Limit: 5000X-RateLimit-Remaining: 4000X-RateLimit-Request-Cost: 1X-RateLimit-Reset: 2023-05-05T12:00:00.0000001ZX-RateLimit-Quota-Overage: ENABLEDX-RateLimit-Quota-Allocated: 10000X-RateLimit-Quota-Remaining: 5000Explanation:X-RateLimit-Used: 1000 (requests used in the last 24 hours)X-RateLimit-Limit: 5000 (total request limit within a 24-hour time frame)X-RateLimit-Remaining: 4000 (requests remaining within the last 24 hours)X-RateLimit-Request-Cost: 1 (cost or ""weight"" of each individual request)X-RateLimit-Reset: 2023-05-05T12:00:00.0000001Z (when the rate limit will reset within a 24-hour period)X-RateLimit-Overage: ENABLED (API key may exceed the plan quota within a 24-hour time frame)X-RateLimit-Quota-Allocated: 10000 (total number of requests allowed for all API keys within the subscription within a 24-hour time frame)X-RateLimit-Quota-Remaining: 5000 (requests remaining within the subscription's allocated quota within the last 24 hours)Concurrency limit / APIKey​X-ConcurrencyLimit-Limit: 10X-ConcurrencyLimit-Remaining: 5The concurrency limit defines the number of maximum concurrent API calls/requests that the API could process for your subscription at the current moment. Every API call/request increases the Concurrency limit against quota, and when it finishes, decreases it.HTTP HeaderTypeDescriptionX-ConcurrencyLimit-LimitintConcurrency limit allocated for your API key.X-ConcurrencyLimit-RemainingintThe number of concurrent API calls/requests available to be executed in this moment for your API key.Market Data / WebSocket API​API access is subject to limits and n this section we will describe each limit.Request limit / IP​X-WsRequestsPerIpLimit-Limit: 10X-WsRequestsPerIpLimit-WindowSizeMs: 10000X-WsRequestsPerIpLimit-Remaining: 0X-WsRequestsPerIpLimit-RetryAfterMs: 564We define WebSocket request as the event when the WebSocket upgrade on the HTTP is happening. The request limit restricts the number of maximum allowed newly initiated WebSocket connections per IP address in a time interval (sliding/rolling window ending at a specific moment) for your subscription. Limit prevents your client application from abusing the API by reconnecting in the loop without exponential backoff.HTTP HeaderTypeDescriptionX-WsRequestsPerIpLimit-LimitintValue of the limit quota allocated.X-WsRequestsPerIpLimit-RemainingintValue of the limit quota left at the moment, counted from last WindowSizeMs milliseconds.X-WsRequestsPerIpLimit-WindowSizeMsintWindow size on which the remaining value was calculated in milliseconds.X-WsRequestsPerIpLimit-RetryAfterMsintThe number of milliseconds after which Remaining > 0. (exist only in case of the error)Hello limit / IP​X-WsHelloPerIpLimit-Limit: 10X-WsHelloPerIpLimit-WindowSizeMs: 10000X-WsHelloPerIpLimit-Remaining: 0X-WsHelloPerIpLimit-RetryAfterMs: 564The hello limit restricts the number of maximum allowed hello messages per IP address in the time interval (sliding/rolling window ending at a specific moment) for your subscription. Limit prevents your client application from abusing the API by changing the scope of the subscription.HTTP HeaderTypeDescriptionX-WsHelloPerIpLimit-LimitintValue of the limit quota allocated.X-WsHelloPerIpLimit-RemainingintValue of the limit quota left at the moment, counted from last WindowSizeMs milliseconds.X-WsHelloPerIpLimit-WindowSizeMsintWindow size on which the remaining value was calculated in milliseconds.X-WsHelloPerIpLimit-RetryAfterMsintThe number of milliseconds after which Remaining > 0. (exist only in case of the error)Concurrency limit / APIKey​X-ConcurrencyLimit-Limit: 10X-ConcurrencyLimit-Remaining: 5The concurrency limit defines the number of maximum allowed concurrent websocket connections per APIKey at the current moment. Every new WebSocket connection increases the Concurrency limit against quota, and when it's closed, decreases it.HTTP HeaderTypeDescriptionX-ConcurrencyLimit-LimitintConcurrency limit allocated for your API key.X-ConcurrencyLimit-RemainingintThe number of concurrent WebSocket connections available to be established in this moment for your API key.Node as a Service API​The utilization of CoinAPI.io's API is quantified in API Credits, providing a standardized measure for usage. Each API Credit value is assigned based on the complexity and resource intensity of specific methods within the platform. The credit values range from 10 to 500, with each method having a distinct credit value.For instance, eth_call is assigned a value of 20 API Credits. These credit values take into account various intricate factors such as computational load, memory consumption, disk usage, and network resources associated with the execution of each method.This dynamic credit system ensures a fair and accurate representation of the resources utilized by different API methods, offering transparency and flexibility in aligning with CoinAPI.io's pricing plans.Request limit / APIKey​X-UnitsLimit-Quota-Overage: disabledX-UnitsLimit-Quota-Allocated: 10000000X-UnitsLimit-Used: 0X-UnitsLimit-Quota-Remaining: 10000000HTTP HeaderTypeDescriptionX-UnitsLimit-Quota-OveragestringProvides information about whether a given API key may exceed the plan quota within a 24-hour time frame, which could result in additional charges. This header is fully defined and configured in the customer portal.X-UnitsLimit-Quota-AllocatedstringTotal number of requests that can be made within a specific subscription during a 24-hour time frame. This quota allocation is determined based on the user's subscription purchase.X-UnitsLimit-Quota-RemainingstringProvides valuable information about the remaining quota within the subscription for making requests within a 24-hour time frame. This header indicates the number of requests that can still be made within the allocated quota for the current 24-hour period.X-UnitsLimit-UsedintProvides information about the request limit that has been used within the last 24-hour period. This header indicates the amount of request capacity consumed based on the usage history. It is important to note that the header is not always appended to every request to optimize the operation of the API.BitcoinEthereumMethod nameValueabandontransaction10abortrescan10addnode10analyzepsbt10bumpfee10combinepsbt10combinerawtransaction10createmultisig10createpsbt10createrawtransaction10createwallet10decoderawtransaction10decodepsbt10decodescript10deriveaddresses10disconnectnode10dumpprivkey10estimatesmartfee10finalizepsbt10fundrawtransaction10generateblock10generatetoaddress10generatetodescriptor10getaddressesbylabel10getbalance10getbalances10getbestblockhash10getblock10getblockchaininfo10getblockcount10getblockfilter10getblockhash10getblockheader10getblockstats10getblocktemplate10getchaintips10getchaintxstats10getconnectioncount10getdifficulty10getindexinfo10getmemoryinfo10getmempoolancestors10getmempooldescendants10getmempoolentry10getmempoolinfo10getmininginfo10getnettotals10getnetworkhashps10getnetworkinfo10getnewaddress10getnodeaddresses10getpeerinfo10getrawchangeaddress10getrawmempool10getrawtransaction10getreceivedbyaddress10getreceivedbylabel10getrpcinfo10gettransaction10gettxout10gettxoutproof10gettxoutsetinfo10help10importaddress10importdescriptors10importmulti10importprivkey10importprunedfunds10importpubkey10importwallet10keypoolrefill10listreceivedbyaddress10listaddressgroupings10listbanned10listlabels10listlockunspent10listsinceblock10listtransactions10Method nameValueeth_blockNumber20eth_call20eth_chainId20eth_coinbase20eth_createAccessList20eth_estimateGas20eth_feeHistory20eth_gasPrice20eth_getBalance20eth_getBlockByHash20eth_getBlockByNumber20eth_getBlockReceipts20eth_getBlockTransactionCountByHash20eth_getBlockTransactionCountByNumber20eth_getCode20eth_getFilterChanges20eth_getFilterLogs20eth_getLogs20eth_getProof20eth_getStorageAt20eth_getTransactionByBlockHashAndIndex20eth_getTransactionByBlockNumberAndIndex20eth_getTransactionByHash20eth_getTransactionCount20eth_getTransactionReceipt20eth_getUncleByBlockHashAndIndex20eth_getUncleByBlockNumberAndIndex20eth_getUncleCountByBlockHash20eth_getUncleCountByBlockNumber20eth_getWork20eth_hashrate20eth_maxPriorityFeePerGas20eth_mining20eth_newBlockFilter20eth_newFilter20eth_newPendingTransactionFilter20eth_protocolVersion20eth_sendRawTransaction20eth_sign20eth_signTransaction20eth_submitWork20eth_subscribe20eth_subscribePendingTransactions20eth_syncing20eth_uninstallFilter20eth_unsubscribe20getBeaconBlocksAttestations20getBlockByRoot20getTxPoolStatus20net_listening20net_peerCount20net_version20trace_block70trace_call70trace_callMany70trace_filter70trace_rawTransaction70trace_replayBlockTransactions500trace_replayTransaction500trace_transaction70txpool_content500txpool_contentFrom70txpool_inspect70web3_clientVersion20web3_sha320Was this section helpful?12345PreviousAuthenticationNextHow-to guidesLimits applied to our productsMultiple API keys for a subscriptionCustomizing Limits for API Keys within a SubscriptionExceeding Limits for API Keys within a SubscriptionX-CoinAPI-Limits HeaderOverviewUsageCache DurationMarket Data / REST APIRequest limit / APIKeyConcurrency limit / APIKeyMarket Data / WebSocket APIRequest limit / IPHello limit / IPConcurrency limit / APIKeyNode as a Service APIRequest limit / APIKeyCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/api-limits-and-billing-metrics)"
590,i.io market data websocket general#limits,"i.io market data websocket general#limits.   General | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyMarket Data APIAuthenticationAPI limits and billingREST APIWebSocket API V1EndpointsGeneralMessagesWebSocket API DSJSON RPCFIX APIHow-to guidesPerformance Testing GuideWebSocket API V1GeneralOn this pageGeneralHello OUT​Example hello message for trades subscription to all symbols from COINBASE and ITBIT exchange and additional for 2 selected symbols from BITSTAMP and BITFINEX exchange:{ ""type"": ""hello"", ""apikey"": ""73034021-THIS-IS-SAMPLE-KEY"", ""heartbeat"": false, ""subscribe_data_type"": [""trade""], ""subscribe_filter_exchange_id"": [ ""COINBASE"", ""ITBIT"" ], ""subscribe_filter_symbol_id"": [ ""BITSTAMP_SPOT_BTC_USD$"", ""BITFINEX_SPOT_BTC_LTC$"" ]}Another example of a hello message for subscription to quotes related to the BTC or ETH assets:{ ""type"": ""hello"", ""apikey"": ""73034021-THIS-IS-SAMPLE-KEY"", ""heartbeat"": false, ""subscribe_data_type"": [""quote""], ""subscribe_filter_asset_id"": [""BTC"", ""ETH""]}Another example of a hello message for subscription to quotes related to the BTC/USD asset pair:{ ""type"": ""hello"", ""apikey"": ""73034021-THIS-IS-SAMPLE-KEY"", ""heartbeat"": false, ""subscribe_data_type"": [""quote""], ""subscribe_filter_asset_id"": [""BTC/USD""]}Another example of a hello message for subscription of multiple data types from specific exchange:{ ""type"": ""hello"", ""apikey"": ""73034021-THIS-IS-SAMPLE-KEY"", ""heartbeat"": false, ""subscribe_data_type"": [""trade"", ""quote"", ""book20""] ""subscribe_filter_exchange_id"": [ ""BITSTAMP"" ]}Subscribe OUT​The WebSocket API has been enhanced to support dynamic subscription management through subscribe and unsubscribe messages. These allow for more granular control over the data streams without the need to resend the entire subscription scope as previously required with the hello message.To subscribe to additional data types or filters without overriding existing subscriptions, send a subscribe message:Example subscribe message for book data related to ""BTC"" and ""ETH"":{ ""type"": ""subscribe"", ""apikey"": ""a54fdcca-2d82-44c2-ae53-b95ab2363309"", ""heartbeat"": true, ""subscribe_data_type"": [""book""], ""subscribe_filter_asset_id"": [""BTC"", ""ETH""]}This message adds subscriptions to the specified data types and filters, augmenting any existing subscriptions maintained in the session.Unsubscribe OUT​Similarly, to remove specific data types or filters from your current subscription, send an unsubscribe message:Example unsubscribe message to remove book data subscription for ""BTC"":{ ""type"": ""unsubscribe"", ""apikey"": ""a54fdcca-2d82-44c2-ae53-b95ab2363309"", ""heartbeat"": true, ""subscribe_data_type"": [""book""], ""subscribe_filter_asset_id"": [""BTC""]}The unsubscribe message removes the specified subscriptions without affecting other existing subscriptions.Subscribe vs Hello​In the realm of subscription management, three key actions allow you to fine-tune your information feed according to evolving requirements:Subscribe: This action expands your current subscription scope by adding new elements without discarding any existing ones. It's particularly useful for tailoring your feed as your interests or information needs grow.Unsubscribe: Through this option, you can selectively remove specific elements from your current subscription. It's an efficient way to declutter your feed by eliminating content that no longer serves your needs, without affecting the rest of your subscriptions.Hello: Use this command to initiate a fresh start. It clears your existing subscription slate and sets up a new scope from scratch. Opt for this when a complete overhaul of your subscriptions is needed, rather than just an adjustment.After your WebSocket connection is established, you must send us a hello or subscribe message which contains:Stream preferences (Heartbeat and subscription details)API key for authorizationIf your message will be incorrect, we will send you error message and disconnect connection afterwards.Hello message can be repeated, each one will cause subscription scope override without interruption of your WebSocket connection.Message parameters​ParameterTypeDescriptiontypestringMessage type, must be equal to one of the values: hello, subscribe or unsubscribeapikeystringYour API keyheartbeatbooltrue to receive Heartbeat message every second, otherwise falsesubscribe_data_typestring[]List of data types you want to receive (required, possible values listed in table below)subscribe_filter_symbol_idstring[]Filter data to symbols whose identifiers match at least one of the listed prefixes. If symbol is ended with $ character then exact match is used instead of prefix match. (optional, if not provided then stream will not filtered by symbols)subscribe_filter_asset_idstring[]Filter data to messages which are related to the at least one of the listed asset identifiers or to specific asset pair (e.g. BTC/USD) (optional, if not provided then stream will not be filtered by assets)subscribe_filter_period_idstring[]Filter data to specific OHLCV periods (optional, if not provided then OHLCV stream will not be filtered by periods)subscribe_filter_exchange_idstring[]Filter data to symbols from the listed exchange identifiers (optional, if not provided then stream will not be filtered by exchanges)subscribe_update_limit_ms_quoteintMinimum delay in milliseconds between quote updates for the same symbol (optional)subscribe_update_limit_ms_book_snapshotintMinumum delay in milliseconds between book snapshot (book5, book20, book50) updates for the same symbol (optional)subscribe_update_limit_ms_exrateintMinumum delay in milliseconds between exchange rate updates for the same asset pair (optional)Data types​Listed below are all allowed values for subscribe_data_type variables from hello message. Data typeDescriptiontradeExecuted transactions feed (order book matches)quoteQuote updates feed (order book level 1)bookOrder book snapshots and updates feed (order book level 2, full order book snapshot and real-time updates). To use this data type you need to define a filter in the hello or subscribe message.book5Order book snapshots feed (order book level 2, 5 best levels from each side of book). To use this data type you need to define a filter in the hello or subscribe message.book20Order book snapshots feed (order book level 2, 20 best levels from each side of book). To use this data type you need to define a filter in the hello or subscribe message.book50Order book snapshots feed (order book level 2, 50 best levels from each side of book). To use this data type you need to define a filter in the hello or subscribe message.ohlcvOHLCV updates per symbol on periods between 1SEC and 1MINexrateExchange rate updates (VWAP-24H)assetAssets feed.exchangeExchanges feed.symbolSymbols feed.Error handling​Example JSON error message is structured like this:{ ""type"": ""error"", ""message"": ""Invalid API key""}You need to be prepared to receive an error message from us when you send something wrong; all errors are permanent and you should expect that the underlying WebSocket connection will be closed by us after sending an error message.infoGood practice is to store all error messages somewhere for further manual review.Data buffering​Data buffering JSON error message is structured like this:{ ""type"": ""error"", ""message"": ""Reached maximum allowed buffered messages for this connection.""}The stream will send the data to the client as fast as possible; this can result in a high volume of data in cases where the subscription scope is broad. If our server cannot write data to the stream because of the TCP backpressure most likely caused by your client is not reading the data fast enough, or there is not enough network bandwidth available, we will buffer the messages to allow your client to catch up. However, when the buffer is full, a disconnect will be initiated from the server-side, and the buffered messages are dropped, and they will not be resent to the client.One way to identify when your client is falling behind is to compare the CoinAPI time of the messages being received with your current time on the client and track this metric over time. Make sure your clock is synchronized correctly and do not have a drift.The possible causes of the buffering are limited and are related to:Bandwidth bottleneck, eg.Internet connection instabilityNot enough bandwidth to receive a full stream.Network card or link saturation.I am not receiving messages fast enough, eg.Lack of the thread separation between the (a) receiving thread or (b) parsing or (c) processing operations.No CPU affinity on the receiving thread.CPU bottleneck on the receiving thread.Infrequent collection of the data from the TCP stack.Heap allocation per message and Garbage Collector pressure.If your client is unable to receive messages fast enough because of the issues listed above, then these things will happen:Your client TCP stack will be full, and TCP window will be closed to inform us that you can't receive more data and we should not send to youOur TCP stack queue will be full because we couldn't send you more dataWe will internally create a limited queue of the messages to deliver when the channel is available again (this could cause the delay on the real-time data before the gaps will appear)If the queue is full, then we will disconnect you.To minimize the occurrence of disconnects:Make sure that your client is reading the stream fast enough. Typically you should not do any real processing work as you read the stream. Read the stream and hand the activity to another thread/process/data store to do your processing asynchronously.Make sure that your data center has inbound bandwidth sufficient to accomodate large sustained data volumes as well as significantly larger spikes (e.g. 10x normal volume). The current default queue size per connection is 131 072 messages.For more information please google: TCP Flow Control.Was this section helpful?12345PreviousEndpointsNextMessagesHello OUTSubscribe OUTUnsubscribe OUTSubscribe vs HelloMessage parametersData typesError handlingData bufferingCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/market-data/websocket/general#limits)"
591,i.io general faq billing and subscriptions,i.io general faq billing and subscriptions.   Billing and Subscriptions | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralCustomer AccountAPIBilling and SubscriptionsCan I cancel my subscription anytime?Can I still use my API key if I cancel my subscription?How to reactivate my canceled subscription?How to subscribe to the API?How to upgrade/downgrade my subscription?Security and PrivacyGlossaryChangelogFAQBilling and SubscriptionsBilling and SubscriptionsWas this section helpful?12345PreviousDocumenting Connectivity issuesNextCan I cancel my subscription anytime?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/billing-and-subscriptions)
592,i.io naas api ethereum Methods eth getFilterLogs,"i.io naas api ethereum Methods eth getFilterLogs.   eth_getFilterLogs | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinEthereumMethodseth_blockNumbereth_calleth_chainIDeth_coinbaseeth_createAccessListeth_estimateGaseth_feeHistoryeth_gasPriceeth_createAccessListeth_getBlockByHasheth_getBlockByNumbereth_getBlockReceiptseth_getBlockTransactionCountByHasheth_getBlockTransactionCountByNumbereth_getCodeeth_getFilterChangeseth_getFilterLogseth_getLogseth_getProofeth_getStorageAteth_getTransactionByBlockHashAndIndexeth_getTransactionByBlockNumberAndIndexeth_getTransactionByHasheth_getTransactionCounteth_getTransactionReceipteth_getUncleByBlockHashAndIndexeth_getUncleByBlockNumberAndIndexeth_getUncleCountByBlockHasheth_getUncleCountByBlockNumbereth_getWorketh_hashrateeth_maxPriorityFeePerGaseth_miningeth_newBlockFiltereth_newFiltereth_newPendingTransactionFiltereth_protocolVersioneth_sendRawTransactioneth_signeth_signTransactioneth_submitWorketh_subscribesubscribePendingTransactionseth_syncingeth_uninstallFiltereth_unsubscribegetBeaconBlocksAttestationsgetBlockByRootgetTxPoolStatusnet_listeningnet_peerCountnet_versiontrace_blocktrace_calltrace_callManytrace_filtertrace_rawTransactiontrace_replayBlockTransactionstrace_replayTransactiontrace_transactiontxpool_contenttxpool_contentFromtxpool_inspectweb3_clientVersionweb3_sha3EthereumMethodseth_getFilterLogsOn this pageeth_getFilterLogsOverview​The ""eth_getFilterLogs"" method returns an array of all logs matching a filter with a given filter ID.Request​shellcsharpphppythonjavascriptgorubyjavacurl --request POST \  --url https://ethereum-mainnet-geth-archive.node.coinapi.io \  --header 'accept: application/json' \  --header 'content-type: application/json' \  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --data '{ ""id"": 1, ""jsonrpc"": ""2.0"", ""params"": [ ""0x1"" ], ""method"": ""eth_getFilterLogs""}'using RestSharp; {var options = new RestClientOptions(""https://ethereum-mainnet-geth-archive.node.coinapi.io"");var client = new RestClient(options);var request = new RestRequest("""");request.AddHeader(""accept"", ""application/json"",""X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY"");request.AddJsonBody(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0x1\""],\""method\"":\""eth_getFilterLogs\""}"", false);var response = await client.PostAsync(request);Console.WriteLine(""{0}"", response.Content); }<?php$curl = curl_init();curl_setopt_array($curl, [CURLOPT_URL => ""https://ethereum-mainnet-geth-archive.node.coinapi.io"",CURLOPT_RETURNTRANSFER => true,CURLOPT_ENCODING => """",CURLOPT_MAXREDIRS => 10,CURLOPT_TIMEOUT => 30,CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,CURLOPT_CUSTOMREQUEST => ""POST"",CURLOPT_POSTFIELDS => json_encode(['id' => 1,'jsonrpc' => '2.0','params' => ['0x1'],'method' => 'eth_getFilterLogs']),CURLOPT_HTTPHEADER => [""accept: application/json"",""content-type: application/json""""X-CoinAPI-Key"": ""73034021-THIS-IS-SAMPLE-KEY""],]);$response = curl_exec($curl);$err = curl_error($curl);curl_close($curl);if ($err) {echo ""cURL Error #:"" . $err;} else {echo $response;}?>import requestsurl = ""https://ethereum-mainnet-geth-archive.node.coinapi.io""payload = { ""id"": 1, ""jsonrpc"": ""2.0"", ""params"": [""0x1""], ""method"": ""eth_getFilterLogs""}headers = { ""accept"": ""application/json"", ""content-type"": ""application/json"", ""X-CoinAPI-Key"" : ""73034021-THIS-IS-SAMPLE-KEY""}response = requests.post(url, json=payload, headers=headers)print(response.text) const options = { method: 'POST', headers: {accept: 'application/json', 'content-type': 'application/json', 'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}, body: JSON.stringify({id: 1, jsonrpc: '2.0', params: ['0x1'], method: 'eth_getFilterLogs'})};fetch('https://ethereum-mainnet-geth-archive.node.coinapi.io', options) .then(response => response.json()) .then(response => console.log(response)) .catch(err => console.error(err));package mainimport ( ""fmt"" ""strings"" ""net/http"" ""io"")func main() { url := ""https://ethereum-mainnet-geth-archive.node.coinapi.io"" payload := strings.NewReader(""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0x1\""],\""method\"":\""eth_getFilterLogs\""}"") req, _ := http.NewRequest(""POST"", url, payload) req.Header.Add(""accept"", ""application/json"") req.Header.Add(""content-type"", ""application/json"") req.Header.Add(""X-CoinAPI-Key"", ""73034021-THIS-IS-SAMPLE-KEY"") res, _ := http.DefaultClient.Do(req) defer res.Body.Close() body, _ := io.ReadAll(res.Body) fmt.Println(string(body))}require 'uri'require 'net/http'url = URI(""https://ethereum-mainnet-geth-archive.node.coinapi.io"")http = Net::HTTP.new(url.host, url.port)http.use_ssl = truerequest = Net::HTTP::Post.new(url)request[""accept""] = 'application/json'request[""content-type""] = 'application/json'request[""X-CoinAPI-Key""] = '73034021-THIS-IS-SAMPLE-KEY'request.body = ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0x1\""],\""method\"":\""eth_getFilterLogs\""}""response = http.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient();MediaType mediaType = MediaType.parse(""application/json"");RequestBody body = RequestBody.create(mediaType, ""{\""id\"":1,\""jsonrpc\"":\""2.0\"",\""params\"":[\""0x1\""],\""method\"":\""eth_getFilterLogs\""}"");Request request = new Request.Builder() .url(""https://eth-mainnet.g.alchemy.com/v2/docs-demo"") .post(body) .addHeader(""accept"", ""application/json"") .addHeader(""content-type"", ""application/json"") .build();Response response = client.newCall(request).execute();Request Parameters​A filter object with the following keys and their values:'fromBlock': [optional, default: 'latest'] A hexadecimal block number, or 'latest' for the last mined block. The 'pending' option is not currently supported. See the default block parameter.'toBlock': [optional, default: 'latest'] A hexadecimal block number, or 'latest' for the last mined block. See the default block parameter.'address': [optional] (20 bytes) Contract address or a list of addresses from which logs should originate.'topics': [optional] An array of 32 bytes DATA topics. Topics are order-dependent. Each topic can also be an array of DATA with ""or"" options.'blockHash': [optional] With the addition of EIP-234, 'blockHash' restricts the logs returned to the single block with the 32-byte hash 'blockHash'. Using 'blockHash' is equivalent to 'fromBlock' = 'toBlock' = the block number with hash 'blockHash'. If 'blockHash' is present in the filter criteria, then neither 'fromBlock' nor ""toBlock"" are allowedResponse​{ ""jsonrpc"": ""2.0"", ""id"": 1, ""error"": { ""code"": -32000, ""message"": ""filter not found""}'log object array': (array) An array of log objects that match the filter. For an array of logs that occurred since the last poll, use 'eth_getFilterChanges'. Log objects contain the following keys and their values:'address': 20 bytes. Address from which this log originated.'blockHash': 32 bytes. The hash of the block where this log was in. 'Null' when it is a pending log.'blockNumber': The block number where this log was in. 'Null' when it is a pending log.'data': DATA. Contains the non-indexed arguments of the log.'logIndex': A hexadecimal of the log index position in the block. 'Null' when it is a pending log.'removed': 'true' when the log was removed, due to a chain reorganization. 'false' if it is a valid log.'topics': Array of DATA. An array of 0 to 4 32-bytes DATA of indexed log arguments. In Solidity, the first topic is the hash of the signature of the event (e.g., Deposit(address,bytes32,uint256)), except when you declared the event with the anonymous specifier.'transactionHash': 32 bytes. A hash of the transactions from which this log was created. 'Null' when it is a pending log.'transactionIndex': A hexadecimal of the transactions index position from which this log was created. 'Null' when it is a pending log.Was this section helpful?12345Previouseth_getFilterChangesNexteth_getLogsOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/naas-api/ethereum/Methods/eth_getFilterLogs)"
593,i.io faq general,"i.io faq general.   General | CoinAPI.io Documentation   Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Can I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What market symbol types are supported by CoinAPI?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyCustomer PortalChangelogFAQGeneralGeneralWas this section helpful?12345PreviousFAQNextAPI Usage LimitsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/general)"
594,i.io faq api What are the time periods I can use for Exchange Rates and OHLCV,i.io faq api What are the time periods I can use for Exchange Rates and OHLCV.   Page Not Found | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyPage Not FoundWe could not find what you were looking for.Please contact the owner of the site that linked you to the original URL and let them know their link is broken.Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/faq/api/What-are-the-time-periods-I-can-use-for-Exchange-Rates-and-OHLCV)
595,i.io general faq general What types of data does CoinAPI provide,"i.io general faq general What types of data does CoinAPI provide.   What types of data does CoinAPI provide? | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyAuthenticationCustomer PortalFAQGeneralAPI Usage LimitsAre subscription payments executed automatically?Are you planning to add an order exchange fee feature?Authorizing CoinAPI Access to Your AWS S3 BucketCan I get exchange wallet deposit and withdrawal status?Can I get the XML or CSV instead of the JSON output format?Can I have multiple API keys in one account?Can I have multiple subscriptions?Can I participate in the CoinAPI GitHub repository?Can I use the API commercially to show prices on my website?Can I use the API to show graphs, charts or tables?Can you trade on both CEX & DEX (DYDX) exchanges from a single EMS Trading API account?Crossed books / bid >= askDid you have market data in flat files?Did you offer discount for University/non-profit/research-only usage?Do you have a Status Page?Does CoinAPI provide asset icons/images of the cryptocurrencies?Exchange chart is different OHLCVHow can I set custom timezone in the data?How do I enable overage?How does SOR determine the best exchange for order execution?How does the full orderbook stream work?How granular is your data?How is trade volume calculated?How long does it take to integrate CoinAPI?How to avoid losing the messages or delay on the WebSocket?How to be notified about the issues/incidents?How to check historical API usage?How to get more than 100 items in response?How to handle order book flat files can go back in time?How to handle payment errors during sign upI didn't receive an emailI forgot my paid subscription API keyI hardly use the REST API, why is my usage so high?""Invalid API Key"" error for a newly purchased keyIs SOR included in the basic EMS Trading API package?Is latency higher for the exchanges which are providing only REST API?Is there an SLA agreement available?OHLCV Aggregation using the REST APIREST API empty array/collection response and 550 error explained.Should we file a ticket every time?Some symbols have extra identifiersWas my free API Key banned/blocked?We need a OneZero FIX API session, is this possible?What are the benefits of using the WebSocket SDK?What are the inclusions of the Enterprise Plan?What data is delivered using the local sites?What exchanges are supported?What is CoinAPI?What is the max number of accounts an Enterprise plan can have?What market symbol types are supported by CoinAPI?What order types does SOR support?What types of data does CoinAPI provide?Where is CoinAPI infrastructure located?Which assets or currencies are listed?Why am I receiving ""message"": ""Forbidden - Your API key don't have privileges to data type""?Will I get an access to Market Data API if I purchase EMS Trading API?How to setup AWS VPC peering?Customer AccountAPIBilling and SubscriptionsSecurity and PrivacyGlossaryChangelogFAQGeneralWhat types of data does CoinAPI provide?What types of data does CoinAPI provide?We are providing:Detailed information on market symbolsInformation about exchanges and assetsQuotes (Level 1)Order books (Level 2)Executed transactionsExchange ratesOHLCV on periods starting from one secondWas this section helpful?12345PreviousWhat order types does SOR support?NextWhere is CoinAPI infrastructure located?Copyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/general/faq/general/What-types-of-data-does-CoinAPI-provide)"
596,i.io ems api rest api orders cancel order request,"i.io ems api rest api orders cancel order request.   Cancel order request | CoinAPI.io Documentation   Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyEMS APIAuthenticationAPI limits and billingManaged Cloud REST APIREST APIBalancesOrdersCancel all orders requestCancel order requestGet open ordersGet order execution reportHistory of order changesSend new orderPositionsWebSocket APIFIX APISelf Hosted GuideREST APIOrdersCancel order requestCancel order requestPOST /v1/orders/cancelRequest cancel for an existing order. The order can be canceled using the client_order_id or exchange_order_id.application/jsonRequest Body requiredOrderCancelSingleRequest object.exchange_id string requiredExchange identifier used to identify the routing destination.exchange_order_id stringUnique identifier of the order assigned by the exchange or executing system. One of the properties (exchange_order_id, client_order_id) is required to identify the new order.client_order_id stringThe unique identifier of the order assigned by the client. One of the properties (exchange_order_id, client_order_id) is required to identify the new order.Responses200400490The last execution report for the order for which cancelation was requested.application/jsonSchemaExample (from schema)Schemaexchange_id string requiredExchange identifier used to identify the routing destination.client_order_id string requiredThe unique identifier of the order assigned by the client.symbol_id_exchange stringExchange symbol. One of the properties (symbol_id_exchange, symbol_id_coinapi) is required to identify the market for the new order.symbol_id_coinapi stringCoinAPI symbol. One of the properties (symbol_id_exchange, symbol_id_coinapi) is required to identify the market for the new order.amount_order number requiredOrder quantity.price number requiredOrder price.side OrdSide requiredPossible values: [BUY, SELL]Side of order.order_type OrdType requiredPossible values: [LIMIT]Order types are documented in the separate section: EMS / Starter Guide / Order parameters / Order typetime_in_force TimeInForce requiredPossible values: [GOOD_TILL_CANCEL, GOOD_TILL_TIME_EXCHANGE, GOOD_TILL_TIME_OMS, FILL_OR_KILL, IMMEDIATE_OR_CANCEL]Order time in force options are documented in the separate section: EMS / Starter Guide / Order parameters / Time in forceexpire_time dateExpiration time. Conditionaly required for orders with time_in_force = GOOD_TILL_TIME_EXCHANGE or GOOD_TILL_TIME_OEML.exec_inst string[]Possible values: [MAKER_OR_CANCEL, AUCTION_ONLY, INDICATION_OF_INTEREST]Order execution instructions are documented in the separate section: EMS / Starter Guide / Order parameters / Execution instructionsclient_order_id_format_exchange string requiredThe unique identifier of the order assigned by the client converted to the exchange order tag format for the purpose of tracking it.exchange_order_id stringUnique identifier of the order assigned by the exchange or executing system.amount_open number requiredQuantity open for further execution. amount_open = amount_order - amount_filledamount_filled number requiredTotal quantity filled.avg_px numberCalculated average price of all fills on this order.status OrdStatus requiredPossible values: [RECEIVED, ROUTING, ROUTED, NEW, PENDING_CANCEL, PARTIALLY_FILLED, FILLED, CANCELED, REJECTED]Order statuses and the lifecycle are documented in the separate section: EMS / Starter Guide / Order Lifecyclestatus_history array[]Timestamped history of order status changes.error_message stringError message.fills object[]Relay fill information on working orders.Array [time dateExecution time.price numberExecution price.amount numberExecuted quantity.]{ ""exchange_id"": ""KRAKEN"", ""client_order_id"": ""6ab36bc1-344d-432e-ac6d-0bf44ee64c2b"", ""symbol_id_exchange"": ""XBT/USDT"", ""symbol_id_coinapi"": ""KRAKEN_SPOT_BTC_USDT"", ""amount_order"": 0.045, ""price"": 0.0783, ""side"": ""BUY"", ""order_type"": ""LIMIT"", ""time_in_force"": ""GOOD_TILL_CANCEL"", ""expire_time"": ""2020-01-01T10:45:20.1677709Z"", ""exec_inst"": [ ""MAKER_OR_CANCEL"" ], ""client_order_id_format_exchange"": ""f81211e2-27c4-b86a-8143-01088ba9222c"", ""exchange_order_id"": 3456456754, ""amount_open"": 0.22, ""amount_filled"": 0, ""avg_px"": 0.0783, ""status"": ""RECEIVED"", ""status_history"": [ [  [  [   ""RECEIVED"",   ""2020-05-27T11:16:20.1677709Z""  ],  [   ""REJECTED"",   ""2020-05-27T11:16:20.1677710Z""  ]  ] ] ], ""error_message"": ""{\""result\"":\""error\"",\""reason\"":\""InsufficientFunds\"",\""message\"":\""Failed to place buy order on symbol 'BTCUSD' for price $7,000.00 and quantity 0.22 BTC due to insufficient funds\""}"", ""fills"": [ {  ""time"": ""2020-01-01T10:45:20.1677709Z"",  ""price"": 10799.2,  ""amount"": 0.002 } ]}Input model validation errors.application/jsonSchemaExample (from schema)Schematype stringtitle stringstatus numbertraceId stringerrors string{ ""type"": ""https://tools.ietf.org/html/rfc7231#section-6.5.1"", ""title"": ""One or more validation errors occurred."", ""status"": 400, ""traceId"": ""d200e8b5-4271a5461ce5342f"", ""errors"": ""string""}Exchange is unreachable.appliction/jsonSchemaExample (from schema)Schematype stringMessage type, constant.reject_reason RejectReasonPossible values: [OTHER, EXCHANGE_UNREACHABLE, EXCHANGE_RESPONSE_TIMEOUT, ORDER_ID_NOT_FOUND, INVALID_TYPE, METHOD_NOT_SUPPORTED, JSON_ERROR]Cause of rejection.exchange_id stringIf the message related to exchange, then the identifier of the exchange will be provided.message stringMessage text.rejected_message stringValue of rejected request, if available.{ ""type"": ""MESSAGE_REJECT"", ""reject_reason"": ""ORDER_ID_NOT_FOUND"", ""exchange_id"": ""BINANCE"", ""message"": ""Order with ID: BINANCE-7d8a-4888 not found"", ""rejected_message"": ""{\""client_order_id\"":\""BINANCE-7d8a-4888\"",\""exchange_id\"":\""BINANCE\"",\""type\"":\""ORDER_CANCEL_SINGLE_REQUEST\""}""}Loading...Was this section helpful?12345PreviousCancel all orders requestNextGet open ordersCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved. (https://docs.coinapi.io/ems-api/rest-api/orders/cancel-order-request)"
597,blog a guide to using cryptotick for crypto historical data,"blog a guide to using cryptotick for crypto historical data. CoinAPI Blog - A guide to using Cryptotick for crypto historical data Introducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog in CryptoTickA guide to using Cryptotick for crypto historical dataDid you know that CoinAPI, beyond API products, offers a streamlined solution for those seeking easy access to historical crypto data? Introducing Cryptotick – a pay-per-service platform that simplifies the process of obtaining market data in flat file formats. At www.cryptotick.com, analytics, and crypto firms can effortlessly navigate from data selection to delivery, thanks to an automated system tailored for both small and extensive data needs. What is CryptoTick? CryptoTick, a service offered by CoinAPI, is a platform designed for easy access to cryptocurrency historical data. It’s an ideal solution for those who need quick and straightforward access to market data without the complexities often associated with technical data retrieval. In simple terms, think of CryptoTick as a vast library of crypto historical data. It’s like having a detailed history book of cryptocurrencies at your fingertips. You can look back at how different cryptocurrencies have performed in the past, see price changes, and analyze trends. So, if you’re in need of historical data on cryptocurrencies, CryptoTick is the tool that simplifies this process, making the complex world of crypto data more accessible and understandable. Whether you’re examining the minute-by-minute trade details or exploring comprehensive overviews provided by OHLCV data, CryptoTick equips you with the tools to delve deep into the crypto market’s history. This kind of information is invaluable for making informed decisions in trading, research, or market analysis. CryptoTick features CryptoTick stands out in the market for its user-friendly approach and advanced features, making it an ideal choice for both technical and non-technical users seeking comprehensive crypto historical data. Here are some of its key features: Data format and storage The data is stored in compressed (gzip highest available compression level) ASCII text files in CSV format. This ensures efficient storage and easy accessibility. File split methodology Data is organized efficiently, with each data type split into single files per symbol and trading day (UTC). This organization facilitates easy access and analysis. Access and authorization For Amazon S3 and Google GCP bucket upload options, CryptoTick requires specific authorization settings. For Amazon S3, disable the ACL in the object ownership section and attach the provided bucket policy. For Google GCP, add the service account [email protected] with storage admin access. Sample data availability CryptoTick provides sample data files for various data types, allowing users to evaluate the data quality and format. These samples cover a range of data types like quotes, trades, limit book snapshots, and OHLCV data. How can you order crypto history data from Cryptotick? Purchasing data through Cryptotick is straightforward. Please follow these steps on www.cryptotick.com: 1. Select ‘Start my order’. 2. Choose ‘OHLCV (All Exchanges)’. 3. Click ‘Next’, then check ‘Complete History’. 4. Select your preferred time interval, e.g., ‘1 Hour’. 5. Click ‘Next’ and finalize your order. The price will be around 700 USD. Data types With CryptoTick, you have access to a wide array of data types, including quotes, trades, limit book, orderbook snapshot (L50), OHLCV (All exchanges), and OHLCV (Per exchange). This extensive range allows you to look back at how different cryptocurrencies have performed in the past, see price changes, and analyze trends across various dimensions. Conclusion In summary, whether you need large volumes of historical data or require real-time updates and flexibility, Cryptotick offers a tailored solution. Its user-friendly interface and a range of features make it a go-to platform for accessing crypto historical data. Explore Cryptotick today and empower your crypto market analysis with comprehensive and reliable data. Stay up-to-date with the latest CoinApi News.SendI Agree to CoinApi’s Privacy Policy*Recent ArticlesMarket Data APIThe power of crypto API on DEXDecentralized Exchanges (DEXs) are peer-to-peer marketplaces without a central authority, growing in popularity with examples like Uniswap...EMS Trading APIHow CoinAPI crypto trading API enhances crypto trading efficiency?Today, crypto traders face challenges like limited liquidity causing slippage and difficulty in executing large orders without affecting...NewsCoinAPI January update: NaaS, new website, Market Data API on QuickNode marketplaceCoinAPI January update features some exciting info about our future developments such as NaaS...Market Data APIHow does CoinAPI maximize the effectiveness of crypto trading bots?Crypto trading bots are essential for trading on the dynamic cryptocurrency market. They need the best data for the best outcomes, though....Market Data APICrypto tax API: Discover the future of crypto tax management with CoinAPIAs tax return deadlines approach in various countries worldwide, traders and investors are struggling with the complexities of reporting...CryptoTickA guide to using Cryptotick for crypto historical dataDid you know that CoinAPI, beyond API products, offers a streamlined solution for those seeking easy access to historical crypto data?...Market Data APIThe future of trading: How cryptocurrency API is changing the gameAs we move from 2023 into 2024, CoinAPI cements its role as a global leader in the cryptocurrency API space. With the launch of our EMS...EMS Trading APICoinAPI update: Cryptocurrency trading API and new integrationsThis month, CoinAPI is proud to launch our cryptocurrency trading API, alongside key partnerships with Quicknode. We’ve also expanded...Market Data APICoinAPI’s cryptocurrency data API guideThis guide is your comprehensive resource for understanding the various CoinAPI’s Cryptocurrency data API offerings available for...Bring the power of crypto API to your business in minutesStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsEMS Trading APIMarket Data APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/blog/a-guide-to-using-cryptotick-for-crypto-historical-data)"
598,cdn cgi l email protection#a7d4d2d7d7c8d5d3e7c4c8cec9c6d7ce89cec8,"cdn cgi l email protection#a7d4d2d7d7c8d5d3e7c4c8cec9c6d7ce89cec8.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 86784ee77a7cbf99 •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://coinapi.io/cdn-cgi/l/email-protection#a7d4d2d7d7c8d5d3e7c4c8cec9c6d7ce89cec8)"
599,get free api key,"get free api key. Contact with us!Introducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inHow can we help you today?Please select a category from the options below so that we can provide you with prompt assistance.Contact SalesGet Free API KeyContact DetailsName*Email*WebsiteWhat products are you interested in?Tell us about your project or integration.By completing and submitting this form, I agree to receive marketing emails.You can unsubscribe or update your preferences at any time. Your personal data will be processed in accordance with the Privacy Policy.×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/get-free-api-key)"
600,contact us,"contact us. Contact with us!Introducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inHow can we help you today?Please select a category from the options below so that we can provide you with prompt assistance.Contact SalesGet Free API KeyLet's chatWe’re ready to engage in conversation for any specific requirements you might have.Need help choosing? Our sales team is ready to help you select the plan that best suits your business’s needsHave questions or concerns? Our team is here to assist you.Looking for a quote on an enterprise plan? Request an estimate today. Contact DetailsName*Email*WebsiteWhat products are you interested in?Tell us about your project or integration.By completing and submitting this form, I agree to receive marketing emails.You can unsubscribe or update your preferences at any time. Your personal data will be processed in accordance with the Privacy Policy.×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/contact-us)"
601,,". CoinAPI.io - Cryptocurrency API providerIntroducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inAll cryptocurrency APIs in one placeTake your crypto trading to the next level with CoinAPI collection of crypto APIs. Gain access to the best cryptocurrency market data insights and trade from a single place.Start building for freeContact salesTrusted our crypto data APIs:  Discover our crypto APIsMarket Data APIAccess real-time and historical price data, including latest quotes and trades, with no delays. Get order book-level information for top exchanges and currency pairs.Learn MoreEMS Trading APIConnect to multiple cryptocurrency exchanges with one account. Automate trades, interact with the trading system, or conduct transactions directly on exchanges.Learn MoreCryptoTickCryptoTick is a pay-per-service platform that makes it easy for non-API researchers to download cryptocurrency historical data in flat files.Learn MoreNode as a ServicePower your blockchain apps with reliable, scalable infrastructure. Choose from shared or dedicated nodes, and enjoy access to node monitoring, archive data, and smart contract deployment.On-Chain APIGain access to reliable and high-quality raw data across multiple blockchain protocols, providing valuable insights to power your applications.Why developers love us?We empower developers with tools and resources that streamline their workflow, allowing them to create innovative solutions faster and more efficiently.Unified EcosystemAccess a cohesive platform where all components work seamlessly together, eliminating compatibility headaches and streamlining your development process.Plug-and-Play SolutionsLeverage our modular architecture to rapidly build and customize your applications. Mix and match components to create tailored solutions effortlessly.Developer-Centric DesignExperience a platform built by developers, for developers. Our intuitive design and developer-first approach make complex tasks feel effortless.Uninterrupted ServiceOur distributed infrastructure have 100ms-level failover time. Standard SLA included to all subscriptions. Experience seamless operations, regardless of local disruptions.Our core valuesWhy Choose CoinAPI?Comprehensive API SuiteAccess our full range of financial data through a single, unified API ecosystem, simplifying integration and reducing development time.Tailored Data SolutionsFrom unique order types to proprietary exchange data, we support custom requests that go beyond standard offerings, adapting to your specific integration requirements.Real-time & interconnectsWe operate on proprietary infrastructure, ensuring the lowest latency and highest uptime in the industry. Our global network using UDP na BGP protocols to exchange data directly between our data centers and Customers.Real-time and historical data from all exchangesSeamlessly access both real-time and historical data from over 300 data sources in same format, enabling thorough market analysis and informed decision-making.Use casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesMike NasserSatstreet Trading Desk“CoinAPI is the perfect solution for real-time information sourced from all exchanges, offering user-friendly APIs for developers and investors.“Read Case Study →Chris A. TovmasianMarketDraft“CoinAPI empowers businesses with seamless integration, high precision, and reliable data, transforming them into crypto-ready powerhouses for effortless cryptocurrency tracking.“Read Case Study →Colin MackieBitcoin.tax“CoinAPI has been a very reliable service and provides us with exactly the data we need. We have been a customer since 2019 and expect to continue using the services in the future.“Read Case Study →Recent ArticlesEMS Trading APIHow to improve your high-frequency trading strategies in crypto?In crypto trading, High-Frequency Trading operates similarly to traditional markets but with some unique characteristics due to the...Market Data APIWhy is aggregated crypto data better?Some time ago we wrote blog posts about crypto data filtering and crypto data standardization – now it’s time to tell you more about...Market Data APIWhat are Meme Coins? Top 25 Funniest Examples and PricesLet’s have some fun! Because after all, who said that investing and entertainment shouldn’t come in pairs?...Market Data APICrypto data filteringAt 9:00 AM, with a cup of coffee in hand, you sit at your desk ready to trade crypto. Faced with an overwhelming amount of market data and...EMS Trading API3 Core Statistical Arbitrage Strategies in CryptoStatistical arbitrage, often abbreviated as “stat arb,” is a quantitative trading strategy that seeks to exploit inefficiencies...EMS Trading APIEMS Trading API vs Single Exchange Access – What’s better?Choosing the right trading tools is crucial for optimizing your strategy. This blog post delves into Execution Management Systems (EMS),...Market Data APIThe Role of Latency in Cryptocurrency DataLatency impacts everything from trade execution speed to market data accuracy in the cryptocurrency world. Learn why low latency is...Market Data APICryptocurrency Exchange RatesIn the world of cryptocurrencies, exchange rates are dynamic and influenced by various market factors. This post explains the concept of...Market Data APIHow to get Historical and Real-Time Crypto Data From Multiple Exchanges?With the rise of cryptocurrencies, there is a growing question: how to get historical and real-time crypto data from multiple...Crypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/)"
602,blog,"blog. CoinAPI - Cryptocurrency Market Data APIIntroducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inCoinAPI BlogWelcome to the CoinAPI blog, where you can find the latest news and announcements about our product, as well as opinions from our community. We are a leader in providing fast and reliable cryptocurrency market data to developers and businesses.Search posts or discover by productSearchMarket Data APIEMS Trading APICryptoTickNode as a ServiceOn-Chain APIEMS Trading APIHow to improve your high-frequency trading strategies in crypto?In crypto trading, High-Frequency Trading operates similarly to traditional markets but with some...Read full articleRecent articlesEMS Trading APIHow to improve your high-frequency trading strategies in crypto?In crypto trading, High-Frequency Trading operates similarly to traditional markets but with some unique characteristics due to the...Market Data APIWhy is aggregated crypto data better?Some time ago we wrote blog posts about crypto data filtering and crypto data standardization – now it’s time to tell you more about...Market Data APIWhat are Meme Coins? Top 25 Funniest Examples and PricesLet’s have some fun! Because after all, who said that investing and entertainment shouldn’t come in pairs?...Market Data APICrypto data filteringAt 9:00 AM, with a cup of coffee in hand, you sit at your desk ready to trade crypto. Faced with an overwhelming amount of market data and...EMS Trading API3 Core Statistical Arbitrage Strategies in CryptoStatistical arbitrage, often abbreviated as “stat arb,” is a quantitative trading strategy that seeks to exploit inefficiencies...EMS Trading APIEMS Trading API vs Single Exchange Access – What’s better?Choosing the right trading tools is crucial for optimizing your strategy. This blog post delves into Execution Management Systems (EMS),...Market Data APIThe Role of Latency in Cryptocurrency DataLatency impacts everything from trade execution speed to market data accuracy in the cryptocurrency world. Learn why low latency is...Market Data APICryptocurrency Exchange RatesIn the world of cryptocurrencies, exchange rates are dynamic and influenced by various market factors. This post explains the concept of...Market Data APIHow to get Historical and Real-Time Crypto Data From Multiple Exchanges?With the rise of cryptocurrencies, there is a growing question: how to get historical and real-time crypto data from multiple...Load moreCrypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/blog)"
603,blog how coinapi crypto trading api enhances crypto trading efficiency,"blog how coinapi crypto trading api enhances crypto trading efficiency. CoinAPI Blog - How CoinAPI crypto trading API enhances crypto trading efficiency? Introducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inEMS Trading APIHow CoinAPI crypto trading API enhances crypto trading efficiency?   Today, crypto traders face challenges like limited liquidity causing slippage and difficulty in executing large orders without affecting market prices. Market volatility can also quickly erode profits and amplify losses, especially in less liquid markets. Additionally, using multiple trading platforms with different setups adds complexity to trading. The crypto market’s rapid changes and uncertain regulations further complicate trading and risk management. However, the CoinAPI Crypto Trading API tackles these challenges with efficient tools, quick data access, and simple multi-platform integration, enhancing the trading experience.    Core Functionalities of the CoinAPI EMS Crypto Trading API    The EMS Trading API is equipped with features designed to optimize trading strategies and enhance operational efficiency. Importantly, it enables traders to work more productively by targeting orders requiring high-touch interaction, managing trade risk, and demonstrating best execution. Additionally, full trade lifecycle support, integrated compliance, and workflow automation empower clients to manage the largest and most complex institutional portfolios on a single platform. Moreover, the EMS trading API eliminates the multiple interfaces, fragmented workflows, and order staging problems inherent in utilizing separate order and execution management platforms. Consequently, traders no longer have to switch between systems or re-key critical information, which helps save time and reduce errors. Furthermore, benefits beyond the trading desk include improved compliance and auditing, reduced operational risk, and simpler infrastructure, significantly enhancing overall trading operations. Advanced Order Types    Gone are the days of being limited to basic markets and limited orders. The EMS crypto trading API offers advanced order types like stop-loss, take-profit, iceberg, and more, enabling traders to execute complex strategies precisely, manage risks, and seize opportunities with less vigilance. Access To Market Data Real-time access to comprehensive market data is no longer a luxury but a necessity. The EMS crypto trading API bridges this gap by providing traders with immediate access to price feeds, order book data, historical trades, and market depth information from various exchanges and liquidity pools. This wealth of information is crucial for making informed decisions, analyzing market trends, and timing trades to perfection. Smart Order Routing In the quest for the best execution price, Smart Order Routing (SOR) emerges as a game-changer. It automatically identifies the most favorable path for trade execution across multiple markets and exchanges. Consequently, SOR ensures that traders not only secure the best prices but also minimize slippage and enhance profitability, marking a significant advancement in trading efficiency. Pre And Post-Trade Analysis The journey of a trade doesn’t end with execution; indeed, it extends into both pre and post-trade analysis. Initially, traders can evaluate the potential impact and cost of a trade beforehand, thereby gaining foresight into its implications. Subsequently, assessing its effectiveness afterward provides critical insight. This comprehensive view into market impact, execution quality, and cost analysis is invaluable, as it aids in refining strategies and significantly improving future performance. Trading Execution At the heart of the EMS crypto trading API lies its unparalleled trading execution capability, which is designed for speed, reliability, and efficiency. Firstly, it supports a wide array of trading strategies, including high-frequency and algorithmic trading, as well as manual execution. Consequently, this ensures rapid order fulfillment with minimal latency, facilitating a seamless trading experience. Order Management Comprehensive order management enables traders to thoroughly oversee all aspects of their orders, from initiation through to execution. This process includes, firstly, real-time order modifications and cancellations, followed by tracking. Additionally, it encompasses managing allocations and settlements, and, finally, ensuring optimal execution and compliance. One CoinAPI Crypto Trading API for the entire trade lifecycle    One API for the entire trade lifecycle ensures that traders can streamline strategies and workflows with one-click execution, manage programs as single orders, and monitor active orders and market data. Additionally, CoinAPI streamlines crypto trading by consolidating interfaces, workflows, and order management, effectively addressing fragmentation and staging issues. As a result, traders save time and reduce errors by not having to switch systems or re-enter information. Additionally, benefits like better compliance, lower risk, and simpler infrastructure improve the overall trading experience.    Real-World Use Cases The versatility of the EMS crypto trading API makes it an essential tool across various trading strategies and operations:    High-Frequency Trading (HFT): HFT traders benefit from the API’s quick execution on multiple exchanges, capturing fleeting arbitrage chances for precise, speedy returns. Algorithmic Trading: Traders with complex algorithms use the EMS crypto trading API for live market data and execution, ensuring swift strategy execution and market adaptability. Portfolio Management: Institutional investors and asset managers get powerful account management from the API, simplifying portfolio handling, risk assessment, and compliance. Market Making: The API supports market makers in placing orders efficiently, improving liquidity, narrowing spreads, and enhancing market stability. How does CoinAPI Crypto Trading API facilitate crypto trading?    The EMS Trading API by CoinAPI is more than just a tool; it’s a transformative force in cryptocurrency trading. As a top crypto trading API, it streamlines order execution, offers real-time market data access, and ensures secure account management. It enables traders and institutions to execute their strategies with unprecedented efficiency and success. Ready to elevate your crypto trading strategy with the EMS Trading API? Contact us today for a demo and discover how our crypto trading API can revolutionize your trading experience. More articles you might like: CoinAPI January update: NaaS, new website, Market Data API on QuickNode marketplace How does CoinAPI maximize the effectiveness of crypto trading bots? The future of trading: How cryptocurrency API is changing the game   Stay up-to-date with the latest CoinApi News.SendI Agree to CoinApi’s Privacy Policy*Recent ArticlesMarket Data APIThe power of crypto API on DEXDecentralized Exchanges (DEXs) are peer-to-peer marketplaces without a central authority, growing in popularity with examples like Uniswap...EMS Trading APIHow CoinAPI crypto trading API enhances crypto trading efficiency?Today, crypto traders face challenges like limited liquidity causing slippage and difficulty in executing large orders without affecting...NewsCoinAPI January update: NaaS, new website, Market Data API on QuickNode marketplaceCoinAPI January update features some exciting info about our future developments such as NaaS...Market Data APIHow does CoinAPI maximize the effectiveness of crypto trading bots?Crypto trading bots are essential for trading on the dynamic cryptocurrency market. They need the best data for the best outcomes, though....Market Data APICrypto tax API: Discover the future of crypto tax management with CoinAPIAs tax return deadlines approach in various countries worldwide, traders and investors are struggling with the complexities of reporting...CryptoTickA guide to using Cryptotick for crypto historical dataDid you know that CoinAPI, beyond API products, offers a streamlined solution for those seeking easy access to historical crypto data?...Market Data APIThe future of trading: How cryptocurrency API is changing the gameAs we move from 2023 into 2024, CoinAPI cements its role as a global leader in the cryptocurrency API space. With the launch of our EMS...EMS Trading APICoinAPI update: Cryptocurrency trading API and new integrationsThis month, CoinAPI is proud to launch our cryptocurrency trading API, alongside key partnerships with Quicknode. We’ve also expanded...Market Data APICoinAPI’s cryptocurrency data API guideThis guide is your comprehensive resource for understanding the various CoinAPI’s Cryptocurrency data API offerings available for...Bring the power of crypto API to your business in minutesStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsEMS Trading APIMarket Data APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/blog/how-coinapi-crypto-trading-api-enhances-crypto-trading-efficiency)"
604,ems api pricing,ems api pricing. CoinAPI - EMS Trading API - PricingToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inMarket Data APIEMS Trading APICryptoTickStreamline your order execution workflow with our all-in-one API solutionMonthlyAnnualFREE + PAY AS YOU GOPROFESSIONALENTERPRISEFREE + PAY AS YOU GO$0monthlyStart for freePublic knowledge baseSupport1 exchange accountFREE + PAY AS YOU GO$0monthlyStart for free Public knowledge baseSupport1 exchange accountPROFESSIONAL$999monthlySubscribe All from the free packageSupport3 exchange accountsSLAIntegration assistanceENTERPRISECustompurpose-built for businessLet's talk All features of lower packagesCustom SLA & featuresExtended integration assistancePremium supportManaged infrastructurePrices for usage above the quota of your planNumber of managed accounts above plan quotaPrice per account per hourFirst 3$ 0.094Next 7$ 0.063Next 23$ 0.038Next 67$ 0.0342Over 100$ 0.030Fequently Asked QuestionsWhat is EMS Trading API?What cryptocurrencies can I trade through the EMS API?×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/ems-api/pricing)
605,blog cryptocurrency trading api coinapi integration,"blog cryptocurrency trading api coinapi integration. CoinAPI Blog - CoinAPI update: Cryptocurrency trading API and new integrations Introducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inEMS Trading APICoinAPI update: Cryptocurrency trading API and new integrationsThis month, CoinAPI is proud to launch our cryptocurrency trading API, alongside key partnerships with Quicknode. We’ve also expanded our offerings with new integrations at exchanges like dYdX, MEXC, and Bing, enhancing our cryptocurrency trading services. Cryptocurrency trading API is live CoinAPI proudly unveils the EMS Trading API, a groundbreaking API tool designed to transform cryptocurrency trading. This API offers a unified platform for managing multiple accounts across various exchanges, streamlining the trading process with seamless integration and normalized data. Key features include real-time market data, historical insights, and options for managed cloud and self-hosted formats. Ideal for individual traders, large firms, and professionals like developers, analysts, and brokers, the EMS Trading API combines efficiency, speed, and reliability, providing a comprehensive trading solution with unique insights and data accessibility. Multiple account management Effortlessly manage an unlimited number of accounts across various exchanges from a single, unified platform. This feature is particularly beneficial for firms handling a high volume of transactions, offering streamlined account oversight. Seamless exchange integration The EMS API facilitates smooth transitions between different cryptocurrency exchanges. It provides normalized data for easy comparison and decision-making, including access to historical data for comprehensive market analysis. Real-time market data Gain access to immediate market information, crucial for informed decision-making in the fast-paced world of cryptocurrency trading. This feature ensures you are always up-to-date with the latest market movements. Flexible cryptocurrency trading API deployment options Choose between a managed cloud solution for ease of use and convenience, or opt for a self-hosted setup for greater control and confidentiality. This flexibility caters to a wide range of operational preferences and security needs. Algorithmic trading support The EMS API supports algorithmic trading, allowing for the automation of trading strategies. This feature enables efficient and effective trade execution, crucial for high-frequency trading and market-making scenarios. Read EMS Trading API documentation: https://docs.coinapi.io/ems-api/  Articles related to cryptocurrency trading API The Ultimate Guide to CoinAPI’s EMS Trading API Optimizing multi-exchange trading with Market data API and EMS Trading API Multi-Asset Trading with EMS Trading API The Role of EMS Trading API in Portfolio Management High-Frequency Trading with EMS Trading API: Unveiling its impact on cryptocurrency CoinAPI partners with Quicknode We’re excited to announce a partnership between CoinAPI and Quicknode, a significant leap forward in our mission to innovate in cryptocurrency and blockchain technology. This partnership introduces a unique add-on in the Quicknode Marketplace, blending CoinAPI’s extensive market data with Quicknode’s robust blockchain infrastructure. Key benefits: Direct access via Quicknode: Seamlessly integrate CoinAPI’s market data into your applications directly through Quicknode’s platform, utilizing the efficiency of the RPC protocol. Enhanced data integration: Benefit from easy and smooth integration, ensuring a streamlined development process, with the RPC protocol playing a key role in facilitating efficient data communication. Rich market insights: Gain access to detailed market data, including real-time and historical information, exchange rates, and more, for in-depth financial analysis. Advanced API features with RPC Protocol: Leverage our advanced cryptocurrency API, which utilizes the RPC protocol for a wide range of data access, including RPC methods, extensive exchange coverage, and standardized data models. CoinAPI Integrates with dYdX, MEXC, and Bing Exchange We’ve recently welcomed dYdX, MEXC, and Bing exchanges into our integration fold, significantly broadening the horizons for all our developers, investors, and brokers. With the dYdX integration, users gain access to the burgeoning DeFi market, unlocking real-time data on a range of innovative financial products. The MEXC integration opens up a world of global trading opportunities, offering insights into emerging markets and a diverse array of altcoins. Meanwhile, the Bing Exchange integration brings advanced trading features and analytics to the forefront, covering futures, options, and spot markets. These integrations mean you now have a wider playground to explore and excel in. Whether it’s getting a comprehensive view of the crypto landscape for smarter trading decisions or diving into a variety of trading options from spot to DeFi – it’s all here, and it’s all for you. Plus, with enhanced data quality, your strategies and analyses just got a whole lot sharper.  Stay up-to-date with the latest CoinApi News.SendI Agree to CoinApi’s Privacy Policy*Recent ArticlesMarket Data APIThe power of crypto API on DEXDecentralized Exchanges (DEXs) are peer-to-peer marketplaces without a central authority, growing in popularity with examples like Uniswap...EMS Trading APIHow CoinAPI crypto trading API enhances crypto trading efficiency?Today, crypto traders face challenges like limited liquidity causing slippage and difficulty in executing large orders without affecting...NewsCoinAPI January update: NaaS, new website, Market Data API on QuickNode marketplaceCoinAPI January update features some exciting info about our future developments such as NaaS...Market Data APIHow does CoinAPI maximize the effectiveness of crypto trading bots?Crypto trading bots are essential for trading on the dynamic cryptocurrency market. They need the best data for the best outcomes, though....Market Data APICrypto tax API: Discover the future of crypto tax management with CoinAPIAs tax return deadlines approach in various countries worldwide, traders and investors are struggling with the complexities of reporting...CryptoTickA guide to using Cryptotick for crypto historical dataDid you know that CoinAPI, beyond API products, offers a streamlined solution for those seeking easy access to historical crypto data?...Market Data APIThe future of trading: How cryptocurrency API is changing the gameAs we move from 2023 into 2024, CoinAPI cements its role as a global leader in the cryptocurrency API space. With the launch of our EMS...EMS Trading APICoinAPI update: Cryptocurrency trading API and new integrationsThis month, CoinAPI is proud to launch our cryptocurrency trading API, alongside key partnerships with Quicknode. We’ve also expanded...Market Data APICoinAPI’s cryptocurrency data API guideThis guide is your comprehensive resource for understanding the various CoinAPI’s Cryptocurrency data API offerings available for...Bring the power of crypto API to your business in minutesStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsEMS Trading APIMarket Data APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/blog/cryptocurrency-trading-api-coinapi-integration)"
606,case study,"case study. Casestudy - CoinAPI.ioIntroducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inPowering Crypto InnovatorsEmpowering Developers, Investors, Crypto Enthusiasts, Traders, and many more. Our clients can't be wrong that CoinAPI is the most trusted crypto API on the market.How Axyon AI leverages Market Data API to detect Crypto AnomaliesHow Axyon AI utilizes Market Data API to identify anomalies within the volatile landscape of cryptocurrency trading.Read Case Study →Featured CustomersEmpowering traders with real-time data Read Story →Powering Cryptocurrency Simulation Tools and ContestRead Story →Elevating crypto alerting app capabilities with CoinAPIRead Story →CoinAPI powers crypto tax calculation serviceRead Story →CoinAPI Empowers CCi30 Crypto Index with Real-Time Data TrackingRead Story →SingAlliance maximizes crypto investment with CoinAPIRead Story →We are thrilled to partner with CoinAPI, a company driven by engineering excellence and a strong product-centric approach. Their focus is on delivering user-friendly APIs to software developers and tech-savvy investors. If you require real-time information directly sourced from all exchanges, CoinAPI is the ideal solution. Mike Nasser,Sastreet Trading DeskCoinAPI is invaluable for any business integrating cryptocurrency tracking. It's about seamless integration, high precision, and reliable data. With CoinAPI, you're not just adding value, you're transforming your business into a crypto-ready powerhouse. Chris A. TovmasianMarketDraftCoinAPI has been a very reliable service and provides us with exactly the data we need. We have been a customer since 2019 and expect to continue using the services in the future. Colin MackieBitcoin.taxThe ability to have the real-time data streaming is a game-changer. The API is super easy to integrate and super easy to get the data you need. Thierry BeckSingAllianceCrypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/case-study)"
607,cdn cgi l email protection,"cdn cgi l email protection.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 8aad2a1ff850b38f •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://coinapi.io/cdn-cgi/l/email-protection)"
608,metadata explorer exchanges,metadata explorer exchanges. CoinAPI - Cryptocurrency Market Data APIIntroducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inMetadata ExplorerRequest new integrationExchangesSymbolsSearch by nameEXCHANGE IDEXCHANGE NAMEWEBSITE<< < > >> Page 1 of 0 Show 5Show 10Show 20×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/metadata-explorer/exchanges)
609,blog coinapis cryptocurrency data api types,"blog coinapis cryptocurrency data api types. CoinAPI Blog - CoinAPI’s cryptocurrency data API guide Introducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inMarket Data APICoinAPI’s cryptocurrency data API guideThis guide is your comprehensive resource for understanding the various CoinAPI’s Cryptocurrency data API offerings available for market analysis. Covering everything from real-time exchange rates to detailed historical data, we delve into the key offerings of CoinAPI’s cryptocurrency data API. This guide provides a comprehensive overview, equipping you with the insights to effectively navigate the crypto market using the diverse CoinAPI’s cryptocurrency data API. Real-Time exchange rates At CoinAPI, our crypto exchange rates, a key aspect of CoinAPI’s cryptocurrency data API, are calculated using the 24-hour Volume Weighted Average Price (VWAP-24H). This calculation is derived from a variety of high-quality data sources, with a specific focus on “SPOT” data types. We meticulously exclude any data from sources that are not deemed legitimate. Our approach involves a combination of quotes, trades, and metadata datasets, applying strict criteria for spreads in quotes and placing a strong emphasis on midpoint data for accurate pricing. Trade volumes are integral to our VWAP24 algorithm, another component of CoinAPI’s cryptocurrency data API. We give utmost priority to data freshness, updating the last 24-hour volume for each symbol every 4 hours and ensuring continuous updates every second. The algorithm is further enhanced with statistical filtering and a preference for high-ranking exchanges, ensuring the provision of the highest quality data. Lastly, we utilize a tree structure based on the VWAP24 data to determine the final exchange rates, guaranteeing that our users have access to the most current and accurate exchange rates as part of CoinAPI’s cryptocurrency data API.  Historical analysis with CoinAPI’s cryptocurrency data API     CoinAPI offers a comprehensive solution for obtaining historical exchange rates between two assets, a crucial component of CoinAPI’s cryptocurrency data API, presented in an intuitive time series format. This feature enables users to track and analyze the fluctuations in exchange rates over specific periods, providing valuable insights into market trends and asset performance. Whether you’re conducting in-depth financial analysis or simply monitoring market movements, our time series data, integral to CoinAPI’s cryptocurrency data API, equips you with the detailed historical information you need.     Timeseries periods CoinAPI enables you to delve into the historical exchange rates of any asset pair, conveniently grouped into various periods. This feature is designed to cater to diverse analytical needs, whether you require granular data for short-term analysis or broader overviews for long-term trends. Below is a comprehensive list of the supported periods available for requesting historical time series data: With this range of time-series periods, CoinAPI’s cryptocurrency data API provides unparalleled flexibility, allowing you to access the exact historical data you need, tailored to your specific time frame requirements. Quotes  CoinAPI offers a dynamic Quote Updates Feed, focusing on Order Book Level 1 data. This service provides real-time updates on the latest quotes, capturing the most immediate bid and ask prices for various asset pairs. Ideal for traders and analysts seeking up-to-the-minute market information, our feed ensures you have access to the forefront of market changes as they happen. With this tool, you’re equipped to make informed decisions based on the very latest market data. Trade volume data CoinAPI is renowned for its comprehensive trade data, a cornerstone of our market analysis tools. This data encompasses critical details such as the trading symbol, precise timestamp, transaction price, quantity, and the buyer’s and seller’s order IDs. Such depth and granularity make our trade data an essential resource for traders and analysts who require a real-time, nuanced understanding of market movements. Users can access the latest trades executed up to just 1 minute ago, with the most recent information always presented in descending chronological order. This ensures that you are always working with the most current and relevant market data available. Metadata  CoinAPI provides a comprehensive suite of metadata services, offering in-depth insights into the cryptocurrency market. Users can access a full range of asset icons in various sizes, perfect for visual representations in applications and reports. Our assets listing includes a complete overview of all cryptocurrencies, sortable by asset ID. For exchange data, we offer lists sorted by exchange ID and detailed lists of all exchanges, providing a deep dive into the available trading platforms. Our symbols data service includes a complete list of trading symbols, with optional filters for precision, and exchange-specific symbols for a more focused analysis.  Additionally, we provide iconography for exchanges, aiding in easy identification and graphical representation. Symbol mapping for each exchange is also available, essential for understanding the relationships between different trading pairs and exchanges. CoinAPI’s metadata services are a valuable resource for anyone needing organized and accessible information about the crypto market. Metrics CoinAPI offers a wide array of metrics to evaluate cryptocurrency exchanges, providing key insights into their performance and market dynamics. These metrics include: These metrics from CoinAPI are crucial for a thorough understanding of cryptocurrency exchanges, their operations, and market behavior. Order book data: Levels 1, 2, and 3 CoinAPI provides detailed order book data across three levels, each offering varying insights into market dynamics: Order Book Level 1 (L1): This basic level gives a snapshot of the market, ideal for a quick overview of current conditions and high-level market dynamics. Order Book Level 2 (L2): A more detailed level, L2 includes information on new and changing price levels, removed price levels, and individual trades, suitable for those needing deeper market insights. Order Book Level 3 (L3): The most detailed level, L3, offers comprehensive data including new, canceled, and matched orders, linking trades directly to order book orders. This is especially useful for high-frequency trading and detailed market analysis. CoinAPI’s REST API allows access to the current order book for specific symbols and their depth. Additionally, our WebSocket API provides real-time L2 order book data, ensuring the latest information is readily available for trading and analytical purposes. Order Book Snapshots CoinAPI offers a range of order book snapshots to suit various analytical needs, with intervals ranging from tick-by-tick to longer spans like 10ms, 100ms, 1s, and 10s. This variety allows users to choose the level of detail that best fits their trading and analysis strategies. The service includes: Order book snapshots feed (Level 2): Provides a complete snapshot of the order book with real-time updates, offering a thorough view of market dynamics. Book 5 – Order book snapshots feed (Level 2): Concentrates on the top 5 levels from each side of the book, giving a succinct yet detailed snapshot of market depth. Book 20 – Order book snapshots feed (Level 2): Broadens the scope to include the top 20 levels from each side, offering a more comprehensive look at market orders. Book 50 – Order book snapshots feed (Level 2): Provides an extensive overview of the top 50 levels from each side of the book, ideal for deep market analysis. These diverse snapshot options from CoinAPI provide the tools necessary for close market monitoring and analysis, ensuring users have access to the detailed data needed for informed decision-making. Real-Time order book updates CoinAPI stands out for its ability to deliver real-time order book updates, a vital tool for market participants requiring the most current data. Each update from our platform includes comprehensive details such as the price level, the number of orders at that level, whether the orders are buy or sell, and the precise timestamp. These updates are transmitted within milliseconds, making them indispensable for trading strategies that depend on immediate market data. Additionally, CoinAPI offers a WebSocket endpoint for seamless real-time market data streaming. This feature ensures that users have continuous access to live market dynamics, enabling them to react swiftly to market changes and maintain a competitive edge in their trading and analysis. Quotes Quotes are crucial for traders and investors who depend on current information for making informed decisions. They typically include bid and ask prices, providing a snapshot of the current market demand and supply, and are a vital tool for assessing the market. In cryptocurrency, quotes are particularly important for algorithmic trading, where accuracy and speed are essential. They also form the basis for market analysis, aiding in identifying trends and gauging market sentiment. Additionally, quotes are used as reference points for executing trades, ensuring that transactions reflect the latest market conditions. Crypto OHLCV data (Open, High, Low, Close, Volume) OHLCV data is a comprehensive summary of market activity within a specific timeframe, capturing crucial market movement aspects. This data is fundamental to technical analysis, helping traders identify market trends and patterns and providing insights into market psychology and potential future movements. It’s widely used in charting for visualizing market trends, creating trading indicators like moving averages and Bollinger Bands, and backtesting trading strategies. CoinAPI offers OHLCV updates for each symbol, with periods from 1SEC to 1MIN. Updates are sent when a period closes or every 5 seconds if the period has been updated but not closed, ensuring users have timely and accurate data for analysis and decision-making. Derivative Tick Info CoinAPI’s Derivative Tick Info provides essential data points for navigating the derivatives market, including: Open Interest: The total number of outstanding derivative contracts, offering insights into the market depth and trader commitment. Funding Rate: The fee exchanged in perpetual contracts, reflecting the cost of maintaining positions and the degree of market leverage. Mark Price: The fair value of a derivative contract, used primarily in margin calculations to ensure fair trading. Index Price: The current price of the underlying asset in a derivatives contract, is crucial for contract valuation. This data is critical for participants in the derivatives market, aiding in understanding market dynamics, risk management, and assessing market health and sentiment. Traders use this information to gauge market sentiment, develop hedging strategies, and perform comprehensive risk assessments, making it an invaluable tool for informed decision-making in the dynamic world of derivatives trading. Liquidations Liquidations in trading occur when an exchange forcibly closes a trader’s position due to their margin balance falling below the required maintenance margin, a measure to maintain the trading system’s integrity. These events are significant indicators of market volatility and the level of risk traders are taking on. High volumes of liquidations typically suggest extreme market conditions and can signal impending shifts in market dynamics.  This data is vital for thorough market analysis, aiding in evaluating market sentiment, identifying potential reversal points, and forming part of effective risk management strategies. Understanding trends in liquidations allows traders and analysts to gain valuable insights into current market conditions, enabling them to tailor their strategies more effectively. Trade volume data  Trade volume data measures the total cryptocurrency traded on an exchange within a specific period, acting as a key indicator of the exchange’s liquidity and the overall activity in the market. Its significance lies in its ability to reflect market dynamics; high trade volumes often correlate with heightened market activity and can signal the strength or importance of price movements. In market analysis, trade volume data is crucial for identifying trends, confirming chart patterns, and understanding supply and demand dynamics. Both analysts and traders depend on this data for informed decision-making, as it offers essential insights into market momentum and potential future trends. Latest Quotes Data CoinAPI provides the latest quote data for a broad range of cryptocurrencies, essential for high-frequency trading and strategies dependent on the most recent market data. This service is crucial for real-time trading systems where quick access to current market information is key to effective decision-making. It also plays a vital role in continuous market monitoring, helping traders and analysts keep pace with fast-changing market conditions. Quick traders, in particular, find this service invaluable for its ability to offer immediate updates, allowing them to respond rapidly to market shifts.  CoinAPI ensures users receive the latest updates for any chosen cryptocurrency symbol. New quote messages are triggered with each change in the order book’s top bid or ask level, providing an up-to-the-moment market snapshot. This commitment to delivering comprehensive, timely market data is exemplified by our Order Book Level 1 Feed, designed for efficiency and speed in updating the latest market quotes. CoinAPI’s blend of speed, precision, and thoroughness makes its latest quotes data a critical tool for traders and analysts in the ever-evolving cryptocurrency market. Raw data CoinAPI distinguishes between aggregated and raw data types to cater to diverse data analysis needs. Aggregated data types, such as OHLCV and Exchange Rates, require a specific time period for aggregation, with our datasets starting from a minimum interval of 1 second. On the other hand, raw data types represent the pinnacle of real-time information, capturing every market nuance as it happens. This unaggregated, real-time data is disseminated continuously, ensuring that every update is promptly available. For those seeking the most granular level of market data, our historical API and flat files offer tick-by-tick data, accessible through our dedicated platform, Cryptotick.com. Providing the most detailed and granular data, raw data types are particularly valuable for custom analysis and the development of unique trading algorithms. Institutions and advanced traders leverage this data for conducting comprehensive market analysis, developing proprietary trading models, and for extensive research purposes. This level of detail and immediacy in data provision makes CoinAPI an essential resource for those requiring in-depth, real-time market insights. Flat Files CoinAPI’s Flat Files S3 API, a vital part of CoinAPI Cryptocurrency Data Types, is a RESTful interface designed for seamless access to data stored in flat file formats. This API is in line with Amazon S3 standards, offering the flexibility to integrate with existing Amazon S3-based infrastructure. While it shares similarities with Amazon S3, the Flat Files S3 API is specifically tailored for listing and downloading files, and does not cover the entire spectrum of Amazon S3 features. This specialized approach ensures that users can efficiently manage their data retrieval needs, a key aspect of utilizing CoinAPI Cryptocurrency Data Types, especially when accessing and downloading the extensive data archives provided by CoinAPI. Conclusion CoinAPI empowers users with the tools to make informed decisions, supported by detailed and real-time market insights. As a comprehensive cryptocurrency exchange API, we offer a wide array of data types, catering to various needs in real-time trading, historical analysis, and algorithm development. Our commitment to providing detailed, real-time, and diverse data types makes us an essential resource in the ever-changing landscape of cryptocurrency trading and analysis. Ready to elevate your trading strategy? Try our API today and explore our pricing options to find the perfect fit for your needs. More articles you might like: Understanding OHLCV in market data analysis The Role of EMS Trading API in Portfolio Management Optimizing multi-exchange trading with Market data API and EMS Trading API Stay up-to-date with the latest CoinApi News.SendI Agree to CoinApi’s Privacy Policy*Recent ArticlesMarket Data APIThe power of crypto API on DEXDecentralized Exchanges (DEXs) are peer-to-peer marketplaces without a central authority, growing in popularity with examples like Uniswap...EMS Trading APIHow CoinAPI crypto trading API enhances crypto trading efficiency?Today, crypto traders face challenges like limited liquidity causing slippage and difficulty in executing large orders without affecting...NewsCoinAPI January update: NaaS, new website, Market Data API on QuickNode marketplaceCoinAPI January update features some exciting info about our future developments such as NaaS...Market Data APIHow does CoinAPI maximize the effectiveness of crypto trading bots?Crypto trading bots are essential for trading on the dynamic cryptocurrency market. They need the best data for the best outcomes, though....Market Data APICrypto tax API: Discover the future of crypto tax management with CoinAPIAs tax return deadlines approach in various countries worldwide, traders and investors are struggling with the complexities of reporting...CryptoTickA guide to using Cryptotick for crypto historical dataDid you know that CoinAPI, beyond API products, offers a streamlined solution for those seeking easy access to historical crypto data?...Market Data APIThe future of trading: How cryptocurrency API is changing the gameAs we move from 2023 into 2024, CoinAPI cements its role as a global leader in the cryptocurrency API space. With the launch of our EMS...EMS Trading APICoinAPI update: Cryptocurrency trading API and new integrationsThis month, CoinAPI is proud to launch our cryptocurrency trading API, alongside key partnerships with Quicknode. We’ve also expanded...Market Data APICoinAPI’s cryptocurrency data API guideThis guide is your comprehensive resource for understanding the various CoinAPI’s Cryptocurrency data API offerings available for...Bring the power of crypto API to your business in minutesStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsEMS Trading APIMarket Data APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/blog/coinapis-cryptocurrency-data-api-types)"
610,blog high frequency treading strategies in crypto,"blog high frequency treading strategies in crypto. CoinAPI Blog - How to improve your high-frequency trading strategies in crypto? Introducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inEMS Trading APIHow to improve your high-frequency trading strategies in crypto?What do statistical arbitrage, arbitrage trading, market making, momentum trading, and scalping have in common? They are all the most popular high-frequency crypto trading strategies. Find out what to do to make them work more effectively. What is high-frequency trading (HFT)? High-frequency trading (HFT) is a form of algorithmic trading that uses powerful computers and trading bots to execute a large number of orders at extremely high speeds. These trades can be executed in fractions of a second, taking advantage of small price discrepancies to make a profit. HFT is prevalent in traditional financial markets and has gained traction in the cryptocurrency market due to the market’s volatility and 24/7 trading nature. How does high-frequency trading work in crypto? In crypto trading, High-Frequency Trading operates similarly to traditional markets but with some unique characteristics due to the decentralized nature and high volatility of cryptocurrencies. Key elements include: Multiple exchanges Unlike traditional markets, the crypto market is highly fragmented with numerous exchanges operating independently. As price discrepancies between exchanges are more common, companies using HFT techniques need to integrate with multiple exchanges to capture arbitrage opportunities and ensure liquidity. It’s also worth mentioning that different exchanges and jurisdictions have varying levels of regulation, which can affect trading practices and risk management. High volatility Cryptocurrencies are known for their high volatility, with prices often changing rapidly. The crypto market is highly sensitive to news and events, such as regulatory announcements, technological advancements, and market sentiments. This creates a fertile ground for High-Frequency Trading strategies that capitalize on small price movements. However, high volatility and variable liquidity can lead to slippage, where trades are executed at a different price than expected. High-frequency traders must leverage the best solutions to minimize slippage.  24/7 trading Unlike traditional financial markets, the crypto market operates 24/7, requiring HFT systems to run continuously without downtime. Traders need to be aware of market activities across different time zones, and algorithms must be adaptable to changes around the clock. For that reason, continuous trading requires robust monitoring systems to ensure that the algorithms are functioning correctly and to detect any anomalies or errors. The ability to make real-time adjustments to trading strategies is crucial to maintaining profitability and managing risk. 5 common high-frequency trading strategies in crypto High-frequency trading is most often used in 5 cryptocurrency trading strategies. We describe them below. Statistical arbitrage This strategy uses statistical models to identify and exploit price discrepancies between correlated cryptocurrencies. Traders execute trades based on predicted price movements derived from historical data and statistical analysis. To learn more, read our article on Statistical Arbitrage Strategies in Crypto. Arbitrage trading This strategy capitalizes on the differences in execution speeds between various exchanges. By exploiting latency, traders can profit from price differences that exist momentarily across different trading platforms. To learn more, read our article on Arbitrage Trading with Cryptocurrencies. Market making Market making is a trading strategy where the trader (market maker) simultaneously places buy and sell orders for a particular asset to profit from the bid-ask spread. The market maker provides liquidity to the market by continuously offering to buy and sell at quoted prices. The main objective is to facilitate trading by ensuring that there is always a counterparty for traders looking to buy or sell an asset, thereby enhancing market efficiency and liquidity. Key Components of Market Making Bid-Ask Spread: The difference between the highest price a buyer is willing to pay (bid) and the lowest price a seller is willing to accept (ask). Market makers earn profits by capturing this spread. Order Book Management: Market makers manage the order book by placing and adjusting buy and sell orders based on market conditions. Inventory Management: Effective market-making requires balancing inventory to avoid excessive exposure to price movements in either direction. Risk Management: Continuous assessment and mitigation of risks related to price volatility, order execution, and market movements. Momentum trading Momentum trading is a strategy used by high-frequency traders to capitalize on the current cryptocurrency market sentiment. It involves identifying and exploiting the momentum of price movements in a specific direction, leveraging high-speed execution and data analysis to make rapid trading decisions. HFT algorithms for momentum trading scan for abnormally high trading activity (or “trading volume”), daily price fluctuations (or “volatility”), and crucial chart levels to capitalize on sharp breakouts or drawdowns for a digital asset. Momentum traders also trade around big events or mainstream news likely to impact a cryptocurrency’s price.  Scalping Scalping is a high-frequency trading strategy that focuses on making small profits from numerous trades executed throughout the day. Scalping involves buying and selling assets quickly, holding positions for a very short period, and aiming to profit from small price changes. The goal is to accumulate many small gains that add up to a significant profit by the end of the trading day. Scalpers often make dozens or even hundreds of trades daily, exploiting minute market inefficiencies and fleeting price discrepancies. How to improve HFT strategies with CoinAPI? As you may already know, most high-frequency trading strategies require well-written algorithms and a trading bot. But this is not enough as the following are necessary: connection to as many trusted cryptocurrency exchanges as possible smart order routing capabilities access to the most accurate data the lowest possible latency in providing real-time data historical data for backtesting strategies You can have it all with one proven crypto data provider, which is CoinAPI. How does it work? The role of real-time data in high-frequency trading Real-time data with minimal latency is essential for effective high-frequency trading strategies, including Statistical Arbitrage, Arbitrage Trading, Market Making (current market data are necessary for maintaining competitive bid-ask spreads and adjusting orders in real-time), Momentum Trading, and Scalping. CoinAPI, for instance, provides real-time data from over 350 exchanges, enabling high-frequency traders to make timely and informed trading decisions. Our API is designed to deliver data with minimal latency, utilizing WebSocket and FIX API protocols when available, and hundreds of servers to expedite data retrieval from REST API exchanges, bypassing typical REST API limitations. The Market Data API offers tick-by-tick data, order book snapshots, and trade data, which are crucial for making informed trading decisions. Order execution For high-frequency crypto trading strategies to be effective, simultaneous access and trading on multiple crypto exchanges are essential. Speed and efficiency in high-volume order execution are also critical for maintaining liquidity, balanced inventory, and efficiency in arbitrage operations. Efficient EMS Trading API with Smart Order Routing capabilities is necessary to trade on multiple exchanges within fractions of a second, ensuring optimal order execution and market performance. Backtesting your high-frequency crypto trading strategies Each of your trading strategies should be backtested to improve the performance of HFT algorithms. For this purpose, CoinAPI provides access to a comprehensive collection of historical cryptocurrency data back to 2010. By standardizing data collection, it ensures that traders have a clean and complete view of the crypto market, which is essential for developing and refining HFT strategies. Conclusion High-frequency crypto trading requires the right blend of speed, data, infrastructure, and algorithms. CoinAPI’s suite of products offers quantitative and crypto traders the tools and data necessary to excel in the high-frequency trading arena. By leveraging real-time data, low-latency APIs, and comprehensive historical datasets, traders can enhance their strategies, improve execution, and ultimately achieve higher trading profitability and efficiency. CoinAPI provides tools to succeed in high-frequency crypto trading for those in financial services, hedge funds, asset management industries, and more. Want to find out how else CoinAPI can help you make cryptocurrency trading more efficient? Contact us Stay up-to-date with the latest CoinApi News.SendI Agree to CoinApi’s Privacy Policy*Recent ArticlesEMS Trading APIHow to improve your high-frequency trading strategies in crypto?In crypto trading, High-Frequency Trading operates similarly to traditional markets but with some unique characteristics due to the...Market Data APIWhy is aggregated crypto data better?Some time ago we wrote blog posts about crypto data filtering and crypto data standardization – now it’s time to tell you more about...Market Data APIWhat are Meme Coins? Top 25 Funniest Examples and PricesLet’s have some fun! Because after all, who said that investing and entertainment shouldn’t come in pairs?...Market Data APICrypto data filteringAt 9:00 AM, with a cup of coffee in hand, you sit at your desk ready to trade crypto. Faced with an overwhelming amount of market data and...EMS Trading API3 Core Statistical Arbitrage Strategies in CryptoStatistical arbitrage, often abbreviated as “stat arb,” is a quantitative trading strategy that seeks to exploit inefficiencies...EMS Trading APIEMS Trading API vs Single Exchange Access – What’s better?Choosing the right trading tools is crucial for optimizing your strategy. This blog post delves into Execution Management Systems (EMS),...Market Data APIThe Role of Latency in Cryptocurrency DataLatency impacts everything from trade execution speed to market data accuracy in the cryptocurrency world. Learn why low latency is...Market Data APICryptocurrency Exchange RatesIn the world of cryptocurrencies, exchange rates are dynamic and influenced by various market factors. This post explains the concept of...Market Data APIHow to get Historical and Real-Time Crypto Data From Multiple Exchanges?With the rise of cryptocurrencies, there is a growing question: how to get historical and real-time crypto data from multiple...Crypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/blog/high-frequency-treading-strategies-in-crypto)"
611,market data api,"market data api. CoinAPI - Cryptocurrency Market Data APIIntroducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inInstant, reliable API to real-time and historical crypto market dataTick-by-tick crypto market data for market participants and analysts to construct quantitative models, perform statistical analysis, build trading systems, and develop data-driven applications.Free API keyAPI Documentation0Exchanges integrated0kSymbols total0kAssets supported0TBOf history market dataWhat you getRapid IntegrationImplement our API quickly with minimal effort using our SDKs. Avoid building and maintaining multiple data source connections and accelerate your market data integration.Uninterrupted Data AccessBenefit from our redundant server infrastructure with swift region switching. Minimize downtime and maintain consistent data flow for your operations.Unified Data SourceAccess comprehensive crypto market data from multiple exchanges through one API. Simplify your data pipeline with a single, trusted provider.Key featuresOHLCV dataWe provide OHLCV (Open, High, Low, Close, Volume) timeseries data from 1 second to 5 years. All that to help you visualize market data better.Real-time & historical dataIntegrate real-time and historical market data with zero latency. Get the most up-to-date information for informed decision-making.High performanceExperience low-latency, high-throughput data transmission. Receive and process market information rapidly, crucial for time-sensitive trading and analysis operations.Standardized dataBenefit from unified data formatting. Streamline analysis, comparison, and integration processes across various data sources for easier interpretation.Level 1, 2 & 3 order book dataAccess real-time Level 1 quotes and Level 2&3 order book data. Stay ahead of market movements with millisecond-level tick-by-tick events.Flexible API ProtocolsChoose from FIX, WebSocket, and REST API protocols. Select the most suitable method for your specific data access needs.Massive Data CapacityAccess up to 200GB of compressed data daily. Meet the needs of high-volume traders and large-scale analysis operations.Accurate SymbologyRely on up-to-date stock symbols, asset codes, and extensive metadata. Get crucial context for precise financial instrument analysis and reporting.Multi-Exchange CoverageAccess data from multiple cryptocurrency exchanges through a single API. Simplify data collection for a holistic crypto market view.Resilient InfrastructureGlobal Presence: Geographical distributed infrastructureData Source Colo: Presence close to the data sourcesUltra-Low Latency: Rapid response times in all regionsSmart Routing: Automatic connection to nearest serverHigh Uptime: Robust backup systems for continuous serviceScalable: Effortlessly handles surges in data volumeNo Maintenace: We do not have visible maintenancesDedicated Interconnection Add-onsCloud Direct: AWS DC /  GCP ICVPC Peering: GCE /  AWS VPC AZ PeeringPhysical Cross Connect: Equinix (TY8, NY4, LD4)Tailor your connection to your exact needs. Our flexible options ensure optimal performance, security, and integration with your existing infrastructure.View Real-Time Network StatusWhy developers love us?We empower developers with tools and resources that streamline their workflow, allowing them to create innovative solutions faster and more efficiently.Unified EcosystemAccess a cohesive platform where all components work seamlessly together, eliminating compatibility headaches and streamlining your development process.Plug-and-Play SolutionsLeverage our modular architecture to rapidly build and customize your applications. Mix and match components to create tailored solutions effortlessly.Developer-Centric DesignExperience a platform built by developers, for developers. Our intuitive design and developer-first approach make complex tasks feel effortless.Data typesTrades / Executed transactionsBBO / Quotes (Level 1)Order book (Level 2 & 3)OHLCV (Open, High, Low, Close, Volume, and more)Exchange Rates / Volume Weighted Average Price IndexAssets / Crypto and Traditional AssetsExchanges / Data SourcesSymbols / Trading MarketsFlexible Plans Tailored to Your Data NeedsMonthlyAnnualFREESTARTUPSTREAMERPROENTERPRISEFREE$0monthlyStart for free100 daily requestsFREE$0monthlyStart for free 100 daily requestsSTARTUP$79monthlySubscribe All from Free package1k daily requestsTrades only WebSocketNo access FIX ProtocolSTREAMER$249monthlySubscribe All from Startup package10k daily requestsTrades + Quotes WebSocketNo access FIX ProtocolPRO$599monthlySubscribe All from Streamer package100k daily requestsUnlimited WebSocketUnlimited FIX ProtocolENTERPRISECustompurpose-built for businessLet's talk All features of lower packagesSLAIntegration assistanceCustom featuresCompare plans and featuresFREEPrice$0REST Credits Quota100/dayReal-time dataSupportEmailPremium SupportWebSockets AccessWebSockets Trade DataWebSockets Quote DataWebSockets Book AccessFIX ProtocolSLA StandardSLA CustomIntegration assistanceDedicated infrastructureCustom featuresHistory data in flat filesFREESTARTUPSTREAMERPROENTERPRISEPrice$0$79$249$599Let's discussREST Credits Quota100/day1k/day10k/day100k/dayCustomReal-time dataSupportEmailEmailEmailEmailSlack+EmailPremium SupportWebSockets AccessWebSockets Trade DataWebSockets Quote DataWebSockets Book AccessFIX ProtocolSLA StandardSLA CustomIntegration assistanceDedicated infrastructureCustom featuresHistory data in flat filesOf course we accept payments in crypto! Add Service Credits via Customer Portal.Bank wire payment is available, contact support for more information.Need advice? Get in touch with our expertsLet's chatWe’re ready to engage in conversation for any specific requirements you might have.Need help choosing? Our sales team is ready to help you select the plan that best suits your business’s needsHave questions or concerns? Our team is here to assist you.Looking for a quote on an enterprise plan? Request an estimate today. Contact DetailsName*Email*WebsiteWhat products are you interested in?Tell us about your project or integration.By completing and submitting this form, I agree to receive marketing emails.You can unsubscribe or update your preferences at any time. Your personal data will be processed in accordance with the Privacy Policy.Prices for usage above the quota of your planAPI Credits UsagePriceFirst 100 credits/dayFREE Next 900 credits/day5.26$ / 1k credits Next 2k credits/day2.63$ / 1k credits Next 7k credits/day1.73$ / 1k credits Next 20k credits/day0.83$ / 1k credits Next 70k credits/day0.40$ / 1k credits Next 200k credits/day0.20$ / 1k credits Next 600k credits/day0.13$ / 1k credits Next 2100k credits/day0.09$ / 1k credits Next 5mln credits/day0.06$ / 1k credits Next 17mln credits/day0.04$ / 1k credits Greater than 25mln credits/day0.03$ / 1k credits Uninterrupted ServiceOur distributed infrastructure have 100ms-level failover time. Standard SLA included to all subscriptions. Experience seamless operations, regardless of local disruptions.Our core valuesWhy Choose CoinAPI?Comprehensive API SuiteAccess our full range of financial data through a single, unified API ecosystem, simplifying integration and reducing development time.Tailored Data SolutionsFrom unique order types to proprietary exchange data, we support custom requests that go beyond standard offerings, adapting to your specific integration requirements.Real-time & interconnectsWe operate on proprietary infrastructure, ensuring the lowest latency and highest uptime in the industry. Our global network using UDP na BGP protocols to exchange data directly between our data centers and Customers.Real-time and historical data from all exchangesSeamlessly access both real-time and historical data from over 300 data sources in same format, enabling thorough market analysis and informed decision-making.Unlock the 12 Must-Have Factors for Choosing a Crypto Market Data Provider!Discover The Secrets of Choosing A High-Quality Crypto Market Data API Now! This brief guide provides a checklist of critical requirements for a strategic market data provider.Download e-bookRecent ArticlesEMS Trading APIHow to improve your high-frequency trading strategies in crypto?In crypto trading, High-Frequency Trading operates similarly to traditional markets but with some unique characteristics due to the...Market Data APIWhy is aggregated crypto data better?Some time ago we wrote blog posts about crypto data filtering and crypto data standardization – now it’s time to tell you more about...Market Data APIWhat are Meme Coins? Top 25 Funniest Examples and PricesLet’s have some fun! Because after all, who said that investing and entertainment shouldn’t come in pairs?...Market Data APICrypto data filteringAt 9:00 AM, with a cup of coffee in hand, you sit at your desk ready to trade crypto. Faced with an overwhelming amount of market data and...EMS Trading API3 Core Statistical Arbitrage Strategies in CryptoStatistical arbitrage, often abbreviated as “stat arb,” is a quantitative trading strategy that seeks to exploit inefficiencies...EMS Trading APIEMS Trading API vs Single Exchange Access – What’s better?Choosing the right trading tools is crucial for optimizing your strategy. This blog post delves into Execution Management Systems (EMS),...Market Data APIThe Role of Latency in Cryptocurrency DataLatency impacts everything from trade execution speed to market data accuracy in the cryptocurrency world. Learn why low latency is...Market Data APICryptocurrency Exchange RatesIn the world of cryptocurrencies, exchange rates are dynamic and influenced by various market factors. This post explains the concept of...Market Data APIHow to get Historical and Real-Time Crypto Data From Multiple Exchanges?With the rise of cryptocurrencies, there is a growing question: how to get historical and real-time crypto data from multiple...Read more aboutEMS Trading APICryptoTickNode as a ServiceOn-Chain API×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/market-data-api)"
612,cdn cgi l email protection#7a090f0a0a15080e3a191513141b0a13541315,"cdn cgi l email protection#7a090f0a0a15080e3a191513141b0a13541315.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 8aad2a850cedb327 •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://coinapi.io/cdn-cgi/l/email-protection#7a090f0a0a15080e3a191513141b0a13541315)"
613,legal#policy,"legal#policy. CoinAPI - Legal informationsIntroducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inLegal infoCustomer AgreementAcceptable Usage PolicyPrivacy policyEffective Date: 2023-07-01Customer AgreementThis customer agreement (“Agreement”) is a legal agreement between you and COINAPI LTD UTR 8050945 (“Company”, “our”, “we” or “us”), an United Kingdom company (together the “parties” and each a “party”). If you are agreeing to this Agreement not as an individual but on behalf of your company, then a reference to “you” or “Customer” in this Agreement is a reference to the company, and the company will be bound by this Agreement. We may modify the terms of this Agreement from time to time subject to Section 17 (Changes to this Agreement) below.By clicking on the “I agree” (or similar button or checkbox) that is presented to you at the time of your Order or when subscribing for one of our services, or by using or accessing our Products, you agree to be bound by the terms of this Agreement. If you do not agree to the terms of this Agreement, you must immediately uninstall or cease using the Products.1. Grant and Scope of Agreement1.1. Scope. This Agreement governs your initial purchase as well as any future purchases made by you that reference this Agreement. This Agreement also includes our Privacy Policy, our Acceptable Use Policy, any Orders, and any other referenced policies and attachments. For the absence of doubt, this Agreement governs your use of or reliance on:(a)our commercially available downloadable software products (“Software”), currently designated as “On-Perm” deployments;(b)our cloud-hosted online services, currently designated as “CoinAPI Cloud” (“Cloud Services”),(together with any related documentation, the Products), and(c)any related support or maintenance services provided by us (“Support Services”). 1.2. Rights. You have no rights in, or to, any Product or Support Service other than the rights granted under this Agreement.1.3. Software and Cloud Services. Section 3 (Software Terms) applies specifically to Software. Section 4 (Cloud Services Terms) applies specifically to Cloud Services. All other terms of this Agreement apply to all Products unless otherwise specified.1.4. Affiliates. Your affiliates shall be entitled to make full use of the Products in accordance with the terms of this Agreement to the same extent as if they were you. For purposes of this Agreement, “Affiliate” means an entity which, directly or indirectly, owns or controls, is owned or is controlled by or is under common ownership or control with a party, where “control” means the power to direct the management or affairs of an entity, and “ownership” means the beneficial ownership of greater than 50% of the voting equity securities or other equivalent voting interests of the entity.2. Accounts, Orders, Subscriptions, Data Sources, Modules, Payments, and Refunds2.1. Account Registration. You must register an Account with us at our website in order to place Orders, receive license keys, and manage access to the Software or Cloud Services. Your account information must be kept accurate and complete. You must keep your account information current, so that we may send notices, statements, and other information to you by email or through your Account. You are responsible for all actions taken through your Account, including Orders and Subscriptions made.2.2. Orders, Subscription Term & Renewals. You create an Order by following the purchase or subscription flows on our website, or by requesting an invoice from us. All Orders are intent only and are not binding (on you or on us) until payment is received in full by us and processed or access to the corresponding Product is delivered. Your Order will name the Product you are purchasing, any limits on the number of Data Sources you will be able to manage, and the License Term or Subscription Term. Unless noted otherwise on your Order, all subscriptions will automatically renew for periods equal to your initial Subscription Term unless you cancel your subscription. You can cancel or decide to terminate your subscription, no refund will be provided as all payments are final. You acknowledge that your subscription is subject to automatic renewals and you consent to and accept responsibility for all related recurring charges to your applicable payment method without further authorization from you and without further notice unless required by law. You acknowledge that the amount of the recurring charge may change if the applicable tax rates change, or if there has been a change in the applicable fees (for which, if applicable, you will be given at least 7 days❜ notice before such change takes effect). Upon the expiry of your License Term plus optionally a grace period with length of our sole discretion, functionality in the Software will be limited, and you will not be able to use the Software.2.3. Data Source. Our Software is licensed, and / or our Cloud Services are provided, according to the number of specific and unique data sources you can manage. A “Data Source” is an edge of the infrastructure to specific and unique external data source. A Data Source may be a exchange, broker, blockchain, ledger that Product communicates with using the protocol. Data Sources are defined in the Documentation. Some types of Data Sources may count as more than one ""Data Source"" towards your limit as defined in the Documentation. You are solely responsible for any use of the external Data Sources which may be subject to restrictions of use and require additional license agreements with the third party.2.4. Refund policy. You may terminate your initial Order of the applicable Software or Cloud Services under this Agreement, for no reason or any reason, by providing notice of termination. At your request (which may be made through your Account or by contacting us), we may disable the license key that allowed the Software to operate or disable access to the Cloud Services. All fees paid are non-refundable.2.5. Module. Our Software is licensed, and / or our Cloud Services are provided, according to the specific modules available in our Product. A “Module” is self-contained component of our Product. A Module may be related to API, User Interface, Algorithm or Functionality of the Product. Modules are defined in the Documentation.3. Software Terms3.1. Grant of License. Under the terms of this Agreement, we grant you a worldwide, non-exclusive, fully paid, non-transferable license to install and use the Software for your own business purposes, during the applicable License Term.3.2. License Delivery. To activate and use the Software, you will be required to provide a license key. License keys will be delivered electronically to your Account and via email when payment has been received as per your Order.3.3. License Term. Your license to use the Software is granted for a specific time period (License Term or Subscription Term). Your Order will indicate:(a)a period of time for the License Term (12 months unless specified otherwise); and/or,(b)a specific begin and end date for the License Term.If a begin and end date are not indicated, the begin date of the License Term will be the date when the Product is delivered, at which time the license key will be delivered to you as per Section 3.2 (License Delivery). Upon the expiry of your License Term plus optionally a grace period with length of our sole discretion, functionality in the Software will be limited, and you will not be able to use the Software.3.4. Support, Maintenance and New Releases. During the License Term you will have access, free of charge, to all updates, upgrades, new releases and patches for the Software that we release during the License Term, along with technical support. You acknowledge and agree that we may, but are under no obligation to, release any update, upgrade or patch at any time or for any reason.3.5. Number of Instances. For each License that you purchase, you may install and use up to three (3) active “Instances” of the Software. An Instance means a running copy of the Software that has its own operating enviroment. Instances are counted whether installed on the same physical or virtual server, or on different servers.Instances may be used for production usage, disaster recovery, testing, quality assurance, development or other purposes. Each Instance may have an unlimited number of Nodes to provide availability and redundancy.Your Order specifies the maximum number of Data Sources you may register across all running Instances and in each Instance individually, even if you run multiple Instances concurrently.3.6. Third Party Code and Open Source Libraries Used. The Software includes code and libraries licensed to us by third parties, including open source software. To the extent applicable, we shall identify open source software included in the Software in or through the Software itself, or on a page in our documentation. Some of these licenses require us to provide the open source software to you on the terms of the open source license instead of the terms of the Agreement. In that case, the terms of the open source license will apply, and you will have the rights granted in such licenses to the open source software itself, such as access to source code, right to make modifications, and right to reverse engineer. Notwithstanding the foregoing, if you are using the Products in the form provided to you, in accordance with your permitted scope of use, with no distribution of software to third parties, then none of these open source licenses impose any obligations on you beyond what is stated in the Agreement.4. Cloud Services Terms4.1. Access to Cloud Services. Subject to your acceptance and continued compliance with the terms of this Agreement, we grant you a non-exclusive right to access and use the Cloud Services, during the applicable Subscription Term. You acknowledge that the Cloud Services are online, subscription-based products hosted and managed by us on your behalf, which may change from time to time.4.2. Data Sources Limits and Billing. The price for your Subscription will calculated with one of the following methods:(a)based on a fixed number of maximum Data Sources and Modules available; or,(b)based on unlimited Data Sources and Modules;as chosen by you when setting up the Subscription or Order.4.3. Fair Usage. Your usage of the Cloud Services is governed by our Acceptable Usage Policy.4.4. Security of Your Data. We implement and maintain security measures to help protect the Cloud Services and Your Data from security attacks. However, you acknowledge and agree that as a consequence of the inherent nature of the Cloud Services, Your Data will often be transported over networks that are not owned or operated by us, and that we are not responsible for any of Your Data that is lost, intercepted, altered or stored across such networks, except to the extent caused by our negligence or intentional misconduct. You acknowledge that we are unable to guarantee complete security or confidentiality of Your Data or guarantee that third parties will never be able to defeat our security measures or those of our third-party service providers. We are General Data Protection Regulation (GDPR) compliant: if we discover or are made aware that any of Your Data has been intercepted, we will follow the GDPR reporting guidelines if the intercepted data may have contained any personally identifiable information.4.5. Termination, removal and suspension. We may remove Your Data from the Cloud Services, or suspend your access to the services, if we deem such action necessary based on your violation of this Agreement or our Acceptable Use Policy. We will provide thirty (30) days❜ notice and provide reasonable opportunity for you to correct your breach prior to removing Your Data, but we may also suspend your access immediately without notice if we deem it necessary to protect the Cloud Services, security of other customers or to comply with any law or regulation. We have no liability to you for removing or deleting Your Data from or suspending your access to any Cloud Services if you violate this Agreement, our Acceptable Use Policy or any law or regulation.4.6. Static IP Addresses. Your Order may include a static IP address (Static IP) or/and DNS name. We may on rare occasions need to change the details you have been provided with. In such cases we will do our best to give you at least 30 days❜ notice so you can prepare for the change.4.7 Services May Be Inaccessible Or Inoperable. You hereby acknowledge that from time to time, the Services may be inaccessible or inoperable for any reason, including, without limitation: (a)equipment (hardware) malfunctions;(b)software malfunctions;(c)periodic maintenance procedures or repairs which Company mayundertake from time to time; and/or,(d)causes beyond the reasonable control of Company and/or not reasonably foreseeable by Company.4.8 Service Level Agreement. Company will use commercially reasonable efforts to make the Services available 99.999% of time, measured monthly (“Monthly Uptime Percentage”). Further, any downtime resulting from outages of third party connections or utilities or other reasons beyond Company❜s control will also be excluded from any such calculation. Customer's sole and exclusive remedy, and Company's entire liability, in connection with Service availability shall be that in the event Company does not meet the Monthly Uptime Percentage in given calendar month, Customer will be eligible to receive a Service Credit. “Unavailable Time” means the Company API is not available for use according to third party performance and monitoring services contracted by Company (the “Monitoring Service”). The Monitoring Service reports of availability will be accessible via the website operated by the third party. ""Monthly Uptime Percentage"" is calculated by subtracting from 100% the percentage of continuous 1 minute periods during the Service Month in which the Company API was in a state of “Unavailable Time” as identified by Monitoring Service. Availability will be measured by checking the successful HTTP response of the API for the REST and WebSocket protocols on at least one endpoint delivered to the Customer. For a calendar month where the Uptime Monthly Percentage, as identified by Monitoring Service, Company, at its sole discretion after confirming the nature and accuracy of the Unavailable Time, will credit Customer a percentage of that month❜s billings calculated as the average monthly value of the Service Fees, as defined by this table:+---------------------------+----------------+| Monthly Uptime Percentage | Service Credit |+---------------------------+----------------+| <99%| 100%|+---------------------------+----------------+To receive downtime credit, Customer must submit a ticket via the Support Portal within 30 days from the time of downtime, and failure to provide such notice will forfeit the right to receive downtime credit. The ticket must include:(a)""SLA Claim"" as the subject of the ticket;(b)the dates and times of the Unavailable Time for which Customer are requesting credit; and(c)any applicable information that documents the claimed outage. Such credits may not be redeemed for cash.4.9 Right to Change Content or Format. You acknowledge that Company may from time to time, and in its sole discretion, update or change the content or format of the Services. Company shall strive to provide reasonable advance notification of such changes; however, from time to time sudden changes in currency names, codes, and/or values occur in financial markets, and since Company strives to accurately reflect these changes, significant advance notice is not always possible.5. Your Data5.1. Meaning of Your Data. In this Agreement, “Your Data” means any data, applications, configuration settings, content, code, images or material of any type that you upload, send, submit or otherwise provide us or to our Products for any purpose.5.2. Ownership of Your Data. You are responsible for Your Data. You will retain all right, title and interest in and to Your Data. Subject to the terms of this Agreement, you grant us a worldwide, non-exclusive, royalty-free right to collect, use, transfer and store Your Data solely for the purposes of providing any Product to you or to respond to your support requests.5.3. Confidentiality of Your Data. We may receive or have access to information (including but not limited to documents, data, technical information, methods and processes, computer programs and scripts, reports, manuals) owned or controlled by you which is proprietary or confidential (confidential information). This happens in various ways, not limited to: when you store them in the Products, or when you include them in a support request that is not marked “public” by you. We agree:(a)that all such information shall be and shall remain your exclusive property;(b)to limit access to such information to only our authorized employees, contractors, and agents, and including any of our Affiliates under Section 11 (Transfer of Ownership) (collectively, our “Staff”), who have a need to know such information in the performance of their work;(c)to inform all of our Staff engaged in handling such information of the confidential character of such information;(d)to keep, and have our Staff keep, such information confidential;(e)not to copy, publish, or disclose such information to others or authorize others to copy, publish, disclose such information without your written approval;(f)to return promptly any copies of such information to owner at your request;(g)to use such information solely for purposes of fulfilling work or services performed hereunder and for other purposes only upon such terms as may be agreed upon between us in writing; and(h)that, in the event any of the information is required to be produced pursuant to a subpoena, court order, valid legal or administrative process, or other operation of law, we shall notify you of such potential disclosure in order that you may take appropriate action at your own expense to limit or prevent such disclosure, and furnish only that portion of Your Data that has been legally compelled.Confidential information shall not include information which:(i)was known to us before disclosure as evidenced by bona fide written documents;(j)is or becomes publicly known through no wrongful act of ours;(k)is independently developed by us;(l)is disclosed to us by a third party without breach of any obligations of confidentiality.5.4. Nature of Your Data. You must ensure that Your Data is at all times compliant with our Acceptable Usage Policy and all appropriate laws and regulations. You warrant that you have the rights and permissions to provide Your Data to us, and that your transfer of Your Data to use does not violate any laws, regulations or the rights of third parties.5.5. Personally Identifiable Information. You will not submit to us any personally identifiable information (except as necessary for your Authorized Users to use and access a Product). You will not submit to us any patient, medical or other protected health information regulated by any relevant laws in any country.5.6. Liability. For the avoidance of all doubt, we assuming no responsibility or liability for Your Data other than described in this Section 5, and you shall be solely responsible for Your Data and the consequences of you using, storing, disclosing or transmitting it. We have no obligation to monitor any of Your Data uploaded to the service.5.7. Deletion of Your Data. We may remove or delete Your Data 90 days after the termination of your relevant Subscription Term, or upon your request.5.8. Processing of Your Data. We will perform processing actions as part of monitoring and running the Cloud Services and as part of the Support Services.6. RestrictionsExcept as otherwise permitted in this Agreement, or by us in writing, you will not:(a)intentionally use any Product in any way that could damage our reputation; or(b)rent, lease, sub-license, loan, translate, merge, adapt, vary or modify any Product, without our express written consent.7. Termination of Agreement7.1. Termination. Either party may terminate this Agreement (or an Order) without cause on ninety (90) days❜ notice in writing. In addition, either party may terminate this Agreement or any Order if the other party breaches this Agreement in any material respect and fails to cure the breach, if capable of cure, within thirty (30) days after receiving written notice from the other party specifying the nature of the breach. Termination of an individual Order shall not operate to terminate any other then-outstanding Orders between the parties.7.2. Obligations on Termination. On termination of this Agreement, or on termination or expiry of any relevant Order (unless you retain a right to continue using a Product after the end of that Order, e.g., due to another valid Order for that Product, or having a license licensed under a prior “Perpetual” licensing model) you must immediately cease use of, and destroy, any and all copies of any Software, and you acknowledge that you will lose access to any Cloud Services.7.3. Survival. The following Sections will survive any termination or expiration of this Agreement: 6 (Restrictions), 5.3 (Confidentiality of Your Data), 8.4 (Warranty Disclaimer), 10 (IP Indemnification) (but solely with respect to claims arising from your use of the Software during the License Term), and 12 (Export). 8. Warranty8.1. General Warranties. We warrant that:(a)we have the legal power and authority to enter into this agreement with you;(b)during the License Term or Subscription Term as appropriate (“Warranty Period”), the Products will, when properly used, perform substantially as described, provided that the Product is:(i)properly used on the computer and with the operating system and software environment for which it was designed; and,(ii)is used in accordance with our documentation which we may provide you or publish on our website from time to time.We do not warrant that the Products are error free, will operate in an uninterrupted manner, will not damage or interfere with your computer operating system and will not damage or interfere with your business or the business of third parties.8.2. Virus Warranty. We represent and warrant that we will take reasonable commercial efforts to ensure that the Products, in the form and when provided to you, will be free of any viruses, malware, trojans or other harmful code. For any breach of the foregoing warranty, your sole and exclusive remedy, and our sole obligation, is to fix or replace the Products promptly upon notice.8.3. Remedies during Warranty Period. If, within the Warranty Period, a Product fails to perform as described due to a defect or fault (that is not the result of you having modified the Product without our prior knowledge or authorization or used it in contravention of the terms of this Agreement or outside its ordinary operating requirements), we will, at our sole option, repair or replace the Product, provided that you:(a)notify us in writing of the defect or fault in the Product within the Warranty Period; and(b)make available all the information that may be necessary to assist us in resolving the defect or fault, including sufficient information to enable us to recreate the defect or fault.8.4. Warranty Disclaimer. EXCEPT AS EXPRESSLY SET FORTH IN SECTION 8.1 (GENERAL WARRANTIES) AND 8.2 (VIRUS WARRANTY), ALL SOFTWARE, SUPPORT AND MAINTENANCE AND ANY ADDITIONAL SERVICES ARE PROVIDED “AS IS,” AND COMPANY AND ITS SUPPLIERS EXPRESSLY DISCLAIM ANY AND ALL WARRANTIES AND REPRESENTATIONS OF ANY KIND, INCLUDING ANY WARRANTY OF NON-INFRINGEMENT, TITLE, FITNESS FOR A PARTICULAR PURPOSE, FUNCTIONALITY, OR MERCHANTABILITY, WHETHER EXPRESS, IMPLIED, OR STATUTORY. COMPANY WILL NOT BE LIABLE FOR DELAYS, INTERRUPTIONS, SERVICE FAILURES OR OTHER PROBLEMS INHERENT IN USE OF THE INTERNET AND ELECTRONIC COMMUNICATIONS OR OTHER SYSTEMS OUTSIDE THE REASONABLE CONTROL OF COMPANY. TO THE MAXIMUM EXTENT PERMITTED BY LAW, NEITHER COMPANY NOR ANY OF ITS THIRD PARTY SUPPLIERS MAKES ANY REPRESENTATION, WARRANTY OR GUARANTEE AS TO THE RELIABILITY, TIMELINESS, QUALITY, SUITABILITY, TRUTH, AVAILABILITY, ACCURACY OR COMPLETENESS OF ANY SOFTWARE OR ANY CONTENT THEREIN OR GENERATED THEREWITH, OR THAT: (A) THE USE OF ANY SOFTWARE WILL BE SECURE, TIMELY, UNINTERRUPTED OR ERROR-FREE; (B) THE SOFTWARE WILL OPERATE IN COMBINATION WITH ANY OTHER HARDWARE, SOFTWARE, SYSTEM, OR DATA; (C) THE SOFTWARE (OR ANY PRODUCTS, SERVICES, INFORMATION, OR OTHER MATERIAL PURCHASED OR OBTAINED BY YOU THROUGH THE SOFTWARE) WILL MEET YOUR REQUIREMENTS OR EXPECTATIONS); (D) ERRORS OR DEFECTS WILL BE CORRECTED; OR (E) EXCEPT AS EXPRESSLY SET FORTH IN SECTION 8.2 (VIRUS WARRANTY), THE SOFTWARE IS FREE OF VIRUSES OR OTHER HARMFUL COMPONENTS. YOU MAY HAVE OTHER STATUTORY RIGHTS, IN WHICH CASE: (F) THE DURATION OF STATUTORILY REQUIRED WARRANTIES, IF ANY, WILL BE LIMITED TO THE SHORTEST PERIOD PERMITTED BY LAW; (G) YOUR ENTITLEMENT TO RELIEF IS LIMITED TO THOSE FORMS OF RELIEF REQUIRED BY STATUTE; AND (H) TO THE EXTENT PERMITTED BY LAW, THE FORM OF ANY RELIEF SHALL BE AT OUR DISCRETION.9. Liability9.1. Exclusions to Liability. Neither party (nor their suppliers or Affiliates) will have any liability (whether in contract, tort, strict liability or otherwise) arising out of or related to this agreement for:(a)any loss of profits, business, contracts, anticipated savings, goodwill, or revenue;(b)any loss, or corruption, of software or data;(c)any loss or use of hardware, software or data; or(d)any other indirect, special or consequential loss or damage whatsoever, even if the party has been advised in advance of the possibility of such loss or damage.9.2. Your Representations. You acknowledge and agree that:(a)the Products have not been developed to meet your individual requirements;(b)it is your responsibility to ensure that the facilities and functions of the Products meets your requirements;(c)you have made your own independent enquiries and have satisfied yourself of the nature and adequacy of our Products for the purpose for which you have obtained the Products.(d)the existence of any minor errors shall not constitute a breach of this Agreement; and(e)the provisions of Section 8 (Warranty), Section 9 (Liability) and Section 10 (IP Indemnification) are reasonable and reflected in the price, which would be much higher without those provisions, and you accept such risk.9.3. Liability Cap. Except to the extent that any law or regulation provides otherwise, our maximum aggregate liability under or in connection with this Agreement whether in contract, tort (including negligence), or otherwise is limited to the purchase price you paid for the Product, and any renewal fees, received by Company in the twelve (12) months prior to the event giving rise to the liability.10. IP IndemnificationIf any claim is brought, or you reasonably anticipate that a claim may be brought, against you alleging that your use of the intellectual property associated with the Products infringes a patent right granted in the United States, United Kingdom, Australia or a member nation of the European Union or a copyright registered in such a jurisdiction (a “claim”):(a)you shall promptly provide us written notice of the claim (but in any event notice in sufficient time for us to respond without prejudice);(b)the two of us shall consult together on an appropriate course of action and shall seek to minimize the effect of any claim on each other❜s businesses;(c)we shall have the right, but not the obligation, to take control of all negotiations and litigation arising out of the claim;(d)we will pay any damages and costs awarded against you in connection with any claim, however we are not and you agree not to hold us responsible or liable for any damages, costs, or expenses suffered or incurred by or awarded against you:(i)prior to your providing notice of the claim of under Section 10 (a);(ii)arising out of any act or omission by you or any of your Affiliates in respect of the claim without our prior and express written consent, including any admission or concession; or(iii)to the extent that any act or omission by you or any of your Affiliates in the course of your or their use of the Product caused or contributed to the infringement of the rights of the third party;(e)we shall have the right, at our sole choice, either:(i)to negotiate terms for continued use by you of the claimed infringing Product;(ii)amend the Product to make it non-infringing; or(iii)terminate this Agreement with immediate effect and in such event, we shall refund to you the purchase price that you paid and any renewal fees pro rated from the date of termination of this Agreement to the date which, had this Agreement not been terminated, would be the end of your License Term or Subscription Term,(f)our indemnification obligations in Section 10 DO NOT APPLY if:(i)the total aggregate fees received by Company from you, in the twelve (12) month period immediately preceding the claim, is less than USD $50,000; or(ii)you settle or make any admissions with respect to a claim without our prior written consent.THIS SECTION 10 STATES OUR SOLE LIABILITY AND OBLIGATIONS AND IS YOUR EXCLUSIVE REMEDY WITH RESPECT TO ANY CLAIM OF INFRINGEMENT OF INTELLECTUAL PROPERTY RIGHTS IN CONNECTION WITH ANY PRODUCTS SUPPLIED BY COMPANY UNDER THIS AGREEMENT.11. Transfer of Rights and ObligationsYou may not assign or transfer this Agreement without our prior written consent. As an exception to the foregoing, you may assign this Agreement in its entirety (including all Orders) to your successor resulting from your merger, acquisition, or sale of all or substantially all of your assets or voting securities, provided that you provide us with prompt written notice of the assignment and the assignee agrees in writing to assume all of your obligations under this Agreement (including liability for past performance). Any attempt by you to transfer or assign this Agreement except as expressly authorized above will be null and void.We may assign our rights and obligations under this Agreement (in whole or in part) without your consent. We may also permit our affiliates, agents and contractors to exercise our rights or perform our obligations under this Agreement, in which case we will remain responsible for their compliance with this Agreement. Subject to the foregoing, this Agreement will inure to the parties❜ permitted successors and assigns.12. ExportYou represent and warrant that you are not in violation of and will not violate any export control laws, regulations or directives in the United States, Australia, the United Kingdom, or in your own country or region (if applicable) by entering into or in the performance of your rights or obligations under this Agreement.13. PublicityWe may identify you as a customer in our promotional materials. We will promptly stop doing so upon your request via email sent to [email protected].14. NoticesAny notice under this Agreement must be given in writing. We may provide notice to you via email. You agree that any such electronic communication will satisfy any applicable legal communication requirements, including that such communications be in writing. Our notices to you will be deemed given upon the first business day after we send it. You will provide notice to us by email to: [email protected] with the title including ""LEGAL NOTICE"". Your notices to us will be deemed given upon our receipt.15. WaiverEither party❜s failure to insist upon strict performance of any obligations under this Agreement, or the failure to exercise any of the rights or remedies to which either party is entitled under this Agreement, does not constitute a waiver of such rights or remedies and shall not relieve either party from compliance with such obligations.Our waiver of any default shall not constitute a waiver of any subsequent default.A waiver of any of these terms and conditions shall not be effective unless it is expressly stated to be a waiver and is communicated to the other party in writing.16. SeverabilityIf any of the terms of this Agreement are determined by any competent authority to be invalid, unlawful or unenforceable to any extent, such term, condition or provision will to that extent be severed from the remaining terms, conditions and provisions which will continue to be valid to the fullest extent permitted by law.17. Changes to this Agreement17.1. Notice for changes. We may modify the terms and conditions of this Agreement from time to time, without notice given to you.17.2. Effective Date of Changes. If we make modifications to this agreement, the modifications will take effect at the next renewal of your License Term or Subscription Term, and will automatically apply as of the renewal date unless you elect not to renew pursuant to Section 3.3 (License Term and Renewals). In some cases ‑ e.g., to address compliance with Laws, or as necessary for new features ‑ we may specify that such modifications become effective during your then-current License or Subscription Term. If the effective date of such modifications is during your then-current License or Subscription Term and you object to the modifications, then (as your exclusive remedy) you may terminate your affected Orders upon notice to us, and we will refund to you any fees you have pre-paid for use of the affected Software for the terminated portion of the applicable License Term. To exercise this right, you must provide us with notice of your objection and termination within thirty (30) days of us publishing the modifications. For the avoidance of doubt, any Order is subject to the version of this Agreement in effect at the time of the Order.18. Entire AgreementThis Agreement constitutes the whole of the agreement between the parties. You agree that you have not relied on any statement, representation, assurance or warranty made by any person (including a third party) in entering into this Agreement. This Agreement supersedes all prior or contemporaneous oral or written communications, proposals and representations between you and us with respect to the Products or any other subject matter covered by this Agreement.19. Force MajeureNeither party is responsible or liable for any omission or delay under this Agreement where the omission or delay is caused by an event beyond the reasonable control of any party, including, but not limited to, act of God, natural disaster, war or invasion, terrorism or act of a public enemy, strikes and industrial disputes, embargo, prohibition, confiscation, act of government authority, or failure of telecommunications or data networks or services.20. Law and JurisdictionWhere either party may have a dispute or claim against the other party, each party:(a)agrees that the Agreement shall be interpreted in accordance with the applicable laws of the England and Wales, without reference to its conflict of laws principles from time to time;(b)submits to the exclusive jurisdiction and venue of London, England, and courts of appellate jurisdiction; and(c)consents to the enforcement of any judgment of the courts of London, England (and appellate courts) in any other jurisdiction.21. InterpretationIn this Agreement, unless the context otherwise requires:21.1. A reference to the singular includes the plural and the plural includes the singular.21.2. A reference to any contract (including this Agreement) or other instrument includes any variation or replacement of it and as it may be assigned or novated.21.3. A reference to a law includes subordinate legislation (including regulations) and other instruments under it and any amendment or replacement of any of them.21.4. A reference to a person or entity includes an individual, a firm, a body corporate, a trust, an unincorporated association or an authority.21.5. A reference to a person includes their legal personal representatives (including executors), administrators, successors, substitutes (including by way of novation) and permitted assigns.21.6. A reference to a day or a month means a calendar day or calendar month.21.7. No party enters into this Agreement as agent for any other person (or otherwise on their behalf or for their benefit). 21.8. The meaning of any general language is not restricted by any accompanying example, and the words “includes”, “including”, “such as”, “for example” or similar words are not words of limitation.21.9. Headings and the table of contents are for convenience only and do not form part of this Agreement or affect its interpretation.21.10. Where there are two or more persons in a party each are bound jointly and severally.Acceptable Usage PolicyCompany acceptable usage policy (""AUP"") is designed to prevent fraud and abuse of our services, to ensure that all customers receive acceptable access to our services, and to protect the quality and integrity of our services.The following is a non-exhaustive list of practices that would not be considered ""Legitimate Use"":(a)Using our services for unreasonable workloads we determine (in our sole discretion) to be unrelated to the deployment and maintenance of your own services;(b)Re-selling our services or parts thereof to another party;(c)Using our services in a manner we determine (in our sole discretion) could cause harm to our services or another party; or(d)Unusual usage patterns inconsistent with those we reasonably consider as normal use when compared to other customers.Other practices may be relevant in determining Legitimate Use and Company reserves the right to take any unlawful, prohibited, abnormal, or unusual activity into account in making its determination.If you use our services in any way which we reasonably determine (at our sole discretion) may be unlawful, prohibited, abnormal, unusual, or detrimental to our services or any of our other customers or other unrelated parties, we reserve the right to suspend or terminate your access without notice.We may monitor your account to check that this AUP is being followed. We may vary the terms of this AUP from time to time without notice, and will contact you using the details you've provided to inform you of the changes.Excessive UseExcessive use means you are exceeding one or more of the limitations allocated to your current subscription. These limitations are described on our detailed pricing page. We reserve the right to adjust these limitations from time to time without notice, and will contact you using the details you've provided to inform you of the changes.If your use of our services is excessive we may contact you using the contact details you've provided to request that you modify your usage practices, or change to a more appropriate subscription.If, after our request, your usage practices continue to be excessive, or you refuse to change to a more appropriate subscription, we may suspend or terminate your access to our services immediately without notice.Unreasonable useUnreasonable use of this service includes using it for purposes unrelated to the Customer Agreement intent, and any re-selling or wholesaling of our services, or parts thereof, to another party.If your use of our services is unreasonable, we may contact you using the contact details you have provided to ask that you change the way you use our services.If we consider your use unreasonable (at our sole discretion) we reserve the right to suspend or terminate your access to our services without any prior warning or notice.Privacy policyChanges to this Privacy PolicyWe may update this Privacy Policy from time to time by posting a new version online. You should check this page occasionally to review any changes.Contact UsIf you have any questions about this Privacy Policy or our treatment of the information you provide us, please write to us by email at [email protected]""Sensitive Information""This refers to credit or debit card numbers, personal financial account information, Social Security numbers, passport numbers, driver's license numbers or similar personal identifiers, racial or ethnic origin, physical or mental health condition or information, or other employment, financial or health information.""Personal Information""This refers to any information that you voluntarily submit to us and that identifies you personally, including contact information, such as your name, e-mail address, company name, address, phone number, and other information about yourself or your business. Personal Information can also include information about any transactions, both free and paid, that you enter into on the Websites, and information about you that is available on the internet, such as from Facebook, LinkedIn, Twitter and Google, or publicly available information that we acquire from service providers.""Navigational Information""This refers to information about your computer and your visits to this website such as your IP address, geographical location, browser type, referral source, length of visit and pages viewed.Payment InformationWe collect and process payment information from you when you subscribe to the Services, including credit cards numbers and billing information, using third party PCI-compliant service providers. Except for this, we do not collect Sensitive Information from you.We Never Sell Personal InformationWe will never sell your Personal Information to any third party.Use of Personal InformationIn addition to the uses identified elsewhere in this Privacy Policy, we may use your Personal Information to:(a)improve your browsing experience by personalizing the Websites and to improve the Services;(b)send information to you which we think may be of interest to you by post, email, or other means;(c)send you marketing communications relating to our business or the businesses of carefully-selected third parties which we think may be of interest to you,(d)provide other companies with statistical information about our users -- but this information will not be used to identify any individual user. We may, from time to time, contact you on behalf of external business partners about a particular offering that may be of interest to you. In those cases, we do not transfer your unique Personal Information to the third party. In addition, we may share data with trusted partners to contact you based on your request to receive such communications, help us perform statistical analysis, or provide customer support. Such third parties are prohibited from using your Personal Information except for these purposes, and they are required to maintain the confidentiality of your information.Use of Navigational InformationWe use Navigational Information to operate and improve the Websites and the Services.Customer Testimonials and CommentsWe post customer testimonials and comments on our Websites, which may contain Personal Information. We obtain each customer's consent via email prior to posting the customer's name and testimonial.Use of Credit Card InformationIf you give us credit card information, we use it solely to check your financial qualifications and collect payment from you. We use a third-party service provider to manage credit card processing. This service provider is not permitted to store, retain, or use information you provide except for the sole purpose of credit card processing on our behalf.Service ProvidersWe employ other companies and people to provide services to visitors to our Websites, our customers, and users of the Services and may need to share your information with them to provide information, products or services to you. Examples may include removing repetitive information from prospect lists, analyzing data, providing marketing assistance, processing credit card payments, supplementing the information you provide us in order to provide you with better service, and providing customer service. In all cases where we share your information with such agents, we explicitly require the agent to acknowledge and adhere to our privacy and customer data handling policies.Security of your Personal InformationWe use a variety of security technologies and procedures to help protect your Personal Information from unauthorized access, use or disclosure. We secure the Personal Information you provide on computer servers in a controlled, secure environment, protected from unauthorized access, use or disclosure. When sensitive Personal Information (such as a credit card number and/or geo-location data) is collected on our Websites and/or transmitted to other websites, it is protected through the use of encryption, such as the Secure Socket Layer (SSL) protocol.External WebsitesOur Websites provide links to other websites. We do not control, and are not responsible for, the content or practices of these other websites. Our provision of such links does not constitute our endorsement of these other websites, their content, their owners, or their practices. This Privacy Policy does not apply to these other websites, which are subject to any privacy and other policies they may have.Retention of Personal InformationWe retain Personal Information that you provide us as long as we consider it potentially useful in contacting you about the Services or our other services, or as needed to comply with our legal obligations, resolve disputes and enforce our agreements, and then we securely delete the information.International Transfer of InformationTo facilitate our global operations, we may transfer and access Personal Information from around the world, including the United States. This Privacy Policy shall apply even if we transfer Personal Information to other countries.Compelled DisclosureWe reserve the right to use or disclose your Personal Information if required by law or if we reasonably believe that use or disclosure is necessary to protect our rights, protect your safety or the safety of others, investigate fraud, or comply with a law, court order, or legal process.×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/legal#policy)"
614,use case coinapi solution for crypto wallets,"use case coinapi solution for crypto wallets. Leverage the Power of CoinAPI for Your Cryptocurrency Wallet App Development - CoinAPI.ioIntroducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inCrypto walletsEverything you needto build a crypto walletStart nowDeveloping a cryptocurrency wallet app is a difficult task that requires expertise in blockchain technology and security measures.CoinAPI offers a solution to make this process more efficient, and cost-effective, and meet the needs of even the most demanding crypto wallet users. With access to a variety of blockchain functions and security measures, the use of API can simplify the development process significantly, which would otherwise be challenging to build from scratch.What are the pain points when building and maintaining crypto wallets?Building security features that requires a deep understanding of blockchain technology, cryptography, and security best practicesFinding a trustworthy API partner with advanced infrastructure and functionality customization to meet customers specific needsLack of real-time streaming data for real-time price tracking featuresIntegration with plenty of data providers to cover a wide range of cryptocurrency dataA complex development process that requires to focus on security, a user-friendly, and scalable wallet that can meet the needs of users and comply with regulationsMaintenance of the large development teamHow CoinAPI could solve this issue?CoinAPI Products Used:Get access to real-time and historical crypto market dataMonitor the prices of multiple different cryptocurrenciesSupport of many different currenciesCoinAPI offers a vast collection of historical data for the cryptocurrency market dating back to 2015Reduced development cost & timeAccess to tens of thousands of marketsCoinAPI offers unmatched capability and dependability when it comes to providing cryptocurrency data, ensuring that there are no delays or interruptionsCoinAPI integration creates a stable environment for the crypto wallet users and helps them manage their crypto wallets easilyIntegrate easilyEasy integration with third-party trading systemsQuick response timeData for exchanging coins in a walletTick-by-tick data for making day-to-day transactions and paymentsFull API maintenanceLeverage CoinAPIs SDK infrastructure and avoid maintaining API for your application. Using APIs is a great way to build a feature-rich cryptocurrency wallet app. When you use CoinAPI, itll allow you to synchronize your crypto wallet with the cryptocurrency ecosystem easilyStay updated with constant CoinAPI updates and access to the latest crypto market dataEnjoy robust security and global compliance standards for your appEngineering-oriented, robust, and reliable solutionCoinAPI's engineering roots drive the creation of world-class crypto productsDedicated technical support and comprehensive API documentation for seamless integrationAdaptable infrastructure handles businesses of all sizes, ensuring optimal performanceWhy developers love us?We empower developers with tools and resources that streamline their workflow, allowing them to create innovative solutions faster and more efficiently.Unified EcosystemAccess a cohesive platform where all components work seamlessly together, eliminating compatibility headaches and streamlining your development process.Plug-and-Play SolutionsLeverage our modular architecture to rapidly build and customize your applications. Mix and match components to create tailored solutions effortlessly.Developer-Centric DesignExperience a platform built by developers, for developers. Our intuitive design and developer-first approach make complex tasks feel effortless.Uninterrupted ServiceOur distributed infrastructure have 100ms-level failover time. Standard SLA included to all subscriptions. Experience seamless operations, regardless of local disruptions.Our core valuesWhy Choose CoinAPI?Comprehensive API SuiteAccess our full range of financial data through a single, unified API ecosystem, simplifying integration and reducing development time.Tailored Data SolutionsFrom unique order types to proprietary exchange data, we support custom requests that go beyond standard offerings, adapting to your specific integration requirements.Real-time & interconnectsWe operate on proprietary infrastructure, ensuring the lowest latency and highest uptime in the industry. Our global network using UDP na BGP protocols to exchange data directly between our data centers and Customers.Real-time and historical data from all exchangesSeamlessly access both real-time and historical data from over 300 data sources in same format, enabling thorough market analysis and informed decision-making.Mike NasserSatstreet Trading Desk“CoinAPI is the perfect solution for real-time information sourced from all exchanges, offering user-friendly APIs for developers and investors.“Read Case Study →Chris A. TovmasianMarketDraft“CoinAPI empowers businesses with seamless integration, high precision, and reliable data, transforming them into crypto-ready powerhouses for effortless cryptocurrency tracking.“Read Case Study →Colin MackieBitcoin.tax“CoinAPI has been a very reliable service and provides us with exactly the data we need. We have been a customer since 2019 and expect to continue using the services in the future.“Read Case Study →Crypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/use-case/coinapi-solution-for-crypto-wallets)"
615,blog cryptocurrency api future trading,"blog cryptocurrency api future trading. CoinAPI Blog - The future of trading: How cryptocurrency API is changing the game Introducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inMarket Data APIThe future of trading: How cryptocurrency API is changing the gameAs we move from 2023 into 2024, CoinAPI cements its role as a global leader in the cryptocurrency API space. With the launch of our EMS Trading API, we continue to lead the charge in innovation. Our deep understanding of the true value of cryptocurrency APIs shapes our advanced platforms, ensuring seamless access to crypto data and operations.  The emergence of cryptocurrency APIs The landscape of digital finance has been dramatically reshaped by the appearance of the cryptocurrency API, a technological marvel that has transformed how we interact with the world of crypto trading. Cryptocurrency APIs offer a window into real-time market data, turning what was once a complex web of information into an accessible stream of opportunities.  Before the growth of cryptocurrency APIs, developers grappled with the challenge of accessing accurate market data, often entangled in outdated information and complex processes. The emergence of cryptocurrency APIs marked a significant turning point. These tools have not only simplified access to live data streams and automated trading strategies for developers but also opened new possibilities for financial institutions. Now, they can create more sophisticated and efficient trading ecosystems. At CoinAPI, we’re at the forefront of this technological revolution, empowering our clients to harness the full potential of digital finance and trading. In-depth benefits of cryptocurrency API The cryptocurrency API offers a range of critical features essential for navigating the crypto market. The foremost of these features is real-time data access. In a market known for its rapid price fluctuations, the ability to access immediate, up-to-date information through a cryptocurrency API is not just advantageous; it’s a must. These APIs empower traders to make quick, informed decisions by providing them with timely and accurate market insights. User-friendliness and reliability are also key attributes of a good cryptocurrency API. Designed with intuitiveness in mind, these APIs ensure that developers can easily integrate them into various applications, avoiding the complexities of complex data structures. This user-friendly design is matched by the reliability of the cryptocurrency API, which is crucial for delivering consistent, accurate, and current data.  Moreover, the efficiency in development offered by cryptocurrency APIs cannot be overstated. By simplifying and streamlining data collection and analysis, APIs significantly cut down the time and effort required for these processes. This allows developers to shift their focus toward innovation and the optimization of their applications. The cryptocurrency API, therefore, not only accelerates the development cycle but also cultivates a more creative and productive environment in the fast-evolving world of cryptocurrency trading. The critical role of data collection At the heart of cryptocurrency API effectiveness lies the pivotal process of data collection. APIs excel in aggregating, processing, and storing data from a multitude of sources, ensuring that the information is not only comprehensive but also highly relevant and tailored for diverse applications. This includes everything from real-time market monitoring to advanced predictive analytics. Key to this proficiency is efficient data collection methods, such as streamlined data importing and bulk data downloading, which guarantee that the datasets are both extensive and immediately usable. Our approach to data collection is what sets us apart. We gather each data source from at least three independent server sites across key global regions: APAC, NCSA, and EMEA. In each of these regions, we strategically position ourselves in multiple locations, ensuring proximity to the exchanges for optimal data retrieval. Daily, all collected data converges at a single point where we conduct a unique process. Here, we replay every market scenario from the perspective of all data streams, synthesizing them into a singular, most accurate market stream. This method effectively addresses and eliminates any occasional discrepancies that might not be simultaneously visible across all server sites. In terms of real-time data delivery, we prioritize proximity and efficiency. The data is always routed from the nearest edge server, ensuring it never leaves the continent, thus maintaining speed and reducing latency. Additionally, we employ advanced delivery methods to our clients, including cross-connects or VPC peering connections, utilizing robust platforms like Equinix, AWS, or GCP. This approach not only enhances the speed and reliability of data transfer but also aligns with our commitment to providing our clients with the most accurate and timely market data possible. Cryptocurrency API: A catalyst for business growth Our cryptocurrency API is a key driver in business growth within the crypto industry. It brings a comprehensive suite of features tailored to the diverse and dynamic needs of this sector. By connecting to a variety of market data feeds and liquidity providers, our API ensures access to real-time pricing and extensive order books, significantly enhancing market liquidity. Integration with payment processors and banking partners is streamlined through our API, facilitating faster and more efficient financial transactions. Our API enhances security with robust authentication protocols, effectively reducing cyber threats and ensuring the safety of user data. The API opens up a range of financial services, including innovative options like lending and margin trading, broadening the functional capabilities of platforms. Tailored solutions are at the core of our API, allowing for customization to meet specific market needs and demands. Armed with real-time data and advanced analytics tools, the API provides valuable insights into market trends and user behavior, aiding in strategic decision-making. Our extensive coverage and data integrity. Our platform boasts extensive coverage and an unwavering commitment to data integrity. We support over 350 exchanges, providing a broad market reach that caters to diverse trading needs. Our database includes more than 16,000 unique assets, highlighting the depth and variety of our data collection. The range of data types we offer is comprehensive, encompassing detailed market symbols, exchange and asset information, Level 1 Quotes, Level 2 Order Books, executed transactions, exchange rates, and OHLCV data with updates starting from one-second intervals. This extensive coverage ensures that our clients have access to a rich and diverse set of data for informed decision-making. Data update frequency and delivery Our data update frequency is tailored to the specific needs of each data type. Aggregated data, including OHLCV and exchange rates, is refreshed every second, ensuring timely insights. For raw data types, updates occur in real-time, providing immediate access to the latest market information. For more comprehensive details on the update frequencies of various endpoints, please refer to our CoinAPI documentation.  Data accuracy and collection Our data collection, beginning February 24, 2014, captures the crucial MtGox era, ensuring comprehensive historical insights. We prioritize data accuracy, sourcing from trusted exchanges and employing rigorous quality assurance processes, including data normalization, caching, and redundancy, to guarantee precision and reliability. We emphasize accurate data collection and stream consolidation, ensuring our real-time streams closely align with historical data for precise trading accuracy. Our approach, particularly in addressing trading use cases, distinguishes us from competitors like Nomics and Kaiko. We offer a unique blend of a self-hosted solution for our trading API, with plans to expand to a cloud-hosted product, ensuring both flexibility and scalability for our clients. The Future outlook on cryptocurrency API As we advance into an era of rapid blockchain innovation and growing cryptocurrency adoption, the role of the cryptocurrency API is becoming increasingly crucial.  Cryptocurrency APIs are not just facilitating trading processes; they are unlocking new investment opportunities and driving a wave of innovation. CoinAPI is more than a tool for accessing market data or executing trades; it’s a catalyst for a more inclusive, efficient, and secure trading era. As the market evolves, cryptocurrency APIs are becoming the backbone of the trading ecosystem, essential for navigating the future of digital finance. Cryptocurrency APIs are redefining what’s possible in cryptocurrency trading, and as we move forward, their role will only grow more central.  Ready to be part of this transformative journey? Explore how CoinAPI’s cutting-edge cryptocurrency APIs can empower your trading strategies and keep you ahead in the evolving world of digital finance. Join us now and shape the future of trading with the best tools at your disposal. More articles you might like: Understanding OHLCV in market data analysis CoinAPI’s cryptocurrency data API guide Optimizing multi-exchange trading with Market data API and EMS Trading API Stay up-to-date with the latest CoinApi News.SendI Agree to CoinApi’s Privacy Policy*Recent ArticlesMarket Data APIThe power of crypto API on DEXDecentralized Exchanges (DEXs) are peer-to-peer marketplaces without a central authority, growing in popularity with examples like Uniswap...EMS Trading APIHow CoinAPI crypto trading API enhances crypto trading efficiency?Today, crypto traders face challenges like limited liquidity causing slippage and difficulty in executing large orders without affecting...NewsCoinAPI January update: NaaS, new website, Market Data API on QuickNode marketplaceCoinAPI January update features some exciting info about our future developments such as NaaS...Market Data APIHow does CoinAPI maximize the effectiveness of crypto trading bots?Crypto trading bots are essential for trading on the dynamic cryptocurrency market. They need the best data for the best outcomes, though....Market Data APICrypto tax API: Discover the future of crypto tax management with CoinAPIAs tax return deadlines approach in various countries worldwide, traders and investors are struggling with the complexities of reporting...CryptoTickA guide to using Cryptotick for crypto historical dataDid you know that CoinAPI, beyond API products, offers a streamlined solution for those seeking easy access to historical crypto data?...Market Data APIThe future of trading: How cryptocurrency API is changing the gameAs we move from 2023 into 2024, CoinAPI cements its role as a global leader in the cryptocurrency API space. With the launch of our EMS...EMS Trading APICoinAPI update: Cryptocurrency trading API and new integrationsThis month, CoinAPI is proud to launch our cryptocurrency trading API, alongside key partnerships with Quicknode. We’ve also expanded...Market Data APICoinAPI’s cryptocurrency data API guideThis guide is your comprehensive resource for understanding the various CoinAPI’s Cryptocurrency data API offerings available for...Bring the power of crypto API to your business in minutesStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsEMS Trading APIMarket Data APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/blog/cryptocurrency-api-future-trading)"
616,use case coinapi for crypto taxes accounting,"use case coinapi for crypto taxes accounting. Streamline Your Crypto Tax Calculations and Financial Reporting with CoinAPI - CoinAPI.ioIntroducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inCrypto taxes and accountingSimplify tax calculationand financial reportingStart nowComplex crypto transactions, cost basis tracking, gains/losses determination, and evolving tax regulations pose hurdles for crypto tax and accounting.In today's digital world, the adoption of cryptocurrency is on the rise, and businesses require robust software solutions to streamline their tax reporting processes. With the help of powerful and reliable crypto APIs, creating and delivering effective crypto tax solutions becomes much easier and more efficient.What are the pain points when performing crypto taxes and accounting?Complex crypto transactions and the need to track cost basis accuratelyHandling large volumes of transaction data and ensuring data accuracyIntegrating crypto transactions with existing accounting systemsDealing with different types of crypto assets and their varying tax treatmentLack of real-time data from the cryptocurrency marketSpending a lot of time collecting data from various resourcesPoor data qualityHow CoinAPI could solve this issue?CoinAPI Products Used:Get transaction detailsCoinAPI consolidates transaction details, simplifying tax reporting and accountingGet transaction details from various sources, streamlining tax reporting and accountingSynchronize transaction data in real-time, ensuring up-to-date tax reports and accurate accounting recordsOne API to access all of your customers' balances and tradesSimplified and standardized data for tax calculations, saving developer hours and reducing complexityUnified interface for accessing customer balances and trade data across multiple exchanges, eliminating the need for complex integrationsLeveraging standardized data for tax calculations, eliminating manual data processing and enabling efficient tax reportingGet access to real-time and historical crypto market dataAccess critical data and analytics for tax calculation in real-timeTrack multiple cryptocurrencies' prices in one place instead of attaching data from different resourcesAccess to features like data filtering, aggregation, and transformation to improve data accessibility and usefulnessHigh-quality, normalized dataAccess structured data from multiple exchanges, simplifying integration and processingAccess high-frequency exchange rates, order books, and unique low-frequency dataGain comprehensive insights from aggregated data across multiple exchangesReduced development cost & timeDevelopers can easily implement APIs without dealing with multiple APIs themselvesCoinAPI enables seamless app integration for an efficient stackCoinAPI offers REST, WebSocket, and FIX protocols to facilitate faster integration between API and usersReduce the volatility of trading prices and present a more stable price pointCoinAPI reduces volatility and presents a stable price pointMinimizes the risk of large price fluctuations and downside riskAdvanced pricing algorithms and data aggregation techniques for price stabilityIntegrate easilyEasy integration with third-party trading systemsQuick response timeInteract with crypto data easily to focus on your own solution developmentFull API maintenanceLeverage CoinAPI's SDK infrastructure to avoid the burden of maintaining your own APIEasily synchronize your crypto wallet with the cryptocurrency ecosystem using CoinAPIAPI integration unlocks new features and functionality, and CoinAPI offers infrastructure and tools for seamless integrationWhy developers love us?We empower developers with tools and resources that streamline their workflow, allowing them to create innovative solutions faster and more efficiently.Unified EcosystemAccess a cohesive platform where all components work seamlessly together, eliminating compatibility headaches and streamlining your development process.Plug-and-Play SolutionsLeverage our modular architecture to rapidly build and customize your applications. Mix and match components to create tailored solutions effortlessly.Developer-Centric DesignExperience a platform built by developers, for developers. Our intuitive design and developer-first approach make complex tasks feel effortless.Uninterrupted ServiceOur distributed infrastructure have 100ms-level failover time. Standard SLA included to all subscriptions. Experience seamless operations, regardless of local disruptions.Our core valuesWhy Choose CoinAPI?Comprehensive API SuiteAccess our full range of financial data through a single, unified API ecosystem, simplifying integration and reducing development time.Tailored Data SolutionsFrom unique order types to proprietary exchange data, we support custom requests that go beyond standard offerings, adapting to your specific integration requirements.Real-time & interconnectsWe operate on proprietary infrastructure, ensuring the lowest latency and highest uptime in the industry. Our global network using UDP na BGP protocols to exchange data directly between our data centers and Customers.Real-time and historical data from all exchangesSeamlessly access both real-time and historical data from over 300 data sources in same format, enabling thorough market analysis and informed decision-making.Mike NasserSatstreet Trading Desk“CoinAPI is the perfect solution for real-time information sourced from all exchanges, offering user-friendly APIs for developers and investors.“Read Case Study →Chris A. TovmasianMarketDraft“CoinAPI empowers businesses with seamless integration, high precision, and reliable data, transforming them into crypto-ready powerhouses for effortless cryptocurrency tracking.“Read Case Study →Colin MackieBitcoin.tax“CoinAPI has been a very reliable service and provides us with exactly the data we need. We have been a customer since 2019 and expect to continue using the services in the future.“Read Case Study →Crypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/use-case/coinapi-for-crypto-taxes-accounting)"
617,legal#aup,"legal#aup. CoinAPI - Legal informationsIntroducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inLegal infoCustomer AgreementAcceptable Usage PolicyPrivacy policyEffective Date: 2023-07-01Customer AgreementThis customer agreement (“Agreement”) is a legal agreement between you and COINAPI LTD UTR 8050945 (“Company”, “our”, “we” or “us”), an United Kingdom company (together the “parties” and each a “party”). If you are agreeing to this Agreement not as an individual but on behalf of your company, then a reference to “you” or “Customer” in this Agreement is a reference to the company, and the company will be bound by this Agreement. We may modify the terms of this Agreement from time to time subject to Section 17 (Changes to this Agreement) below.By clicking on the “I agree” (or similar button or checkbox) that is presented to you at the time of your Order or when subscribing for one of our services, or by using or accessing our Products, you agree to be bound by the terms of this Agreement. If you do not agree to the terms of this Agreement, you must immediately uninstall or cease using the Products.1. Grant and Scope of Agreement1.1. Scope. This Agreement governs your initial purchase as well as any future purchases made by you that reference this Agreement. This Agreement also includes our Privacy Policy, our Acceptable Use Policy, any Orders, and any other referenced policies and attachments. For the absence of doubt, this Agreement governs your use of or reliance on:(a)our commercially available downloadable software products (“Software”), currently designated as “On-Perm” deployments;(b)our cloud-hosted online services, currently designated as “CoinAPI Cloud” (“Cloud Services”),(together with any related documentation, the Products), and(c)any related support or maintenance services provided by us (“Support Services”). 1.2. Rights. You have no rights in, or to, any Product or Support Service other than the rights granted under this Agreement.1.3. Software and Cloud Services. Section 3 (Software Terms) applies specifically to Software. Section 4 (Cloud Services Terms) applies specifically to Cloud Services. All other terms of this Agreement apply to all Products unless otherwise specified.1.4. Affiliates. Your affiliates shall be entitled to make full use of the Products in accordance with the terms of this Agreement to the same extent as if they were you. For purposes of this Agreement, “Affiliate” means an entity which, directly or indirectly, owns or controls, is owned or is controlled by or is under common ownership or control with a party, where “control” means the power to direct the management or affairs of an entity, and “ownership” means the beneficial ownership of greater than 50% of the voting equity securities or other equivalent voting interests of the entity.2. Accounts, Orders, Subscriptions, Data Sources, Modules, Payments, and Refunds2.1. Account Registration. You must register an Account with us at our website in order to place Orders, receive license keys, and manage access to the Software or Cloud Services. Your account information must be kept accurate and complete. You must keep your account information current, so that we may send notices, statements, and other information to you by email or through your Account. You are responsible for all actions taken through your Account, including Orders and Subscriptions made.2.2. Orders, Subscription Term & Renewals. You create an Order by following the purchase or subscription flows on our website, or by requesting an invoice from us. All Orders are intent only and are not binding (on you or on us) until payment is received in full by us and processed or access to the corresponding Product is delivered. Your Order will name the Product you are purchasing, any limits on the number of Data Sources you will be able to manage, and the License Term or Subscription Term. Unless noted otherwise on your Order, all subscriptions will automatically renew for periods equal to your initial Subscription Term unless you cancel your subscription. You can cancel or decide to terminate your subscription, no refund will be provided as all payments are final. You acknowledge that your subscription is subject to automatic renewals and you consent to and accept responsibility for all related recurring charges to your applicable payment method without further authorization from you and without further notice unless required by law. You acknowledge that the amount of the recurring charge may change if the applicable tax rates change, or if there has been a change in the applicable fees (for which, if applicable, you will be given at least 7 days❜ notice before such change takes effect). Upon the expiry of your License Term plus optionally a grace period with length of our sole discretion, functionality in the Software will be limited, and you will not be able to use the Software.2.3. Data Source. Our Software is licensed, and / or our Cloud Services are provided, according to the number of specific and unique data sources you can manage. A “Data Source” is an edge of the infrastructure to specific and unique external data source. A Data Source may be a exchange, broker, blockchain, ledger that Product communicates with using the protocol. Data Sources are defined in the Documentation. Some types of Data Sources may count as more than one ""Data Source"" towards your limit as defined in the Documentation. You are solely responsible for any use of the external Data Sources which may be subject to restrictions of use and require additional license agreements with the third party.2.4. Refund policy. You may terminate your initial Order of the applicable Software or Cloud Services under this Agreement, for no reason or any reason, by providing notice of termination. At your request (which may be made through your Account or by contacting us), we may disable the license key that allowed the Software to operate or disable access to the Cloud Services. All fees paid are non-refundable.2.5. Module. Our Software is licensed, and / or our Cloud Services are provided, according to the specific modules available in our Product. A “Module” is self-contained component of our Product. A Module may be related to API, User Interface, Algorithm or Functionality of the Product. Modules are defined in the Documentation.3. Software Terms3.1. Grant of License. Under the terms of this Agreement, we grant you a worldwide, non-exclusive, fully paid, non-transferable license to install and use the Software for your own business purposes, during the applicable License Term.3.2. License Delivery. To activate and use the Software, you will be required to provide a license key. License keys will be delivered electronically to your Account and via email when payment has been received as per your Order.3.3. License Term. Your license to use the Software is granted for a specific time period (License Term or Subscription Term). Your Order will indicate:(a)a period of time for the License Term (12 months unless specified otherwise); and/or,(b)a specific begin and end date for the License Term.If a begin and end date are not indicated, the begin date of the License Term will be the date when the Product is delivered, at which time the license key will be delivered to you as per Section 3.2 (License Delivery). Upon the expiry of your License Term plus optionally a grace period with length of our sole discretion, functionality in the Software will be limited, and you will not be able to use the Software.3.4. Support, Maintenance and New Releases. During the License Term you will have access, free of charge, to all updates, upgrades, new releases and patches for the Software that we release during the License Term, along with technical support. You acknowledge and agree that we may, but are under no obligation to, release any update, upgrade or patch at any time or for any reason.3.5. Number of Instances. For each License that you purchase, you may install and use up to three (3) active “Instances” of the Software. An Instance means a running copy of the Software that has its own operating enviroment. Instances are counted whether installed on the same physical or virtual server, or on different servers.Instances may be used for production usage, disaster recovery, testing, quality assurance, development or other purposes. Each Instance may have an unlimited number of Nodes to provide availability and redundancy.Your Order specifies the maximum number of Data Sources you may register across all running Instances and in each Instance individually, even if you run multiple Instances concurrently.3.6. Third Party Code and Open Source Libraries Used. The Software includes code and libraries licensed to us by third parties, including open source software. To the extent applicable, we shall identify open source software included in the Software in or through the Software itself, or on a page in our documentation. Some of these licenses require us to provide the open source software to you on the terms of the open source license instead of the terms of the Agreement. In that case, the terms of the open source license will apply, and you will have the rights granted in such licenses to the open source software itself, such as access to source code, right to make modifications, and right to reverse engineer. Notwithstanding the foregoing, if you are using the Products in the form provided to you, in accordance with your permitted scope of use, with no distribution of software to third parties, then none of these open source licenses impose any obligations on you beyond what is stated in the Agreement.4. Cloud Services Terms4.1. Access to Cloud Services. Subject to your acceptance and continued compliance with the terms of this Agreement, we grant you a non-exclusive right to access and use the Cloud Services, during the applicable Subscription Term. You acknowledge that the Cloud Services are online, subscription-based products hosted and managed by us on your behalf, which may change from time to time.4.2. Data Sources Limits and Billing. The price for your Subscription will calculated with one of the following methods:(a)based on a fixed number of maximum Data Sources and Modules available; or,(b)based on unlimited Data Sources and Modules;as chosen by you when setting up the Subscription or Order.4.3. Fair Usage. Your usage of the Cloud Services is governed by our Acceptable Usage Policy.4.4. Security of Your Data. We implement and maintain security measures to help protect the Cloud Services and Your Data from security attacks. However, you acknowledge and agree that as a consequence of the inherent nature of the Cloud Services, Your Data will often be transported over networks that are not owned or operated by us, and that we are not responsible for any of Your Data that is lost, intercepted, altered or stored across such networks, except to the extent caused by our negligence or intentional misconduct. You acknowledge that we are unable to guarantee complete security or confidentiality of Your Data or guarantee that third parties will never be able to defeat our security measures or those of our third-party service providers. We are General Data Protection Regulation (GDPR) compliant: if we discover or are made aware that any of Your Data has been intercepted, we will follow the GDPR reporting guidelines if the intercepted data may have contained any personally identifiable information.4.5. Termination, removal and suspension. We may remove Your Data from the Cloud Services, or suspend your access to the services, if we deem such action necessary based on your violation of this Agreement or our Acceptable Use Policy. We will provide thirty (30) days❜ notice and provide reasonable opportunity for you to correct your breach prior to removing Your Data, but we may also suspend your access immediately without notice if we deem it necessary to protect the Cloud Services, security of other customers or to comply with any law or regulation. We have no liability to you for removing or deleting Your Data from or suspending your access to any Cloud Services if you violate this Agreement, our Acceptable Use Policy or any law or regulation.4.6. Static IP Addresses. Your Order may include a static IP address (Static IP) or/and DNS name. We may on rare occasions need to change the details you have been provided with. In such cases we will do our best to give you at least 30 days❜ notice so you can prepare for the change.4.7 Services May Be Inaccessible Or Inoperable. You hereby acknowledge that from time to time, the Services may be inaccessible or inoperable for any reason, including, without limitation: (a)equipment (hardware) malfunctions;(b)software malfunctions;(c)periodic maintenance procedures or repairs which Company mayundertake from time to time; and/or,(d)causes beyond the reasonable control of Company and/or not reasonably foreseeable by Company.4.8 Service Level Agreement. Company will use commercially reasonable efforts to make the Services available 99.999% of time, measured monthly (“Monthly Uptime Percentage”). Further, any downtime resulting from outages of third party connections or utilities or other reasons beyond Company❜s control will also be excluded from any such calculation. Customer's sole and exclusive remedy, and Company's entire liability, in connection with Service availability shall be that in the event Company does not meet the Monthly Uptime Percentage in given calendar month, Customer will be eligible to receive a Service Credit. “Unavailable Time” means the Company API is not available for use according to third party performance and monitoring services contracted by Company (the “Monitoring Service”). The Monitoring Service reports of availability will be accessible via the website operated by the third party. ""Monthly Uptime Percentage"" is calculated by subtracting from 100% the percentage of continuous 1 minute periods during the Service Month in which the Company API was in a state of “Unavailable Time” as identified by Monitoring Service. Availability will be measured by checking the successful HTTP response of the API for the REST and WebSocket protocols on at least one endpoint delivered to the Customer. For a calendar month where the Uptime Monthly Percentage, as identified by Monitoring Service, Company, at its sole discretion after confirming the nature and accuracy of the Unavailable Time, will credit Customer a percentage of that month❜s billings calculated as the average monthly value of the Service Fees, as defined by this table:+---------------------------+----------------+| Monthly Uptime Percentage | Service Credit |+---------------------------+----------------+| <99%| 100%|+---------------------------+----------------+To receive downtime credit, Customer must submit a ticket via the Support Portal within 30 days from the time of downtime, and failure to provide such notice will forfeit the right to receive downtime credit. The ticket must include:(a)""SLA Claim"" as the subject of the ticket;(b)the dates and times of the Unavailable Time for which Customer are requesting credit; and(c)any applicable information that documents the claimed outage. Such credits may not be redeemed for cash.4.9 Right to Change Content or Format. You acknowledge that Company may from time to time, and in its sole discretion, update or change the content or format of the Services. Company shall strive to provide reasonable advance notification of such changes; however, from time to time sudden changes in currency names, codes, and/or values occur in financial markets, and since Company strives to accurately reflect these changes, significant advance notice is not always possible.5. Your Data5.1. Meaning of Your Data. In this Agreement, “Your Data” means any data, applications, configuration settings, content, code, images or material of any type that you upload, send, submit or otherwise provide us or to our Products for any purpose.5.2. Ownership of Your Data. You are responsible for Your Data. You will retain all right, title and interest in and to Your Data. Subject to the terms of this Agreement, you grant us a worldwide, non-exclusive, royalty-free right to collect, use, transfer and store Your Data solely for the purposes of providing any Product to you or to respond to your support requests.5.3. Confidentiality of Your Data. We may receive or have access to information (including but not limited to documents, data, technical information, methods and processes, computer programs and scripts, reports, manuals) owned or controlled by you which is proprietary or confidential (confidential information). This happens in various ways, not limited to: when you store them in the Products, or when you include them in a support request that is not marked “public” by you. We agree:(a)that all such information shall be and shall remain your exclusive property;(b)to limit access to such information to only our authorized employees, contractors, and agents, and including any of our Affiliates under Section 11 (Transfer of Ownership) (collectively, our “Staff”), who have a need to know such information in the performance of their work;(c)to inform all of our Staff engaged in handling such information of the confidential character of such information;(d)to keep, and have our Staff keep, such information confidential;(e)not to copy, publish, or disclose such information to others or authorize others to copy, publish, disclose such information without your written approval;(f)to return promptly any copies of such information to owner at your request;(g)to use such information solely for purposes of fulfilling work or services performed hereunder and for other purposes only upon such terms as may be agreed upon between us in writing; and(h)that, in the event any of the information is required to be produced pursuant to a subpoena, court order, valid legal or administrative process, or other operation of law, we shall notify you of such potential disclosure in order that you may take appropriate action at your own expense to limit or prevent such disclosure, and furnish only that portion of Your Data that has been legally compelled.Confidential information shall not include information which:(i)was known to us before disclosure as evidenced by bona fide written documents;(j)is or becomes publicly known through no wrongful act of ours;(k)is independently developed by us;(l)is disclosed to us by a third party without breach of any obligations of confidentiality.5.4. Nature of Your Data. You must ensure that Your Data is at all times compliant with our Acceptable Usage Policy and all appropriate laws and regulations. You warrant that you have the rights and permissions to provide Your Data to us, and that your transfer of Your Data to use does not violate any laws, regulations or the rights of third parties.5.5. Personally Identifiable Information. You will not submit to us any personally identifiable information (except as necessary for your Authorized Users to use and access a Product). You will not submit to us any patient, medical or other protected health information regulated by any relevant laws in any country.5.6. Liability. For the avoidance of all doubt, we assuming no responsibility or liability for Your Data other than described in this Section 5, and you shall be solely responsible for Your Data and the consequences of you using, storing, disclosing or transmitting it. We have no obligation to monitor any of Your Data uploaded to the service.5.7. Deletion of Your Data. We may remove or delete Your Data 90 days after the termination of your relevant Subscription Term, or upon your request.5.8. Processing of Your Data. We will perform processing actions as part of monitoring and running the Cloud Services and as part of the Support Services.6. RestrictionsExcept as otherwise permitted in this Agreement, or by us in writing, you will not:(a)intentionally use any Product in any way that could damage our reputation; or(b)rent, lease, sub-license, loan, translate, merge, adapt, vary or modify any Product, without our express written consent.7. Termination of Agreement7.1. Termination. Either party may terminate this Agreement (or an Order) without cause on ninety (90) days❜ notice in writing. In addition, either party may terminate this Agreement or any Order if the other party breaches this Agreement in any material respect and fails to cure the breach, if capable of cure, within thirty (30) days after receiving written notice from the other party specifying the nature of the breach. Termination of an individual Order shall not operate to terminate any other then-outstanding Orders between the parties.7.2. Obligations on Termination. On termination of this Agreement, or on termination or expiry of any relevant Order (unless you retain a right to continue using a Product after the end of that Order, e.g., due to another valid Order for that Product, or having a license licensed under a prior “Perpetual” licensing model) you must immediately cease use of, and destroy, any and all copies of any Software, and you acknowledge that you will lose access to any Cloud Services.7.3. Survival. The following Sections will survive any termination or expiration of this Agreement: 6 (Restrictions), 5.3 (Confidentiality of Your Data), 8.4 (Warranty Disclaimer), 10 (IP Indemnification) (but solely with respect to claims arising from your use of the Software during the License Term), and 12 (Export). 8. Warranty8.1. General Warranties. We warrant that:(a)we have the legal power and authority to enter into this agreement with you;(b)during the License Term or Subscription Term as appropriate (“Warranty Period”), the Products will, when properly used, perform substantially as described, provided that the Product is:(i)properly used on the computer and with the operating system and software environment for which it was designed; and,(ii)is used in accordance with our documentation which we may provide you or publish on our website from time to time.We do not warrant that the Products are error free, will operate in an uninterrupted manner, will not damage or interfere with your computer operating system and will not damage or interfere with your business or the business of third parties.8.2. Virus Warranty. We represent and warrant that we will take reasonable commercial efforts to ensure that the Products, in the form and when provided to you, will be free of any viruses, malware, trojans or other harmful code. For any breach of the foregoing warranty, your sole and exclusive remedy, and our sole obligation, is to fix or replace the Products promptly upon notice.8.3. Remedies during Warranty Period. If, within the Warranty Period, a Product fails to perform as described due to a defect or fault (that is not the result of you having modified the Product without our prior knowledge or authorization or used it in contravention of the terms of this Agreement or outside its ordinary operating requirements), we will, at our sole option, repair or replace the Product, provided that you:(a)notify us in writing of the defect or fault in the Product within the Warranty Period; and(b)make available all the information that may be necessary to assist us in resolving the defect or fault, including sufficient information to enable us to recreate the defect or fault.8.4. Warranty Disclaimer. EXCEPT AS EXPRESSLY SET FORTH IN SECTION 8.1 (GENERAL WARRANTIES) AND 8.2 (VIRUS WARRANTY), ALL SOFTWARE, SUPPORT AND MAINTENANCE AND ANY ADDITIONAL SERVICES ARE PROVIDED “AS IS,” AND COMPANY AND ITS SUPPLIERS EXPRESSLY DISCLAIM ANY AND ALL WARRANTIES AND REPRESENTATIONS OF ANY KIND, INCLUDING ANY WARRANTY OF NON-INFRINGEMENT, TITLE, FITNESS FOR A PARTICULAR PURPOSE, FUNCTIONALITY, OR MERCHANTABILITY, WHETHER EXPRESS, IMPLIED, OR STATUTORY. COMPANY WILL NOT BE LIABLE FOR DELAYS, INTERRUPTIONS, SERVICE FAILURES OR OTHER PROBLEMS INHERENT IN USE OF THE INTERNET AND ELECTRONIC COMMUNICATIONS OR OTHER SYSTEMS OUTSIDE THE REASONABLE CONTROL OF COMPANY. TO THE MAXIMUM EXTENT PERMITTED BY LAW, NEITHER COMPANY NOR ANY OF ITS THIRD PARTY SUPPLIERS MAKES ANY REPRESENTATION, WARRANTY OR GUARANTEE AS TO THE RELIABILITY, TIMELINESS, QUALITY, SUITABILITY, TRUTH, AVAILABILITY, ACCURACY OR COMPLETENESS OF ANY SOFTWARE OR ANY CONTENT THEREIN OR GENERATED THEREWITH, OR THAT: (A) THE USE OF ANY SOFTWARE WILL BE SECURE, TIMELY, UNINTERRUPTED OR ERROR-FREE; (B) THE SOFTWARE WILL OPERATE IN COMBINATION WITH ANY OTHER HARDWARE, SOFTWARE, SYSTEM, OR DATA; (C) THE SOFTWARE (OR ANY PRODUCTS, SERVICES, INFORMATION, OR OTHER MATERIAL PURCHASED OR OBTAINED BY YOU THROUGH THE SOFTWARE) WILL MEET YOUR REQUIREMENTS OR EXPECTATIONS); (D) ERRORS OR DEFECTS WILL BE CORRECTED; OR (E) EXCEPT AS EXPRESSLY SET FORTH IN SECTION 8.2 (VIRUS WARRANTY), THE SOFTWARE IS FREE OF VIRUSES OR OTHER HARMFUL COMPONENTS. YOU MAY HAVE OTHER STATUTORY RIGHTS, IN WHICH CASE: (F) THE DURATION OF STATUTORILY REQUIRED WARRANTIES, IF ANY, WILL BE LIMITED TO THE SHORTEST PERIOD PERMITTED BY LAW; (G) YOUR ENTITLEMENT TO RELIEF IS LIMITED TO THOSE FORMS OF RELIEF REQUIRED BY STATUTE; AND (H) TO THE EXTENT PERMITTED BY LAW, THE FORM OF ANY RELIEF SHALL BE AT OUR DISCRETION.9. Liability9.1. Exclusions to Liability. Neither party (nor their suppliers or Affiliates) will have any liability (whether in contract, tort, strict liability or otherwise) arising out of or related to this agreement for:(a)any loss of profits, business, contracts, anticipated savings, goodwill, or revenue;(b)any loss, or corruption, of software or data;(c)any loss or use of hardware, software or data; or(d)any other indirect, special or consequential loss or damage whatsoever, even if the party has been advised in advance of the possibility of such loss or damage.9.2. Your Representations. You acknowledge and agree that:(a)the Products have not been developed to meet your individual requirements;(b)it is your responsibility to ensure that the facilities and functions of the Products meets your requirements;(c)you have made your own independent enquiries and have satisfied yourself of the nature and adequacy of our Products for the purpose for which you have obtained the Products.(d)the existence of any minor errors shall not constitute a breach of this Agreement; and(e)the provisions of Section 8 (Warranty), Section 9 (Liability) and Section 10 (IP Indemnification) are reasonable and reflected in the price, which would be much higher without those provisions, and you accept such risk.9.3. Liability Cap. Except to the extent that any law or regulation provides otherwise, our maximum aggregate liability under or in connection with this Agreement whether in contract, tort (including negligence), or otherwise is limited to the purchase price you paid for the Product, and any renewal fees, received by Company in the twelve (12) months prior to the event giving rise to the liability.10. IP IndemnificationIf any claim is brought, or you reasonably anticipate that a claim may be brought, against you alleging that your use of the intellectual property associated with the Products infringes a patent right granted in the United States, United Kingdom, Australia or a member nation of the European Union or a copyright registered in such a jurisdiction (a “claim”):(a)you shall promptly provide us written notice of the claim (but in any event notice in sufficient time for us to respond without prejudice);(b)the two of us shall consult together on an appropriate course of action and shall seek to minimize the effect of any claim on each other❜s businesses;(c)we shall have the right, but not the obligation, to take control of all negotiations and litigation arising out of the claim;(d)we will pay any damages and costs awarded against you in connection with any claim, however we are not and you agree not to hold us responsible or liable for any damages, costs, or expenses suffered or incurred by or awarded against you:(i)prior to your providing notice of the claim of under Section 10 (a);(ii)arising out of any act or omission by you or any of your Affiliates in respect of the claim without our prior and express written consent, including any admission or concession; or(iii)to the extent that any act or omission by you or any of your Affiliates in the course of your or their use of the Product caused or contributed to the infringement of the rights of the third party;(e)we shall have the right, at our sole choice, either:(i)to negotiate terms for continued use by you of the claimed infringing Product;(ii)amend the Product to make it non-infringing; or(iii)terminate this Agreement with immediate effect and in such event, we shall refund to you the purchase price that you paid and any renewal fees pro rated from the date of termination of this Agreement to the date which, had this Agreement not been terminated, would be the end of your License Term or Subscription Term,(f)our indemnification obligations in Section 10 DO NOT APPLY if:(i)the total aggregate fees received by Company from you, in the twelve (12) month period immediately preceding the claim, is less than USD $50,000; or(ii)you settle or make any admissions with respect to a claim without our prior written consent.THIS SECTION 10 STATES OUR SOLE LIABILITY AND OBLIGATIONS AND IS YOUR EXCLUSIVE REMEDY WITH RESPECT TO ANY CLAIM OF INFRINGEMENT OF INTELLECTUAL PROPERTY RIGHTS IN CONNECTION WITH ANY PRODUCTS SUPPLIED BY COMPANY UNDER THIS AGREEMENT.11. Transfer of Rights and ObligationsYou may not assign or transfer this Agreement without our prior written consent. As an exception to the foregoing, you may assign this Agreement in its entirety (including all Orders) to your successor resulting from your merger, acquisition, or sale of all or substantially all of your assets or voting securities, provided that you provide us with prompt written notice of the assignment and the assignee agrees in writing to assume all of your obligations under this Agreement (including liability for past performance). Any attempt by you to transfer or assign this Agreement except as expressly authorized above will be null and void.We may assign our rights and obligations under this Agreement (in whole or in part) without your consent. We may also permit our affiliates, agents and contractors to exercise our rights or perform our obligations under this Agreement, in which case we will remain responsible for their compliance with this Agreement. Subject to the foregoing, this Agreement will inure to the parties❜ permitted successors and assigns.12. ExportYou represent and warrant that you are not in violation of and will not violate any export control laws, regulations or directives in the United States, Australia, the United Kingdom, or in your own country or region (if applicable) by entering into or in the performance of your rights or obligations under this Agreement.13. PublicityWe may identify you as a customer in our promotional materials. We will promptly stop doing so upon your request via email sent to [email protected].14. NoticesAny notice under this Agreement must be given in writing. We may provide notice to you via email. You agree that any such electronic communication will satisfy any applicable legal communication requirements, including that such communications be in writing. Our notices to you will be deemed given upon the first business day after we send it. You will provide notice to us by email to: [email protected] with the title including ""LEGAL NOTICE"". Your notices to us will be deemed given upon our receipt.15. WaiverEither party❜s failure to insist upon strict performance of any obligations under this Agreement, or the failure to exercise any of the rights or remedies to which either party is entitled under this Agreement, does not constitute a waiver of such rights or remedies and shall not relieve either party from compliance with such obligations.Our waiver of any default shall not constitute a waiver of any subsequent default.A waiver of any of these terms and conditions shall not be effective unless it is expressly stated to be a waiver and is communicated to the other party in writing.16. SeverabilityIf any of the terms of this Agreement are determined by any competent authority to be invalid, unlawful or unenforceable to any extent, such term, condition or provision will to that extent be severed from the remaining terms, conditions and provisions which will continue to be valid to the fullest extent permitted by law.17. Changes to this Agreement17.1. Notice for changes. We may modify the terms and conditions of this Agreement from time to time, without notice given to you.17.2. Effective Date of Changes. If we make modifications to this agreement, the modifications will take effect at the next renewal of your License Term or Subscription Term, and will automatically apply as of the renewal date unless you elect not to renew pursuant to Section 3.3 (License Term and Renewals). In some cases ‑ e.g., to address compliance with Laws, or as necessary for new features ‑ we may specify that such modifications become effective during your then-current License or Subscription Term. If the effective date of such modifications is during your then-current License or Subscription Term and you object to the modifications, then (as your exclusive remedy) you may terminate your affected Orders upon notice to us, and we will refund to you any fees you have pre-paid for use of the affected Software for the terminated portion of the applicable License Term. To exercise this right, you must provide us with notice of your objection and termination within thirty (30) days of us publishing the modifications. For the avoidance of doubt, any Order is subject to the version of this Agreement in effect at the time of the Order.18. Entire AgreementThis Agreement constitutes the whole of the agreement between the parties. You agree that you have not relied on any statement, representation, assurance or warranty made by any person (including a third party) in entering into this Agreement. This Agreement supersedes all prior or contemporaneous oral or written communications, proposals and representations between you and us with respect to the Products or any other subject matter covered by this Agreement.19. Force MajeureNeither party is responsible or liable for any omission or delay under this Agreement where the omission or delay is caused by an event beyond the reasonable control of any party, including, but not limited to, act of God, natural disaster, war or invasion, terrorism or act of a public enemy, strikes and industrial disputes, embargo, prohibition, confiscation, act of government authority, or failure of telecommunications or data networks or services.20. Law and JurisdictionWhere either party may have a dispute or claim against the other party, each party:(a)agrees that the Agreement shall be interpreted in accordance with the applicable laws of the England and Wales, without reference to its conflict of laws principles from time to time;(b)submits to the exclusive jurisdiction and venue of London, England, and courts of appellate jurisdiction; and(c)consents to the enforcement of any judgment of the courts of London, England (and appellate courts) in any other jurisdiction.21. InterpretationIn this Agreement, unless the context otherwise requires:21.1. A reference to the singular includes the plural and the plural includes the singular.21.2. A reference to any contract (including this Agreement) or other instrument includes any variation or replacement of it and as it may be assigned or novated.21.3. A reference to a law includes subordinate legislation (including regulations) and other instruments under it and any amendment or replacement of any of them.21.4. A reference to a person or entity includes an individual, a firm, a body corporate, a trust, an unincorporated association or an authority.21.5. A reference to a person includes their legal personal representatives (including executors), administrators, successors, substitutes (including by way of novation) and permitted assigns.21.6. A reference to a day or a month means a calendar day or calendar month.21.7. No party enters into this Agreement as agent for any other person (or otherwise on their behalf or for their benefit). 21.8. The meaning of any general language is not restricted by any accompanying example, and the words “includes”, “including”, “such as”, “for example” or similar words are not words of limitation.21.9. Headings and the table of contents are for convenience only and do not form part of this Agreement or affect its interpretation.21.10. Where there are two or more persons in a party each are bound jointly and severally.Acceptable Usage PolicyCompany acceptable usage policy (""AUP"") is designed to prevent fraud and abuse of our services, to ensure that all customers receive acceptable access to our services, and to protect the quality and integrity of our services.The following is a non-exhaustive list of practices that would not be considered ""Legitimate Use"":(a)Using our services for unreasonable workloads we determine (in our sole discretion) to be unrelated to the deployment and maintenance of your own services;(b)Re-selling our services or parts thereof to another party;(c)Using our services in a manner we determine (in our sole discretion) could cause harm to our services or another party; or(d)Unusual usage patterns inconsistent with those we reasonably consider as normal use when compared to other customers.Other practices may be relevant in determining Legitimate Use and Company reserves the right to take any unlawful, prohibited, abnormal, or unusual activity into account in making its determination.If you use our services in any way which we reasonably determine (at our sole discretion) may be unlawful, prohibited, abnormal, unusual, or detrimental to our services or any of our other customers or other unrelated parties, we reserve the right to suspend or terminate your access without notice.We may monitor your account to check that this AUP is being followed. We may vary the terms of this AUP from time to time without notice, and will contact you using the details you've provided to inform you of the changes.Excessive UseExcessive use means you are exceeding one or more of the limitations allocated to your current subscription. These limitations are described on our detailed pricing page. We reserve the right to adjust these limitations from time to time without notice, and will contact you using the details you've provided to inform you of the changes.If your use of our services is excessive we may contact you using the contact details you've provided to request that you modify your usage practices, or change to a more appropriate subscription.If, after our request, your usage practices continue to be excessive, or you refuse to change to a more appropriate subscription, we may suspend or terminate your access to our services immediately without notice.Unreasonable useUnreasonable use of this service includes using it for purposes unrelated to the Customer Agreement intent, and any re-selling or wholesaling of our services, or parts thereof, to another party.If your use of our services is unreasonable, we may contact you using the contact details you have provided to ask that you change the way you use our services.If we consider your use unreasonable (at our sole discretion) we reserve the right to suspend or terminate your access to our services without any prior warning or notice.Privacy policyChanges to this Privacy PolicyWe may update this Privacy Policy from time to time by posting a new version online. You should check this page occasionally to review any changes.Contact UsIf you have any questions about this Privacy Policy or our treatment of the information you provide us, please write to us by email at [email protected]""Sensitive Information""This refers to credit or debit card numbers, personal financial account information, Social Security numbers, passport numbers, driver's license numbers or similar personal identifiers, racial or ethnic origin, physical or mental health condition or information, or other employment, financial or health information.""Personal Information""This refers to any information that you voluntarily submit to us and that identifies you personally, including contact information, such as your name, e-mail address, company name, address, phone number, and other information about yourself or your business. Personal Information can also include information about any transactions, both free and paid, that you enter into on the Websites, and information about you that is available on the internet, such as from Facebook, LinkedIn, Twitter and Google, or publicly available information that we acquire from service providers.""Navigational Information""This refers to information about your computer and your visits to this website such as your IP address, geographical location, browser type, referral source, length of visit and pages viewed.Payment InformationWe collect and process payment information from you when you subscribe to the Services, including credit cards numbers and billing information, using third party PCI-compliant service providers. Except for this, we do not collect Sensitive Information from you.We Never Sell Personal InformationWe will never sell your Personal Information to any third party.Use of Personal InformationIn addition to the uses identified elsewhere in this Privacy Policy, we may use your Personal Information to:(a)improve your browsing experience by personalizing the Websites and to improve the Services;(b)send information to you which we think may be of interest to you by post, email, or other means;(c)send you marketing communications relating to our business or the businesses of carefully-selected third parties which we think may be of interest to you,(d)provide other companies with statistical information about our users -- but this information will not be used to identify any individual user. We may, from time to time, contact you on behalf of external business partners about a particular offering that may be of interest to you. In those cases, we do not transfer your unique Personal Information to the third party. In addition, we may share data with trusted partners to contact you based on your request to receive such communications, help us perform statistical analysis, or provide customer support. Such third parties are prohibited from using your Personal Information except for these purposes, and they are required to maintain the confidentiality of your information.Use of Navigational InformationWe use Navigational Information to operate and improve the Websites and the Services.Customer Testimonials and CommentsWe post customer testimonials and comments on our Websites, which may contain Personal Information. We obtain each customer's consent via email prior to posting the customer's name and testimonial.Use of Credit Card InformationIf you give us credit card information, we use it solely to check your financial qualifications and collect payment from you. We use a third-party service provider to manage credit card processing. This service provider is not permitted to store, retain, or use information you provide except for the sole purpose of credit card processing on our behalf.Service ProvidersWe employ other companies and people to provide services to visitors to our Websites, our customers, and users of the Services and may need to share your information with them to provide information, products or services to you. Examples may include removing repetitive information from prospect lists, analyzing data, providing marketing assistance, processing credit card payments, supplementing the information you provide us in order to provide you with better service, and providing customer service. In all cases where we share your information with such agents, we explicitly require the agent to acknowledge and adhere to our privacy and customer data handling policies.Security of your Personal InformationWe use a variety of security technologies and procedures to help protect your Personal Information from unauthorized access, use or disclosure. We secure the Personal Information you provide on computer servers in a controlled, secure environment, protected from unauthorized access, use or disclosure. When sensitive Personal Information (such as a credit card number and/or geo-location data) is collected on our Websites and/or transmitted to other websites, it is protected through the use of encryption, such as the Secure Socket Layer (SSL) protocol.External WebsitesOur Websites provide links to other websites. We do not control, and are not responsible for, the content or practices of these other websites. Our provision of such links does not constitute our endorsement of these other websites, their content, their owners, or their practices. This Privacy Policy does not apply to these other websites, which are subject to any privacy and other policies they may have.Retention of Personal InformationWe retain Personal Information that you provide us as long as we consider it potentially useful in contacting you about the Services or our other services, or as needed to comply with our legal obligations, resolve disputes and enforce our agreements, and then we securely delete the information.International Transfer of InformationTo facilitate our global operations, we may transfer and access Personal Information from around the world, including the United States. This Privacy Policy shall apply even if we transfer Personal Information to other countries.Compelled DisclosureWe reserve the right to use or disclose your Personal Information if required by law or if we reasonably believe that use or disclosure is necessary to protect our rights, protect your safety or the safety of others, investigate fraud, or comply with a law, court order, or legal process.×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/legal#aup)"
618,metadata explorer symbols?id exchange=BINANCE,metadata explorer symbols?id exchange=BINANCE. CoinAPI - Cryptocurrency Market Data APIIntroducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inMetadata ExplorerRequest new integrationExchangesSymbolsSearch by nameChoose exchangeEXCHANGE IDTYPESYMBOL IDASSET BASEASSET QUOTEBINANCESPOTBINANCE_SPOT_ETH_BTCETHBTCBINANCESPOTBINANCE_SPOT_BNB_BTCBNBBTCBINANCESPOTBINANCE_SPOT_LTC_BTCLTCBTCBINANCESPOTBINANCE_SPOT_NEO_BTCNEOBTCBINANCESPOTBINANCE_SPOT_EOS_ETHEOSETHBINANCESPOTBINANCE_SPOT_SNT_ETHSNTETHBINANCESPOTBINANCE_SPOT_QTUM_ETHQTUMETHBINANCESPOTBINANCE_SPOT_BNT_ETHBNTETHBINANCESPOTBINANCE_SPOT_GAS_BTCGASBTCBINANCESPOTBINANCE_SPOT_BNB_ETHBNBETH<< < > >> Page 1 of 272 Show 5Show 10Show 20×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/metadata-explorer/symbols?id-exchange=BINANCE)
619,ems api,"ems api. CoinAPI - Cryptocurrency EMS Trading APIToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inTrade Across Multiple Crypto Exchanges with One APIConnect multiple cryptocurrency exchange accounts into single API. Centralize your order routing process to get the best execution across exchanges.Free API keyAPI DocumentationWhat you getUnified Trading PlatformIntegrate multiple cryptocurrency exchanges through a single, powerful API. Execute complex trading strategies, manage unlimited accounts, and benefit from advanced order types. Streamline your operations and focus on your core trading objectives.Comprehensive Market AccessAccess real-time data and execute trades across multiple exchanges simultaneously. Leverage normalized data models and standardized protocols (REST, WebSocket, FIX) for seamless integration.Performance & SecurityExperience low-latency connections optimized for high-frequency trading. Choose between cloud-hosted or self-hosted deployments for maximum control and security. Benefit from enterprise-grade infrastructure with redundant servers and swift region switching to minimize downtime.Key featuresOrder Management & Trading ExecutionOversee all aspects of your orders, from initiation through modification to execution. Buy and sell on multiple exchanges from one abstracted interface.Managed cloud vs self-hostedChoose between a managed cloud infrastructure, quick to set up and easy to use, or a self-hosted option, guaranteeing the utmost privacy of your transactions.Smart Order RoutingNo more complicated calculations and comparisons on your shoulders! This feature automatically identifies the most favorable path for your trade execution across multiple markets and exchanges. (Comming Soon)High-Performance ArchitectureOur API is designed to be event-driven and low-latency, ensuring that you can execute trades quickly and efficiently. When the data source event is emitted we acting on it immediately.Flexible API ProtocolsChoose from REST, WebSocket, and FIX API protocols. Select the most suitable method for your specific integraiton requirements.Advanced Order TypesSubmit: Limit Orders, Market Orders, Trailing Stop Orders, Fill or Kill, Immediate or Cancel, Good-Till-Cancelled, Stop-Loss, Take-Profit, and Iceberg orders.Data standardizationData are often presented differently across platforms, making decision-making difficult. Fortunately, at CoinAPI we eliminate this problem by standardizing the data in detail.CEX+DEX CoverageSupport for both centralized (CEX) and decentralized (DEX) exchanges like dYdX. Access data from multiple crypto exchanges through a single abstraction.Professional ServicesCustomizable features and SLAs for enterprise clients. We offer extended integration assistance, managed infrastructure, and premium support.Resilient InfrastructureGlobal Presence: Geographical distributed infrastructureData Source Colo: Presence close to the data sourcesUltra-Low Latency: Rapid response times in all regionsSmart Routing: Automatic connection to nearest serverHigh Uptime: Robust backup systems for continuous serviceScalable: Effortlessly handles surges in data volumeNo Maintenace: We do not have visible maintenancesDedicated Interconnection Add-onsCloud Direct: AWS DC /  GCP ICVPC Peering: GCE /  AWS VPC AZ PeeringPhysical Cross Connect: Equinix (TY8, NY4, LD4)Tailor your connection to your exact needs. Our flexible options ensure optimal performance, security, and integration with your existing infrastructure.View Real-Time Network StatusWhy developers love us?We empower developers with tools and resources that streamline their workflow, allowing them to create innovative solutions faster and more efficiently.Unified EcosystemAccess a cohesive platform where all components work seamlessly together, eliminating compatibility headaches and streamlining your development process.Plug-and-Play SolutionsLeverage our modular architecture to rapidly build and customize your applications. Mix and match components to create tailored solutions effortlessly.Developer-Centric DesignExperience a platform built by developers, for developers. Our intuitive design and developer-first approach make complex tasks feel effortless.Streamline your order execution workflow with our all-in-one API solutionMonthlyAnnualFREE + PAY AS YOU GOPROFESSIONALENTERPRISEFREE + PAY AS YOU GO$0monthlyStart for freePublic knowledge baseSupport1 exchange accountFREE + PAY AS YOU GO$0monthlyStart for free Public knowledge baseSupport1 exchange accountPROFESSIONAL$999monthlySubscribe All from the free packageSupport3 exchange accountsSLAIntegration assistanceENTERPRISECustompurpose-built for businessLet's talk All features of lower packagesCustom SLA & featuresExtended integration assistancePremium supportManaged infrastructureNeed advice? Get in touch with our expertsLet's chatWe’re ready to engage in conversation for any specific requirements you might have.Need help choosing? Our sales team is ready to help you select the plan that best suits your business’s needsHave questions or concerns? Our team is here to assist you.Looking for a quote on an enterprise plan? Request an estimate today. Contact DetailsName*Email*WebsiteWhat products are you interested in?Tell us about your project or integration.By completing and submitting this form, I agree to receive marketing emails.You can unsubscribe or update your preferences at any time. Your personal data will be processed in accordance with the Privacy Policy.Prices for usage above the quota of your planNumber of managed accounts above plan quotaPrice per account per hourFirst 30.094$ Next 70.063$ Next 230.038$ Next 670.0342$ Over 1000.030$ Fequently Asked QuestionsWhat is EMS Trading API?What cryptocurrencies can I trade through the EMS API?Uninterrupted ServiceOur distributed infrastructure have 100ms-level failover time. Standard SLA included to all subscriptions. Experience seamless operations, regardless of local disruptions.Our core valuesWhy Choose CoinAPI?Comprehensive API SuiteAccess our full range of financial data through a single, unified API ecosystem, simplifying integration and reducing development time.Tailored Data SolutionsFrom unique order types to proprietary exchange data, we support custom requests that go beyond standard offerings, adapting to your specific integration requirements.Real-time & interconnectsWe operate on proprietary infrastructure, ensuring the lowest latency and highest uptime in the industry. Our global network using UDP na BGP protocols to exchange data directly between our data centers and Customers.Real-time and historical data from all exchangesSeamlessly access both real-time and historical data from over 300 data sources in same format, enabling thorough market analysis and informed decision-making.Read more aboutMarket Data APICryptoTickNode as a ServiceOn-Chain API×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/ems-api)"
620,cdn cgi l email protection#5a292f2a2a35282e1a393533343b2a33743335,"cdn cgi l email protection#5a292f2a2a35282e1a393533343b2a33743335.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 86784f356d848866 •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://coinapi.io/cdn-cgi/l/email-protection#5a292f2a2a35282e1a393533343b2a33743335)"
621,use case coinapi for crypto mining,"use case coinapi for crypto mining. Optimize Your Crypto Mining Operations with CoinAPI - CoinAPI.ioIntroducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inCrypto MiningPowering Crypto Miningwith data accessibility and seamless integrationStart nowEnsuring the delivery of accurate, timely, and relevant data to enable efficient mining operations and aid strategic decision-making about which cryptocurrencies to mine.Crypto mining requires a strategic approach to be profitable in the increasingly competitive mining market. Having access to a reliable source of blockchain data is the key to long-term value.What are the pain points when performing crypto mining?Volatility of cryptocurrency pricesUnstructured, incomplete, and inaccurate dataLack of historical dataPoor data qualityIntegration with plenty of APIs to get a full overview of the marketA complex development process that requires to focus on security, a user-friendly, and scalable wallet that can meet the needs of users and comply with regulationsIntegration with plenty of data providers to cover a wide range of cryptocurrency dataMaintenance of the large development teamHow CoinAPI could solve this issue?CoinAPI Products Used:Get access to real-time and historical crypto market dataAccess critical data and analytics for crafting crypto indices in real-timeTrack multiple cryptocurrencies' prices in one place instead of attaching data from different resourcesMonitor market trends and changesAccess to features like data filtering, aggregation, and transformation to improve data accessibility and usefulnessHigh-quality, normalized dataEasily access structured data from multiple exchanges, simplifying data processing and integrationAccess high-frequency exchange rates and order books, along with unique low-frequency data not available with other providers Reduced development cost & timeDevelopers can easily implement APIs without dealing with multiple APIs themselvesCoinAPI enables seamless app integration for an efficient stackCoinAPI offers REST, WebSocket, and FIX protocols to facilitate faster integration between API and usersReduce the volatility of trading prices and present a more stable price pointCoinAPI reduces volatility and presents a more stable price pointCoinAPI reduces the risk of large price fluctuations and helps to minimize the amount of downside risk, as the highest price that a buyer or seller is willing to pay is already predeterminedFast and seamless onboarding processEasy integration with third-party trading systemsQuick response timeTick-by-tick data for making day-to-day transactions and paymentsInteract with crypto data easily to focus on your own solution developmentNo need to hire a developer and pay for their maintenance and updates for integration module, saving time and expensesFull API maintenanceLeverage CoinAPI’s SDK infrastructure and avoid maintaining API for your applicationUsing APIs is a great way to build a feature-rich cryptocurrency wallet app. When you use CoinAPI, it’ll allow you to synchronize your crypto wallet with the cryptocurrency ecosystem easilyAPI integration is crucial for unlocking new features and functionality. An API integration platform can speed up the process by providing infrastructure and tools for easy integrationSecurityMarket data APIs use encrypted protocols to ensure user data protectionHave deep coverage of the cryptocurrency spaceAccess cryptocurrency market data since 2015Develop custom analytical tools for an improved understanding of the cryptocurrency marketWhite labelCoinAPI offers customers a branded public profile with real-time details on their mining activityWhy developers love us?We empower developers with tools and resources that streamline their workflow, allowing them to create innovative solutions faster and more efficiently.Unified EcosystemAccess a cohesive platform where all components work seamlessly together, eliminating compatibility headaches and streamlining your development process.Plug-and-Play SolutionsLeverage our modular architecture to rapidly build and customize your applications. Mix and match components to create tailored solutions effortlessly.Developer-Centric DesignExperience a platform built by developers, for developers. Our intuitive design and developer-first approach make complex tasks feel effortless.Uninterrupted ServiceOur distributed infrastructure have 100ms-level failover time. Standard SLA included to all subscriptions. Experience seamless operations, regardless of local disruptions.Our core valuesWhy Choose CoinAPI?Comprehensive API SuiteAccess our full range of financial data through a single, unified API ecosystem, simplifying integration and reducing development time.Tailored Data SolutionsFrom unique order types to proprietary exchange data, we support custom requests that go beyond standard offerings, adapting to your specific integration requirements.Real-time & interconnectsWe operate on proprietary infrastructure, ensuring the lowest latency and highest uptime in the industry. Our global network using UDP na BGP protocols to exchange data directly between our data centers and Customers.Real-time and historical data from all exchangesSeamlessly access both real-time and historical data from over 300 data sources in same format, enabling thorough market analysis and informed decision-making.Mike NasserSatstreet Trading Desk“CoinAPI is the perfect solution for real-time information sourced from all exchanges, offering user-friendly APIs for developers and investors.“Read Case Study →Chris A. TovmasianMarketDraft“CoinAPI empowers businesses with seamless integration, high precision, and reliable data, transforming them into crypto-ready powerhouses for effortless cryptocurrency tracking.“Read Case Study →Colin MackieBitcoin.tax“CoinAPI has been a very reliable service and provides us with exactly the data we need. We have been a customer since 2019 and expect to continue using the services in the future.“Read Case Study →Crypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/use-case/coinapi-for-crypto-mining)"
622,use case coinapi for university research,"use case coinapi for university research. Streamline Your University Research with CoinAPI - CoinAPI.ioIntroducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inResearch in universitiesEmpowering academic researchwith comprehensive blockchain and cryptocurrency dataStart nowOvercoming data collection and analysis obstacles in crypto and Blockchain university researchCrypto market data APIs are essential for students conducting research projects on cryptocurrencies or blockchain technology. They provide real-time and historical data, improve accuracy, and automate data collection and analysis, which can help students to conduct more comprehensive and insightful research.What are the pain points when performing research in universities?Building security features that require a deep understanding of blockchain technology, cryptography, and security best practicesLimited access to real-time and historical dataUnstructured, incomplete, and inaccurate dataSpending a lot of time collecting data manually from various resourcesPoor data quality and accuracyDifficulty in data analysis: Navigating and analyzing vast amounts of data can be overwhelming, especially without the right toolsBudget Constraints: The high costs of accessing premium data can limit the scope and quality of researchHow CoinAPI could solve this issue?CoinAPI Products Used:Get access to real-time and historical crypto market dataAccess critical data and analytics for analysisTrack multiple cryptocurrencies' prices in one place instead of attaching data from different resourcesAccess to features like data filtering, aggregation, and transformation to improve data accessibility and usefulnessExtensive data coverageCoinAPI provides access to exchanges, liquidity providers, and trading platforms, offering a wide range of data sourcesHistorical data from 2015 onwards enables comprehensive analysis and backtestingSupport for 500+ exchanges and 10,000+ cryptocurrenciesHigh-quality, normalized dataAccess structured data from multiple exchanges, simplifying integration and processingAccess high-frequency exchange rates, order books, and unique low-frequency dataGain comprehensive insights from aggregated data across multiple exchangesReduce the volatility of trading prices and present a more stable price pointCoinAPI reduces volatility and presents a more stable price pointCCoinAPI minimizes price volatility and riskGain valuable insights with CoinAPI's data aggregation and analysis toolsComprehensive pricing for students50% discount on all data plans specifically designed for students, making high-quality cryptocurrency market data more accessibleWhy developers love us?We empower developers with tools and resources that streamline their workflow, allowing them to create innovative solutions faster and more efficiently.Unified EcosystemAccess a cohesive platform where all components work seamlessly together, eliminating compatibility headaches and streamlining your development process.Plug-and-Play SolutionsLeverage our modular architecture to rapidly build and customize your applications. Mix and match components to create tailored solutions effortlessly.Developer-Centric DesignExperience a platform built by developers, for developers. Our intuitive design and developer-first approach make complex tasks feel effortless.Uninterrupted ServiceOur distributed infrastructure have 100ms-level failover time. Standard SLA included to all subscriptions. Experience seamless operations, regardless of local disruptions.Our core valuesWhy Choose CoinAPI?Comprehensive API SuiteAccess our full range of financial data through a single, unified API ecosystem, simplifying integration and reducing development time.Tailored Data SolutionsFrom unique order types to proprietary exchange data, we support custom requests that go beyond standard offerings, adapting to your specific integration requirements.Real-time & interconnectsWe operate on proprietary infrastructure, ensuring the lowest latency and highest uptime in the industry. Our global network using UDP na BGP protocols to exchange data directly between our data centers and Customers.Real-time and historical data from all exchangesSeamlessly access both real-time and historical data from over 300 data sources in same format, enabling thorough market analysis and informed decision-making.Mike NasserSatstreet Trading Desk“CoinAPI is the perfect solution for real-time information sourced from all exchanges, offering user-friendly APIs for developers and investors.“Read Case Study →Chris A. TovmasianMarketDraft“CoinAPI empowers businesses with seamless integration, high precision, and reliable data, transforming them into crypto-ready powerhouses for effortless cryptocurrency tracking.“Read Case Study →Colin MackieBitcoin.tax“CoinAPI has been a very reliable service and provides us with exactly the data we need. We have been a customer since 2019 and expect to continue using the services in the future.“Read Case Study →Crypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/use-case/coinapi-for-university-research)"
623,blog importance of low latency in cryptocurrency trading,"blog importance of low latency in cryptocurrency trading. CoinAPI Blog - The Role of Latency in Cryptocurrency Data Introducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inMarket Data APIThe Role of Latency in Cryptocurrency DataLatency plays an important role in the world of cryptocurrency. It impacts everything from the speed of trade execution to the accuracy of market data. This blog post is all about what latency is, why low latency is crucial in crypto, and how various factors influence it. We’ll explore how we, as a company ensure minimal latency in our Market Data API and EMS Trading API. What is latency? Latency in simple words is the delay within a system. In the context of networks, latency measures the time it takes for data to travel from point A to point B. In the ideal situation the data transmission would happen instantly, but in reality, it’s slowed by many factors: Distance Infrastructure Network congestion   Source: keycdn.com Data latency Data latency refers to the delay between the time data is created and the time it is available for use. In the context of cryptocurrency, it is the time taken for price updates and market data to be transmitted from exchanges to traders. Low latency means faster data delivery, which is crucial for high-frequency trading strategies where every millisecond counts. “The information cannot travel faster than the speed of light. It’s crucial for understanding data latency. For instance, data from an exchange in the APAC region, reaching the United States, can take a minimum of 200 milliseconds. This delay is an inherent limitation due to the speed of light and cannot be overcome. It’s physically impossible.” – Artur Pietrzyk, CEO @CoinAPI Why is low latency so important in crypto? There are areas of cryptocurrency trading and market analysis that could be directly influenced by high latency. The speed of data transmission is one of the key factors in several situations. High-frequency trading These traders rely on executing a large number of orders at extremely fast speeds. Low latency ensures that they can gain on market inefficiencies and price discrepancies before other market participants do. The faster the network the more they earn. Slippage It occurs when there is a difference between the expected price of a trade and the actual executed price. Lower latency minimizes the chances of slippage, ensuring trades are executed at the desired prices. In cases like that fractions of a second matter. Arbitrage trading Traders exploiting arbitrage opportunities need to act on price differences across different exchanges quickly. Low latency enables them to make these trades before the price differences are gone. Real-time data access Traders need real-time data to make the best decisions. Low latency means that they receive up-to-date information, allowing for better risk management and decision-making. Top traders use the best real-time data insights via APIs like WebSocket from single exchanges or even better based on aggregated exchange rates. Algorithmic trading Many trading strategies are automated and depend on algorithms and bots that react to market changes in real-time. Low latency is essential for these algorithms to function fast on time, correctly, and profitably for the trader. Liquidity providers Market makers and liquidity providers rely on low latency to update their orders and spread quickly in response to market changes, ensuring they can offer tight spreads and maintain profitability. The consequences of high latency High latency can have negative impacts on your crypto market actions: Delayed Market Data: When market data is delayed, traders make decisions based on outdated information, which can lead to missed opportunities or suboptimal trades. Execution Delays: Trades executed with high latency may miss the desired price points, leading to increased slippage and reduced profitability. Increased Risk: Slower response times can result in higher risk, especially in volatile markets where prices change rapidly. Latency measurement units Latency, in the context of data transmission, is measured in terms of time delay. In the cryptocurrency market, latency is typically measured in nanoseconds (ns), microseconds (µs), and milliseconds (ms). Each unit represents a different scale of delay, which is crucial for traders, especially those using high-frequency trading strategies. Let’s explore these measurements and their significance with examples from the cryptocurrency world. Milliseconds (ms) one-thousandth of a second Millisecond latency is more commonly encountered in broader trading and financial applications. While slower than microsecond and nanosecond latencies, millisecond latency is still considered very fast for most trading activities. Microseconds (µs) one-millionth of a second It’s more common in trading scenarios where rapid data processing is required but at a scale that is slightly more manageable than nanoseconds. Microsecond latency is still extremely fast and vital for many trading strategies. Nanoseconds (ns) one-billionth of a second This measurement is often used in high-frequency trading (HFT) environments where even the tiniest delay can impact trading decisions and profitability. In the world of cryptocurrency, achieving nanosecond latency requires extremely sophisticated technology and infrastructure. “Most latency is the effect of the physical distance on earth and the indirectness of cable connections. This means that the farther the data has to travel and the more intermediate points it passes through, the higher the latency. To minimize this, direct connections and optimized routing are crucial.” – Artur Pietrzyk, CEO @CoinAPI How CoinAPI deals with latency We know that low latency is one of the most important features for our clients. We are doing our best to keep it super-low. How do we do it? In order to deal with latency, first, you have to know how high it is. How do we measure and validate latency? We measure and confirm latency using precise timestamping methods at various stages in the data flow. This includes: Network Time Protocol (NTP): Synchronizing clocks across servers to maintain accurate time measurements. Packet Capture Tools: Using tools like Wireshark to capture and analyze network packets. Latency Monitoring Software: Implementing software solutions that constantly monitor and report latency metrics. How is our latency so low? We take great pride in having one of the lowest data latencies in the crypto market. In some cases, the data latency is below 1 millisecond! To achieve this as an API provider, we fulfill several key conditions: Direct Connections: Establishing direct connections to exchanges and data centers. AWS VPC Peering: Utilizing AWS VPC Peering for low-latency, high-bandwidth connections between our infrastructure and the customer’s. Source: docs.aws.amazon.com GeoDNS Routing: Using GeoDNS to direct traffic to the nearest data center. Source: gcore.com Optimized Network Paths: Utilizing optimized network paths and low-latency routes. High-Performance Hardware: Deploying top-tier servers and network equipment. Is the latency always low? Latency is typically low, but it can increase during a failover. Source: danevo.net How do we handle failovers? We have a plan in place for these situations, and our goal stays the same – to maintain the lowest possible latency. Redundancy: Implementing backup servers to enable quick regional switches. Automated failover: Using automated systems to reduce downtime. Load balancing: Distributing traffic across multiple servers to ensure continuous service. How does server load impact latency, and what mechanisms are in place to handle high traffic without degrading performance? Server load can impact latency by increasing processing times. To handle high traffic effectively, we use: Load Balancing: Distributing traffic across multiple servers to prevent any single server from becoming overwhelmed. Auto-Scaling: Automatically adding resources during peak times to maintain performance. Performance Monitoring: Continuously monitoring server performance and adjusting resources as needed to ensure optimal operation. 💡 See SingAlliance case study where low latency of data was one of the most important factors → Case study Is there a difference in latency between self-hosted and managed cloud? Yes, there is a difference in latency between self-hosted and managed cloud solutions, though it is generally minimal. Self-hosted Pros: Lower latency, optimized for specific use cases. Greater control over configuration and performance. Cons: Requires significant expertise and resources to manage. Higher responsibility for maintenance and troubleshooting. Managed cloud Pros: Easier management with no client-side maintenance required. Scalability and flexibility are provided by the cloud service. Cons: Potential for slightly higher latency due to shared resources. Limited control over specific optimizations. Manage cloud – CoinAPI’s server latency We use a combination of: Equinix: For colocation services, providing high-performance, low-latency connections. AWS: For scalable cloud infrastructure, offering flexibility and redundancy. This hybrid approach allows us to leverage the strengths of both environments, ensuring optimal performance and reliability. 💡 READ HOW COINAPI ENSURES DATA ACCURACY AND SPEED HERE Client-side configurations and best practices for the lowest latency Optimized Network Configuration: Ensuring network settings are configured for low latency. Direct Connections: Establishing direct connections to our data centers to minimize data travel time. Efficient Code: Writing efficient, low-latency code for data processing to reduce execution time. Regular Updates: Keeping software and hardware up to date to benefit from the latest performance improvements. Latency comparison for CoinAPI’s plans Enterprise Plan: Access Type: It is possible to have direct access to the sites or set up AWS VPC Peering. Latency: Possible below one millisecond due to direct access or VPC Peering. Example: If you set up AWS VPC Peering, the latency between your infrastructure and CoinAPI’s infrastructure will be less than one millisecond. Free, Startup, Streamer, and Professional Plans: Access Type: Connections are established to the public endpoint with GeoDNS (routed to the closest site) (~20ms). Latency: Depends on the distance between your location and the site where the connection is routed, typically around 20 milliseconds. Example: If you are located in New York and the closest site is in Virginia, the latency will be approximately 20 milliseconds. Conclusion Do you want to be the best and gain an advantage over others? Well, there’s no other way around it, but to have the lowest latency data source possible – like Market Data API. CoinAPI and our products are all about reliability and low-latency real-time data access. If you want to learn more: contact our sales team or read our documentation. Stay up-to-date with the latest CoinApi News.SendI Agree to CoinApi’s Privacy Policy*Recent ArticlesEMS Trading APIHow to improve your high-frequency trading strategies in crypto?In crypto trading, High-Frequency Trading operates similarly to traditional markets but with some unique characteristics due to the...Market Data APIWhy is aggregated crypto data better?Some time ago we wrote blog posts about crypto data filtering and crypto data standardization – now it’s time to tell you more about...Market Data APIWhat are Meme Coins? Top 25 Funniest Examples and PricesLet’s have some fun! Because after all, who said that investing and entertainment shouldn’t come in pairs?...Market Data APICrypto data filteringAt 9:00 AM, with a cup of coffee in hand, you sit at your desk ready to trade crypto. Faced with an overwhelming amount of market data and...EMS Trading API3 Core Statistical Arbitrage Strategies in CryptoStatistical arbitrage, often abbreviated as “stat arb,” is a quantitative trading strategy that seeks to exploit inefficiencies...EMS Trading APIEMS Trading API vs Single Exchange Access – What’s better?Choosing the right trading tools is crucial for optimizing your strategy. This blog post delves into Execution Management Systems (EMS),...Market Data APIThe Role of Latency in Cryptocurrency DataLatency impacts everything from trade execution speed to market data accuracy in the cryptocurrency world. Learn why low latency is...Market Data APICryptocurrency Exchange RatesIn the world of cryptocurrencies, exchange rates are dynamic and influenced by various market factors. This post explains the concept of...Market Data APIHow to get Historical and Real-Time Crypto Data From Multiple Exchanges?With the rise of cryptocurrencies, there is a growing question: how to get historical and real-time crypto data from multiple...Crypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/blog/importance-of-low-latency-in-cryptocurrency-trading)"
624,blog filter your crypto data,"blog filter your crypto data. CoinAPI Blog - Crypto data filtering Introducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inMarket Data APICrypto data filteringIt’s 9:00 AM. You make a morning coffee and sit at your desk ready to trade crypto. When you turn on your computer, you see a lot of market data and crypto news. Instead of analyzing every single data point and reading all crypto news websites (which would be impossible), you can save time by setting up filters. These filters help you focus on the most important information like major price changes, high trading volumes, significant news events, or just the one altcoin you’re interested in. This process is called data filtering, allowing you to select specific data points based on your own criteria. In this blog post, we’ll talk more about data filtering in the context of cryptocurrency. Let’s get into it! What is data filtering? Filtering of data is one of the main parts of managing and analyzing information. It’s about choosing specific pieces of information from a larger set of data, based on certain criteria. It helps to focus on relevant data, get rid of unimportant or wrong data points, and improve the overall quality and usefulness of the dataset. By using filters, analysts and data scientists can concentrate on important subsets of data, which makes their work more efficient. Data filtering can be used in many ways. For example, it can be used to look at results over a specific time, calculate metrics for certain groups, or exclude unusual or incorrect data that could affect results. Data filtering can be either: Temporary – the full dataset is kept but only part of it is used for analysis Permanent – where irrelevant data is permanently deleted or not considered from the very start Data filtering uses specific rules to decide which data to include in an analysis. For example, in a sales dataset, a filter might only include transactions from the last quarter or exclude returns and refunds. This approach improves the quality of the data and makes the following analyses more accurate. Data filtering is an essential technique in data processing and analysis, used in business intelligence, data science, machine learning, finance, and cryptocurrency. By refining raw data into smaller and meaningful sets, filtering supports better data examination, model training, and decision-making processes. What’s the goal of crypto data filtering? Filtering data in cryptocurrency means refining and processing raw data to extract important information. Is it necessary? We believe so! There is a lot of data in the cryptocurrency space including transaction data, market prices, trading volumes, social media sentiments (the community on X arguing over most strategies), and blockchain analytics. Main purposes of data filtering in cryptocurrency? Focus on important insights: Filtering out irrelevant or incorrect data to focus on important information. It includes removing outliers, duplicates, and anomalies that could affect the analysis. No biased data: Ensuring that the data is of good quality by addressing missing values, correcting errors, and standardizing data formats. Easier to find interesting info: Identifying and isolating important patterns, trends, and signals from the data that can be used to make decisions. How is Market Data API filtering crypto data? Our Market Data API offers a variety of options for filtering data to ensure you only get the information you need: Symbol Filtering You can narrow down your data requests to specific symbols, allowing you to retrieve data for only the assets or trading pairs that interest you. This means you won’t be overwhelmed by unnecessary data. To filter symbols for a specific exchange or asset, you can use the filter_exchange_id or filter_asset_id parameters. Here’s how to do it: Filter by Exchange: To get a list of symbols for the Coinbase exchange, use the following endpoint: <https://rest.coinapi.io/v1/symbols?filter_exchange_id=COINBASE> Filter by Asset: To get a list of symbols for Chainlink, use this endpoint: <https://rest.coinapi.io/v1/symbols?filter_asset_id=LINK>  Time Range Filtering If you need historical data from a particular period, you can specify a time range for your query. This is especially useful for analyzing past market trends or conducting backtesting on specific time frames. To filter data by a specific time range, use the time_start and time_end parameters. For example: OHLCV Data for Bitcoin: To retrieve OHLCV data for Bitcoin (BTC) from January 1, 2022, to January 31, 2022: <https://rest.coinapi.io/v1/ohlcv/BITSTAMP_SPOT_BTC_USD/history?period_id=1DAY&time_start=2022-01-01T00:00:00&time_end=2022-01-31T23:59:59>  Data Type Filtering The API provides the flexibility to filter by different types of market data. Whether you’re interested in trades, quotes, order books, or OHLCV (Open, High, Low, Close, Volume) data, you can tailor your request to match your needs. To filter data by type, specify the data type in the endpoint. For example: Trade Data: To get trade data for Bitcoin on the Bitstamp exchange from January 1, 2022, to January 31, 2022: <https://rest.coinapi.io/v1/trades/BITSTAMP_SPOT_BTC_USD/history?time_start=2022-01-01T00:00:00&time_end=2022-01-31T23:59:59>  Exchange Filtering Focus your data retrieval on specific exchanges. This option is ideal if you’re only interested in data from certain exchanges, making your analysis more relevant and precise. To filter data by a specific exchange, use the filter_exchange_id parameter. For example: Filter by Exchange: To get a list of symbols for the Binance exchange: <https://rest.coinapi.io/v1/symbols?filter_exchange_id=BINANCE>  Filtering real-time crypto data Most people when thinking about data filtering apply it to historical data only, but it is possible to filter real-time data using the CoinAPI’s Market Data API. When using the WebSocket API protocol for real-time data streaming, you can apply various filters to receive only the specific data you need. Here are some ways to filter real-time data: Symbol Filtering You can subscribe to specific symbols to receive real-time updates only for those assets or trading pairs. This helps in focusing on the most relevant data for your trading or analysis purposes. Exchange Filtering You can filter the data to receive updates from specific exchanges. This is useful if you are interested in tracking data from particular exchanges where you actively trade or analyze market conditions. Data Type Filtering You can choose to receive specific types of real-time data, such as trades, quotes, or order book updates. This allows you to streamline the data flow and focus on the information that is most critical for your strategies. What’s the main takeout? Data filtering helps to quickly find new trends in cryptocurrency markets, allowing you to make timely investment decisions and manage risks effectively. By focusing on important data and ignoring the less important information, you could spot major market movements and patterns that might otherwise be missed. Using advanced data filtering techniques, allows users to improve the accuracy of predictive models and develop more precise trading strategies. Stay up-to-date with the latest CoinApi News.SendI Agree to CoinApi’s Privacy Policy*Recent ArticlesEMS Trading APIHow to improve your high-frequency trading strategies in crypto?In crypto trading, High-Frequency Trading operates similarly to traditional markets but with some unique characteristics due to the...Market Data APIWhy is aggregated crypto data better?Some time ago we wrote blog posts about crypto data filtering and crypto data standardization – now it’s time to tell you more about...Market Data APIWhat are Meme Coins? Top 25 Funniest Examples and PricesLet’s have some fun! Because after all, who said that investing and entertainment shouldn’t come in pairs?...Market Data APICrypto data filteringAt 9:00 AM, with a cup of coffee in hand, you sit at your desk ready to trade crypto. Faced with an overwhelming amount of market data and...EMS Trading API3 Core Statistical Arbitrage Strategies in CryptoStatistical arbitrage, often abbreviated as “stat arb,” is a quantitative trading strategy that seeks to exploit inefficiencies...EMS Trading APIEMS Trading API vs Single Exchange Access – What’s better?Choosing the right trading tools is crucial for optimizing your strategy. This blog post delves into Execution Management Systems (EMS),...Market Data APIThe Role of Latency in Cryptocurrency DataLatency impacts everything from trade execution speed to market data accuracy in the cryptocurrency world. Learn why low latency is...Market Data APICryptocurrency Exchange RatesIn the world of cryptocurrencies, exchange rates are dynamic and influenced by various market factors. This post explains the concept of...Market Data APIHow to get Historical and Real-Time Crypto Data From Multiple Exchanges?With the rise of cryptocurrencies, there is a growing question: how to get historical and real-time crypto data from multiple...Crypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/blog/filter-your-crypto-data)"
625,legal#terms,"legal#terms. CoinAPI - Legal informationsIntroducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inLegal infoCustomer AgreementAcceptable Usage PolicyPrivacy policyEffective Date: 2023-07-01Customer AgreementThis customer agreement (“Agreement”) is a legal agreement between you and COINAPI LTD UTR 8050945 (“Company”, “our”, “we” or “us”), an United Kingdom company (together the “parties” and each a “party”). If you are agreeing to this Agreement not as an individual but on behalf of your company, then a reference to “you” or “Customer” in this Agreement is a reference to the company, and the company will be bound by this Agreement. We may modify the terms of this Agreement from time to time subject to Section 17 (Changes to this Agreement) below.By clicking on the “I agree” (or similar button or checkbox) that is presented to you at the time of your Order or when subscribing for one of our services, or by using or accessing our Products, you agree to be bound by the terms of this Agreement. If you do not agree to the terms of this Agreement, you must immediately uninstall or cease using the Products.1. Grant and Scope of Agreement1.1. Scope. This Agreement governs your initial purchase as well as any future purchases made by you that reference this Agreement. This Agreement also includes our Privacy Policy, our Acceptable Use Policy, any Orders, and any other referenced policies and attachments. For the absence of doubt, this Agreement governs your use of or reliance on:(a)our commercially available downloadable software products (“Software”), currently designated as “On-Perm” deployments;(b)our cloud-hosted online services, currently designated as “CoinAPI Cloud” (“Cloud Services”),(together with any related documentation, the Products), and(c)any related support or maintenance services provided by us (“Support Services”). 1.2. Rights. You have no rights in, or to, any Product or Support Service other than the rights granted under this Agreement.1.3. Software and Cloud Services. Section 3 (Software Terms) applies specifically to Software. Section 4 (Cloud Services Terms) applies specifically to Cloud Services. All other terms of this Agreement apply to all Products unless otherwise specified.1.4. Affiliates. Your affiliates shall be entitled to make full use of the Products in accordance with the terms of this Agreement to the same extent as if they were you. For purposes of this Agreement, “Affiliate” means an entity which, directly or indirectly, owns or controls, is owned or is controlled by or is under common ownership or control with a party, where “control” means the power to direct the management or affairs of an entity, and “ownership” means the beneficial ownership of greater than 50% of the voting equity securities or other equivalent voting interests of the entity.2. Accounts, Orders, Subscriptions, Data Sources, Modules, Payments, and Refunds2.1. Account Registration. You must register an Account with us at our website in order to place Orders, receive license keys, and manage access to the Software or Cloud Services. Your account information must be kept accurate and complete. You must keep your account information current, so that we may send notices, statements, and other information to you by email or through your Account. You are responsible for all actions taken through your Account, including Orders and Subscriptions made.2.2. Orders, Subscription Term & Renewals. You create an Order by following the purchase or subscription flows on our website, or by requesting an invoice from us. All Orders are intent only and are not binding (on you or on us) until payment is received in full by us and processed or access to the corresponding Product is delivered. Your Order will name the Product you are purchasing, any limits on the number of Data Sources you will be able to manage, and the License Term or Subscription Term. Unless noted otherwise on your Order, all subscriptions will automatically renew for periods equal to your initial Subscription Term unless you cancel your subscription. You can cancel or decide to terminate your subscription, no refund will be provided as all payments are final. You acknowledge that your subscription is subject to automatic renewals and you consent to and accept responsibility for all related recurring charges to your applicable payment method without further authorization from you and without further notice unless required by law. You acknowledge that the amount of the recurring charge may change if the applicable tax rates change, or if there has been a change in the applicable fees (for which, if applicable, you will be given at least 7 days❜ notice before such change takes effect). Upon the expiry of your License Term plus optionally a grace period with length of our sole discretion, functionality in the Software will be limited, and you will not be able to use the Software.2.3. Data Source. Our Software is licensed, and / or our Cloud Services are provided, according to the number of specific and unique data sources you can manage. A “Data Source” is an edge of the infrastructure to specific and unique external data source. A Data Source may be a exchange, broker, blockchain, ledger that Product communicates with using the protocol. Data Sources are defined in the Documentation. Some types of Data Sources may count as more than one ""Data Source"" towards your limit as defined in the Documentation. You are solely responsible for any use of the external Data Sources which may be subject to restrictions of use and require additional license agreements with the third party.2.4. Refund policy. You may terminate your initial Order of the applicable Software or Cloud Services under this Agreement, for no reason or any reason, by providing notice of termination. At your request (which may be made through your Account or by contacting us), we may disable the license key that allowed the Software to operate or disable access to the Cloud Services. All fees paid are non-refundable.2.5. Module. Our Software is licensed, and / or our Cloud Services are provided, according to the specific modules available in our Product. A “Module” is self-contained component of our Product. A Module may be related to API, User Interface, Algorithm or Functionality of the Product. Modules are defined in the Documentation.3. Software Terms3.1. Grant of License. Under the terms of this Agreement, we grant you a worldwide, non-exclusive, fully paid, non-transferable license to install and use the Software for your own business purposes, during the applicable License Term.3.2. License Delivery. To activate and use the Software, you will be required to provide a license key. License keys will be delivered electronically to your Account and via email when payment has been received as per your Order.3.3. License Term. Your license to use the Software is granted for a specific time period (License Term or Subscription Term). Your Order will indicate:(a)a period of time for the License Term (12 months unless specified otherwise); and/or,(b)a specific begin and end date for the License Term.If a begin and end date are not indicated, the begin date of the License Term will be the date when the Product is delivered, at which time the license key will be delivered to you as per Section 3.2 (License Delivery). Upon the expiry of your License Term plus optionally a grace period with length of our sole discretion, functionality in the Software will be limited, and you will not be able to use the Software.3.4. Support, Maintenance and New Releases. During the License Term you will have access, free of charge, to all updates, upgrades, new releases and patches for the Software that we release during the License Term, along with technical support. You acknowledge and agree that we may, but are under no obligation to, release any update, upgrade or patch at any time or for any reason.3.5. Number of Instances. For each License that you purchase, you may install and use up to three (3) active “Instances” of the Software. An Instance means a running copy of the Software that has its own operating enviroment. Instances are counted whether installed on the same physical or virtual server, or on different servers.Instances may be used for production usage, disaster recovery, testing, quality assurance, development or other purposes. Each Instance may have an unlimited number of Nodes to provide availability and redundancy.Your Order specifies the maximum number of Data Sources you may register across all running Instances and in each Instance individually, even if you run multiple Instances concurrently.3.6. Third Party Code and Open Source Libraries Used. The Software includes code and libraries licensed to us by third parties, including open source software. To the extent applicable, we shall identify open source software included in the Software in or through the Software itself, or on a page in our documentation. Some of these licenses require us to provide the open source software to you on the terms of the open source license instead of the terms of the Agreement. In that case, the terms of the open source license will apply, and you will have the rights granted in such licenses to the open source software itself, such as access to source code, right to make modifications, and right to reverse engineer. Notwithstanding the foregoing, if you are using the Products in the form provided to you, in accordance with your permitted scope of use, with no distribution of software to third parties, then none of these open source licenses impose any obligations on you beyond what is stated in the Agreement.4. Cloud Services Terms4.1. Access to Cloud Services. Subject to your acceptance and continued compliance with the terms of this Agreement, we grant you a non-exclusive right to access and use the Cloud Services, during the applicable Subscription Term. You acknowledge that the Cloud Services are online, subscription-based products hosted and managed by us on your behalf, which may change from time to time.4.2. Data Sources Limits and Billing. The price for your Subscription will calculated with one of the following methods:(a)based on a fixed number of maximum Data Sources and Modules available; or,(b)based on unlimited Data Sources and Modules;as chosen by you when setting up the Subscription or Order.4.3. Fair Usage. Your usage of the Cloud Services is governed by our Acceptable Usage Policy.4.4. Security of Your Data. We implement and maintain security measures to help protect the Cloud Services and Your Data from security attacks. However, you acknowledge and agree that as a consequence of the inherent nature of the Cloud Services, Your Data will often be transported over networks that are not owned or operated by us, and that we are not responsible for any of Your Data that is lost, intercepted, altered or stored across such networks, except to the extent caused by our negligence or intentional misconduct. You acknowledge that we are unable to guarantee complete security or confidentiality of Your Data or guarantee that third parties will never be able to defeat our security measures or those of our third-party service providers. We are General Data Protection Regulation (GDPR) compliant: if we discover or are made aware that any of Your Data has been intercepted, we will follow the GDPR reporting guidelines if the intercepted data may have contained any personally identifiable information.4.5. Termination, removal and suspension. We may remove Your Data from the Cloud Services, or suspend your access to the services, if we deem such action necessary based on your violation of this Agreement or our Acceptable Use Policy. We will provide thirty (30) days❜ notice and provide reasonable opportunity for you to correct your breach prior to removing Your Data, but we may also suspend your access immediately without notice if we deem it necessary to protect the Cloud Services, security of other customers or to comply with any law or regulation. We have no liability to you for removing or deleting Your Data from or suspending your access to any Cloud Services if you violate this Agreement, our Acceptable Use Policy or any law or regulation.4.6. Static IP Addresses. Your Order may include a static IP address (Static IP) or/and DNS name. We may on rare occasions need to change the details you have been provided with. In such cases we will do our best to give you at least 30 days❜ notice so you can prepare for the change.4.7 Services May Be Inaccessible Or Inoperable. You hereby acknowledge that from time to time, the Services may be inaccessible or inoperable for any reason, including, without limitation: (a)equipment (hardware) malfunctions;(b)software malfunctions;(c)periodic maintenance procedures or repairs which Company mayundertake from time to time; and/or,(d)causes beyond the reasonable control of Company and/or not reasonably foreseeable by Company.4.8 Service Level Agreement. Company will use commercially reasonable efforts to make the Services available 99.999% of time, measured monthly (“Monthly Uptime Percentage”). Further, any downtime resulting from outages of third party connections or utilities or other reasons beyond Company❜s control will also be excluded from any such calculation. Customer's sole and exclusive remedy, and Company's entire liability, in connection with Service availability shall be that in the event Company does not meet the Monthly Uptime Percentage in given calendar month, Customer will be eligible to receive a Service Credit. “Unavailable Time” means the Company API is not available for use according to third party performance and monitoring services contracted by Company (the “Monitoring Service”). The Monitoring Service reports of availability will be accessible via the website operated by the third party. ""Monthly Uptime Percentage"" is calculated by subtracting from 100% the percentage of continuous 1 minute periods during the Service Month in which the Company API was in a state of “Unavailable Time” as identified by Monitoring Service. Availability will be measured by checking the successful HTTP response of the API for the REST and WebSocket protocols on at least one endpoint delivered to the Customer. For a calendar month where the Uptime Monthly Percentage, as identified by Monitoring Service, Company, at its sole discretion after confirming the nature and accuracy of the Unavailable Time, will credit Customer a percentage of that month❜s billings calculated as the average monthly value of the Service Fees, as defined by this table:+---------------------------+----------------+| Monthly Uptime Percentage | Service Credit |+---------------------------+----------------+| <99%| 100%|+---------------------------+----------------+To receive downtime credit, Customer must submit a ticket via the Support Portal within 30 days from the time of downtime, and failure to provide such notice will forfeit the right to receive downtime credit. The ticket must include:(a)""SLA Claim"" as the subject of the ticket;(b)the dates and times of the Unavailable Time for which Customer are requesting credit; and(c)any applicable information that documents the claimed outage. Such credits may not be redeemed for cash.4.9 Right to Change Content or Format. You acknowledge that Company may from time to time, and in its sole discretion, update or change the content or format of the Services. Company shall strive to provide reasonable advance notification of such changes; however, from time to time sudden changes in currency names, codes, and/or values occur in financial markets, and since Company strives to accurately reflect these changes, significant advance notice is not always possible.5. Your Data5.1. Meaning of Your Data. In this Agreement, “Your Data” means any data, applications, configuration settings, content, code, images or material of any type that you upload, send, submit or otherwise provide us or to our Products for any purpose.5.2. Ownership of Your Data. You are responsible for Your Data. You will retain all right, title and interest in and to Your Data. Subject to the terms of this Agreement, you grant us a worldwide, non-exclusive, royalty-free right to collect, use, transfer and store Your Data solely for the purposes of providing any Product to you or to respond to your support requests.5.3. Confidentiality of Your Data. We may receive or have access to information (including but not limited to documents, data, technical information, methods and processes, computer programs and scripts, reports, manuals) owned or controlled by you which is proprietary or confidential (confidential information). This happens in various ways, not limited to: when you store them in the Products, or when you include them in a support request that is not marked “public” by you. We agree:(a)that all such information shall be and shall remain your exclusive property;(b)to limit access to such information to only our authorized employees, contractors, and agents, and including any of our Affiliates under Section 11 (Transfer of Ownership) (collectively, our “Staff”), who have a need to know such information in the performance of their work;(c)to inform all of our Staff engaged in handling such information of the confidential character of such information;(d)to keep, and have our Staff keep, such information confidential;(e)not to copy, publish, or disclose such information to others or authorize others to copy, publish, disclose such information without your written approval;(f)to return promptly any copies of such information to owner at your request;(g)to use such information solely for purposes of fulfilling work or services performed hereunder and for other purposes only upon such terms as may be agreed upon between us in writing; and(h)that, in the event any of the information is required to be produced pursuant to a subpoena, court order, valid legal or administrative process, or other operation of law, we shall notify you of such potential disclosure in order that you may take appropriate action at your own expense to limit or prevent such disclosure, and furnish only that portion of Your Data that has been legally compelled.Confidential information shall not include information which:(i)was known to us before disclosure as evidenced by bona fide written documents;(j)is or becomes publicly known through no wrongful act of ours;(k)is independently developed by us;(l)is disclosed to us by a third party without breach of any obligations of confidentiality.5.4. Nature of Your Data. You must ensure that Your Data is at all times compliant with our Acceptable Usage Policy and all appropriate laws and regulations. You warrant that you have the rights and permissions to provide Your Data to us, and that your transfer of Your Data to use does not violate any laws, regulations or the rights of third parties.5.5. Personally Identifiable Information. You will not submit to us any personally identifiable information (except as necessary for your Authorized Users to use and access a Product). You will not submit to us any patient, medical or other protected health information regulated by any relevant laws in any country.5.6. Liability. For the avoidance of all doubt, we assuming no responsibility or liability for Your Data other than described in this Section 5, and you shall be solely responsible for Your Data and the consequences of you using, storing, disclosing or transmitting it. We have no obligation to monitor any of Your Data uploaded to the service.5.7. Deletion of Your Data. We may remove or delete Your Data 90 days after the termination of your relevant Subscription Term, or upon your request.5.8. Processing of Your Data. We will perform processing actions as part of monitoring and running the Cloud Services and as part of the Support Services.6. RestrictionsExcept as otherwise permitted in this Agreement, or by us in writing, you will not:(a)intentionally use any Product in any way that could damage our reputation; or(b)rent, lease, sub-license, loan, translate, merge, adapt, vary or modify any Product, without our express written consent.7. Termination of Agreement7.1. Termination. Either party may terminate this Agreement (or an Order) without cause on ninety (90) days❜ notice in writing. In addition, either party may terminate this Agreement or any Order if the other party breaches this Agreement in any material respect and fails to cure the breach, if capable of cure, within thirty (30) days after receiving written notice from the other party specifying the nature of the breach. Termination of an individual Order shall not operate to terminate any other then-outstanding Orders between the parties.7.2. Obligations on Termination. On termination of this Agreement, or on termination or expiry of any relevant Order (unless you retain a right to continue using a Product after the end of that Order, e.g., due to another valid Order for that Product, or having a license licensed under a prior “Perpetual” licensing model) you must immediately cease use of, and destroy, any and all copies of any Software, and you acknowledge that you will lose access to any Cloud Services.7.3. Survival. The following Sections will survive any termination or expiration of this Agreement: 6 (Restrictions), 5.3 (Confidentiality of Your Data), 8.4 (Warranty Disclaimer), 10 (IP Indemnification) (but solely with respect to claims arising from your use of the Software during the License Term), and 12 (Export). 8. Warranty8.1. General Warranties. We warrant that:(a)we have the legal power and authority to enter into this agreement with you;(b)during the License Term or Subscription Term as appropriate (“Warranty Period”), the Products will, when properly used, perform substantially as described, provided that the Product is:(i)properly used on the computer and with the operating system and software environment for which it was designed; and,(ii)is used in accordance with our documentation which we may provide you or publish on our website from time to time.We do not warrant that the Products are error free, will operate in an uninterrupted manner, will not damage or interfere with your computer operating system and will not damage or interfere with your business or the business of third parties.8.2. Virus Warranty. We represent and warrant that we will take reasonable commercial efforts to ensure that the Products, in the form and when provided to you, will be free of any viruses, malware, trojans or other harmful code. For any breach of the foregoing warranty, your sole and exclusive remedy, and our sole obligation, is to fix or replace the Products promptly upon notice.8.3. Remedies during Warranty Period. If, within the Warranty Period, a Product fails to perform as described due to a defect or fault (that is not the result of you having modified the Product without our prior knowledge or authorization or used it in contravention of the terms of this Agreement or outside its ordinary operating requirements), we will, at our sole option, repair or replace the Product, provided that you:(a)notify us in writing of the defect or fault in the Product within the Warranty Period; and(b)make available all the information that may be necessary to assist us in resolving the defect or fault, including sufficient information to enable us to recreate the defect or fault.8.4. Warranty Disclaimer. EXCEPT AS EXPRESSLY SET FORTH IN SECTION 8.1 (GENERAL WARRANTIES) AND 8.2 (VIRUS WARRANTY), ALL SOFTWARE, SUPPORT AND MAINTENANCE AND ANY ADDITIONAL SERVICES ARE PROVIDED “AS IS,” AND COMPANY AND ITS SUPPLIERS EXPRESSLY DISCLAIM ANY AND ALL WARRANTIES AND REPRESENTATIONS OF ANY KIND, INCLUDING ANY WARRANTY OF NON-INFRINGEMENT, TITLE, FITNESS FOR A PARTICULAR PURPOSE, FUNCTIONALITY, OR MERCHANTABILITY, WHETHER EXPRESS, IMPLIED, OR STATUTORY. COMPANY WILL NOT BE LIABLE FOR DELAYS, INTERRUPTIONS, SERVICE FAILURES OR OTHER PROBLEMS INHERENT IN USE OF THE INTERNET AND ELECTRONIC COMMUNICATIONS OR OTHER SYSTEMS OUTSIDE THE REASONABLE CONTROL OF COMPANY. TO THE MAXIMUM EXTENT PERMITTED BY LAW, NEITHER COMPANY NOR ANY OF ITS THIRD PARTY SUPPLIERS MAKES ANY REPRESENTATION, WARRANTY OR GUARANTEE AS TO THE RELIABILITY, TIMELINESS, QUALITY, SUITABILITY, TRUTH, AVAILABILITY, ACCURACY OR COMPLETENESS OF ANY SOFTWARE OR ANY CONTENT THEREIN OR GENERATED THEREWITH, OR THAT: (A) THE USE OF ANY SOFTWARE WILL BE SECURE, TIMELY, UNINTERRUPTED OR ERROR-FREE; (B) THE SOFTWARE WILL OPERATE IN COMBINATION WITH ANY OTHER HARDWARE, SOFTWARE, SYSTEM, OR DATA; (C) THE SOFTWARE (OR ANY PRODUCTS, SERVICES, INFORMATION, OR OTHER MATERIAL PURCHASED OR OBTAINED BY YOU THROUGH THE SOFTWARE) WILL MEET YOUR REQUIREMENTS OR EXPECTATIONS); (D) ERRORS OR DEFECTS WILL BE CORRECTED; OR (E) EXCEPT AS EXPRESSLY SET FORTH IN SECTION 8.2 (VIRUS WARRANTY), THE SOFTWARE IS FREE OF VIRUSES OR OTHER HARMFUL COMPONENTS. YOU MAY HAVE OTHER STATUTORY RIGHTS, IN WHICH CASE: (F) THE DURATION OF STATUTORILY REQUIRED WARRANTIES, IF ANY, WILL BE LIMITED TO THE SHORTEST PERIOD PERMITTED BY LAW; (G) YOUR ENTITLEMENT TO RELIEF IS LIMITED TO THOSE FORMS OF RELIEF REQUIRED BY STATUTE; AND (H) TO THE EXTENT PERMITTED BY LAW, THE FORM OF ANY RELIEF SHALL BE AT OUR DISCRETION.9. Liability9.1. Exclusions to Liability. Neither party (nor their suppliers or Affiliates) will have any liability (whether in contract, tort, strict liability or otherwise) arising out of or related to this agreement for:(a)any loss of profits, business, contracts, anticipated savings, goodwill, or revenue;(b)any loss, or corruption, of software or data;(c)any loss or use of hardware, software or data; or(d)any other indirect, special or consequential loss or damage whatsoever, even if the party has been advised in advance of the possibility of such loss or damage.9.2. Your Representations. You acknowledge and agree that:(a)the Products have not been developed to meet your individual requirements;(b)it is your responsibility to ensure that the facilities and functions of the Products meets your requirements;(c)you have made your own independent enquiries and have satisfied yourself of the nature and adequacy of our Products for the purpose for which you have obtained the Products.(d)the existence of any minor errors shall not constitute a breach of this Agreement; and(e)the provisions of Section 8 (Warranty), Section 9 (Liability) and Section 10 (IP Indemnification) are reasonable and reflected in the price, which would be much higher without those provisions, and you accept such risk.9.3. Liability Cap. Except to the extent that any law or regulation provides otherwise, our maximum aggregate liability under or in connection with this Agreement whether in contract, tort (including negligence), or otherwise is limited to the purchase price you paid for the Product, and any renewal fees, received by Company in the twelve (12) months prior to the event giving rise to the liability.10. IP IndemnificationIf any claim is brought, or you reasonably anticipate that a claim may be brought, against you alleging that your use of the intellectual property associated with the Products infringes a patent right granted in the United States, United Kingdom, Australia or a member nation of the European Union or a copyright registered in such a jurisdiction (a “claim”):(a)you shall promptly provide us written notice of the claim (but in any event notice in sufficient time for us to respond without prejudice);(b)the two of us shall consult together on an appropriate course of action and shall seek to minimize the effect of any claim on each other❜s businesses;(c)we shall have the right, but not the obligation, to take control of all negotiations and litigation arising out of the claim;(d)we will pay any damages and costs awarded against you in connection with any claim, however we are not and you agree not to hold us responsible or liable for any damages, costs, or expenses suffered or incurred by or awarded against you:(i)prior to your providing notice of the claim of under Section 10 (a);(ii)arising out of any act or omission by you or any of your Affiliates in respect of the claim without our prior and express written consent, including any admission or concession; or(iii)to the extent that any act or omission by you or any of your Affiliates in the course of your or their use of the Product caused or contributed to the infringement of the rights of the third party;(e)we shall have the right, at our sole choice, either:(i)to negotiate terms for continued use by you of the claimed infringing Product;(ii)amend the Product to make it non-infringing; or(iii)terminate this Agreement with immediate effect and in such event, we shall refund to you the purchase price that you paid and any renewal fees pro rated from the date of termination of this Agreement to the date which, had this Agreement not been terminated, would be the end of your License Term or Subscription Term,(f)our indemnification obligations in Section 10 DO NOT APPLY if:(i)the total aggregate fees received by Company from you, in the twelve (12) month period immediately preceding the claim, is less than USD $50,000; or(ii)you settle or make any admissions with respect to a claim without our prior written consent.THIS SECTION 10 STATES OUR SOLE LIABILITY AND OBLIGATIONS AND IS YOUR EXCLUSIVE REMEDY WITH RESPECT TO ANY CLAIM OF INFRINGEMENT OF INTELLECTUAL PROPERTY RIGHTS IN CONNECTION WITH ANY PRODUCTS SUPPLIED BY COMPANY UNDER THIS AGREEMENT.11. Transfer of Rights and ObligationsYou may not assign or transfer this Agreement without our prior written consent. As an exception to the foregoing, you may assign this Agreement in its entirety (including all Orders) to your successor resulting from your merger, acquisition, or sale of all or substantially all of your assets or voting securities, provided that you provide us with prompt written notice of the assignment and the assignee agrees in writing to assume all of your obligations under this Agreement (including liability for past performance). Any attempt by you to transfer or assign this Agreement except as expressly authorized above will be null and void.We may assign our rights and obligations under this Agreement (in whole or in part) without your consent. We may also permit our affiliates, agents and contractors to exercise our rights or perform our obligations under this Agreement, in which case we will remain responsible for their compliance with this Agreement. Subject to the foregoing, this Agreement will inure to the parties❜ permitted successors and assigns.12. ExportYou represent and warrant that you are not in violation of and will not violate any export control laws, regulations or directives in the United States, Australia, the United Kingdom, or in your own country or region (if applicable) by entering into or in the performance of your rights or obligations under this Agreement.13. PublicityWe may identify you as a customer in our promotional materials. We will promptly stop doing so upon your request via email sent to [email protected].14. NoticesAny notice under this Agreement must be given in writing. We may provide notice to you via email. You agree that any such electronic communication will satisfy any applicable legal communication requirements, including that such communications be in writing. Our notices to you will be deemed given upon the first business day after we send it. You will provide notice to us by email to: [email protected] with the title including ""LEGAL NOTICE"". Your notices to us will be deemed given upon our receipt.15. WaiverEither party❜s failure to insist upon strict performance of any obligations under this Agreement, or the failure to exercise any of the rights or remedies to which either party is entitled under this Agreement, does not constitute a waiver of such rights or remedies and shall not relieve either party from compliance with such obligations.Our waiver of any default shall not constitute a waiver of any subsequent default.A waiver of any of these terms and conditions shall not be effective unless it is expressly stated to be a waiver and is communicated to the other party in writing.16. SeverabilityIf any of the terms of this Agreement are determined by any competent authority to be invalid, unlawful or unenforceable to any extent, such term, condition or provision will to that extent be severed from the remaining terms, conditions and provisions which will continue to be valid to the fullest extent permitted by law.17. Changes to this Agreement17.1. Notice for changes. We may modify the terms and conditions of this Agreement from time to time, without notice given to you.17.2. Effective Date of Changes. If we make modifications to this agreement, the modifications will take effect at the next renewal of your License Term or Subscription Term, and will automatically apply as of the renewal date unless you elect not to renew pursuant to Section 3.3 (License Term and Renewals). In some cases ‑ e.g., to address compliance with Laws, or as necessary for new features ‑ we may specify that such modifications become effective during your then-current License or Subscription Term. If the effective date of such modifications is during your then-current License or Subscription Term and you object to the modifications, then (as your exclusive remedy) you may terminate your affected Orders upon notice to us, and we will refund to you any fees you have pre-paid for use of the affected Software for the terminated portion of the applicable License Term. To exercise this right, you must provide us with notice of your objection and termination within thirty (30) days of us publishing the modifications. For the avoidance of doubt, any Order is subject to the version of this Agreement in effect at the time of the Order.18. Entire AgreementThis Agreement constitutes the whole of the agreement between the parties. You agree that you have not relied on any statement, representation, assurance or warranty made by any person (including a third party) in entering into this Agreement. This Agreement supersedes all prior or contemporaneous oral or written communications, proposals and representations between you and us with respect to the Products or any other subject matter covered by this Agreement.19. Force MajeureNeither party is responsible or liable for any omission or delay under this Agreement where the omission or delay is caused by an event beyond the reasonable control of any party, including, but not limited to, act of God, natural disaster, war or invasion, terrorism or act of a public enemy, strikes and industrial disputes, embargo, prohibition, confiscation, act of government authority, or failure of telecommunications or data networks or services.20. Law and JurisdictionWhere either party may have a dispute or claim against the other party, each party:(a)agrees that the Agreement shall be interpreted in accordance with the applicable laws of the England and Wales, without reference to its conflict of laws principles from time to time;(b)submits to the exclusive jurisdiction and venue of London, England, and courts of appellate jurisdiction; and(c)consents to the enforcement of any judgment of the courts of London, England (and appellate courts) in any other jurisdiction.21. InterpretationIn this Agreement, unless the context otherwise requires:21.1. A reference to the singular includes the plural and the plural includes the singular.21.2. A reference to any contract (including this Agreement) or other instrument includes any variation or replacement of it and as it may be assigned or novated.21.3. A reference to a law includes subordinate legislation (including regulations) and other instruments under it and any amendment or replacement of any of them.21.4. A reference to a person or entity includes an individual, a firm, a body corporate, a trust, an unincorporated association or an authority.21.5. A reference to a person includes their legal personal representatives (including executors), administrators, successors, substitutes (including by way of novation) and permitted assigns.21.6. A reference to a day or a month means a calendar day or calendar month.21.7. No party enters into this Agreement as agent for any other person (or otherwise on their behalf or for their benefit). 21.8. The meaning of any general language is not restricted by any accompanying example, and the words “includes”, “including”, “such as”, “for example” or similar words are not words of limitation.21.9. Headings and the table of contents are for convenience only and do not form part of this Agreement or affect its interpretation.21.10. Where there are two or more persons in a party each are bound jointly and severally.Acceptable Usage PolicyCompany acceptable usage policy (""AUP"") is designed to prevent fraud and abuse of our services, to ensure that all customers receive acceptable access to our services, and to protect the quality and integrity of our services.The following is a non-exhaustive list of practices that would not be considered ""Legitimate Use"":(a)Using our services for unreasonable workloads we determine (in our sole discretion) to be unrelated to the deployment and maintenance of your own services;(b)Re-selling our services or parts thereof to another party;(c)Using our services in a manner we determine (in our sole discretion) could cause harm to our services or another party; or(d)Unusual usage patterns inconsistent with those we reasonably consider as normal use when compared to other customers.Other practices may be relevant in determining Legitimate Use and Company reserves the right to take any unlawful, prohibited, abnormal, or unusual activity into account in making its determination.If you use our services in any way which we reasonably determine (at our sole discretion) may be unlawful, prohibited, abnormal, unusual, or detrimental to our services or any of our other customers or other unrelated parties, we reserve the right to suspend or terminate your access without notice.We may monitor your account to check that this AUP is being followed. We may vary the terms of this AUP from time to time without notice, and will contact you using the details you've provided to inform you of the changes.Excessive UseExcessive use means you are exceeding one or more of the limitations allocated to your current subscription. These limitations are described on our detailed pricing page. We reserve the right to adjust these limitations from time to time without notice, and will contact you using the details you've provided to inform you of the changes.If your use of our services is excessive we may contact you using the contact details you've provided to request that you modify your usage practices, or change to a more appropriate subscription.If, after our request, your usage practices continue to be excessive, or you refuse to change to a more appropriate subscription, we may suspend or terminate your access to our services immediately without notice.Unreasonable useUnreasonable use of this service includes using it for purposes unrelated to the Customer Agreement intent, and any re-selling or wholesaling of our services, or parts thereof, to another party.If your use of our services is unreasonable, we may contact you using the contact details you have provided to ask that you change the way you use our services.If we consider your use unreasonable (at our sole discretion) we reserve the right to suspend or terminate your access to our services without any prior warning or notice.Privacy policyChanges to this Privacy PolicyWe may update this Privacy Policy from time to time by posting a new version online. You should check this page occasionally to review any changes.Contact UsIf you have any questions about this Privacy Policy or our treatment of the information you provide us, please write to us by email at [email protected]""Sensitive Information""This refers to credit or debit card numbers, personal financial account information, Social Security numbers, passport numbers, driver's license numbers or similar personal identifiers, racial or ethnic origin, physical or mental health condition or information, or other employment, financial or health information.""Personal Information""This refers to any information that you voluntarily submit to us and that identifies you personally, including contact information, such as your name, e-mail address, company name, address, phone number, and other information about yourself or your business. Personal Information can also include information about any transactions, both free and paid, that you enter into on the Websites, and information about you that is available on the internet, such as from Facebook, LinkedIn, Twitter and Google, or publicly available information that we acquire from service providers.""Navigational Information""This refers to information about your computer and your visits to this website such as your IP address, geographical location, browser type, referral source, length of visit and pages viewed.Payment InformationWe collect and process payment information from you when you subscribe to the Services, including credit cards numbers and billing information, using third party PCI-compliant service providers. Except for this, we do not collect Sensitive Information from you.We Never Sell Personal InformationWe will never sell your Personal Information to any third party.Use of Personal InformationIn addition to the uses identified elsewhere in this Privacy Policy, we may use your Personal Information to:(a)improve your browsing experience by personalizing the Websites and to improve the Services;(b)send information to you which we think may be of interest to you by post, email, or other means;(c)send you marketing communications relating to our business or the businesses of carefully-selected third parties which we think may be of interest to you,(d)provide other companies with statistical information about our users -- but this information will not be used to identify any individual user. We may, from time to time, contact you on behalf of external business partners about a particular offering that may be of interest to you. In those cases, we do not transfer your unique Personal Information to the third party. In addition, we may share data with trusted partners to contact you based on your request to receive such communications, help us perform statistical analysis, or provide customer support. Such third parties are prohibited from using your Personal Information except for these purposes, and they are required to maintain the confidentiality of your information.Use of Navigational InformationWe use Navigational Information to operate and improve the Websites and the Services.Customer Testimonials and CommentsWe post customer testimonials and comments on our Websites, which may contain Personal Information. We obtain each customer's consent via email prior to posting the customer's name and testimonial.Use of Credit Card InformationIf you give us credit card information, we use it solely to check your financial qualifications and collect payment from you. We use a third-party service provider to manage credit card processing. This service provider is not permitted to store, retain, or use information you provide except for the sole purpose of credit card processing on our behalf.Service ProvidersWe employ other companies and people to provide services to visitors to our Websites, our customers, and users of the Services and may need to share your information with them to provide information, products or services to you. Examples may include removing repetitive information from prospect lists, analyzing data, providing marketing assistance, processing credit card payments, supplementing the information you provide us in order to provide you with better service, and providing customer service. In all cases where we share your information with such agents, we explicitly require the agent to acknowledge and adhere to our privacy and customer data handling policies.Security of your Personal InformationWe use a variety of security technologies and procedures to help protect your Personal Information from unauthorized access, use or disclosure. We secure the Personal Information you provide on computer servers in a controlled, secure environment, protected from unauthorized access, use or disclosure. When sensitive Personal Information (such as a credit card number and/or geo-location data) is collected on our Websites and/or transmitted to other websites, it is protected through the use of encryption, such as the Secure Socket Layer (SSL) protocol.External WebsitesOur Websites provide links to other websites. We do not control, and are not responsible for, the content or practices of these other websites. Our provision of such links does not constitute our endorsement of these other websites, their content, their owners, or their practices. This Privacy Policy does not apply to these other websites, which are subject to any privacy and other policies they may have.Retention of Personal InformationWe retain Personal Information that you provide us as long as we consider it potentially useful in contacting you about the Services or our other services, or as needed to comply with our legal obligations, resolve disputes and enforce our agreements, and then we securely delete the information.International Transfer of InformationTo facilitate our global operations, we may transfer and access Personal Information from around the world, including the United States. This Privacy Policy shall apply even if we transfer Personal Information to other countries.Compelled DisclosureWe reserve the right to use or disclose your Personal Information if required by law or if we reasonably believe that use or disclosure is necessary to protect our rights, protect your safety or the safety of others, investigate fraud, or comply with a law, court order, or legal process.×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/legal#terms)"
626,cdn cgi l email protection#6f1c1a1f1f001d1b2f0c0006010e1f06410600,"cdn cgi l email protection#6f1c1a1f1f001d1b2f0c0006010e1f06410600.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 86784f2069b235cf •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://coinapi.io/cdn-cgi/l/email-protection#6f1c1a1f1f001d1b2f0c0006010e1f06410600)"
627,,". CoinAPI.io - Cryptocurrency API providerIntroducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inAll cryptocurrency APIs in one placeTake your crypto trading to the next level with CoinAPI collection of crypto APIs. Gain access to the best cryptocurrency market data insights and trade from a single place.Start building for freeContact salesTrusted our crypto data APIs:  Discover our crypto APIsMarket Data APIAccess real-time and historical price data, including latest quotes and trades, with no delays. Get order book-level information for top exchanges and currency pairs.Learn MoreEMS Trading APIConnect to multiple cryptocurrency exchanges with one account. Automate trades, interact with the trading system, or conduct transactions directly on exchanges.Learn MoreCryptoTickCryptoTick is a pay-per-service platform that makes it easy for non-API researchers to download cryptocurrency historical data in flat files.Learn MoreNode as a ServicePower your blockchain apps with reliable, scalable infrastructure. Choose from shared or dedicated nodes, and enjoy access to node monitoring, archive data, and smart contract deployment.On-Chain APIGain access to reliable and high-quality raw data across multiple blockchain protocols, providing valuable insights to power your applications.Why developers love us?We empower developers with tools and resources that streamline their workflow, allowing them to create innovative solutions faster and more efficiently.Unified EcosystemAccess a cohesive platform where all components work seamlessly together, eliminating compatibility headaches and streamlining your development process.Plug-and-Play SolutionsLeverage our modular architecture to rapidly build and customize your applications. Mix and match components to create tailored solutions effortlessly.Developer-Centric DesignExperience a platform built by developers, for developers. Our intuitive design and developer-first approach make complex tasks feel effortless.Uninterrupted ServiceOur distributed infrastructure have 100ms-level failover time. Standard SLA included to all subscriptions. Experience seamless operations, regardless of local disruptions.Our core valuesWhy Choose CoinAPI?Comprehensive API SuiteAccess our full range of financial data through a single, unified API ecosystem, simplifying integration and reducing development time.Tailored Data SolutionsFrom unique order types to proprietary exchange data, we support custom requests that go beyond standard offerings, adapting to your specific integration requirements.Real-time & interconnectsWe operate on proprietary infrastructure, ensuring the lowest latency and highest uptime in the industry. Our global network using UDP na BGP protocols to exchange data directly between our data centers and Customers.Real-time and historical data from all exchangesSeamlessly access both real-time and historical data from over 300 data sources in same format, enabling thorough market analysis and informed decision-making.Use casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesMike NasserSatstreet Trading Desk“CoinAPI is the perfect solution for real-time information sourced from all exchanges, offering user-friendly APIs for developers and investors.“Read Case Study →Chris A. TovmasianMarketDraft“CoinAPI empowers businesses with seamless integration, high precision, and reliable data, transforming them into crypto-ready powerhouses for effortless cryptocurrency tracking.“Read Case Study →Colin MackieBitcoin.tax“CoinAPI has been a very reliable service and provides us with exactly the data we need. We have been a customer since 2019 and expect to continue using the services in the future.“Read Case Study →Recent ArticlesEMS Trading APIHow to improve your high-frequency trading strategies in crypto?In crypto trading, High-Frequency Trading operates similarly to traditional markets but with some unique characteristics due to the...Market Data APIWhy is aggregated crypto data better?Some time ago we wrote blog posts about crypto data filtering and crypto data standardization – now it’s time to tell you more about...Market Data APIWhat are Meme Coins? Top 25 Funniest Examples and PricesLet’s have some fun! Because after all, who said that investing and entertainment shouldn’t come in pairs?...Market Data APICrypto data filteringAt 9:00 AM, with a cup of coffee in hand, you sit at your desk ready to trade crypto. Faced with an overwhelming amount of market data and...EMS Trading API3 Core Statistical Arbitrage Strategies in CryptoStatistical arbitrage, often abbreviated as “stat arb,” is a quantitative trading strategy that seeks to exploit inefficiencies...EMS Trading APIEMS Trading API vs Single Exchange Access – What’s better?Choosing the right trading tools is crucial for optimizing your strategy. This blog post delves into Execution Management Systems (EMS),...Market Data APIThe Role of Latency in Cryptocurrency DataLatency impacts everything from trade execution speed to market data accuracy in the cryptocurrency world. Learn why low latency is...Market Data APICryptocurrency Exchange RatesIn the world of cryptocurrencies, exchange rates are dynamic and influenced by various market factors. This post explains the concept of...Market Data APIHow to get Historical and Real-Time Crypto Data From Multiple Exchanges?With the rise of cryptocurrencies, there is a growing question: how to get historical and real-time crypto data from multiple...Crypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io)"
628,use case coinapi for crypto custody,"use case coinapi for crypto custody. Streamline Your Crypto Custody Process with CoinAPI - CoinAPI.ioIntroducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inCrypto CustodySecuring and managingdigital assets in custody servicesStart nowAddressing operational complexity in building a robust crypto custody solution.Building a crypto custody solution requires a significant amount of operational complexity. Custodians must implement a range of technical and operational procedures to manage keys, wallets, and transactions, and ensure the accurate reporting of holdings. Crypto API can help to simplify the development of a crypto custody solution by providing access to secure key management, transaction management, wallet management, reporting, analytics, and integration capabilities. This can help custodians to build a robust and secure platform for managing digital assets.What are the pain points when performing crypto custody?Spending a lot of time collecting data from various resourcesPoor data qualityManaging and validating transactions securelyThe need to securely create, manage, and backup cryptocurrency walletsA complex development process that requires to focus on security, a user-friendly, and scalable crypto custody solution that can meet the needs of users and comply with regulationsProviding accurate and detailed reporting for clients and regulatory bodiesIntegrating with different blockchains and technologiesFinding a trustworthy API partner with advanced infrastructure and functionality customization to meet customer’s specific needsHow CoinAPI could solve this issue?CoinAPI Products Used:Get access to real-time and historical crypto market dataAccess critical data and analytics for crafting crypto indices in real-timeTrack multiple cryptocurrencies' prices in one place instead of attaching data from different resourcesMonitor market trends and changesAccess to features like data filtering, aggregation, and transformation to improve data accessibility and usefulnessHigh-quality, normalized dataEasy access to structured data from multiple exchangesAccess to high-frequency exchange rates and unique low-frequency dataCoinAPI ensures data consistency across exchanges and assets for reliable insightsReduced development cost & timeDevelopers can easily implement APIs without dealing with multiple APIs themselvesCoinAPI enables seamless app integration for an efficient stackCoinAPI offers REST, WebSocket, and FIX protocols to facilitate faster integration between API and usersFast and seamless onboarding processEasy integration with third-party trading systemsQuick response timeTick-by-tick data for making day-to-day transactions and paymentsInteract with crypto data easily to focus on your own solution developmentFull API maintenanceLeverage CoinAPI's SDK to avoid API maintenanceCoinAPI aids in building feature-rich crypto wallet apps with seamless synchronizationAPI integration with CoinAPI unlocks new features and facilitates easy integrationWhy developers love us?We empower developers with tools and resources that streamline their workflow, allowing them to create innovative solutions faster and more efficiently.Unified EcosystemAccess a cohesive platform where all components work seamlessly together, eliminating compatibility headaches and streamlining your development process.Plug-and-Play SolutionsLeverage our modular architecture to rapidly build and customize your applications. Mix and match components to create tailored solutions effortlessly.Developer-Centric DesignExperience a platform built by developers, for developers. Our intuitive design and developer-first approach make complex tasks feel effortless.Uninterrupted ServiceOur distributed infrastructure have 100ms-level failover time. Standard SLA included to all subscriptions. Experience seamless operations, regardless of local disruptions.Our core valuesWhy Choose CoinAPI?Comprehensive API SuiteAccess our full range of financial data through a single, unified API ecosystem, simplifying integration and reducing development time.Tailored Data SolutionsFrom unique order types to proprietary exchange data, we support custom requests that go beyond standard offerings, adapting to your specific integration requirements.Real-time & interconnectsWe operate on proprietary infrastructure, ensuring the lowest latency and highest uptime in the industry. Our global network using UDP na BGP protocols to exchange data directly between our data centers and Customers.Real-time and historical data from all exchangesSeamlessly access both real-time and historical data from over 300 data sources in same format, enabling thorough market analysis and informed decision-making.Mike NasserSatstreet Trading Desk“CoinAPI is the perfect solution for real-time information sourced from all exchanges, offering user-friendly APIs for developers and investors.“Read Case Study →Chris A. TovmasianMarketDraft“CoinAPI empowers businesses with seamless integration, high precision, and reliable data, transforming them into crypto-ready powerhouses for effortless cryptocurrency tracking.“Read Case Study →Colin MackieBitcoin.tax“CoinAPI has been a very reliable service and provides us with exactly the data we need. We have been a customer since 2019 and expect to continue using the services in the future.“Read Case Study →Crypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/use-case/coinapi-for-crypto-custody)"
629,use case coinapi for crypto index providers,"use case coinapi for crypto index providers. Elevate Your Crypto Indices with CoinAPI's Data Accuracy and Comprehensive Coverage - CoinAPI.ioIntroducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inCrypto Index ProviderBuild indices that empowerthe cryptocurrency marketStart nowBuilding accurate crypto indices demands expertise in data analysis, risk management, and regulatory complianceThe cryptocurrency market is heavily reliant on indices to monitor the financial industry's movements. Building crypto indices platforms requires expertise in data analysis, risk management, and regulatory compliance to overcome challenges and provide accurate insights.What are the pain points when building and maintaining crypto indices?Unstructured, incomplete, and inaccurate dataLimited historical dataTime-consuming data collection from various resourcesIntegration with multiple APIs for a comprehensive market overviewComplex development process to ensure security and complianceFinding a trustworthy API partner with advanced infrastructure and customization optionsIntegration with multiple data providers for broad cryptocurrency coverageMaintenance of a large development teamHigh competition offering unique features and advanced functionalitiesHow CoinAPI could solve this issue?CoinAPI Products Used:Get access to real-time and historical crypto market dataAccess critical data and analytics for crafting crypto indices in real-timeTrack multiple cryptocurrencies' prices in one place instead of attaching data from different resourcesMonitor market trends and changesData accuracy and reliabilityCoinAPI sources data from trusted exchanges and providers, ensuring accuracy and reliability for crypto indicesData quality checks and validation processes maintain data integrity and reliabilityAccess real-time and up-to-date information through CoinAPI's data feedsExtensive data coverageCoinAPI provides access to exchanges, liquidity providers, and trading platforms, offering a wide range of data sources for crypto indicesHistorical data from 2015 onwards enables comprehensive analysis and backtesting of indicesExtensive coverage of diverse cryptocurrencies allows tracking and analysis of various digital assetsHigh-quality, normalized dataAccess structured data from multiple exchanges, simplifying integration and processingAccess high-frequency exchange rates, order books, and unique low-frequency dataGain comprehensive insights from aggregated data across multiple exchangesReduce the volatility of trading prices and present a more stable price pointCoinAPI reduces volatility and presents a more stable price pointCoinAPI minimizes price volatility and riskGain valuable insights with CoinAPI's data aggregation and analysis toolsIndex CustomizationCustomize indices based on goals and preferences with CoinAPIDefine criteria and methodology for precise index compositionAccess a variety of metrics and factors for tailored index creationSeamless integration and developer-friendly APIsCoinAPI offers well-documented APIs, including REST, WebSocket, and FIX protocols for seamless integrationAccess SDKs and code examples to simplify the integration processDevelopers can focus on core tasks with CoinAPI's user-friendly and straightforward APIsCustomization optionsCoinAPI enables custom index creation by selecting cryptocurrencies and metrics for weightingDefine criteria like market capitalization and trading volume for index compositionCustomize indices to align with unique investment goals and preferencesEnhanced security measuresCoinAPI prioritizes data security with industry-standard encryption protocolsAdheres to strict security practices, including data encryption and regular auditsEnsures user data remains protected, fostering trust in the platformWhy developers love us?We empower developers with tools and resources that streamline their workflow, allowing them to create innovative solutions faster and more efficiently.Unified EcosystemAccess a cohesive platform where all components work seamlessly together, eliminating compatibility headaches and streamlining your development process.Plug-and-Play SolutionsLeverage our modular architecture to rapidly build and customize your applications. Mix and match components to create tailored solutions effortlessly.Developer-Centric DesignExperience a platform built by developers, for developers. Our intuitive design and developer-first approach make complex tasks feel effortless.Uninterrupted ServiceOur distributed infrastructure have 100ms-level failover time. Standard SLA included to all subscriptions. Experience seamless operations, regardless of local disruptions.Our core valuesWhy Choose CoinAPI?Comprehensive API SuiteAccess our full range of financial data through a single, unified API ecosystem, simplifying integration and reducing development time.Tailored Data SolutionsFrom unique order types to proprietary exchange data, we support custom requests that go beyond standard offerings, adapting to your specific integration requirements.Real-time & interconnectsWe operate on proprietary infrastructure, ensuring the lowest latency and highest uptime in the industry. Our global network using UDP na BGP protocols to exchange data directly between our data centers and Customers.Real-time and historical data from all exchangesSeamlessly access both real-time and historical data from over 300 data sources in same format, enabling thorough market analysis and informed decision-making.Mike NasserSatstreet Trading Desk“CoinAPI is the perfect solution for real-time information sourced from all exchanges, offering user-friendly APIs for developers and investors.“Read Case Study →Chris A. TovmasianMarketDraft“CoinAPI empowers businesses with seamless integration, high precision, and reliable data, transforming them into crypto-ready powerhouses for effortless cryptocurrency tracking.“Read Case Study →Colin MackieBitcoin.tax“CoinAPI has been a very reliable service and provides us with exactly the data we need. We have been a customer since 2019 and expect to continue using the services in the future.“Read Case Study →Crypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/use-case/coinapi-for-crypto-index-providers)"
630,market data api pricing,"market data api pricing. CoinAPI - Market Data API - PricingToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inMarket Data APIEMS Trading APICryptoTickFlexible Plans Tailored to Your Data NeedsMonthlyAnnualFREESTARTUPSTREAMERPROENTERPRISEFREE$0monthlyStart for free100 daily requestsFREE$0monthlyStart for free 100 daily requestsSTARTUP$79monthlySubscribe All from Free package1k daily requestsTrades only WebSocketNo access FIX ProtocolSTREAMER$249monthlySubscribe All from Startup package10k daily requestsTrades + Quotes WebSocketNo access FIX ProtocolPRO$599monthlySubscribe All from Streamer package100k daily requestsUnlimited WebSocketUnlimited FIX ProtocolENTERPRISECustompurpose-built for businessLet's talk All features of lower packagesSLAIntegration assistanceCustom featuresCompare plans and featuresFREEPrice$0REST Credits Quota100/dayReal-time dataSupportEmailPremium SupportWebSockets AccessWebSockets Trade DataWebSockets Quote DataWebSockets Book AccessFIX ProtocolSLA StandardSLA CustomIntegration assistanceDedicated infrastructureCustom featuresHistory data in flat filesFREESTARTUPSTREAMERPROENTERPRISEPrice$0$79$249$599Let's discussREST Credits Quota100/day1k/day10k/day100k/dayCustomReal-time dataSupportEmailEmailEmailEmailSlack+EmailPremium SupportWebSockets AccessWebSockets Trade DataWebSockets Quote DataWebSockets Book AccessFIX ProtocolSLA StandardSLA CustomIntegration assistanceDedicated infrastructureCustom featuresHistory data in flat filesOf course we accept payments in crypto! Add Service Credits via Customer Portal.Bank wire payment is available, contact support for more information.Prices for usage above the quota of your planAPI Credits UsagePriceFirst 100 credits/dayFREE Next 900 credits/day5.26$ / 1k credits Next 2k credits/day2.63$ / 1k credits Next 7k credits/day1.73$ / 1k credits Next 20k credits/day0.83$ / 1k credits Next 70k credits/day0.40$ / 1k credits Next 200k credits/day0.20$ / 1k credits Next 600k credits/day0.13$ / 1k credits Next 2100k credits/day0.09$ / 1k credits Next 5mln credits/day0.06$ / 1k credits Next 17mln credits/day0.04$ / 1k credits Greater than 25mln credits/day0.03$ / 1k credits ×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/market-data-api/pricing)"
631,use case coinapi crypto api analytics,"use case coinapi crypto api analytics. Streamline Your Crypto Analytics with the Power of CoinAPI - CoinAPI.ioIntroducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inAnalyticsLeverage CoinAPIfor effective crypto analyticsStart nowWhether you're an analyst tackling crypto market trends or an enterprise building a crypto analytics platform, managing blockchain complexity is a significant challenge.Building a crypto analytics platform can be challenging due to the unique characteristics of the cryptocurrency market and the complexity of blockchain technology. Building a crypto analytics platform requires a deep understanding of blockchain technology, data science, and machine learning, as well as the ability to collect and process vast amounts of data accurately and efficiently.What are the pain points when building or performing crypto analytics?Unstructured, incomplete, and inaccurate dataLack of historical dataIntegration with plenty of APIs to get a full overview of the marketLack of data normalizationProblem with market volatilityHigh level of competitors that offers unique features and advanced functionalitiesLimited data sourcesRegulatory complianceSecurity and privacyHow CoinAPI could solve this issue?CoinAPI Products Used:Reliable, high quality real-time streamlined dataClean and accurate data integration with structured and standardized market data APIsReal-time data access for informed decision-makingWide range of digital assets and growth opportunitiesDiverse services for asset management, trading, research, analysis, and portfolio managementComprehensive data coverageExtensive exchange coverage for comprehensive crypto analysisAccess liquidity providers and trading platforms for deeper insightsWide range of data sources for in-depth analysis and multiple perspectivesData normalization and standardizationStreamline data analysis with CoinAPI's data normalization servicesSave time and effort with standardized data fields and formatsOptimize your analytics processes with CoinAPI's consistent data presentationSimple data access with easy integrationStreamline analytics with easy data access, saving time and effortSeamless interaction and access for developers, focusing on application developmentAvoid expenses and time loss by eliminating the need for hiring developersScalable infrastructureFast and reliable real-time data access for analyticsScalable architecture to meet growing analytics demandsRobust infrastructure for high-performance real-time insightsRegulatory complianceReliable data from compliant exchanges for regulatory complianceAccurate reporting, risk assessment, and complianceTrustworthy and compliant data sources for peace of mindTechnical support and documentationExtensive technical documentation for seamless API integrationResponsive customer support for timely assistanceSmooth integration and ongoing support for enhanced user experienceContinuous updates and improvementsContinuous service enhancements based on user feedback and industry trendsRegular updates and added features to keep your crypto analytics capabilities currentStay ahead of the curve with CoinAPI's commitment to ongoing improvementsWhy developers love us?We empower developers with tools and resources that streamline their workflow, allowing them to create innovative solutions faster and more efficiently.Unified EcosystemAccess a cohesive platform where all components work seamlessly together, eliminating compatibility headaches and streamlining your development process.Plug-and-Play SolutionsLeverage our modular architecture to rapidly build and customize your applications. Mix and match components to create tailored solutions effortlessly.Developer-Centric DesignExperience a platform built by developers, for developers. Our intuitive design and developer-first approach make complex tasks feel effortless.Uninterrupted ServiceOur distributed infrastructure have 100ms-level failover time. Standard SLA included to all subscriptions. Experience seamless operations, regardless of local disruptions.Our core valuesWhy Choose CoinAPI?Comprehensive API SuiteAccess our full range of financial data through a single, unified API ecosystem, simplifying integration and reducing development time.Tailored Data SolutionsFrom unique order types to proprietary exchange data, we support custom requests that go beyond standard offerings, adapting to your specific integration requirements.Real-time & interconnectsWe operate on proprietary infrastructure, ensuring the lowest latency and highest uptime in the industry. Our global network using UDP na BGP protocols to exchange data directly between our data centers and Customers.Real-time and historical data from all exchangesSeamlessly access both real-time and historical data from over 300 data sources in same format, enabling thorough market analysis and informed decision-making.Mike NasserSatstreet Trading Desk“CoinAPI is the perfect solution for real-time information sourced from all exchanges, offering user-friendly APIs for developers and investors.“Read Case Study →Chris A. TovmasianMarketDraft“CoinAPI empowers businesses with seamless integration, high precision, and reliable data, transforming them into crypto-ready powerhouses for effortless cryptocurrency tracking.“Read Case Study →Colin MackieBitcoin.tax“CoinAPI has been a very reliable service and provides us with exactly the data we need. We have been a customer since 2019 and expect to continue using the services in the future.“Read Case Study →Crypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/use-case/coinapi-crypto-api-analytics)"
632,blog what are meme coins,"blog what are meme coins. CoinAPI Blog - What are Meme Coins? Top 25 Funniest Examples and Prices Introducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inMarket Data APIWhat are Meme Coins? Top 25 Funniest Examples and PricesLet’s have some fun! Because after all, who said that investing and entertainment shouldn’t come in pairs? Today we will abandon the images native to Wall Street in the 1970s. Zero elegant gentlemen in hats, suits, and with briefcases in hand. Instead, a lot of crazy doggies, sad hamsters, and toads. We will take a look into the world of gaming, as well as the… the adult film industry. Although, we’ll still talk about coins, business, and investments. From the following text, you will learn: what is the definition of meme coin 25 meme coin examples with stories behind them and prices how to easily collect data on their current and historical prices on various exchanges.  What is a meme coin? Definition A meme coin is a type of cryptocurrency that is inspired by internet memes, jokes, or pop culture references. These coins are typically created as a form of satire or humor, but they have gained significant attention and value in the crypto market due to their viral nature and community-driven promotion. Here are some key characteristics of meme coins: Key characteristics of meme coins Humorous or satirical origin Meme coins often start as jokes or parodies of other cryptocurrencies. For example, Dogecoin was created as a parody of Bitcoin, featuring the Shiba Inu dog from the “Doge” meme​. Community-driven The success of meme coins largely depends on the community that supports and promotes them. This can lead to high volatility as their value is often driven by social media trends and viral marketing rather than intrinsic utility​​. High volatility Meme coins are known for their dramatic price fluctuations. Their value can surge or plummet rapidly based on market sentiment and online hype​ – like when Elon Musk tweeted​ about Pepe Coin firing a coin value toward the moon. Low or no fundamental utility Many meme coins don’t have significant use cases or technological advancements. They primarily rely on their viral appeal and community engagement​. However, we’ll prove in this article that this doesn’t apply to all meme coins. Some promote environmental and charitable initiatives, others use the modern Play-to-Earn mechanism and some carry ground-breaking technology. Speculative Nature Investing in meme coins is highly speculative. While some investors have seen massive returns, the majority of meme coins can also lead to significant losses due to their volatile nature​. Important! The meme coin prices listed below are for June 2024 and are approximate. Why so? First, because the prices of each cryptocurrency sometimes vary on different exchanges. Secondly, even if you are reading this article right after its publication, in the world of cryptocurrencies light years have passed and prices may have changed many times. But don’t worry, because if you want, you can track live cryptocurrency prices, for example, thanks to the Market Data API, which we’ll tell you more about at the end of this article. Ok, now let’s go on a journey through the crazy land of meme coins! 1. Dogecoin (DOGE) Dogecoin (DOGE) was created in December 2013 by software engineers Billy Markus and Jackson Palmer. Initially conceived as a joke or a “fun” cryptocurrency, it was inspired by the popular “Doge” meme featuring a Shiba Inu dog. The creators aimed to create a more approachable and less serious alternative to Bitcoin. Despite its humorous origins, Dogecoin quickly developed a strong and active community. The coin gained mainstream attention, particularly due to endorsements from high-profile figures like Elon Musk, who frequently tweeted about Dogecoin, significantly impacting its price and popularity (after the first tweet, it soared 20%). One word: Doge — Elon Musk (@elonmusk) December 20, 2020 In addition, Elon’s Tesla introduced Dogecoin as one of the available means of payment. Over time, Dogecoin has been used for various charitable causes and crowdfunding efforts, further boosting its community engagement and visibility in the crypto market. Blockchains and exchanges Blockchains: Native Dogecoin blockchain Exchanges: Binance, Coinbase, Kraken, Huobi, OKEx, Bittrex, and Robinhood. Dogecoin price Price: Approximately USD 0.14 Market Cap: Approximately USD 19.02 billion Trading Volume (24h): Approximately USD 1.2 billion 2. Shiba Inu (SHIB) Shiba Inu (SHIB) was created in August 2020 by an anonymous individual or group known as “Ryoshi.” The coin was designed as a direct competitor to Dogecoin, earning the nickname “Dogecoin killer.” The reason behind the creation of Shiba Inu was to capitalize on the popularity of dog-themed cryptocurrencies and the growing trend of meme coins. Upon its launch, Shiba Inu quickly gained traction, driven by its community and a series of strategic marketing campaigns. The coin’s popularity surged when Ethereum co-founder Vitalik Buterin donated a significant portion of his SHIB holdings to a COVID-19 relief fund in India, and burned the remaining tokens, effectively reducing the circulating supply. The market reacted positively to these moves, leading to massive price increases and widespread adoption within the crypto community. Shiba Inu also introduced its own decentralized exchange, ShibaSwap, further enhancing its ecosystem and utility. Blockchains and exchanges Blockchains: Ethereum (ERC-20) Exchanges: Binance, Coinbase, KuCoin, Huobi, OKEx, Uniswap, and ShibaSwap. Shiba Inu – current price Price: Approximately USD 0.000021. (Note: Prices fluctuate frequently, please check the latest price on a reliable exchange or financial website.) Market Cap: Approximately USD 10.61 billion Trading Volume (24h): Approximately USD 580.99 million​ 3. Polkadot (DOT) Polkadot (DOT) was created by Dr. Gavin Wood, one of the co-founders of Ethereum and the former CTO of the Ethereum Foundation. Polkadot aims to solve some of the most significant challenges in blockchain technology, including scalability, interoperability, and security. Launched in May 2020, Polkadot is designed to enable different blockchains to transfer messages and value in a trust-free fashion; it allows for cross-chain transfers of any type of data or asset, not just tokens. This makes it a heterogeneous multi-chain framework. Polkadot’s core mission is to establish a web where our data is our own and isn’t stored on servers owned by internet companies. The network employs a unique sharding technology called “parachains,” which are multiple parallel blockchains connected to the Polkadot Relay Chain. This design improves scalability and enables high transaction throughput. Polkadot’s governance model is also innovative, allowing token holders to have a say in the protocol’s direction, including updates and fixes without hard forks. Since its inception, Polkadot has gained significant market traction, becoming one of the top cryptocurrencies by market capitalization Blockchains and exchanges Blockchains: Polkadot network Exchanges: Binance, Coinbase, Kraken, Huobi, OKEx, Bitfinex, Bittrex, KuCoin, and others Polkadot price Price: Approximately USD 5.00 (as of the latest update) Market Cap: Approximately USD 6.01 billion Trading Volume (24h): Approximately USD 230 million 4. Base Dawgz Base Dawgz (DAWGZ) is a multi-chain meme coin inspired by the Shiba Inu meme, designed to capitalize on the vibrant culture of meme coins. It was launched in 2024 and quickly gained traction due to its unique features and the backing of a strong community. Base Dawgz aims to differentiate itself by being a multi-chain token that operates across Ethereum, Solana, Binance Smart Chain, and Avalanche, allowing for wider adoption and increased visibility among investors. The project incorporates a novel share-to-earn strategy where users can earn points by sharing DAWGZ-related content on social media, which can later be converted into additional DAWGZ tokens. Furthermore, the token plans to introduce a staking protocol to generate passive income for holders while enhancing network security and price stability​. Blockchains and exchanges Blockchains: Base Chain, Ethereum (ERC-20), Solana, Binance Smart Chain, Avalanche Exchanges: Currently in presale, expected to list on various decentralized and centralized exchanges post-presale​ Base Dawgz price Base Dawgz’s price is approximately USD 0.00479 during the presale phase. 5. PlayDoge (PLAY) PlayDoge (PLAY) is a mobile-based play-to-earn (P2E) game that integrates the popular Doge meme with a Tamagotchi-style virtual pet concept. It was created to offer a nostalgic gaming experience while allowing players to earn cryptocurrency by caring for their virtual Doge pets. Players can feed, train, and play with their digital Doge, earning $PLAY tokens through various in-game activities and mini-games. The game also features a leaderboard where top performers can earn additional rewards and bonuses. Since its launch, PlayDoge has attracted significant attention, raising over $200,000 in its initial presale phase, and aims to raise a total of $24.4 million through its presale rounds. PlayDoge is a mobile-based play-to-earn (P2E) game that integrates the popular Doge meme with a Tamagotchi-style virtual pet concept. Blockchains and exchanges Blockchain: Binance Smart Chain (BSC) Exchanges: Currently in presale and not yet listed on major exchanges. Post-presale, it is expected to be available on decentralized exchanges (DEXs) on the Binance Smart Chain. PlayDoge price Because the PlayDoge is still in the presale phase, market cap and trading volume are unavailable yet. The presale price of the coin is approximately USD 0.00509.  6. Pikamoon (PIKA) Pikamoon is a meme coin and play-to-earn (P2E) gaming token that was launched with the vision of revolutionizing the web3 gaming space. The project was conceived in November 2022 by three friends who were avid gamers, inspired by iconic games like Pokémon. They aimed to create a AAA-grade P2E game that offers a community-focused, decentralized alternative to traditional gaming. Pikamoon allows players to build and customize parties from different elemental types and species, engage in battles, explore vast game worlds, and participate in the metaverse. The token integrates gaming and NFT elements, providing players with various ways to earn and trade within the ecosystem. Blockchains and exchanges Blockchain: Ethereum (ERC-20) Exchanges: Uniswap V2 (Ethereum), Bitget, MEXC, BitMart​ Pikamoon price Price: Approximately USD 0.39 Market Cap: Approximately USD 3.95 million (fully diluted) Trading Volume (24h): Approximately USD 374 7. Sponge V2 (SPONGE) Sponge V2 (SPONGE) is the second iteration of the Sponge meme coin, originally inspired by the beloved cartoon character SpongeBob SquarePants. It was created to build on the success of its predecessor, which achieved significant milestones in the meme coin market. Sponge V2 aims to merge the fun and engagement of a meme coin community with a unique staking model and a play-to-earn (P2E) game. This iteration launched on the Polygon network, enabling lower transaction fees and positioning itself to achieve substantial gaming utility. The anonymous founding team actively promotes the coin on social media platforms such as Twitter, Telegram, and Discord, engaging with the community to drive its success. Sponge V2’s goal is to increase its market cap to $1 billion, attract over 100,000 holders, and secure listings on top-tier exchanges​. Blockchains and exchanges Blockchain: Polygon Exchanges: Uniswap (V3), Gate.io, Poloniex, Bitget, MEXC Sponge V2 price Price: Approximately USD 0.000126 Market Cap: Approximately USD 18.83 million (fully diluted) Trading Volume (24h): Approximately USD 107,424 8. Jeo Boden (BODEN) Jeo Boden (BODEN) is a meme coin inspired by a humorous misspelling of U.S. President Joe Biden’s name, created to parody the political landscape. It was launched to leverage the viral nature of political memes and has quickly gained traction within the cryptocurrency community. The coin aims to unify people through humor and counter divisive political claims, often poking fun at various political events and figures. Since its inception, Jeo Boden has seen significant price fluctuations, reflecting the speculative and community-driven nature of meme coins. Its market performance has been notable, with peaks and troughs driven by social media trends and community engagement. Blockchains and exchanges Blockchain: Solana Exchanges: Kraken, CoinEx, Raydium, Poloniex, and Jupiter Jeo Boden price Price: Approximately USD 0.11 Market Cap: Approximately USD 76.15 million (fully diluted market cap) Trading Volume (24h): Approximately USD 13.20 million 9. Bonk (BONK) Bonk (BONK) is the first dog-themed meme coin on the Solana blockchain, launched on December 25, 2022. It was designed with a community-first approach, aiming to rejuvenate liquidity on Solana’s decentralized exchanges and serve as a medium of exchange within the ecosystem. The founders of Bonk remain anonymous, and there is no comprehensive whitepaper available; however, a one-pager and “bonk-paper” are provided for investors, detailing token distribution and integration information. Bonk gained substantial attention and popularity due to its unique airdrop strategy, where 50% of the total supply was distributed to Solana users, including artists, creators, and active community members. Blockchains and exchanges Blockchain: Solana Exchanges: Huobi, MEXC, Bybit, Bitget, Gate.io, Poloniex, Orca, LBank, BKEX, CoinEx, BitMart, Bitrue, DigiFinex, XT.COM, BingX​ Bonk price Price: Approximately USD 0.0000224 Market Cap: Approximately USD 1.53 billion Trading Volume (24h): Approximately USD 246.7 million 10. Sad Hamster (HAMMY) Sad Hamster (HAMMY) is a meme coin launched to commemorate a beloved hamster. The coin quickly gained attention within the crypto community due to its humorous and relatable theme. The token aims to create a vibrant and engaging community, leveraging the meme culture that has proven successful for other tokens like Dogecoin and Shiba Inu. Despite its light-hearted origin, Sad Hamster has faced significant volatility in its market performance. It reached an all-time high of $0.07312 on May 18, 2024, but has since seen substantial declines, reflecting the speculative nature of meme coins. Blockchains and exchanges Blockchain: Solana Exchanges: Orca, Meteora, Jupiter​ Sad Hamster price Price: Approximately USD 0.011 Market Cap: Approximately USD 8.93 million (fully diluted market cap) Trading Volume (24h): Approximately USD 2.07 million 11. Piza Coin (PIZA) Piza Coin (PIZA), also known as HalfPizza, is a meme coin designed for entertainment purposes with no intrinsic value or expected financial return. The project gained attention due to its humorous and playful nature, aiming to bring fun into the cryptocurrency space. It was launched on the Binance Smart Chain and has integrated features like token mining, NFT minting, and decentralized finance (DeFi) tools such as PIZAswap. The platform encourages community participation through engaging activities, including a Bitcoin price guessing game. Despite its light-hearted origins, Piza Coin has faced significant price volatility, reflecting the speculative nature of meme coins. Blockchains and exchanges Blockchain: Binance Smart Chain Exchanges: BitMart, Gate.io, BingX, Tapbit, AscendEX (BitMax), UniSat Piza Coin price Price: Approximately USD 0.2011 Market Cap: Approximately USD 4.22 million (fully diluted market cap) Trading Volume (24h): Approximately USD 446,635 12. Popcat (POPCAT) Popcat (POPCAT) is a meme coin inspired by the viral internet meme featuring a cat with a large, wide-open mouth, popularly known as “Popcat.” Launched on the Solana blockchain, Popcat aims to capitalize on the popularity of cat-themed memes and the broader meme coin trend. The project quickly gained traction due to its engaging theme and the vibrant community it built around the meme. Popcat’s purpose extends beyond humor, aiming to create a platform for community interaction and entertainment through its tokenomics and various meme-related activities. Blockchains and exchanges Blockchain: Solana Exchanges: BitMart, Gate.io, BingX, Tapbit, AscendEX (BitMax), UniSat, XT.COM, CoinEx, Raydium, Poloniex, NovaDAX Popcat price Price: Approximately USD 0.26 Market Cap: Approximately USD 254.22 million Trading Volume (24h): Approximately USD 26.32 million 13. Wojak (WOJAK) Wojak (WOJAK) is a decentralized meme coin inspired by the popular internet meme character Wojak, which is known for its expressive and often relatable cartoonish face depicting various emotions. The coin was launched to create a decentralized platform that leverages the viral nature of memes to connect people globally. Wojak enables users to engage in a variety of activities including trading, buying, and selling memes, and participating in community-driven events. The project aims to build a secure and transparent ecosystem for meme enthusiasts, ensuring a user-friendly experience with robust security protocols. Since its launch, Wojak has garnered significant attention and built a strong community, which has contributed to its dynamic market performance​. Blockchains and exchanges Blockchain: Ethereum (ERC-20) Exchanges: Gate.io, MEXC, BitMart, Uniswap V2 (Ethereum), LBank, CoinEx, XT.COM, Bitget, Huobi Wojak price Price: Approximately USD 0.000940 Market Cap: Approximately USD 58.88 million Trading Volume (24h): Approximately USD 7.03 million 14. Eggdog (EGG) Eggdog (EGG) is a meme coin inspired by the popular internet meme featuring a 3D model of a dog shaped like an egg, often depicted in various humorous scenarios. The meme originated from a video titled “Meet Eggdog” by YouTuber Zamsire, which quickly gained popularity. Following this, several other Eggdog videos were created, contributing to the meme’s viral status. The Eggdog cryptocurrency leverages this viral meme culture to build a community-driven project. The token aims to engage users through its humorous and relatable theme, encouraging a vibrant and interactive community. Blockchains and exchanges Blockchain: Solana Exchanges: Raydium, BingX, MEXC, XT.COM, Poloniex, Jupiter Eggdog price Price: Approximately USD 0.000708 Market Cap: Approximately USD 669,528 Trading Volume (24h): Approximately USD 17,550 15. Pepega (PEPEGA) Pepega (PEPEGA) is a meme coin inspired by the popular Twitch emote “Pepega,” which features a distorted version of the Pepe the Frog character. This coin was launched with the intent of embodying the fun and whimsical aspects of internet culture. Pepega aims to build a vibrant and engaged community by leveraging its humorous and relatable theme. Despite its playful nature, Pepega has seen significant price volatility, typical of meme coins, driven by social media trends and community enthusiasm. Blockchains and exchanges Blockchain: Ethereum (ERC-20) Exchanges: Uniswap V2 (Ethereum), where it can be traded with the PEPEGA/WETH pair​ 16. PooCoin (POOCOIN) PooCoin (POOCOIN) is a token on the Binance Smart Chain (BSC) designed to provide advanced charting and portfolio management tools specifically for BSC tokens. The platform includes features such as real-time trading data, transaction tracking, and the ability to view the entry points of trades directly on the chart. Sounds serious for a coin depicting poo, right? Additionally, PooCoin offers unique functionalities like a rug check feature to verify the integrity of tokens, a dev wallet checker, and a swapping option for tokens directly on the app. PooCoin charges an 8% fee on transactions, with 4% being redistributed to holders and 4% being burned to create a deflationary effect. This model aims to incentivize holding and reduce the overall supply over time​.  Blockchains and exchanges Blockchain: Binance Smart Chain (BEP-20) Exchanges: Available on decentralized exchanges like PancakeSwap (V2) PooCoin price Price: Approximately USD 0.39 Market Cap: Approximately USD 3.95 million (fully diluted) Trading Volume (24h): Approximately USD 374 17. Kangamoon (KANG) Kangamoon (KANG) is a community-driven meme coin that blends SocialFi and Play-to-Earn (P2E) elements, aiming to create an engaging and interactive ecosystem for its users. Launched with the vision of integrating gaming with decentralized finance, Kangamoon allows participants to earn rewards through various in-game activities and social interactions. The project focuses on building a strong community of meme enthusiasts who can interact, grow, and earn together. The presale has been highly successful, surpassing $1 million, indicating significant interest and potential for growth in the market Blockchains and exchanges Blockchain: Ethereum (ERC-20) Exchanges: Kangamoon is currently in its presale phase and not yet available on major exchanges. Once the presale concludes, it will be listed on various centralized exchanges (CEXs) and decentralized exchanges (DEXs). Kangamoon’s price and the market price are not available yet. 18. CumRocket (CUMMIES) CumRocket (CUMMIES) is a meme coin launched in April 2021, designed to revolutionize the adult content industry. It operates a creator subscription platform similar to OnlyFans but focuses on providing more authentic connections between creators and their fans. The platform allows users to build meaningful connections with creators, who are often real individuals rather than agency-managed or AI-operated accounts. CumRocket has attracted attention for its unique niche and the potential for significant returns driven by community interest and speculative trading​. Blockchains and exchanges Blockchain: Binance Smart Chain (BEP-20) Exchanges: PancakeSwap (V2), Gate.io​ CumRocket price Price: Approximately USD 0.00699 Market Cap: Approximately USD 9.22 million Trading Volume (24h): Approximately USD 237,576 19. Mog coin (MOG) Launched in the summer of 2023, Mog Coin started as a simple meme shared among friends and quickly evolved into a cultural phenomenon. The project aims to foster a community-driven platform where users can engage in the creation and appreciation of memes. This approach serves financial utility and enhances community cohesion and cultural expression. Mog Coin leverages its humorous and viral content to build a dedicated community, setting itself apart from other meme coins through its distinct focus on humor and cultural impact​. Blockchains and exchanges Blockchain: Ethereum (ERC-20) Exchanges: Gate.io, MEXC, BingX, Uniswap V3, Bitget, XT.COM, BitMart, CoinEx​ Mog coin price Price: Approximately USD 0.0000009 Market Cap: Approximately USD 310.88 million Trading Volume (24h): Approximately USD 24.73 million 20. Monkas (MONKAS) Monkas (MONKAS) is a meme coin inspired by the popular “MonkaS” emote, which depicts a nervous-looking Pepe the Frog, commonly used on platforms like Twitch and Discord to convey anxiety or suspense. Launched as a humorous tribute to this internet icon, Monkas aims to create a community-driven cryptocurrency project that leverages the viral appeal of memes. The coin has quickly garnered attention due to its engaging theme and the widespread popularity of the MonkaS meme. Despite its whimsical origins, Monkas has seen substantial price volatility, typical of meme coins driven by social media and community hype. Blockchains and exchanges Blockchain: Ethereum (ERC-20) Exchanges: Uniswap (V3), MEXC, BingX, Bitget, XT.COM, CoinEx​ Monkas price Price: Approximately USD 0.000009 Market Cap: Approximately USD 3.38 million (fully diluted market cap) Trading Volume (24h): Approximately USD 341,057 21. Sealana (SEAL) Sealana (SEAL) is a meme coin launched on the Solana blockchain, featuring an overweight seal mascot that humorously depicts a dedicated but unkempt crypto trader. The coin was created to capitalize on the growing trend of meme coins on Solana, aiming to attract a community of traders with its relatable and engaging narrative. Since its launch, Sealana has gained significant attention and popularity, especially during its presale phase, where it raised over $265,000 within a few days. The coin’s presale success and its strong community engagement suggest the potential for substantial growth once it becomes available on more exchanges​. Blockchains and exchanges Blockchain: Solana, with plans to support Ethereum as well Exchanges: Currently available in presale, expected to list on Solana-based decentralized exchanges (DEXs) and potentially centralized exchanges like Gate.io and LBank after the presale​ Sealana price Sealana’s price is approximately USD 0.02 during the presale phase. 22. Floki (FLOKI) Floki (FLOKI) is a decentralized cryptocurrency inspired by Elon Musk’s Shiba Inu dog named Floki. Initially launched as a meme coin, Floki has evolved into a comprehensive web3 project with significant utility. The project aims to create a decentralized ecosystem encompassing NFTs, decentralized finance (DeFi), and a gaming metaverse called Valhalla. Valhalla is a play-to-earn game where players can earn FLOKI tokens by participating in various in-game activities, such as battling creatures, farming, and completing quests. The Floki community, known as the “Floki Vikings,” actively supports the project, which distinguishes itself from other meme coins by focusing on practical applications and long-term sustainability​. Blockchains and exchanges Blockchains: Ethereum (ERC-20), Binance Smart Chain (BEP-20) Exchanges: Available on major exchanges including Binance, Huobi, Gate.io, Bybit, Uniswap (V2), PancakeSwap (V2), and Bitget​ Floki price Price: Approximately USD 0.000170 Market Cap: Approximately USD 1.66 billion Trading Volume (24h): Approximately USD 300.89 million​ 23. Dogelon Mars (ELON) Dogelon Mars (ELON) is a meme coin launched in 2021, thematically inspired by Elon Musk, Dogecoin, and the concept of space exploration. The coin’s narrative follows a character named Dogelon, a dog who explores the galaxy and aims to recolonize Mars. This storyline is depicted in a series of comic strips available on the project’s website, adding a unique and engaging element to the token. Unlike many meme coins that lack substantial utility, Dogelon Mars has built a significant community around its humorous and speculative nature. Blockchains and exchanges Blockchains: Ethereum (ERC-20), Polygon Exchanges: Uniswap (V2 & V3), OKEx, Gate.io, Bitget, LBank, Crypto.com Dogelon Mars price Price: Approximately USD 0.000000173 Market Cap: Approximately USD 95.59 million Trading Volume (24h): Approximately USD 2.02 million 24. WienerAI (WAI) WienerAI (WAI) is a meme coin that combines elements of artificial intelligence (AI) with a playful Dachshund (commonly known as a wiener dog) mascot. The project launched with a unique narrative where the mascot is part dog, part AI, and part sausage, aiming to become the “top dog” in the meme coin space. WienerAI differentiates itself from other meme coins by leveraging AI technology and a distinctive storyline. The presale for WienerAI has been highly successful, raising over $600,000 within a short period. The project offers significant staking rewards, boasting an annual percentage yield (APY) of over 1,000%, attracting many early investors​. Blockchains and exchanges Blockchain: Ethereum (ERC-20) Exchanges: Currently in presale; future listings expected on major decentralized exchanges (DEXs) and possibly centralized exchanges (CEXs) post-presale. WienerAI price WienerAI price is approximately USD 0.000702. However the project is still in pre-sale phase. 25. Smog (SMOG)  Smog  is an environmentally-focused meme coin that integrates its meme-based appeal with a commitment to environmental sustainability. The project incorporates several eco-friendly initiatives and aims to raise awareness about environmental issues while providing financial incentives to its community. Smog’s tokenomics are designed to support environmental initiatives. A portion of the transaction fees and staking rewards are allocated to funding eco-friendly projects and charities. The project emphasizes community participation, offering significant incentives for holding and staking SMOG tokens. The Smog platform includes a play-to-earn (P2E) component where users can participate in a mining game, earning rewards and accessing an NFT marketplace. Smog’s narrative includes a dramatic element of battling and incinerating other cryptocurrencies, creating an engaging and entertaining user experience. Smog was launched in early 2024 on the Solana blockchain. Blockchains and exchanges Blockchain: Solana Exchanges: MEXC, Uniswap V3, Raydium Smog price Price: Approximately USD 0.0318 Market Cap: Approximately USD 24.49 million Trading Volume (24h): Approximately USD 164,181 How to create your meme coin? Creating your meme coin is simpler than it sounds, and you don’t need to be a tech genius to do it. Here’s a step-by-step guide to help you get started: 1. Conceptualize your meme coin First, you need a fun and catchy concept. Think about a meme or a funny idea that resonates with people. Maybe it’s inspired by a popular meme, a quirky idea, or even a funny animal. Like a beaver. 2. Choose a blockchain platform Decide where you want to launch your coin. Ethereum (ERC-20 tokens), Solana, and Binance Smart Chain (BEP-20 tokens) are popular choices because they have a lot of support and tools to make the process easier. They also provide high-speed transactions and scalability. 3. Create the token You can use online tools to create your token without any deep programming knowledge: TokenMint or CoinTool: These websites let you create tokens with just a few clicks. Ethereum and BSC: If you’re more tech-savvy, you can write a simple smart contract using Solidity for Ethereum or Binance Smart Chain. 4. Set up the token parameters Decide on the name, symbol, total supply, and decimals (how divisible your token is). For example, “DogeDollars” (DOGE$) with a total supply of 1,000,000,000 tokens. Plan how the tokens will be distributed initially (e.g., presale, airdrop, team allocation). 5. Deploy the Smart Contract Testnet deployment: Test your smart contract on a testnet like Ropsten (Ethereum) or BSC Testnet. Mainnet deployment: Once you’re happy with the test, deploy your token on the mainnet. You’ll need some ETH or BNB for gas fees. 6. Spread the word Create a website and social media profiles to promote your coin. Engage with communities on Reddit, Twitter, and Telegram. Memes thrive on community engagement.  Start by listing your token on decentralized exchanges (DEX) like Uniswap (for Ethereum) or PancakeSwap (for BSC).  As your coin gains traction, aim to list it on larger exchanges like Binance or Coinbase. 7. Compliance and security Last but not least, ensure your token complies with local regulations to avoid legal issues. You can ask a reputable firm to make security audit to ensure there are no vulnerabilities. Meme coins market data – how to get it? Mostly it’s simple. To get historical data, for example, for research purposes, you can use Cryptotick – market data in flat files. It’s an ideal choice for technical and non-technical users seeking comprehensive crypto historical data from all exchanges. It provides quotes, trades, OHLCV, and order book snapshots. Here are some of its key features: Data format and storage The data is stored in compressed (gzip highest available compression level) ASCII text files in CSV format. This ensures efficient storage and easy accessibility. File split methodology Data is organized efficiently, with each data type split into single files per symbol and trading day (UTC). This organization facilitates easy access and analysis. Access and authorization For Amazon S3 and Google GCP bucket upload options, CryptoTick requires specific authorization settings. For Amazon S3, disable the ACL in the object ownership section and attach the provided bucket policy. For Google GCP, add the service account [email protected] with storage admin access. Sample data availability CryptoTick provides sample data files for various data types, allowing users to evaluate the data quality and format. These samples cover a range of data types like quotes, trades, limit book snapshots, and OHLCV data. For both, historical and real-time data on meme coins you can also use Market Data API which actively collects millions of data points, tick by tick, from over 350 cryptocurrency exchanges. This includes order books, executed transactions, quotes, and OHLCV data. The data is collected using REST, WebSocket, and FIX API protocols depending on what each exchange supports. To address inconsistencies across different exchanges, our API provides crypto data standardization. To start, go to the Pricing section and select a plan. You are also welcome to contact us if you need assistance in choosing the best option for you.  Stay up-to-date with the latest CoinApi News.SendI Agree to CoinApi’s Privacy Policy*Recent ArticlesEMS Trading APIHow to improve your high-frequency trading strategies in crypto?In crypto trading, High-Frequency Trading operates similarly to traditional markets but with some unique characteristics due to the...Market Data APIWhy is aggregated crypto data better?Some time ago we wrote blog posts about crypto data filtering and crypto data standardization – now it’s time to tell you more about...Market Data APIWhat are Meme Coins? Top 25 Funniest Examples and PricesLet’s have some fun! Because after all, who said that investing and entertainment shouldn’t come in pairs?...Market Data APICrypto data filteringAt 9:00 AM, with a cup of coffee in hand, you sit at your desk ready to trade crypto. Faced with an overwhelming amount of market data and...EMS Trading API3 Core Statistical Arbitrage Strategies in CryptoStatistical arbitrage, often abbreviated as “stat arb,” is a quantitative trading strategy that seeks to exploit inefficiencies...EMS Trading APIEMS Trading API vs Single Exchange Access – What’s better?Choosing the right trading tools is crucial for optimizing your strategy. This blog post delves into Execution Management Systems (EMS),...Market Data APIThe Role of Latency in Cryptocurrency DataLatency impacts everything from trade execution speed to market data accuracy in the cryptocurrency world. Learn why low latency is...Market Data APICryptocurrency Exchange RatesIn the world of cryptocurrencies, exchange rates are dynamic and influenced by various market factors. This post explains the concept of...Market Data APIHow to get Historical and Real-Time Crypto Data From Multiple Exchanges?With the rise of cryptocurrencies, there is a growing question: how to get historical and real-time crypto data from multiple...Crypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/blog/what-are-meme-coins)"
633,blog the power of crypto api on dex,"blog the power of crypto api on dex. CoinAPI Blog - The power of crypto API on DEX Introducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inMarket Data APIThe power of crypto API on DEXDecentralized Exchanges (DEXs) like Uniswap, Dodo, Balancer, and Sushi are P2P marketplaces that have gained massive popularity recently. They are committed to maintaining the core value of crypto trading – no central authority controls it. Trading on them might be more difficult than regular CEX. That’s why the best market data API input for DEX is so important. Why do you need a great market data API for DEX? Understanding the dynamics of DEXs and the crypto market at large requires reliable, real-time data. That’s where cryptocurrency API comes into play. Those APIs provide a simple, effective way to gather and analyze information from these exchanges, to better inform your trading strategies. Access DEX Data with REST, WebSocket, and FIX APIs We provide the same protocols – REST API, WebSocket API, and FIX API – for Decentralized Exchanges (DEX) and Centralized Exchanges (CEX). The core of our product is to offer extensive, flexible, and complete market data across all cryptocurrency exchanges. CoinAPI’s Market Data API & DEX As part of our commitment to providing comprehensive data solutions, we offer a robust cryptocurrency API that supports several DEXs including: DODOEX-V2-ARBITRUM SUSHISWAP-V2-ARBITRUM UNISWAP-V3-ARBITRUM BALANCER-V2-ETHEREUM CURVE-FINANCE-ETHEREUM SUSHISWAP-V2-ETHEREUM UNISWAP-V2-ETHEREUM UNISWAP-V3-ETHEREUM What does our crypto API deliver? Our API for crypto delivers real-time data, including: Symbols SpotAssetBase SpotAssetQuote Prices Transactions tradeamount tradeprice Summary Leverage our crypto API with the power of cryptocurrency historical and real-time data to stay ahead. Our comprehensive crypto APIs give you all the data you need to make informed trading decisions. Don’t believe us? Read our case studies and find out! Stay up-to-date with the latest CoinApi News.SendI Agree to CoinApi’s Privacy Policy*Recent ArticlesMarket Data APIThe power of crypto API on DEXDecentralized Exchanges (DEXs) are peer-to-peer marketplaces without a central authority, growing in popularity with examples like Uniswap...EMS Trading APIHow CoinAPI crypto trading API enhances crypto trading efficiency?Today, crypto traders face challenges like limited liquidity causing slippage and difficulty in executing large orders without affecting...NewsCoinAPI January update: NaaS, new website, Market Data API on QuickNode marketplaceCoinAPI January update features some exciting info about our future developments such as NaaS...Market Data APIHow does CoinAPI maximize the effectiveness of crypto trading bots?Crypto trading bots are essential for trading on the dynamic cryptocurrency market. They need the best data for the best outcomes, though....Market Data APICrypto tax API: Discover the future of crypto tax management with CoinAPIAs tax return deadlines approach in various countries worldwide, traders and investors are struggling with the complexities of reporting...CryptoTickA guide to using Cryptotick for crypto historical dataDid you know that CoinAPI, beyond API products, offers a streamlined solution for those seeking easy access to historical crypto data?...Market Data APIThe future of trading: How cryptocurrency API is changing the gameAs we move from 2023 into 2024, CoinAPI cements its role as a global leader in the cryptocurrency API space. With the launch of our EMS...EMS Trading APICoinAPI update: Cryptocurrency trading API and new integrationsThis month, CoinAPI is proud to launch our cryptocurrency trading API, alongside key partnerships with Quicknode. We’ve also expanded...Market Data APICoinAPI’s cryptocurrency data API guideThis guide is your comprehensive resource for understanding the various CoinAPI’s Cryptocurrency data API offerings available for...Bring the power of crypto API to your business in minutesStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsEMS Trading APIMarket Data APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/blog/the-power-of-crypto-api-on-dex)"
634,blog cryptocurrency exchange rates,"blog cryptocurrency exchange rates. CoinAPI Blog - Cryptocurrency Exchange Rates Introducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inMarket Data APICryptocurrency Exchange RatesIn the traditional world of fiat money, an exchange rate is simply “the rate at which the money of one country can be changed for the money of another country”[1]. However, in the world of cryptocurrencies, which aren’t really tied or officially controlled by any country, the definition needs some adjustment. Let’s break it down! What are crypto exchange rates? In the crypto context, an exchange rate can be explained as both: The value at which: One cryptocurrency can be exchanged for another – e.g. BTC to ETH A cryptocurrency can be exchanged for a fiat currency – e.g. SOL to USD   These rates are dynamic. They can change based on market supply and demand, similar to traditional currencies. External factors like market sentiment, economic news, regulatory changes, technological developments, trends, and many others (e.g. Dogecoin’s rise after endorsement from Elon Musk) can cause these changes as well. 💡 An exchange rate is always a pair of assets e.g. BTC/SOL or ETH/EUR. What is the difference between the exchange rate and price? These terms can be confusing because they’re often used interchangeably. Exchange rate The value of one (crypto)currency compared to another. Used in trading and converting assets. For example, if the BTC/ETH exchange rate is 20, one Bitcoin can be exchanged for 20 ETH. Price The value of a single unit of a cryptocurrency in terms of fiat currency or another cryptocurrency. For example, if Bitcoin is priced at $30,000, one Bitcoin is worth $30,000. Types of Crypto Exchange Rates Different types of exchange rates exist based on asset pairs, timing, data sources, and calculation methods. When choosing an exchange rate platform, it’s essential to understand these differences. Free-floating vs Fixed Free-floating exchange rate: the value of a crypto dictated by market supply and demand without direct intervention of a central authority. Most cryptocurrencies operate like that. Example: Bitcoin to US dollar (BTC/USD); Ethereum to Euro (ETH/EUR)  Fixed exchange rate: A fixed exchange rate, also known as a pegged exchange rate, is one where the value of a cryptocurrency is tied to another currency, commodity, or cryptocurrency. An example is Tether (USDT), which is pegged to the US Dollar, aiming to maintain a 1:1 value ratio. Example: Tether to US dollar (USDT/USD); USD Coin to US dollar (USDC/USD) Spot vs Forward value Spot rate (cash value): The spot rate is the current market price at which a cryptocurrency can be bought or sold for immediate delivery. For instance, if you check the current price of Ethereum (ETH) on an exchange like Binance, that price is its spot rate. Example: Spot price of Bitcoin on an exchange  Forward value rate: The forward rate is an agreed-upon and predicted price for a cryptocurrency transaction that will occur at a future date. Forward contracts are often used to hedge against price volatility. For example, a trader might agree to buy Bitcoin at a set price in three months to avoid potential price spikes. Example: Bitcoin forward futures contract Single vs Aggregated Single exchange rate: This is the rate provided by a single exchange platform. The price might vary significantly between different platforms due to differences in supply and demand. For example, the price of Bitcoin on Coinbase might differ from its price on Kraken at any given time. Example: Cardano price on Coinbase  Aggregated exchange rate: An aggregated exchange rate combines prices from multiple exchanges to provide an average rate. This approach aims to give a more balanced and accurate view of the market. Services like CoinGecko or CoinAPI often use aggregated exchange rates to present a more comprehensive market price. Example: Bitcoin price via Market Data API; Ethereum aggregated price on CoinMarketCap VWAP vs VWAP-24H vs Order book Volume-Weighted Average Price (VWAP): It is a trading benchmark that gives the average price a cryptocurrency has traded at throughout the day, based on both volume and price. It provides traders with insight into the market trend and the average price they might expect to pay Example: Bitcoin VWAP on Kraken Volume-Weighted Average Price 24H (VWAP-24H): Similar to VWAP, but calculated over a 24-hour period. This gives a broader view of the average trading price over a full day, which is useful for traders looking to understand longer-term trends. Example: Solana VWAP-24H via Market Data API Order book analysis: This involves examining the list of buy and sell orders on an exchange’s order book to understand market sentiment and liquidity. The order book can show where the majority of buy or sell orders are clustered, indicating potential support or resistance levels. Example: Litecoin order book on Bitfinex How are exchange rates calculated? There are many ways an exchange or data source can estimate or calculate an exchange rate. Some people focus on the Simple Moving Average (SMA), or just the average or median value from a specific period. One of the most common and reliable methods of exchange rate calculation is to use the VWAP (Volume Weighted Average Price) over the last 24 hours, known as VWAP-24H. To make the method even more accurate the value should be calculated based on the data from multiple exchanges (aggregated data). Aggregated data gives us the overlook of the entire market, and eliminates potential errors that could occur on a single exchange. Example of Volume-Weighted Average Price (VWAP) Calculation calculation Let’s imagine that this simple order book below represents real data that we’ll calculate right now. Buy Orders (Bids) Price (USD) Amount (BTC)  69,800 0.5 69,850 0.7 69,900 1.0 Sell Orders (Asks) Price (USD) Amount (BTC)  70,000 0.3 70,050 0.6 70,100 0.8 We have three “Buy Orders” and the same amount of “Sell Orders”. Again it’s a simple example that’s supposed to show the thought behind the equation. Usually, we have hundreds or thousands of records to calculate from. Source: Tradewell.app Step-by-step VWAP calculation The sum of (Price × Volume) for all trades: First, we have to take all of the amounts sold (Volume) and multiply it by the price in USD.(69,800×0.5)+(69,850×0.7)+(69,900×1.0)+(70,000×0.3)+(70,050×0.6)+(70,100×0.8) = 34,900+48,895+69,900+21,000+42,030+56,080=272,805 The sum of Volumes: Then we just sum up the volumes.0.5+0.7+1.0+0.3+0.6+0.8=3.9 VWAP CalculationThe only thing left is to take the sum of (Volume x Price) and divide it by VolumeVWAP=272,805/3.9=69,950 So, the VWAP for BTC/USD is approximately $69,950 CoinAPI’s Market Data API We base our exchange rate calculation on the VWAP-24H method, multiple data sources, and protocols (e.g. REST API and Websocket) to calculate the exchange rate, we carefully manage the data sources to have even higher-quality data. Here’s how the algorithm works: Data Sources: Only legitimate data from spot markets are used. Filtering: Data with large spreads or outdated quotes (over 5 minutes old) are discarded. Price Calculation: Midpoint prices from quotes are weighted by trade volumes. Regular Updates: The VWAP is updated every second, and the 24-hour volume for each symbol is refreshed every 4 hours. Data Quality: Only the highest-ranked exchanges are included, and outliers (3 sigma range) are excluded if enough data points exist. Final Rate: A tree structure and our proprietary method finalize the exchange rates. Our exchange rates are accurately delivered data from many data sources. The goal behind creating such a feature was to eliminate the need to check the price on separate exchanges and have an aggregated and more resilient overlook of a crypto market. Examples of Market Data API’s exchange rate requests Get all current rates This request retrieves the current exchange rate between the requested asset and all other assets. It provides a snapshot of the market at a specific time, helping traders and investors understand the current value of their assets. { ""asset_id_base"": ""BTC"", ""rates"": [   {    ""time"": ""2024-05-23T12:10:20.0000000Z"",    ""asset_id_quote"": ""USD"",    ""rate"": 69981.772240612035520805593223   },   {    ""time"": ""2024-05-23T12:10:20.0000000Z"",    ""asset_id_quote"": ""EUR"",    ""rate"": 64477.807053889507677355109199   },  {   {    ""time"": ""2024-05-23T12:10:20.0000000Z"",    ""asset_id_quote"": ""CNY"",    ""rate"": 505596.2762323691855012123533   },   {    ""time"": ""2024-05-23T12:10:20.0000000Z"",    ""asset_id_quote"": ""GBP"",    ""rate"": 54899.932493658899152080312809   } ] } Timeseries data This request provides historical exchange rates between two assets over time. It helps analyze trends, make informed trading decisions, and understand the historical performance of assets. [  {   ""time_period_start"": ""2024-05-20T00:00:00.0000000Z"",   ""time_period_end"": ""2024-05-20T00:01:00.0000000Z"",   ""time_open"": ""2024-05-20T00:00:00.0000000Z"",   ""time_close"": ""2024-05-20T00:00:00.0000000Z"",   ""rate_open"": 66266.8776650577,   ""rate_high"": 66266.8776650577,   ""rate_low"": 66266.8776650577,   ""rate_close"": 66266.8776650577  },  {   ""time_period_start"": ""2024-05-20T00:01:00.0000000Z"",   ""time_period_end"": ""2024-05-20T00:02:00.0000000Z"",   ""time_open"": ""2024-05-20T00:01:00.0000000Z"",   ""time_close"": ""2024-05-20T00:01:00.0000000Z"",   ""rate_open"": 66266.1186767057,   ""rate_high"": 66266.1186767057,   ""rate_low"": 66266.1186767057,   ""rate_close"": 66266.1186767057  },  {   ""time_period_start"": ""2024-05-20T00:02:00.0000000Z"",   ""time_period_end"": ""2024-05-20T00:03:00.0000000Z"",   ""time_open"": ""2024-05-20T00:02:00.0000000Z"",   ""time_close"": ""2024-05-20T00:02:00.0000000Z"",   ""rate_open"": 66254.1070498383,   ""rate_high"": 66254.1070498383,   ""rate_low"": 66254.1070498383,   ""rate_close"": 66254.1070498383  }, ] } Timeseries periods This request retrieves historical exchange rates for any asset pair, grouped into specific time periods. It is useful for backtesting trading strategies and analyzing asset performance over different intervals. [ {  ""period_id"": ""1SEC"",  ""length_seconds"": 1,  ""length_months"": 0,  ""unit_count"": 1,  ""unit_name"": ""second"",  ""display_name"": ""1 Second"" }, {  ""period_id"": ""30MIN"",  ""length_seconds"": 1800,  ""length_months"": 0,  ""unit_count"": 30,  ""unit_name"": ""minute"",  ""display_name"": ""30 Minutes"" }, {  ""period_id"": ""10DAY"",  ""length_seconds"": 864000,  ""length_months"": 0,  ""unit_count"": 10,  ""unit_name"": ""day"",  ""display_name"": ""10 Days"" } ] Get specific rate This request retrieves the exchange rate for a specific base and quotes assets at a given time or the current rate. It is useful for applications that need real-time or historical exchange rate data for specific asset pairs. {  ""time"": ""2024-05-23T12:25:21.0000000Z"",  ""asset_id_base"": ""BTC"",  ""asset_id_quote"": ""USD"",  ""rate"": 69856.447113757912606998861527 } Summary Exchange rates are one of the most valuable tools for market analysis and trading. In the crypto world, where data changes even more quickly and values are more volatile, accurate exchange rates are even more important. It is essential to understand the differences between the types of exchange rates and how they are calculated. Our Market Data API brings together the best features of all exchange rates to offer accurate and reliable cryptocurrency exchange rates. It collects data from many high-quality sources to cover the whole market and reduce errors. The API filters out old or unusual data and updates the rates regularly to keep up with market changes. Using advanced calculations like Volume-Weighted Average Price (VWAP), our Market Data API provides precise and dependable exchange rates, helping traders and investors make smart decisions in the fast-changing world of cryptocurrencies. Find out other valuable features of our Market Data API on our product page or see the documentation. Stay up-to-date with the latest CoinApi News.SendI Agree to CoinApi’s Privacy Policy*Recent ArticlesEMS Trading APIHow to improve your high-frequency trading strategies in crypto?In crypto trading, High-Frequency Trading operates similarly to traditional markets but with some unique characteristics due to the...Market Data APIWhy is aggregated crypto data better?Some time ago we wrote blog posts about crypto data filtering and crypto data standardization – now it’s time to tell you more about...Market Data APIWhat are Meme Coins? Top 25 Funniest Examples and PricesLet’s have some fun! Because after all, who said that investing and entertainment shouldn’t come in pairs?...Market Data APICrypto data filteringAt 9:00 AM, with a cup of coffee in hand, you sit at your desk ready to trade crypto. Faced with an overwhelming amount of market data and...EMS Trading API3 Core Statistical Arbitrage Strategies in CryptoStatistical arbitrage, often abbreviated as “stat arb,” is a quantitative trading strategy that seeks to exploit inefficiencies...EMS Trading APIEMS Trading API vs Single Exchange Access – What’s better?Choosing the right trading tools is crucial for optimizing your strategy. This blog post delves into Execution Management Systems (EMS),...Market Data APIThe Role of Latency in Cryptocurrency DataLatency impacts everything from trade execution speed to market data accuracy in the cryptocurrency world. Learn why low latency is...Market Data APICryptocurrency Exchange RatesIn the world of cryptocurrencies, exchange rates are dynamic and influenced by various market factors. This post explains the concept of...Market Data APIHow to get Historical and Real-Time Crypto Data From Multiple Exchanges?With the rise of cryptocurrencies, there is a growing question: how to get historical and real-time crypto data from multiple...Crypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/blog/cryptocurrency-exchange-rates)"
635,use case coinapi for algo trading crypto bot,"use case coinapi for algo trading crypto bot. Supercharge Your Algo Trading and Crypto Bots with CoinAPI - CoinAPI.ioIntroducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inAlgo tradingEmpower your cryptocurrencyBots with our rapid API setupStart nowBuilding a crypto bot demands mastering market volatility, handling complex data, and maintaining high-speed operationsBuilding crypto bots or implementing algo trading poses significant challenges due to the volatile nature of the cryptocurrency market. Gathering, integrating, and analyzing reliable, real-time data, along with managing the complex software infrastructure, can be laborious. Ensuring low latency is vital in the high-speed world of algorithmic trading; even slight delays in data processing or trade execution can lead to missed opportunities or unexpected losses.What are the pain points when when performing algorithmic trading?Complex and time-consuming exchange API integration due to unique requirementsLimited arbitrage and diversification opportunities due to variable market coverage across exchangesLack of normalized dataProfitability constraints due to high fees for premium data and advanced trading featuresTime-intensive data collection detracting from bot development and trading tasksChallenges in scaling systems with evolving trading strategies and increasing data volumesLack of reliable real-time and historical price and volume dataUnstructured, incomplete, and inaccurate dataHow CoinAPI could solve this issue?CoinAPI Products Used:Get access to real-time and historical crypto market dataTrack market fluctuations in real-timeTrack multiple cryptocurrencies' prices in one place instead of attaching data from different resourcesAccess to features like data filtering, aggregation, and transformation to improve data accessibility and usefulnessAccess faster trades per secondHigh-quality, normalized dataAccess structured data from multiple exchanges, simplifying integration and processingAccess high-frequency exchange rates, order books, and unique low-frequency dataGain comprehensive insights from aggregated data across multiple exchangesFast and seamless onboarding processEasy integration with third-party trading systemsTick-by-tick data for making day-to-day transactions and paymentsInteract with crypto data easily to focus on your own solution developmentNo need to hire a developer and pay for their maintenance and updates for integration module, saving time and expenses Reduced development cost & timeDevelopers can easily implement APIs without dealing with multiple APIs themselvesCoinAPI enables seamless app integration for an efficient stackCoinAPI offers REST, WebSocket, and FIX protocols to facilitate faster integration between API and usersReduce the volatility of trading prices and present a more stable price pointCoinAPI reduces volatility and presents a more stable price pointCoinAPI minimizes price fluctuation risk and downside risk by pre-determining the maximum payable amountFull API maintenanceLeveraging CoinAPI's SDK to eliminate API maintenanceSynchronize cryptocurrency wallet with the ecosystem using CoinAPISpeed up feature unlocking and functionality through streamlined API integrationWhy developers love us?We empower developers with tools and resources that streamline their workflow, allowing them to create innovative solutions faster and more efficiently.Unified EcosystemAccess a cohesive platform where all components work seamlessly together, eliminating compatibility headaches and streamlining your development process.Plug-and-Play SolutionsLeverage our modular architecture to rapidly build and customize your applications. Mix and match components to create tailored solutions effortlessly.Developer-Centric DesignExperience a platform built by developers, for developers. Our intuitive design and developer-first approach make complex tasks feel effortless.Uninterrupted ServiceOur distributed infrastructure have 100ms-level failover time. Standard SLA included to all subscriptions. Experience seamless operations, regardless of local disruptions.Our core valuesWhy Choose CoinAPI?Comprehensive API SuiteAccess our full range of financial data through a single, unified API ecosystem, simplifying integration and reducing development time.Tailored Data SolutionsFrom unique order types to proprietary exchange data, we support custom requests that go beyond standard offerings, adapting to your specific integration requirements.Real-time & interconnectsWe operate on proprietary infrastructure, ensuring the lowest latency and highest uptime in the industry. Our global network using UDP na BGP protocols to exchange data directly between our data centers and Customers.Real-time and historical data from all exchangesSeamlessly access both real-time and historical data from over 300 data sources in same format, enabling thorough market analysis and informed decision-making.Mike NasserSatstreet Trading Desk“CoinAPI is the perfect solution for real-time information sourced from all exchanges, offering user-friendly APIs for developers and investors.“Read Case Study →Chris A. TovmasianMarketDraft“CoinAPI empowers businesses with seamless integration, high precision, and reliable data, transforming them into crypto-ready powerhouses for effortless cryptocurrency tracking.“Read Case Study →Colin MackieBitcoin.tax“CoinAPI has been a very reliable service and provides us with exactly the data we need. We have been a customer since 2019 and expect to continue using the services in the future.“Read Case Study →Crypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/use-case/coinapi-for-algo-trading-crypto-bot)"
636,use case coinapi for crypto portfolio management,"use case coinapi for crypto portfolio management. Master Crypto Portfolio Management with CoinAPI - CoinAPI.ioIntroducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inPortfolio ManagementTrack the day-to-day performanceof your crypto assetsStart nowEnsuring a scalable and secure system that can handle real-time data integration, processing, and analysis for diverse financial instruments, while providing an intuitive user interface.The challenge in building crypto portfolio management is effectively handling diverse and volatile cryptocurrencies, tracking performance, and ensuring secure asset storage. Whether you’re building your first portfolio or you’ve been in crypto for years, CoinAPI aims to give you a simpler, smarter way to get crypto data with insights.What are the pain points when performing portfolio management?Lack of tick-by-tick data for active portfolio management where every millisecond mattersManaging and integrating large volumes of financial data from diverse sources in real-timeUnstructured, incomplete, and inaccurate dataIntegration with plenty of data providers to cover a wide range of cryptocurrency dataA complex development process that requires to focus on security, a user-friendly, and scalable portfolio management that can meet the needs of users and comply with regulationsSystem ScalabilityBuilding, validating, and implementing complex financial models for portfolio managementProperly assessing, quantifying, and managing the various types of investment risksKeeping up with the latest technology trends like artificial intelligence, machine learning, blockchain technology, etc., to enhance the platform's capabilitiesHow CoinAPI could solve this issue?CoinAPI Products Used:Data ManagementComprehensive source of cryptocurrency data, including real-time and historical pricesMonitor all assets from one placeMarket fluctuations in real-timeSupport for 500+ exchanges and 10,000+ cryptocurrenciesInstitutional Client ServiceDeep expertise in digital assets, traditional capital markets, security, and technologyPartnership with clients to deliver tailored solutions meeting unique requirementsPrioritization of understanding each client's specific goals, risk tolerance, and operational needsAutomated portfolio trackingReal-time tracking of market value, investment performance, and portfolio allocationUnified transaction history across all crypto services, searchable and filterableEffective building of sophisticated financial models with detailed data from CoinAPIAdvanced analytics for identifying trends, assessing risk, and data-driven decision makingSystem ScalabilityCoinAPI's cloud-based solution ensures scalability for increasing data volume and user loadAs an API, CoinAPI integrates with various systems and tools in portfolio managementEfficient data delivery and processing maintain high performance under heavy load for seamless user experienceSecurity and ComplianceSecure data transmission and storage provided by CoinAPIRobust encryption measures implemented for additional data securityCompliance with global regulatory updates for cryptocurrency transactionsRisk ManagementBroad coverage of cryptocurrencies with CoinAPI for risk assessment and managementUse of CoinAPI data for comprehensive reports on performance, market analysis, and risk evaluationReal-time market monitoring with CoinAPI data for swift risk mitigationPerformance AttributionUse of detailed historical and real-time data from CoinAPI for performance attributionCustomized analytics based on CoinAPI data for dissecting performanceFunctionality for comparing portfolio performance against indices or custom benchmarksWhy developers love us?We empower developers with tools and resources that streamline their workflow, allowing them to create innovative solutions faster and more efficiently.Unified EcosystemAccess a cohesive platform where all components work seamlessly together, eliminating compatibility headaches and streamlining your development process.Plug-and-Play SolutionsLeverage our modular architecture to rapidly build and customize your applications. Mix and match components to create tailored solutions effortlessly.Developer-Centric DesignExperience a platform built by developers, for developers. Our intuitive design and developer-first approach make complex tasks feel effortless.Uninterrupted ServiceOur distributed infrastructure have 100ms-level failover time. Standard SLA included to all subscriptions. Experience seamless operations, regardless of local disruptions.Our core valuesWhy Choose CoinAPI?Comprehensive API SuiteAccess our full range of financial data through a single, unified API ecosystem, simplifying integration and reducing development time.Tailored Data SolutionsFrom unique order types to proprietary exchange data, we support custom requests that go beyond standard offerings, adapting to your specific integration requirements.Real-time & interconnectsWe operate on proprietary infrastructure, ensuring the lowest latency and highest uptime in the industry. Our global network using UDP na BGP protocols to exchange data directly between our data centers and Customers.Real-time and historical data from all exchangesSeamlessly access both real-time and historical data from over 300 data sources in same format, enabling thorough market analysis and informed decision-making.Mike NasserSatstreet Trading Desk“CoinAPI is the perfect solution for real-time information sourced from all exchanges, offering user-friendly APIs for developers and investors.“Read Case Study →Chris A. TovmasianMarketDraft“CoinAPI empowers businesses with seamless integration, high precision, and reliable data, transforming them into crypto-ready powerhouses for effortless cryptocurrency tracking.“Read Case Study →Colin MackieBitcoin.tax“CoinAPI has been a very reliable service and provides us with exactly the data we need. We have been a customer since 2019 and expect to continue using the services in the future.“Read Case Study →Crypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/use-case/coinapi-for-crypto-portfolio-management)"
637,case study elevating crypto alerting app capabilities with coinapi and quix,"case study elevating crypto alerting app capabilities with coinapi and quix. CoinAPI and Quix Integration: Revolutionizing Crypto Alerting App Capabilities - CoinAPI.ioIntroducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inElevating crypto alerting app capabilities with CoinAPILearn how CoinAPI boosts the functionalityof Crypto Alerting App through Quix integrationAbout QuixQuix is a platform that allows users to create applications without the need for any coding skills. It stands out from other similar platforms as it simplifies application development through the use of forms and drop-down lists. This means that users can develop a fully functional web app in just a few minutes. Quix also offers APIs for data integration, enabling applications to share data and communication across different platforms. With the impressive number of apps already being created on Quix, the platform has immense potential.In an interview with the Quix team, they share how they built a currency alerting application using CoinAPI. You can learn more about how to create a crypto alerting app with no coding by checking out their insights.What can you build with Quix?Quix is a versatile tool that automates digital experiences that generate a large volume of real-time data. It is ideal for situations where immediate action is necessary, and simple, lightweight, and flexible enough to be easily integrated into any project or team. In addition, Quix allows you to create custom solutions that collect, process, and publish data in real-time.Users can create new pipelines effortlessly by dragging components onto a canvas and connecting them with lines. Each component comes with its own set of inputs and outputs, making it easy to connect them without worrying about flow direction. Quix will automatically run your pipeline whenever new data becomes available in your SaaS or database service, without the need for maintenance or configuration!Quix has been used in the creation of smart stethoscopes and other IoT devices, and you can explore more examples of the product in action.CoinAPI/Quix crypto price alerts appWe have collaborated with CoinAPI to introduce a Quix connector that brings CoinAPI data into Quix. This connector simplifies the process of connecting to a data source or transmitting data to an external system. With the Quix CoinAPI connector, users can leverage both the CoinAPI key and their preferred currency pairs to access currency information within the Quix solution.Our team is delighted to partner with CoinAPI, as their API offers valuable insights into the cryptocurrency market. The connector allows users to import data from CoinAPI's API into Quix, providing them with up-to-date information on the cryptocurrency market.The Quix CoinAPI connector simplifies the process of data acquisition for customers, allowing them to focus on their core business. This connector makes it effortless to obtain data, which can then be analyzed and combined with other data to determine various results, including the results of sentiment analysis on the same currencies.Streamlining Data Delivery to Customers: Simplifying the Process through Efficient Data ProcessingThe Quix CoinAPI connector simplifies the data acquisition process for customers, allowing them to focus on their core business. With this connector, obtaining data is a breeze and can be easily analyzed and compared with other data sets, such as results from sentiment analysis on the same currencies, to yield various results.Target users and advantagesQuix has multiple use cases, including helping finance professionals build solutions. It simplifies access to data that is crucial for making informed decisions.Quix users who are building finance solutions can leverage the Quix CoinAPI connector to effortlessly acquire CoinAPI currency data. This empowers them to create and deploy high-quality financial products for their clients.In today's world, where financial products are getting increasingly complex and sophisticated, providing users with access to quality data is of utmost importance. With the Quix CoinAPI connector, users can easily obtain precise currency information from CoinAPI without worrying about infrastructure implementation or maintenance.The CoinAPI connector is also versatile enough to support various use cases in the finance industry. It can help create anything from a simple hedging solution for an individual investor or fund manager to more complex derivative instruments based on multiple currencies.Essential Features of a Currency Alerting AppCustomers have the advantage of currency alerting that keeps them updated on the prices of their preferred currencies. They can select the type of alerts, either buy/sell signals or raw prices, and choose the currencies they want to receive alerts on, or even all of them. The time frame for the alerts can also be set up according to the customers' convenience. Currency alerting enables customers to make informed decisions about their spending and saving by receiving updates about changes in currency values. The three crucial aspects of currency alerting include currency choice, type of alerts, and the time frame for receiving alerts.Crypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/case-study/elevating-crypto-alerting-app-capabilities-with-coinapi-and-quix)"
638,case study axyon ai crypto anomaly detection market data api coinapi,"case study axyon ai crypto anomaly detection market data api coinapi. Axyon AI: Harnessing the Power of CoinAPI's Market Data API for Cutting-Edge Crypto Anomaly Detection - CoinAPI.ioIntroducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inHow Axyon AI Leverages Market Data API to Detect Crypto AnomaliesHow Axyon AI utilizes Market Data API to identify anomalieswithin the volatile landscape of cryptocurrency tradingIn today's ever-changing and unpredictable crypto landscape, it is crucial for investors to have reliable tools to detect anomalies. This is where Axyon AI comes in, providing asset managers with accurate AI predictive solutions. A team of experienced data scientists, software engineers, and quantitative finance researchers and analysts lead the charge in tackling the chaos of the crypto market.Our focus today is on Axyon AI's Chief Technology Officer, Jacopo Credi, who will guide us through the company's innovative crypto anomaly detection solution. By leveraging Market data API from CoinAPI, Axyon AI fortifies its investment platform against the uncertainties of the crypto market. This story highlights the importance of strategic crypto market analysis, showcasing the resilience and foresight of Axyon AI.""Detecting crypto anomalies requires vigilance and a thorough understanding of the cryptocurrency ecosystem. By monitoring transaction patterns, and exchange activity, and using analytics tools, Axyon AI can help identify potential anomalies and support decision-making. This can’t be possible without CoinAPI data allowing us to keep an eye on cryptocurrency exchanges for any unusual activity, such as large trades, price fluctuations, or sudden increases in trading volume."" explains Axyon AI Chief Technology Officer Jacopo CrediThe ChallengeAxyon AI faced the challenge of detecting anomalies in the volatile cryptocurrency market for accurate predictive analysis. Their goal was to find a reliable API providing precise cryptocurrency data that would enable them to pinpoint deviations in real-time in cryptocurrency assets. As a company deploying machine learning and artificial intelligence, Axyon AI has the capability to scrutinize massive amounts of data in real-time. This advanced analysis allows them to identify even the most subtle discrepancies, which can then be marked for further examination. Thus, their challenge was not just finding the right data, but also leveraging their sophisticated AI capabilities to turn that data into valuable insights.Here are the challenges Axyon AI facedLack of reliable, high-quality sources of historical and real-time cryptocurrency data to run crypto anomaly detection solutionAxyon AI encountered a challenge in finding trustworthy and high-quality streams of both historical and real-time cryptocurrency data. The obstacle they faced involved finding a comprehensive, single-source provider of all necessary cryptocurrency data. The alternative, integrating with various tools and manually sifting through each data source, was a cumbersome process that they aimed to avoid. Their goal was to find a streamlined solution that could seamlessly supply all the data they needed for their advanced analysis. Lack of aggregated dataAxyon AI faced a significant challenge due to the fragmented nature of information availability. The need to gather data from various sources presented an arduous and time-intensive task, necessitating individual research for each data segment. This lack of consolidated information was a major stumbling block in their quest for efficient and comprehensive data analysis.The manual process of getting data from multiple sourcesThe process of manually accumulating data from different sources is not only labor-intensive but also demands a certain level of expertise. The pursuit of market and cryptocurrency data involves sifting through a multitude of websites and vendors, which makes it exceptionally challenging to pinpoint a one-stop source for exhaustive data. Certain APIs may focus on specific cryptocurrencies or offer more extensive data on some than on others, further complicating the search for comprehensive and balanced information.The SolutionAxyon AI aimed to equip asset managers with advanced AI predictive solutions to ensure their success in the future. They were focused on providing their clients with an anomaly detection solution that could detect any irregularities in the cryptocurrency market. This enabled investors to make informed decisions and manage their investments with greater confidence.To achieve this, Axyon AI required reliable data on the crypto market. After thorough research, they decided to use CoinAPI as their data source due to its extensive and trustworthy coverage. With CoinAPI's dependable cryptocurrency information, Axyon AI created efficient machine-learning models to alert their clients of any potential disruptions or unusual behavior.“With CoinAPI, we have been able to develop effective machine-learning models which enabled us to warn our customers of potential market disruptions or unusual activity in a timely manner. This has resulted in a strong relationship with our crypto customers, leading to further work and potential new projects. Moreover, high-quality market data has saved us time and resources, enabling us to focus on developing our solutions and AI models to spur business growth.” said Jacopo Credi, CTO of Axyon AIThe ResultCoinAPI and Axyon AI have formed a partnership that has strengthened their relationship with cryptocurrency clients. CoinAPI provides high-quality market data to Axyon AI, allowing them to save time and resources. This has allowed Axyon AI to focus on improving its anomaly detection solution and AI models for business growth. CoinAPI handles the small details, freeing up Axyon AI to solely provide valuable services to their clients.Here's how Market data API from CoinAPI solved Axyon AI's challenges in running a crypto anomaly detection solutionGet access to Market data API with historical and real-time streamlined to run crypto anomaly detection solutionCoinAPI is capable of supplying real-time information on cryptocurrency prices and trading volumes. Axyon AI has been leveraging CoinAPI’s APIs to access this vital cryptocurrency data, facilitating the creation of machine-learning models for their AI-driven anomaly detection service. This top-tier market data has proven to be a time and resource saver for Axyon AI, allowing them to shift their focus towards devising solutions and developing AI models that propel business expansion.    Comprehensive coverage of cryptocurrencyCoinAPI, with its specialization in cryptocurrency data, offers broad coverage across a wide spectrum of cryptocurrencies such as Bitcoin, Ethereum, Ripple, among others. Their API delivers real-time pricing, historical data, trading volumes, order book data, and other pertinent metrics. By contrast, some other market data APIs might offer restricted coverage of cryptocurrencies, or possibly none at all. Hence, it's critical to select an API that caters to your specific demands in terms of the degree of coverage required.Save time and resources that would have otherwise been spent on data collection and processingEmploying a Market Data API can lead to significant savings in terms of time and resources that would have been expended on data gathering and processing. Rather than resorting to manual data collection from a variety of sources—a process that is both lengthy and susceptible to errors—a Market Data API supplies real-time data in a standardized format. This data can be seamlessly integrated into pre-existing systems and workflows, greatly enhancing efficiency and accuracy.Flexibility and ease of integration of the data APICoinAPI's Market Data API is engineered to provide adaptability and ease of integration with pre-existing systems, employing universally accepted formats and protocols. It can be interfaced with through popular programming languages such as Python, Java, or C#. Furthermore, Software Development Kits (SDKs) and libraries are readily available for these programming languages, simplifying the integration process. CoinAPI offers customization in data acquisition, catering to unique requirements with options like real-time streaming, batch downloads, and different data sets or subsets. It provides a combination of flexibility and convenience, operable across desktop applications, mobile apps, and web-based platforms. As such, CoinAPI serves as an invaluable asset for traders, investors, and developers, offering tailored access and analysis of market data.“Working with CoinAPI has been a game-changer for our Crypto Anomaly Detection solution. The comprehensive and reliable market data provided by CoinAPI has allowed us to develop machine learning models that timely detect anomalous patterns in cryptocurrency market data, providing early warnings of potential market disruptions or unusual activity to crypto investors. We have been very satisfied with the service and support provided by CoinAPI and would highly recommend it to anyone looking to build machine learning solutions in this space."" Jacopo Credi, Chief Technology OfficerCrypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/case-study/axyon-ai-crypto-anomaly-detection-market-data-api-coinapi)"
639,use case coinapi for brokers,"use case coinapi for brokers. Streamline Your Brokerage Services with CoinAPI - CoinAPI.ioIntroducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inBrokersBuild trading appsand brokerage services for your end usersStart nowBalancing compliance, security, and user experienceThe challenge when building a brokerage platform is balancing compliance, security, and liquidity with the need to provide a user-friendly and reliable platform. Successful brokerage platforms are those that can effectively address these challenges while providing a valuable service to customers.What are the pain points when performing brokerage activities?Build custom trading applicationsIntegrate trading into your existing applications and front-endsEnsuring sufficient liquidity to execute trades quickly and at a fair price is a constant challenge, particularly for less popular trading pairsBrokerage platforms need to integrate with multiple exchanges to access various markets, which can be complex due to the diversity of APIs and protocolsAccess to real-time and accurate market dataCreating an intuitive, easy-to-use platform that meets the needs of both novice and experienced tradersDevelop commercial trading softwareAccess stocks, options, futures, currencies, bonds, and fundsHow CoinAPI could solve this issue?CoinAPI Products Used:Get access to real-time and historical crypto market dataTrack multiple cryptocurrencies' prices in one place instead of attaching data from different resourcesTick-by-tick data for making day-to-day transactions and paymentsCoinAPI's reliable and accurate data can aid in detecting suspicious trading activities, thus helping in fraud preventionHigh-quality, normalized dataSimplified data processing with structured data from multiple exchangesAccess to high-frequency exchange rates and unique low-frequency dataReduced time spent on data cleaning with CoinAPI's robust data normalization, freeing up resources for strategy optimizationReduced development cost & timeDevelopers can easily implement APIs without dealing with multiple APIs themselvesCoinAPI enables seamless app integration for an efficient stackCoinAPI offers REST, WebSocket, and FIX protocols to facilitate faster integration between API and usersReduce the volatility of trading prices and present a more stable price pointCoinAPI mitigates volatility for a more stable price pointReduces risk of large price fluctuations, limiting downside riskUtilizes reliable market data for potential price movement prediction, aiding strategy adjustment for maintained profitabilityFast and seamless onboarding processEasy integration with third-party trading systemsInteract with crypto data easily to focus on your own solution developmentNo need to hire a developer and pay for their maintenance and updates for the integration module, saving time and expensesFull API maintenanceLeverage CoinAPI’s SDK to bypass API maintenanceUtilize APIs for a feature-rich crypto wallet app, synchronized with the crypto ecosystemExploit API integration for new features and functionality, fast-tracked via an API integration platformComprehensive Market CoverageGlobal exchange data, enhancing market coverage for brokerage platformsSignificant cost reduction through efficient exchange integrations and data managementImproved user experience with consistent, reliable data, boosting customer satisfactionWhy developers love us?We empower developers with tools and resources that streamline their workflow, allowing them to create innovative solutions faster and more efficiently.Unified EcosystemAccess a cohesive platform where all components work seamlessly together, eliminating compatibility headaches and streamlining your development process.Plug-and-Play SolutionsLeverage our modular architecture to rapidly build and customize your applications. Mix and match components to create tailored solutions effortlessly.Developer-Centric DesignExperience a platform built by developers, for developers. Our intuitive design and developer-first approach make complex tasks feel effortless.Uninterrupted ServiceOur distributed infrastructure have 100ms-level failover time. Standard SLA included to all subscriptions. Experience seamless operations, regardless of local disruptions.Our core valuesWhy Choose CoinAPI?Comprehensive API SuiteAccess our full range of financial data through a single, unified API ecosystem, simplifying integration and reducing development time.Tailored Data SolutionsFrom unique order types to proprietary exchange data, we support custom requests that go beyond standard offerings, adapting to your specific integration requirements.Real-time & interconnectsWe operate on proprietary infrastructure, ensuring the lowest latency and highest uptime in the industry. Our global network using UDP na BGP protocols to exchange data directly between our data centers and Customers.Real-time and historical data from all exchangesSeamlessly access both real-time and historical data from over 300 data sources in same format, enabling thorough market analysis and informed decision-making.Mike NasserSatstreet Trading Desk“CoinAPI is the perfect solution for real-time information sourced from all exchanges, offering user-friendly APIs for developers and investors.“Read Case Study →Chris A. TovmasianMarketDraft“CoinAPI empowers businesses with seamless integration, high precision, and reliable data, transforming them into crypto-ready powerhouses for effortless cryptocurrency tracking.“Read Case Study →Colin MackieBitcoin.tax“CoinAPI has been a very reliable service and provides us with exactly the data we need. We have been a customer since 2019 and expect to continue using the services in the future.“Read Case Study →Crypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/use-case/coinapi-for-brokers)"
640,case study singalliance leverages coinapi for crypto investment analysis,"case study singalliance leverages coinapi for crypto investment analysis. SingAlliance Enhances Cryptocurrency Investment Strategies with CoinAPI - CoinAPI.ioIntroducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inHow SingAlliance leverages Crypto API for cryptocurrency Investment and AnalysisLearn How SingAlliance Utilizes Crypto APIto enhance its Cryptocurrency Investment Strategies and Data AnalysisAbout SingallianceSingAlliance offers an advanced platform for cryptocurrency investors who demand the best trading expertise. The company executes thousands of transactions with emphasis on security, high availability, and low latency. Their trading strategy includes adept management of price volatility. To gain better insights into the market, SingAlliance uses CoinAPI, a tool for analyzing and investing in cryptocurrencies. This enables SingAlliance to enhance profits for their customers. SingAlliance CEO quote: ""Adopting CoinAPI was arguably the biggest step we were able to take in moving forward with quantitative research to produce new trading methods for our customers. CoinAPI offers an easy way to gather live data on any cryptocurrency and the trading volume of each of them. We use CoinAPI to power our portfolio tracking and research features""SingAlliance: Pioneering Cryptocurrency Asset Management with CoinAPIThe popularity of crypto assets is on the rise, and investors are keen to diversify their portfolios with them. Cryptocurrency management platforms and tools have made it easier for investors to profit from these assets without worrying about the technicalities. The retail industry has recognized the potential of cryptocurrencies, resulting in an increase in funding opportunities.SingAlliance, established in Singapore in 2011, is an expert in managing crypto operations and assists companies in investing in high-performing assets across exchanges. With offices located in Singapore, Geneva, Hong Kong, and Dubai, SingAlliance provides comprehensive financial solutions and expert guidance to high-net-worth individuals and institutional clients while managing investment funds with high added value.""The market for financial solutions based on cryptocurrency is still new but is growing. Cryptocurrencies are now more extensively used in both the institutional and private sectors. As a result, we currently observe a significant demand from investors, particularly on the institutional side, which we satisfy with a reasonable and, most importantly, regulated offer. For many investors, cryptocurrency has evolved from a specialized product to a crucial part of their asset allocation."" said Thierry Beck, SingAlliance CEO.Today, we had a conversation with Thierry Beck, the CEO of SingAlliance, to understand how they utilize CoinAPI to convert intricate aggregated cryptocurrency data into easily accessible data for their clients.The challengeSingAlliance was looking for an API that provides historical data on cryptocurrencies to perform quantitative analysis for crypto investment. REST API access was the key factor in selecting the API vendor. SingAlliance utilizes CoinAPI to merge their traditional finance expertise with thorough research on cryptocurrencies. This enables them to offer customers active investment options in this emerging asset class.“At SingAlliance, we use CoinAPI to maintain and grow upon a portfolio of cryptocurrencies. We made a decision to integrate with CoinAPI because they offer the most comprehensive data available online. With access to more than 200 exchanges, our team can easily maintain and update information on multiple assets. The ability to store cryptocurrency transactions offline in the volatile market showed us that CoinAPI had our back. It is critical for us as an organization to have access to this type of data in order to make informed decisions. This is why we chose CoinAPI over other options on the market” explains SingAlliance CEO Thierry Beck.Here are the challenges SingAlliance facedAccess to REST APIThe ability to access REST APIs enables the extraction of valuable information from multiple exchanges simultaneously, resulting in the creation of an extensive library and a front-end application that is loaded with features.     Lack of reliable API for crypto investing and analysisSingAlliance faced a significant challenge while conducting quantitative research, which was to obtain a market data API that could provide immediate access to both current and past data on cryptocurrencies.Lack of historical cryptocurrency dataSingAlliance sought a partner with the ability to provide current pricing data, a crucial requirement for individuals involved in trading, investments, and digital currencies.Institutional solutionSingAlliance was seeking to join forces with professionals who share their vision and values. The company offers comprehensive assistance and tools to maximize the effectiveness of their solutions. Moreover, customers can rest assured that SingAlliance's solutions are dependable, well-protected, and always up-to-date, thanks to the company's substantial backing.Diversified sources of pricesSingAlliance was in search of a reliable source to receive information about cryptocurrency prices. They needed a simple way to access prices from different exchanges and calculate the value of cryptocurrencies based on other supported currencies.The solutionSingAlliance was looking for an API that provides historical data on cryptocurrencies to perform quantitative analysis for crypto investment. REST API access was the key factor in selecting the API vendor. SingAlliance utilizes CoinAPI to merge their traditional finance expertise with thorough research on cryptocurrencies. This enables them to offer customers active investment options in this emerging asset class.ResultsSingAlliance opted for CoinAPI as their reliable cryptocurrency data source that collects and provides data through an API. This decision was made to ensure that they offer top-notch portfolio management services and quantitative trading options to their clients.“The ability to have the real-time data streaming is a game-changer,” Thierry Beck told us. “The API is super easy to integrate and super easy to get the data you need”SingAlliance is now capable of offering its clients with trustworthy information about cryptocurrency that is customized to meet each client's investment needs. CoinAPI has proven to be the most dependable and cost-effective option for SingAlliance. The company has been using CoinAPI for quite some time and relies on its data to conduct research on crypto trading strategies.Here’s how CoinAPI solved SingAlliance’s challenges with API for crypto investing and analysis:Get more insights thanks to real-time streamlined dataLeveraging the power of a market data API, SingAlliance facilitates enhanced insight for its customers through the provision of real-time, streamlined data. This empowers the firm to offer crucial tools for market analysis, enabling investors to make decisions grounded in data and insight. SingAlliance offers comprehensive views of the current crypto market status, as well as the potential of individual coins and tokens. With this information at their fingertips, investors are better equipped to evaluate the potential risks and returns of their prospective investments.     Connecting clients with cryptocurrency assetsSingAlliance is able to offer a range of services such as asset management, trading, research and analysis, and portfolio management, thanks to the data provided by CoinAPI. Customers have the opportunity to access a diverse range of digital assets, which can assist investors in building a diversified portfolio of digital assets. Additionally, customers can compare and contrast different types of digital assets and identify opportunities for growth.Work with reliable, enterprise-grade API for crypto investing and analysisA Crypto Market data API is an excellent solution for businesses seeking a dependable, enterprise-level data source. With this API, you can easily access the latest real-time information on the crypto market, including reliable and precise data on trading activity, pricing, and more. Furthermore, you can customize the data to meet your specific business needs, providing you with the flexibility you require. The CoinAPI is highly secure, using state-of-the-art encryption technology to keep your data safe. Moreover, it is easy to integrate into your existing system, making it the ideal choice for businesses of all sizes.Making service stableHaving a stable API connection is crucial for ensuring a seamless user experience. It allows for reliable communication between different components and systems. SingAlliance has chosen to use the CoinAPI service to ensure that its portfolio tracking runs smoothly and efficiently at all times. This guarantees stability and consistency in the performance of the API.Making integration quick and simpleAPI integration can be a game-changer when it comes to adding new features and functions to your system. To simplify and accelerate the integration process, utilizing an API integration platform can provide the essential structure and resources required to seamlessly integrate APIs.Providing multiple price sourcesA crypto market data API can provide you with access to various price sources, which can assist you in making informed decisions. You can utilize the API to monitor the progress of different cryptocurrencies over a period of time, enabling you to make better choices based on past data. With an abundance of data readily available, you will possess the necessary tools to take full advantage of the crypto market.“Working with a partner like CoinAPI allows SignAlliance to maximize the value of crypto investments, diversify a high-quality portfolio, better understand financial health, more easily invest globally, including in emerging markets, and ability to more easily invest in non-traditional funds. The crypto space is evolving rapidly and we need to ensure that we're connecting our clients with the best services available. We've worked with CoinAPI since few years and they've always been a great partner when we need assistance integrating into new platforms or understanding how the crypto market works."" explains SingAlliance CEO Thierry Beck.Crypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/case-study/singalliance-leverages-coinapi-for-crypto-investment-analysis)"
641,blog coinapi january update,"blog coinapi january update. CoinAPI Blog - CoinAPI January update: NaaS, new website, Market Data API on QuickNode marketplace Introducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog in NewsCoinAPI January update: NaaS, new website, Market Data API on QuickNode marketplaceCoinAPI January update features some exciting info about our future developments such as NaaS (Network as a Service), our brand-new website, and the launch of Market Data API at the QuickNode marketplace. We believe that these new features will help to make your cryptocurrency journey smoother and more efficient. Node-as-a-Service is coming soon! Our upcoming product provides strong and flexible infrastructure solutions for blockchain applications. We offer both shared and dedicated nodes that come with node monitoring, smart contract deployment capabilities, and access to archive data. More info soon! In the meantime, check out our blog posts on NaaS: Comparing self-hosted nodes with managed Node-as-a-Service solutions Shared, semi-shared, or dedicated nodes: which one to choose? CoinAPI’s Node-as-a-Service: The ultimate guide CoinAPI’s new website is now live! The new coinapi.io features a sleek homepage, detailed product subpages, and an updated blog layout to enhance your experience. We’ve put all of our products (and soon-to-be products), a new pricing page, and much more. Check out the preview. 👇     Market Data API at QuickNode marketplace QuickNode marketplace has included our Market Data API, which provides real-time data for a variety of financial instruments. This integration offers immediate access to our API, enabling you to monitor market data with ease. Cool news! Our CEO, Artur Pietrzyk had an interview with the QuickNode’s team. → Full interview is available here Technical Tutorials with CoinAPI We have quite a few tutorials and guides that can help you become a better trader in the crypto market. You can learn: How to access exchange rates in different programming languages → Read more How to gather historical data on Open, High, Low, Close, and Volume (OHLCV) → Read more Oh, and just in case… If you’re looking for a comprehensive collection of historical cryptocurrency data, our product, CryptoTick has got you covered. Stay updated with the latest developments by following us on GitHub, LinkedIn, and X. We’re here to help you excel in the world of crypto trading! Stay up-to-date with the latest CoinApi News.SendI Agree to CoinApi’s Privacy Policy*Recent ArticlesMarket Data APIThe power of crypto API on DEXDecentralized Exchanges (DEXs) are peer-to-peer marketplaces without a central authority, growing in popularity with examples like Uniswap...EMS Trading APIHow CoinAPI crypto trading API enhances crypto trading efficiency?Today, crypto traders face challenges like limited liquidity causing slippage and difficulty in executing large orders without affecting...NewsCoinAPI January update: NaaS, new website, Market Data API on QuickNode marketplaceCoinAPI January update features some exciting info about our future developments such as NaaS...Market Data APIHow does CoinAPI maximize the effectiveness of crypto trading bots?Crypto trading bots are essential for trading on the dynamic cryptocurrency market. They need the best data for the best outcomes, though....Market Data APICrypto tax API: Discover the future of crypto tax management with CoinAPIAs tax return deadlines approach in various countries worldwide, traders and investors are struggling with the complexities of reporting...CryptoTickA guide to using Cryptotick for crypto historical dataDid you know that CoinAPI, beyond API products, offers a streamlined solution for those seeking easy access to historical crypto data?...Market Data APIThe future of trading: How cryptocurrency API is changing the gameAs we move from 2023 into 2024, CoinAPI cements its role as a global leader in the cryptocurrency API space. With the launch of our EMS...EMS Trading APICoinAPI update: Cryptocurrency trading API and new integrationsThis month, CoinAPI is proud to launch our cryptocurrency trading API, alongside key partnerships with Quicknode. We’ve also expanded...Market Data APICoinAPI’s cryptocurrency data API guideThis guide is your comprehensive resource for understanding the various CoinAPI’s Cryptocurrency data API offerings available for...Bring the power of crypto API to your business in minutesStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsEMS Trading APIMarket Data APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/blog/coinapi-january-update)"
642,blog ems trading api vs single exchange access whats better,"blog ems trading api vs single exchange access whats better. CoinAPI Blog - EMS Trading API vs Single Exchange Access – What’s better? Introducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inEMS Trading APIEMS Trading API vs Single Exchange Access – What’s better?Choosing trading tools is just as important as your trading strategy. You can either go with a single exchange trade, trade on multiple exchanges while switching between them or go with an EMS. This blog post discusses EMS, EMS Trading API, and explains what is the right fit for you! What is an Execution Management System? An Execution Management System is trading software for the buying side. It provides real-time market data, advanced trading options, tools for managing available funds, and analysis of transaction costs. It allows traders to make trades quickly and efficiently, improving their strategies and reducing trading costs. Traditional (Financial Market) Execution Management Systems often focus on a specific type of asset, such as stocks or bonds, because trading features differ significantly between asset types. Some providers have separate systems for different asset classes, while others offer a single platform for multiple types of assets. What is an EMS API? An EMS API (Execution Management System Application Programming Interface) is a set of protocols and tools that allow software applications to interact with an Execution Management System. This API enables developers to integrate EMS functionalities into their own trading applications, platforms, or other systems. 💡 ATTENTION! EMS and EMS API could also refer to Entity Management System API; Event Management System API, Energy Management System API, Endpoint Management Server, and others. Be careful when choosing your provider! What is EMS Trading API by CoinAPI? CoinAPI’s EMS Trading API makes managing and executing orders across 20+ cryptocurrency exchanges easy through one unified interface. The API handles exchange integrations and system maintenance, allowing you to focus on trading and development. Key Features: Multi-Exchange Access: Connect to multiple cryptocurrency exchanges with a single account. Manage multiple trading accounts from over 20+ exchanges. Order Management: Place, modify, and cancel orders across multiple exchanges. Unified API for seamless order management. Execution Management: Efficiently manage orders, executions, and exposure. Route orders to multiple exchanges simultaneously. Market Data: Access real-time and historical market data. Order book-level price and trade data for backtesting and analysis. Trading Automation: Automate trades and interact with the trading system. Conduct transactions directly on exchanges. Performance and Reliability: Designed to meet the performance, reliability, and security requirements of large institutions. Best-in-class global multi-asset coverage and connectivity. Liquidity Management: Eliminate liquidity problems by accessing multiple exchanges. Centralize API order routing to optimize liquidity. Support and Assistance: Various support levels depending on the pricing plan. Integration assistance and custom SLAs for higher-tier plans. Customization options enable quick development of tailored applications. The API offers low latency, essential for high-frequency trading, and integrates third-party APIs into a simple, robust data model. It supports industry-standard protocols like REST, WebSocket, and FIX, ensuring flexibility and compatibility. 💡 The API supports various order types, including Limit, Market, Stop-Loss, and Take-Profit orders, with standardized data for consistent decision-making. It integrates with both centralized and decentralized exchanges. Why is it better to use EMS Trading API than using a single exchange? When you use CoinAPI’s EMS Trading API, you can connect to multiple exchanges using just one account. This makes cryptocurrency trading simpler because you can manage and execute trades without switching between different platforms. The API brings all your order routing to one place, helping you get the best prices from different exchanges. This makes it easier to manage your accounts and saves you time. Our API is built for speed and efficiency, supporting high-frequency and algorithmic trading for quick execution. This is crucial for capturing arbitrage opportunities and implementing strategies swiftly. – Artur Pietrzyk, CEO @CoinAPI Using a single API minimizes errors and improves compliance since there’s no need to switch systems or re-enter information. Its integrated compliance and workflow automation features help with regulatory requirements and risk management. 💡 EMS Trading API simplifies your trading infrastructure, making it easier to handle large and complex institutional portfolios. Pros and Cons – EMS Trading API vs Single Exchange Access EMS Trading API Pros: Multi-Exchange Access: Connect to multiple cryptocurrency exchanges using a single account, simplifying the trading process. Unified API: Provides a simple, robust, and unified API for routing orders to multiple exchanges. Efficiency: Saves time by allowing you to trade all your crypto from one place without switching between exchanges. Scalability: Supports unlimited trading accounts, making it suitable for large institutions. Best Pricing: Centralizes your API order routing process to get the best pricing across exchanges. Historical Data: Access dependable order book-level price and trade data for backtesting or other analyses. Security: Designed to meet large institutions’ performance, reliability, and security requirements. Cons: Complexity: The setup, especially for the self-hosted option, can be more challenging compared to single exchange access. Cost: May be more expensive due to the advanced features and multi-exchange capabilities. Latency: Potential for increased latency due to the need to route orders through multiple exchanges. Single Exchange Access Pros: Simplicity: Easier to set up and manage since you are dealing with only one exchange. Lower Cost: Generally less expensive as you are only paying for access to a single exchange. Lower Latency: Direct access to a single exchange can result in lower latency for order execution. Cons: Limited Access: Restricted to the trading pairs and liquidity available on a single exchange. Manual Management: Requires manual switching between exchanges if you want to trade on multiple platforms. No Unified API: Each exchange has its own API requirements, making it more cumbersome to manage multiple accounts. EMS Trading API Architecture The EMS Trading API can be deployed in two different ways: Managed Cloud and Self-Hosted. Each deployment model has its own architecture and components. Managed Cloud In the Managed Cloud model, CoinAPI hosts and manages the entire infrastructure. This model is designed for ease of use and quick deployment. Components: CoinAPI EMS Edge: Software responsible for communicating with specific order destinations (exchanges). Cloud Management API: Interface for managing the deployment and configuration of the EMS system. Order Routing: Centralized system for routing orders to multiple exchanges. Monitoring and Optimization: CoinAPI handles the monitoring and optimization of latency and performance. Main Features: Hosted in the cloud by CoinAPI. CoinAPI manages the deployment and infrastructure. Easy to use and install. Fast time to market. No need for a DevOps team to maintain. CoinAPI optimizes latency. Pros: Ease of Use: Very easy to set up and use. Time to Market: Fast deployment, allowing you to start trading quickly. No Maintenance: CoinAPI handles all infrastructure and monitoring. Latency Optimization: CoinAPI ensures low latency by managing server sites close to order destinations. Cons: Less Control: Limited control over the infrastructure and deployment. Privacy: CoinAPI can see the transactions since they manage the infrastructure. Self-Hosted In the Self-Hosted model, the software is deployed on your own infrastructure. This model provides more control and privacy but requires more effort to set up and maintain. Components: CoinAPI EMS Edge: Software responsible for communicating with specific order destinations (exchanges). Deployment Infrastructure: Servers or cloud instances where the EMS software is installed. Order Routing: Centralized system for routing orders to multiple exchanges. Monitoring and Optimization: You are responsible for monitoring and optimizing latency and performance. Main Features: Software is hosted on your own infrastructure. You manage the deployment and infrastructure. More challenging to set up. Slower time to market. Requires a DevOps team to maintain. You optimize latency. Pros: Control: Full control over the infrastructure and deployment. Privacy: Transactions remain private as CoinAPI cannot see them. Customization: More flexibility to customize the setup according to your needs. Cons: Complexity: More challenging to set up and maintain. Time to Market: Slower deployment compared to Managed Cloud. Maintenance: Requires a dedicated DevOps team to manage and monitor the infrastructure. Latency Optimization: You are responsible for optimizing latency. Dimension comparison summary Dimension Managed Cloud Self-Hosted  Ease of use/installation Very easy Hard Time to market Fast Slow DevOps team required No Yes Order flow privacy No Yes Infrastructure management CoinAPI You Latency optimization CoinAPI You 💡 READ MORE ABOUT EMS TRADING API IN THE DOCUMENTATION EMS Trading API Different Plans Plan Price Features  FREE + PAY AS YOU GO $0 monthly – Public knowledge base – Basic support -1 exchange account PROFESSIONAL $999 monthly – All features from the Free package – Enhanced support – 3 exchange accounts – SLA (Service Level Agreement) – Integration assistance ENTERPRISE Custom – All features of lower packages – Custom SLA & features – Extended integration assistance – Premium support – Managed Infrastructure What’s better – EMS Trading API or trades on a single exchange? EMS Trading API and single exchange access have their pros and cons. EMS is the perfect solution for anyone who wants to access and manage all trades from a single place. Ideal solution for high-frequency traders no matter if you want to use cloud or self-hosted – we are covering both. Single exchange access is ideal if you want to invest and work on your personal portfolio with low-frequency trading. It offers a simpler setup and management process, which is perfect for individual traders or beginners who prefer a straightforward approach. Since you’re dealing with only one exchange, the costs are generally lower, and you can benefit from lower latency due to direct access. This makes it easier to focus on specific trading pairs and develop a deeper understanding of the exchange’s unique features and liquidity pools. In the end, it’s all about the number of trades, privacy, and the safety of your transactions. Single exchange access suits those with fewer trades and a preference for simplicity. However, for those who value comprehensive features, multi-exchange access, and robust trading capabilities, the EMS Trading API is the better choice. Ultimately, your decision should be based on your trading volume, your need for privacy, and the security of your transactions. 💡 Read more about EMS Trading API Stay up-to-date with the latest CoinApi News.SendI Agree to CoinApi’s Privacy Policy*Recent ArticlesEMS Trading APIHow to improve your high-frequency trading strategies in crypto?In crypto trading, High-Frequency Trading operates similarly to traditional markets but with some unique characteristics due to the...Market Data APIWhy is aggregated crypto data better?Some time ago we wrote blog posts about crypto data filtering and crypto data standardization – now it’s time to tell you more about...Market Data APIWhat are Meme Coins? Top 25 Funniest Examples and PricesLet’s have some fun! Because after all, who said that investing and entertainment shouldn’t come in pairs?...Market Data APICrypto data filteringAt 9:00 AM, with a cup of coffee in hand, you sit at your desk ready to trade crypto. Faced with an overwhelming amount of market data and...EMS Trading API3 Core Statistical Arbitrage Strategies in CryptoStatistical arbitrage, often abbreviated as “stat arb,” is a quantitative trading strategy that seeks to exploit inefficiencies...EMS Trading APIEMS Trading API vs Single Exchange Access – What’s better?Choosing the right trading tools is crucial for optimizing your strategy. This blog post delves into Execution Management Systems (EMS),...Market Data APIThe Role of Latency in Cryptocurrency DataLatency impacts everything from trade execution speed to market data accuracy in the cryptocurrency world. Learn why low latency is...Market Data APICryptocurrency Exchange RatesIn the world of cryptocurrencies, exchange rates are dynamic and influenced by various market factors. This post explains the concept of...Market Data APIHow to get Historical and Real-Time Crypto Data From Multiple Exchanges?With the rise of cryptocurrencies, there is a growing question: how to get historical and real-time crypto data from multiple...Crypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/blog/ems-trading-api-vs-single-exchange-access-whats-better)"
643,blog how does coinapi maximize the effectiveness of crypto trading bots,"blog how does coinapi maximize the effectiveness of crypto trading bots. CoinAPI Blog - How does CoinAPI maximize the effectiveness of crypto trading bots? Introducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inMarket Data APIHow does CoinAPI maximize the effectiveness of crypto trading bots?Crypto trading bots are essential for trading on the dynamic cryptocurrency market. They need the best data for the best outcomes, though. CoinAPI’s Market Data API is increasingly being used by these bots. Our Market Data API gives real-time data from over 350 exchanges, helping the cryptocurrency trading bots make the best decisions. Find out why our solution might be the best way of improving your crypto trading bots. What are crypto trading bots? Crypto trading bots are automation tool for trading. They’re changing the way we use digital currencies. They work non-stop, buying and selling cryptocurrencies based on pre-set rules and data input. How do crypto trading bots work? Crypto trading bots work by following specific trading parameters, and using different market indicators. All of that is supported by the data they’re provided with, so it is crucial to input the most accurate historical and real-time data possible. They make choices based on things like price trends, the number of orders, and timeframes. Good bots often use markers like moving averages and the relative strength index (RSI). What are the most common issues with trading bots? Exchange API Setup Challenges: Hard and long process of setting up exchange API due to special needs Limited Profit Opportunities: Few chances for risk spreading and making profit due to different market sizes across exchanges Data Normalization Issues: Lack of normalized data Cost-related Earning Limits: Earning limits due to high costs for top-quality data and advanced trading tools Data Collection Time Constraints: Collecting data takes a lot of time which could be used for improving bots and trading System Growth Difficulties: Problems with growing systems due to changing trading methods and increasing amounts of data Trust Issues with Data: Missing trustworthy real-time and past price and volume data Data Organization Problems: Data that is not well-organized, incomplete, and incorrect Top 7 crypto trading bots platforms New platforms for crypto trading bots are popping up all the time, but there are already some solid options out there. So… What are the best crypto trading bots? Cryptohopper: a cloud-based platform with lots of strategies. It also has a free trial, so it’s good for beginners. Coinrule: a platform that has over 200 strategy templates. It’s good for both new and experienced traders. 3Commas: a platform which lets you customize your bots. It’s easy to use, so it’s good if you like to be hands-on. Unibot: a bot that works through Telegram, an app you might already use. This makes it convenient to access. Gunbot: a bot with a one-time payment model. It’s good if you plan to use it for a long time. HaasBot: this bot is part of the HaasOnline trading suite. It’s good if you’re technically skilled and want detailed analytical tools. Zenbot: an open-source platform, which means you can customize it as much as you want. You’ll need technical skills to do this, though… But that’s just our opinion. The crypto trading bot market is full of new solutions. Test as many as possible to select the right tool for you! How does CoinAPI’s Market Data API improve trading bots? CoinAPI’s product boosts cryptocurrency trading bots by offering reliable data. Here are the top 10 reasons to use Market Data API for better bot performance: Comprehensive Market Data: Gives a full market picture for trend spotting and smart trading decisions. Real-Time Data: Allows for quick reaction to market shifts in the unpredictable crypto market. Historical Data: Useful for creating strategies and testing them before actual trading. Data Standardization: Resolves the issue of different data formats across exchanges for smooth data handling. Technical Analysis Tools: Assist in spotting market trends, patterns, and possible trading chances. Reliable Infrastructure: Provides secure data access and uninterrupted bot operation. API Integration: Simplifies the development process and focus on creating strategies. Customizable Data Feeds: Allows access to specific data depending on the trading strategy. Risk Management Support: Helps in implementing more effective strategies like accurate stop-loss orders and portfolio diversification. Complex Trading Strategies: Aids in developing complex strategies for a competitive advantage. The ability to have the real-time data streaming is a game-changer. The API is super easy to integrate and super easy to get the data you need. – Thierry Beck, CEO @SingAlliance Boost your crypto trading bots with CoinAPI In conclusion, CoinAPI greatly improves how well crypto trading bots work. It provides both real-time and historical data, helping these bots to perform at their best. Our chart updates in real-time as we receive trade data from CoinAPI! Using CoinAPI’s Market Data API ensures your trading strategies are based on the most accurate and recent market information. This makes your trading operations smoother and helps you make better decisions on the crypto market. Find out more on how the Market Data API can make your trading better! → Stay up-to-date with the latest CoinApi News.SendI Agree to CoinApi’s Privacy Policy*Recent ArticlesMarket Data APIThe power of crypto API on DEXDecentralized Exchanges (DEXs) are peer-to-peer marketplaces without a central authority, growing in popularity with examples like Uniswap...EMS Trading APIHow CoinAPI crypto trading API enhances crypto trading efficiency?Today, crypto traders face challenges like limited liquidity causing slippage and difficulty in executing large orders without affecting...NewsCoinAPI January update: NaaS, new website, Market Data API on QuickNode marketplaceCoinAPI January update features some exciting info about our future developments such as NaaS...Market Data APIHow does CoinAPI maximize the effectiveness of crypto trading bots?Crypto trading bots are essential for trading on the dynamic cryptocurrency market. They need the best data for the best outcomes, though....Market Data APICrypto tax API: Discover the future of crypto tax management with CoinAPIAs tax return deadlines approach in various countries worldwide, traders and investors are struggling with the complexities of reporting...CryptoTickA guide to using Cryptotick for crypto historical dataDid you know that CoinAPI, beyond API products, offers a streamlined solution for those seeking easy access to historical crypto data?...Market Data APIThe future of trading: How cryptocurrency API is changing the gameAs we move from 2023 into 2024, CoinAPI cements its role as a global leader in the cryptocurrency API space. With the launch of our EMS...EMS Trading APICoinAPI update: Cryptocurrency trading API and new integrationsThis month, CoinAPI is proud to launch our cryptocurrency trading API, alongside key partnerships with Quicknode. We’ve also expanded...Market Data APICoinAPI’s cryptocurrency data API guideThis guide is your comprehensive resource for understanding the various CoinAPI’s Cryptocurrency data API offerings available for...Bring the power of crypto API to your business in minutesStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsEMS Trading APIMarket Data APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/blog/how-does-coinapi-maximize-the-effectiveness-of-crypto-trading-bots)"
644,cdn cgi l email protection#3f4c4a4f4f504d4b7f5c5056515e4f56115650,"cdn cgi l email protection#3f4c4a4f4f504d4b7f5c5056515e4f56115650.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 8aad2a1eaecd6e98 •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://coinapi.io/cdn-cgi/l/email-protection#3f4c4a4f4f504d4b7f5c5056515e4f56115650)"
645,case study powering cryptocurrency simulation tools with coinapi marketdata,"case study powering cryptocurrency simulation tools with coinapi marketdata. How MarketDraft Uses CoinAPI's Real-Time Data to Revolutionize Cryptocurrency Trading Education and Simulation - CoinAPI.ioIntroducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inPowering cryptocurrency simulation tools with market dataLearn How MarketDraft Harnesses the CoinAPIto Power Cryptocurrency Simulation Tools and ContestsAbout MarketdraftMarketdraft is a leading player in the rapidly growing digital asset. It is an online platform that offers users an opportunity to learn about stock and crypto trading through a simulated market scenario. Its main aim is to help users develop their trading skills and strategies while providing them with valuable experience. To achieve this goal, MarketDraft was in need of a real-time API to power their cryptocurrency simulation tool.MarketDraft is dedicated to both experienced traders and beginners, allowing them to learn, practice, and refine their trading skills in a safe and secure environment. MarketDraft also provides private contests, private market simulation options, cryptocurrency gameplay styles, and other entertaining educational tools to enhance the learning experience.MarketDraft provides a fantasy crypto environment where users can experiment with buying crypto and monitoring their portfolio growth, just like a real investor would.CoinAPI was able to implement a crypto environment into our platform where people can simulate buying crypto and watching their portfolio grow like an investor. Leveraging the real-world data that CoinAPI offer allowed us to do that. CoinAPI's data feed is literally the fuel for our company. We cannot run our business without data.” explains Marketdraft CEO Chris A. Tovmasian.Revolutionizing Trading Education and Strategy Development with the Cryptocurrency Market Simulation PlatformTrading in the stock and crypto markets can be a daunting task, but there is now a solution. A cryptocurrency market simulation platform has been introduced to help individuals gain a better understanding of the markets and develop successful trading strategies. With this platform, users can create virtual portfolios, set goals, and simulate trading based on real-market data. The platform also provides users with the necessary tools and resources to execute successful trading strategies.""A cryptocurrency market simulation platform is a great way to get started in the stock and crypto markets without risking real money. With a cryptocurrency market simulation platform, users can practice trading in a safe and secure environment, learning various strategies and techniques. They are also able to develop skills as a trader and become more familiar with the stock and crypto markets. With the right cryptocurrency market simulation platform, users can practice trading skills and gain valuable experience."" said MarketDraft CEO Chris A. Tovmasian.Today, we had a conversation with Chris A. Tovmasian, the CEO of MarketDraft, to understand how his company utilizes CoinAPI to monitor the latest cryptocurrency price data in real-time. This is used to operate cryptocurrency simulation tools and contests.The challengeMarketDraft required a price tracking service for cryptocurrency that updated its large database of cryptos consistently and in real-time. They sought an API solution that would allow them to monitor crypto prices, obtain real-time data, and provide dependable data for their simulation environments. This would give them a more accurate representation of the crypto industry.Here are the challenges MarketDraft facedLack of data from multiple crypto exchangesMarketdraft faced the challenge of lacking data from multiple crypto exchanges. In their quest to run a comprehensive crypto simulation platform, they were actively seeking a reliable partner who could provide them with a wide range of market data from various exchanges. This search for a suitable data provider was crucial in enabling Marketdraft to offer an accurate and realistic simulation experience to their users.Lack of reliable cryptocurrency resourcesMarketdraft encountered the obstacle of insufficient reliable cryptocurrency resources. To deliver a robust and dependable simulation platform, they recognized the need for a trustworthy partner who could supply them with reliable and up-to-date cryptocurrency resources. By seeking a reliable cryptocurrency data provider, Marketdraft aimed to enhance the accuracy and credibility of their simulation tool, providing users with a valuable resource for exploring the crypto market.Lack of real-time data API for cryptocurrency simulation toolsMarketdraft faced the challenge of lacking a real-time data API specifically designed for cryptocurrency simulation tools. Recognizing the importance of real-time data for an immersive and dynamic simulation experience, Marketdraft actively sought a reliable data provider offering a dedicated API that could fulfill this crucial need. By partnering with such a provider, Marketdraft aimed to enhance the authenticity and effectiveness of their simulation tool, providing users with a valuable platform for realistic cryptocurrency trading simulations.Having multiple pricing options all in one placeMarketdraft identified the need for a consolidated platform offering multiple pricing options in one place. Recognizing the importance of comprehensive pricing data for accurate simulations, Marketdraft actively sought a reliable partner who could provide them with a wide range of pricing options from various sources, consolidated into a single platform. By collaborating with such a partner, Marketdraft aimed to offer their users a seamless and comprehensive experience, enabling them to explore different pricing scenarios and enhance their understanding of cryptocurrency markets.The solution - API for cryptocurrency simulation toolsMarketDraft contacted CoinAPI to acquire a real-time cryptocurrency price tracker. They needed a vast range of cryptos that could be monitored continuously. By utilizing CoinAPI's real-world data, MarketDraft could create a cryptocurrency environment within their platform. This feature allowed users to simulate purchasing cryptocurrency and keep track of their virtual investment portfolio's progress.“Price points, API documentation, and coverage were the primary drivers for choosing CoinAPI's data feed over others on the market—the fact that it features current pricing for all the major exchanges (Binance, Coinbase/Gdax) made it even more appealing!” explains MarketDraft CEO Chris A. TovmasianResultsMarketDraft is very happy with the outcomes they have achieved after teaming up with CoinAPI. As they expanded rapidly, they required a real-time cryptocurrency price tracker that had a vast and constantly expanding database and was precise. CoinAPI was able to integrate a cryptocurrency atmosphere into the MarketDraft system, which enables users to simulate buying cryptocurrency and watching their portfolio expand like a real investor. This was made possible by utilizing the real-world information offered by CoinAPI.“CoinAPI was the best choice for us. The fact that CoinAPI is not isolated to one exchange (thus have Binance, Coinbase, etc) where we would be able to choose cryptos to have on our platform was appealing. The trust and reliability found in your brand were also important to us.""How CoinAPI solved MarketDraft's challengesGet access to cryptocurrency price data with API for cryptocurrency simulation tools CoinAPI proved to be the ideal solution for MarketDraft, addressing their challenges in several ways. By leveraging CoinAPI's API for cryptocurrency simulation tools, MarketDraft gained access to reliable and comprehensive cryptocurrency price data. This resolved their challenge of lacking real-time data, as CoinAPI's API provided them with up-to-date and accurate pricing information.Furthermore, CoinAPI's platform offered MarketDraft the convenience of having multiple pricing options consolidated in one place. With access to a wide range of pricing data from various sources, MarketDraft could provide their users with a comprehensive and realistic simulation experience.Work with reliable API for cryptocurrency simulation toolsWhen it comes to cryptocurrency, it's important to rely on credible sources of information. CoinAPI is a reliable source that offers developers a variety of APIs to access market, pricing, and network information with ease. Moreover, CoinAPI simplifies the process of integrating data into your own projects. It's crucial to stay updated with the latest changes in the industry of digital currency and only use trustworthy sources of information.Providing multiple price sourcesCoinAPI played a crucial role in addressing MarketDraft's challenge of lacking multiple price sources. By partnering with CoinAPI, MarketDraft gained access to a vast array of price sources for cryptocurrencies. CoinAPI allows MarketDraft to integrate multiple price sources into their simulation tool.This integration of multiple price sources enhanced the accuracy and reliability of MarketDraft's simulation platform. Users could benefit from a wider range of pricing data, enabling them to make more informed decisions and simulate various market scenarios with greater precision.Thanks to CoinAPI's provision of multiple price sources, MarketDraft was able to offer their users a more comprehensive and realistic simulation experience, reflecting the dynamic nature of cryptocurrency markets.“The crypto market is a relatively new market for people to invest and as such not many are willing to jump into trading in a highly volatile and speculative marketplace, really who could blame them? CoinAPI allows us to create a fun and safe environment for people to see how their money could work for them, what to look for when investing, and hopefully give them some confidence when doing so.Since adding cryptocurrency to our platform we've seen a small improvement in our retention rate. It has allowed us to be more flexible when creating contests compared to stocks which have strict timetables and closed dates. Due to this flexibility, we've been able to keep our users engaged on the platform for longer periods of time and constantly throughout the day. "" said Chris A. Tovmasian, CEO of MarketDraftCrypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/case-study/powering-cryptocurrency-simulation-tools-with-coinapi-marketdata)"
646,case study how cci30 uses real time data api for cryptocurrency tracking,"case study how cci30 uses real time data api for cryptocurrency tracking. Leveraging Real-Time Data API for Effective Cryptocurrency Tracking: A Deep Dive into CCi30's Strategy - CoinAPI.ioIntroducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inHow does the CCi30 usea real-time data API to track cryptocurrenciesLearn How the CCi30 Crypto Index Utilizes Real-Time Data API for Cryptocurrency TrackingCoinAPI has provided CCi30 with access to real-time crypto data API. As a result, they can now run their indexes in live time to track the dynamics of various cryptocurrencies. This covers a wide range of cryptocurrencies and allows for a more accurate analysis.“CoinAPI is a reliable real-time data feed provider for the indexes. The price/quality ratio is the best on the market. Being able to offer a real-time index gives us a great advantage, which is the primary benefit of partnering with CoinAPI” Carlo Scevola, CEO of CCi30.Understanding the Power of Crypto Indices: Insights from Carlo Scevola, CEO of CCi30Cryptocurrency indices are crucial in monitoring the market dynamics of financial sectors in today's industry. Despite their vulnerability to significant cost unpredictability and administrative vulnerability, digital currencies have captivated the attention of a vast number of investors, making them impossible to ignore. In summary, digital currencies are here to stay, and indices allow products related to digital currencies to launch and enhance their presence within the conventional financial ecosystem.Crypto indices offer a simple way to get an overview of what is happening in the crypto markets. This saves time for crypto brokers and analysts who would otherwise need to search the entire market. For investors, crypto indices provide a way to diversify risk by investing in multiple cryptocurrencies at once. While mutual funds and ETFs are not yet prevalent in the crypto world, some people believe that investing in an index is a good alternative, allowing traders to diversify their portfolios with just one investment. Indices also make the cryptocurrency market more accessible and improve liquidity. The existence of indices can make non-crypto investors more inclined to take the crypto world seriously.CCi30, in order to be successful, needs access to reliable data, which is why they decided to use CoinAPI. To learn more about how the CCi30 crypto index tracks cryptocurrencies using real-time crypto data API, we spoke with Carlo Scevola, CEO of CCi30.The ChallengeThe cryptocurrency market is unique and constantly changing, with new digital coins emerging and fading away on a daily basis. As cryptocurrencies have become a tradable asset class, there has been a growing need for an index product. CCi30 sought a reliable real-time data stream at a reasonable cost, and CoinAPI delivered just that - a high-quality data feed that is always accessible. In addition, CoinAPI offers customizable APIs that enable users to maximize their use of cryptocurrency data.“It was imperative to have access to dependable real-time data related to the index at a reasonable cost. This was essential for us because we wanted to provide our users with an accurate reflection of crypto market trends. Additionally, we were looking for a straightforward way to incorporate this information into our service without having to program it ourselves or hire someone else who would require a long period of instruction before being able to commence work.” Carlo said.Here are the challenges CCi30 facedLack of real-time crypto data APICCi30 faced a major challenge of procuring a market data API that could provide instantaneous access to both historical and real-time data on cryptocurrencies. They needed a streaming market data solution that could offer more than just minute or daily bar data.    Spending a lot of time collecting data from various resources CCi30 was struggling to gather necessary information from multiple sources, which was proving to be a time-consuming process. They were on the lookout for a partner who could join them quickly and provide all the required data. The task of combining data from different free sources, gathering it from various locations, and then making sense of it was challenging and frustrating. It would take a considerable amount of time to accomplish this task.Poor data qualityThe market data API's poor quality is a major issue for businesses that require trustworthy data to make informed decisions. These APIs are frequently unreliable, providing incorrect pricing information or outdated data. Furthermore, they may be slow or have other technical problems that make them difficult to work with. This all contributes to an unpleasant and unreliable market data API experience.The solutionCCi30 had to find a dependable real-time data feed to stay current in their ever-evolving industry. This was a crucial aspect of their index that was previously missing. With the help of CoinAPI’s real-time data feed, CCi30 can now provide their users with a precise index that is refreshed daily.“To be successful in the index industry nowadays, it is essential to have the capacity to analyze a huge amount of data from numerous sources and to calculate it accurately and quickly. Fortunately, there has been improvement in this area, and CCi30 is one of the major actors in the indices arena. Through CoinAPI, CCI30 can access thorough prices and market understanding of a wide selection of assets.” Carlo said.The CCi30 Cryptocurrency Indices were established to bring transparency to the constantly evolving market in a systematic manner. To create the indices, CCi30 Indices collected pricing information from CoinAPI, a dependable market data API provider known for its advanced services in the crypto asset industry.CCi30 opted to use CoinAPI's feed due to its reliability and affordability. CoinAPI provides price data for over 16,000 digital assets, including many cryptocurrencies such as Bitcoin, Ethereum, Tether, and Litecoin. The pricing data is sourced from more than 300 digital exchanges, which include the largest and most trusted ones, providing a significant portion of market liquidity.Results“CoinAPI's up-to-date data feed has helped us to make the cryptocurrency market more transparent by supplying accurate details about the behavior of individual digital currencies and the influence they have on other tokens in this ever-changing landscape.”CoinAPI provides real-time data to track the dynamics of various cryptocurrencies, making it easily accessible for software developers, analysts, and fintech-driven companies. They cover a wide range of cryptocurrencies and aim to create the most user-friendly APIs for their clients.CCi30 aggregates real-time price data from major exchanges on almost all distributed-ledger cryptocurrencies, making it the most comprehensive and accurate pricing benchmark in the industry. It tracks the 30 largest cryptocurrencies by market cap, excluding stablecoins such as Monero, Bitcoin Cash, and Ethereum Classic.Launched in 2017, CCi30 was created by a team of fund managers, mathematicians, and quantitative analysts. It is the most prominent index for cryptocurrencies and includes other tokens such as Litecoin, Ripple (CRP), and Monero in its index methodology.Here are the results CCi30 saw using CoinAPIReal-time stream of crypto data APIThe CCi30 team can now efficiently retrieve all financial reference, real-time pricing, historical pricing, and indices data related to trading currencies, currency derivative instruments, short-term money market instruments, and interest rate derivatives. This faster access to data enables the team to cover all aspects of trading comprehensively.     A reliable source of dataIt can be quite challenging to come across dependable data. Luckily, there is a trustworthy CoinAPI provider available. CoinAPI is a reputable source that offers both real-time and historical data to the financial markets.Have deep coverage of the cryptocurrency spaceThere are many indices available that measure the performance of the leading cryptocurrencies. However, these indices typically only cover a small number of coins and do not offer the same level of diversification as investing in a portfolio of stocks. This can make it difficult for investors to achieve meaningful diversification. Furthermore, these indices do not necessarily provide an accurate representation of the entire cryptocurrency market. Fortunately, the CCi30 index, powered by CoinAPI, is able to offer a broader range of assets for investors to consider.Reduce the volatility of trading prices and present a more stable price pointThe prices in the trading market can be highly unstable and uncertain. However, with CCi30 as your partner, the volatility is mitigated, and a more consistent price point is presented. This ensures that the risk of significant price swings is minimized, and the downside risk is reduced since the maximum price that a buyer or seller is willing to offer is already predetermined.“We are absolutely delighted to be partnered with CoinAPI. It is a firm that is driven by engineering and is highly focused on creating products. Their primary target is to offer the simplest and most convenient APIs to software developers and tech-savvy investors. If you are looking for real-time information sourced directly from all marketplaces, then CoinAPI is the way to go.“Crypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/case-study/how-cci30-uses-real-time-data-api-for-cryptocurrency-tracking)"
647,cdn cgi l email protection#ef9c9a9f9f809d9baf8c8086818e9f86c18680,"cdn cgi l email protection#ef9c9a9f9f809d9baf8c8086818e9f86c18680.   Email Protection | Cloudflare    Please enable cookies. Email Protection You are unable to access this email address coinapi.io  The website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address. If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.  How does Cloudflare protect email addresses on website from spammers? Can I sign up for Cloudflare?   Cloudflare Ray ID: 8aad2a66cb66b392 •  Your IP:  Click to reveal 80.94.26.147 • Performance & security by Cloudflare   (https://coinapi.io/cdn-cgi/l/email-protection#ef9c9a9f9f809d9baf8c8086818e9f86c18680)"
648,case study satstreet coinapi partnership success through real time crypto market data,"case study satstreet coinapi partnership success through real time crypto market data. Learn how the Satstreet trading desk takes advantage of CoinAPI's real-time data to make informed trading decisions - CoinAPI.ioIntroducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inReal-time cryptocurrency datafor trading deskLearn How Satstreet Takes Advantage of CoinAPI's Real-Time Datato make informed trading decisionsTo translate complex cryptocurrency data into comprehensible insights for both their clients and internal purposes, Satstreet required a trustworthy real-time crypto price source. This, in turn, allows them to operate their trading desk efficiently, providing top-notch trade execution services and reliable reporting.CoinAPI is a trustworthy provider of real-time data feeds for the trading desk. The main advantage of working with CoinAPI, according to Satstreet Co-Founder Mike Nasser, is the ability to provide real-time pricing pre-quote to our customers.”About SatstreetSatstreet is a leading player in the rapidly growing digital asset industry. It offers its customers a highly reliable and liquid over-the-counter (OTC) trading desk, which provides real-time pricing data to help them make quick and informed decisions. Satstreet relies on CoinAPI to ensure that its pricing information is always up-to-date and accurate, saving its customers the hassle of manually searching for the latest prices. At Satstreet, customers can trust that they are getting a personalized trading experience that caters to their unique needs. The OTC trading desk provides access to large liquidity pools that can handle big orders, as well as real-time pricing and market information, and dedicated customer service. Additionally, customers can enjoy competitive rates for their orders, enabling them to trade at the most favorable prices. This makes Satstreet a safe and cost-effective option for customers who need to complete large orders without causing market disruption.To ensure the best possible trade execution services and reliable reporting, Satstreet relies on a live pricing service that aggregates and serves data through an API. That's why the company decided to use CoinAPI. To learn more about how Satstreet uses CoinAPI to turn complex aggregated crypto data into accessible information for its customers, we spoke with Satstreet co-founder Mike Nasser.The challengeSatstreet was in search of a trustworthy and efficient provider for pricing services that could help their clients trade with confidence. They found the perfect solution in CoinAPI's live pricing and charting library. By integrating with Satstreet, CoinAPI was able to deliver live prices pre-quote, which boosted Satstreet's clients' confidence in trading with tight pricing.'From the start, our mission was to make the purchase, exchange, and sale of cryptocurrencies simpler and more reliable for Canadians. We have been devoted to servicing premium customers (accredited and approved investors) which has enabled us to offer an extraordinary 'white-glove service' that can't be found in Canada. In the past two years, we have grown rapidly, largely due to the importance we place on client service which has consequently resulted in mostly organic growth through word-of-mouth.' explains Satstreet Co-Founder Mike Nasser.Here are the challenges Satstreet faced:Lack of reliable price dataSatstreet faced a major challenge in finding a market data API that could provide them with real-time and historical data for cryptocurrencies instantly. They needed access to streaming market data, rather than being restricted to pulling data in minute or daily intervals.Lack of real-time crypto pricesSatstreet had to find a data provider to fill the gap in real-time cryptocurrency data that they were facing. This data was essential for them to integrate it into their charting system without any hassle.Work with the corporate entity and corporate-grade solutionSatstreet was looking for a corporate partner who shares their vision and objectives. The goal was to strengthen their services by receiving the required resources and support to improve their solutions. A partnership with a corporate entity ensures that their solutions are trustworthy, secure, and regularly updated, which creates trust among their customers.Lack of multiple price sourcesThe challenge of lacking multiple price sources was a significant one for Satstreet. They needed a dependable source capable of providing comprehensive cryptocurrency data from numerous exchanges, all consolidated into one accessible location.The solutionSatstreet needed a reliable stream of real-time crypto prices to keep pace with the constantly changing market. This was an essential requirement for their trading desk, which was not available earlier. By having access to live costs, their customers can trade with confidence, knowing that they are getting accurate prices.“We decided to link up with CoinAPI as it offered the most dependable and secure service, providing assurance that our customers would always have the market information they required. Comparing offerings from multiple sources was also made possible. With the help of CoinAPI's feature of a live pricing provider with a charting library, we were able to offer live pricing pre-quote to our clients.” explains Satstreet Co-Founder Mike Nasser. Satstreet faced challenges in obtaining reliable pricing data and integrating it with their charting library. However, these issues were resolved when they began using CoinAPI's Market Data API. By integrating with CoinAPI, Satstreet was able to offer their clients live pricing pre-quotes, while also benefiting from CoinAPI's exceptional service reliability and stability. Utilizing multiple pricing sources allowed Satstreet to compare prices across the market. As a result, Satstreet's clients can now trade with confidence, knowing they are receiving accurate and competitive pricing. Today, Satstreet relies on CoinAPI's live pricing data to make informed trading decisions and to provide their customers with the best possible service.Results“CoinAPI has been instrumental in helping Satstreet streamline its operations by providing reliable and accurate price data. We, at Satstreet, strive to always provide best-in-class services for an important part of the market which we believe is greatly underserved.”Satstreet decided to partner with CoinAPI due to its exceptional service reliability and stability. With CoinAPI, Satstreet can confidently assure its clients that they will receive the necessary price data. By aggregating multiple pricing sources, Satstreet can provide its clients with comprehensive market comparisons, thereby getting more confidence in their decision-making abilities. If you're looking for a white-glove service, Satstreet is the perfect solution. With its dedicated account representative, low fees, and competitive trading prices, Satstreet is an excellent choice for anyone looking to make a large trade.Here's how CoinAPI solved Satstreet's challengesReal-time crypto pricesThe Satstreet team can cover all financial references, real-time pricing, historical pricing, and data relating to the trading of currencies with faster access to data. Live prices provide Satstreet clients with the confidence to trade with tight pricing.A reliable, enterprise-grade source of dataCoinAPI is known for its dedication to safeguarding sensitive information through the use of cutting-edge encryption technology. This attribute is crucial for the smooth functioning of Satstreet. Furthermore, CoinAPI is effortless to use and can be easily incorporated into existing systems, making it an invaluable asset to Satstreet. Satstreet's experience demonstrates the numerous advantages of incorporating a service like CoinAPI. By collaborating with the right data provider, businesses can optimize their operations, enhance data security, and ultimately attain superior outcomes.Making service stableHaving a stable API connection is crucial in ensuring a seamless user experience. It guarantees reliable communication between different components and systems. Satstreet, through the use of CoinAPI service, ensures that their trading desk runs smoothly and efficiently. A stable and reliable API also assures users that their data is secure and their applications are always running seamlessly.Making integration quick and simpleAPI integration can offer your customers powerful new features and functionality. However, it's crucial to get it done quickly to avoid any delays. Waiting for days or weeks to get your API integrated is not ideal. Fortunately, with the right tools and strategies, you can get it done without any hassle. An API integration platform can be a game-changer in this regard. It provides the necessary infrastructure and tools to integrate APIs with ease and speed up the process.CoinAPI's user-friendly interface and well-documented API make the setup quick and uncomplicated, ensuring businesses can effortlessly incorporate its vast capabilities into their existing systems, enhancing their operations without any undue hassle.Providing multiple price sourcesA crypto market data API offers access to various price sources, enabling you to make informed decisions. By utilizing the API, you can monitor the progress of different cryptocurrencies over time, which allows you to make better decisions based on past data. With all this data at your disposal, you have the necessary tools to take full advantage of the crypto market.“We are absolutely delighted to be partnered with CoinAPI. It is a company that is driven by engineering and is highly focused on creating products. Their primary target is to offer the simplest and most convenient APIs to software developers and tech-savvy investors. If you are looking for real-time information sourced directly from all exchanges, then CoinAPI is the way to go.“Crypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/case-study/satstreet-coinapi-partnership-success-through-real-time-crypto-market-data)"
649,blog crypto tax api discover the future of crypto tax management with coinapi,"blog crypto tax api discover the future of crypto tax management with coinapi. CoinAPI Blog - Crypto tax API: Discover the future of crypto tax management with CoinAPI Introducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inMarket Data APICrypto tax API: Discover the future of crypto tax management with CoinAPIAs tax return deadlines approach in various countries worldwide, traders and investors are struggling with the complexities of reporting their cryptocurrency investments. This challenge is universal, going from the United States to Japan, and from Germany to Brazil, reflecting the global nature of the cryptocurrency market. Each country, with its unique regulatory framework, presents a distinct set of complexities, especially regarding the diverse trading platforms and the nuanced tax benefits associated with cryptocurrencies. In the cryptocurrency landscape, a robust crypto tax API becomes an invaluable tool, offering solutions to navigate these challenges efficiently. Revolutionizing crypto tax reporting with crypto tax API CoinAPI has risen to meet these challenges on a global scale. Our mission is to simplify the process of crypto tax reporting, transforming it from a daunting task into a more manageable and efficient experience. In the global cryptocurrency landscape, countries like the United States, Japan, South Korea, Germany, Canada, Australia, Switzerland, Singapore, India, Brazil, and Argentina are key players. Each of these nations contributes to the ever-evolving story of crypto adoption, facing unique challenges in terms of regulation and market dynamics. In this context, CoinAPI stands as a crucial resource, offering comprehensive solutions to navigate the complexities of the digital currency world in various tax jurisdictions. Investors and traders worldwide need an easy way to handle crypto taxes due to complex transactions and changing tax rules. CoinAPI offers simple tools for crypto tax calculations and financial reporting. We’re helping users confidently comply with regulations in a constantly evolving financial world. Global trends and predictions As we delve into the complexities of crypto tax reporting across diverse jurisdictions, it’s crucial to recognize the broader context of blockchain technology’s impact on the global economy. The World Economic Forum’s prediction that 10% of global GDP will be stored on blockchain-related technology by 2025 underscores the escalating significance of this innovation. This trend is not just reshaping the financial sector but is also poised to transform a myriad of industries, signaling a pivotal shift towards more transparent, efficient, and secure global economic practices. In this rapidly evolving landscape, CoinAPI’s mission to simplify crypto tax reporting becomes even more pertinent, offering a solution that aligns with these global economic shifts. Challenge Investors and financial professionals are encountering a unique set of challenges that come with this digital asset class. The adoption of cryptocurrency is not just about tapping into a new form of investment; it involves navigating a complex landscape that is still evolving in terms of technology, regulation, and market dynamics. These challenges include: The adoption of cryptocurrency brings with it a set of unique challenges: Complex crypto transactions and the necessity of accurate cost basis tracking. We are handling large volumes of transaction data while ensuring data accuracy. Integrating crypto transactions with existing accounting systems. Navigating the diverse tax treatments of different crypto assets. Overcoming the lack of real-time data from the cryptocurrency market. The time-consuming process of collecting data from various sources. We are dealing with poor data quality. How CoinAPI’s crypto tax API addresses these challenges Get transaction details CoinAPI consolidates transaction details from various sources, offering synchronized, real-time data for up-to-date tax reports and accurate accounting records. One API for all balances and trades CoinAPI provides a unified interface for accessing customer balances and trade data across multiple exchanges. This standardization saves developer hours and reduces complexity. Real-time and historical market data Access critical data and analytics for tax calculation in real time. CoinAPI allows tracking of multiple cryptocurrencies’ prices in one place, enhancing data accessibility and usefulness. High-quality, normalized data CoinAPI offers structured data from multiple exchanges, facilitating simplified integration and processing. This includes high-frequency exchange rates, order books, and unique low-frequency data. Reduced development cost & time Developers can easily implement CoinAPI, avoiding the hassle of dealing with multiple APIs. CoinAPI supports REST, WebSocket, and FIX protocols for faster integration. Stable price point CoinAPI minimizes the risk of large price fluctuations, offering advanced pricing algorithms and data aggregation techniques for price stability. Easy integration CoinAPI ensures easy integration with third-party trading systems, providing quick response times and allowing users to focus on their solution development. Full API maintenance With CoinAPI’s SDK infrastructure, users avoid the burden of maintaining their API. The platform offers tools for seamless integration and unlocks new features and functionality. Market data and competitive edge In the face of these global trends, accurate and timely market data becomes paramount, especially in the context of the varied regulatory frameworks of countries leading in crypto adoption. Access to both live and historical exchange rates is critical for precise tax reporting and financial analysis in the volatile cryptocurrency market. CoinAPI addresses this need by providing real-time and historical market data, enhancing the ability of businesses and accountants to offer accurate and compliant financial advice. This capability not only aids in navigating the current complexities of crypto taxation but also equips businesses with the tools to remain competitive and adaptive in a market characterized by rapid growth and change. CoinAPI is a comprehensive solution for the crypto tax and accounting challenges traders and businesses face today. By offering a range of tools and services designed to simplify and streamline the tax reporting process, CoinAPI not only saves time and resources but also ensures accuracy and compliance with evolving regulations. Ready to simplify your crypto tax calculations and financial reporting? Explore CoinAPI’s suite of tools and services and take the first step towards efficient and compliant crypto accounting. Visit our website to learn more and get started. Stay up-to-date with the latest CoinApi News.SendI Agree to CoinApi’s Privacy Policy*Recent ArticlesMarket Data APIThe power of crypto API on DEXDecentralized Exchanges (DEXs) are peer-to-peer marketplaces without a central authority, growing in popularity with examples like Uniswap...EMS Trading APIHow CoinAPI crypto trading API enhances crypto trading efficiency?Today, crypto traders face challenges like limited liquidity causing slippage and difficulty in executing large orders without affecting...NewsCoinAPI January update: NaaS, new website, Market Data API on QuickNode marketplaceCoinAPI January update features some exciting info about our future developments such as NaaS...Market Data APIHow does CoinAPI maximize the effectiveness of crypto trading bots?Crypto trading bots are essential for trading on the dynamic cryptocurrency market. They need the best data for the best outcomes, though....Market Data APICrypto tax API: Discover the future of crypto tax management with CoinAPIAs tax return deadlines approach in various countries worldwide, traders and investors are struggling with the complexities of reporting...CryptoTickA guide to using Cryptotick for crypto historical dataDid you know that CoinAPI, beyond API products, offers a streamlined solution for those seeking easy access to historical crypto data?...Market Data APIThe future of trading: How cryptocurrency API is changing the gameAs we move from 2023 into 2024, CoinAPI cements its role as a global leader in the cryptocurrency API space. With the launch of our EMS...EMS Trading APICoinAPI update: Cryptocurrency trading API and new integrationsThis month, CoinAPI is proud to launch our cryptocurrency trading API, alongside key partnerships with Quicknode. We’ve also expanded...Market Data APICoinAPI’s cryptocurrency data API guideThis guide is your comprehensive resource for understanding the various CoinAPI’s Cryptocurrency data API offerings available for...Bring the power of crypto API to your business in minutesStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsEMS Trading APIMarket Data APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/blog/crypto-tax-api-discover-the-future-of-crypto-tax-management-with-coinapi)"
650,use case coinapi for crypto investments,"use case coinapi for crypto investments. Navigate Crypto Investments with Ease Using CoinAPI - CoinAPI.ioIntroducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inInvestmentDesign investment opportunitiesthat your customers will enjoyStart nowThe challenge in performing crypto investment lies in navigating the volatility and uncertainty of the cryptocurrency market while making informed investment decisions to maximize returns.Cryptocurrencies are revolutionizing the digital banking sector. Nowadays, API sets can be used to control the banking and payments industry. CoinAPI has put together a comprehensive package that combines compliance, banking, and crypto. This solution has been created using the experience gained from building compliant payments in both conventional fintech and crypto start-ups.What are the pain points when performing crypto investments?High market volatilityLack of reliable and accurate informationUnstructured, incomplete, and inaccurate dataLimited access to comprehensive market dataLack of transparency in pricing and liquidityDifficulty in identifying profitable investment opportunitiesComplexity of managing multiple cryptocurrency exchanges and walletsSpending a lot of time collecting data from various resourcesPoor data qualityIntegration with plenty of APIs to get a full overview of the marketHow CoinAPI could solve this issue?CoinAPI Products Used:Get access to real-time and historical crypto market dataConsolidate multiple cryptocurrencies' prices into a single platform, eliminating the need to gather data from various sourcesGet access to real-time and historical data for over 900 cryptocurrencies, including aggregated quotes, snapshots, and trading information since 2015Get access to reliable and accurate data for informed investment decisionsComprehensive data coverageReduced volatility and stable price pointMinimized risk of large price fluctuationsAccess to accurate and up-to-date pricing data, order books, and liquidity informationInformed decision-making based on transparent market conditionsHigh-quality, normalized dataEasy access to structured data from multiple exchangesAccess to high-frequency exchange rates and order booksAvailability of unique low-frequency data not offered by other providersAccess to both historical and latest raw data for comprehensive analysis and insightsPortfolio management and trackingCoinAPI facilitates efficient portfolio management with balance tracking, performance analysis, and reporting toolsSeamless trading and transaction processing enabled by CoinAPI's infrastructure and integration capabilitiesAdvanced features such as data filtering, aggregation, and transformation for in-depth analysis and valuable insights for investment decisionsReduced development cost & timeDevelopers can easily implement APIs without dealing with multiple APIs themselvesCoinAPI enables seamless app integration for an efficient stackCoinAPI offers REST, WebSocket, and FIX protocols to facilitate faster integration between API and usersIntegrate easilyEasy integration with third-party trading systemsTick-by-tick data for making day-to-day transactions and paymentsInteract with crypto data easily to focus on your own solution developmentNo need to hire a developer and pay for their maintenance and updates for the integration module, saving time and expensesFull API maintenanceLeverage CoinAPI's SDK infrastructure to avoid the burden of maintaining your own API for your applicationCoinAPI enables easy synchronization of your crypto wallet with the cryptocurrency ecosystem through API integrationAPI integration is crucial for unlocking new features and functionality, and CoinAPI provides the necessary infrastructure and tools for seamless integrationSecurity and complianceMarket data APIs use encrypted protocols for data protectionCoinAPI prioritizes data security and complianceCoinAPI provides a trusted and secure environment for crypto investmentsAPI stability and reliabilityCoinAPI's robust infrastructure ensures stable and reliable API performance, minimizing downtime and interruptionsCoinAPI's infrastructure is designed to handle high volumes of data and requests, providing fast and reliable access to market dataCoinAPI's dedicated technical support team promptly assists with any API stability issues, ensuring a smooth user experienceInnovation and continuous improvementCoinAPI introduces new features to enhance the investment experience and stay updated with the crypto marketCoinAPI utilizes advanced technologies for advanced features and staying ahead in the crypto marketCoinAPI listens to user feedback and industry trends to implement innovative solutions for an improved user experienceWhy developers love us?We empower developers with tools and resources that streamline their workflow, allowing them to create innovative solutions faster and more efficiently.Unified EcosystemAccess a cohesive platform where all components work seamlessly together, eliminating compatibility headaches and streamlining your development process.Plug-and-Play SolutionsLeverage our modular architecture to rapidly build and customize your applications. Mix and match components to create tailored solutions effortlessly.Developer-Centric DesignExperience a platform built by developers, for developers. Our intuitive design and developer-first approach make complex tasks feel effortless.Uninterrupted ServiceOur distributed infrastructure have 100ms-level failover time. Standard SLA included to all subscriptions. Experience seamless operations, regardless of local disruptions.Our core valuesWhy Choose CoinAPI?Comprehensive API SuiteAccess our full range of financial data through a single, unified API ecosystem, simplifying integration and reducing development time.Tailored Data SolutionsFrom unique order types to proprietary exchange data, we support custom requests that go beyond standard offerings, adapting to your specific integration requirements.Real-time & interconnectsWe operate on proprietary infrastructure, ensuring the lowest latency and highest uptime in the industry. Our global network using UDP na BGP protocols to exchange data directly between our data centers and Customers.Real-time and historical data from all exchangesSeamlessly access both real-time and historical data from over 300 data sources in same format, enabling thorough market analysis and informed decision-making.Mike NasserSatstreet Trading Desk“CoinAPI is the perfect solution for real-time information sourced from all exchanges, offering user-friendly APIs for developers and investors.“Read Case Study →Chris A. TovmasianMarketDraft“CoinAPI empowers businesses with seamless integration, high precision, and reliable data, transforming them into crypto-ready powerhouses for effortless cryptocurrency tracking.“Read Case Study →Colin MackieBitcoin.tax“CoinAPI has been a very reliable service and provides us with exactly the data we need. We have been a customer since 2019 and expect to continue using the services in the future.“Read Case Study →Crypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/use-case/coinapi-for-crypto-investments)"
651,blog 3 statistical arbitrage strategies in crypto,"blog 3 statistical arbitrage strategies in crypto. CoinAPI Blog - 3 Core Statistical Arbitrage Strategies in Crypto Introducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inEMS Trading API3 Core Statistical Arbitrage Strategies in CryptoStatistical arbitrage, often abbreviated as “stat arb,” is a quantitative trading strategy that seeks to exploit inefficiencies or temporary mispricings between related financial instruments, like crypto. Think of it as the brainy investor’s way to cash in on the stock market’s temporary hiccups. It’s all about spotting a pair of financial buddies that normally stroll down Wall Street hand in hand but have suddenly decided to take a break from each other. Statistical arbitrage is the strategy of betting they’ll make up soon, buying the lag-behind friend while selling off the one sprinting ahead, and pocketing some cash when they realign. Where does statistical arbitrage come from? This clever technique isn’t new. It traces back to the rash days of the 1980s and 90s, when the whiz kids of Wall Street, like those at Morgan Stanley, started playing matchmaker with stocks using some pretty basic stats. As tech got a turbo boost, so did statistical arbitrage strategies. By the time Y2K (year 2000 software problem) bugs were scaring everyone, hedge funds and prop trading desks were already schooling computers to do the heavy lifting – think machine learning and AI – to spot these mismatches even faster. We entered the age of high-frequency trading (HFT), and suddenly, these opportunities could be snapped up in microseconds. Algorithms took the wheel, making trades faster than you can click ‘buy’. Why is statistical arbitrage a big deal in crypto? Now, fast forward to today’s wild west of cryptocurrency markets. Why is statistical arbitrage a hot ticket here? Market discrepancies: With hundreds of crypto exchanges around the globe, price differences are as common as cat memes on the internet, ripe for stat arb to step in. Volatility: Cryptos experience more ups and downs than a yo-yo in the hands of a skilled performer, opening up frequent chances for quick gains through stat arb. Regulation light: The crypto world isn’t bogged down by heavy rules, giving traders the freedom to employ a wide array of strategies. Non-stop trading: Crypto never sleeps! This 24/7 market means you can run statistical arbitrage strategies non-stop, boosting potential profits. Tech-ready: The crypto arena is a techie’s playground, making it perfect for data-heavy stat arb strategies that rely on sophisticated tech like machine learning and super-fast algorithms. Diverse opportunities: From Bitcoin to the newest altcoin, the variety of tradable crypto assets is staggering, providing a rich field for statistical arbitrage explorations. Statistical arbitrage – core concepts and strategies Here’s a bit of theory on what arbitrage statistics is all about. Mean reversion theory At its heart, mean reversion is the idea that prices and returns eventually head back to their long-term average. This concept is pivotal in statistical arbitrage, supporting the strategy of betting on price corrections when they stray too far from historical norms. Market inefficiencies and mispricings Sometimes the market gets it wrong. Whether due to emotional trading, limited liquidity, or incomplete information, these mispricings create perfect opportunities for stat arb traders to step in. They use statistical tools to spot these pricing errors and capitalize on them as they correct. Inter- and intra-exchange approaches Inter-exchange arbitrage involves exploiting price differences for the same asset across different exchanges. Traders buy the asset at a lower price on one exchange and simultaneously sell it at a higher price on another, capturing the spread as profit. Intra-exchange arbitrage occurs within a single exchange, leveraging price discrepancies between related trading pairs or instruments. Opportunity for arbitrage: 200 USD in price difference between exchanges Mathematical underpinnings Here are some statistical concepts essential for arbitrage trading: Correlation and cointegration: These measure how strongly assets move together. High correlation and cointegration indicate a reliable relationship over time, ideal for pair trading. Regression analysis and spread modeling: Useful for understanding relationships and pricing disparities between assets. For example, modeling the price relationship between two stocks helps identify when one is over or undervalued relative to the other. Z-score in Trading: This statistic measures how far a value is from the mean in standard deviation units. In trading, Z-scores help determine how unusual a price spread is compared to historical patterns. A high Z-score might suggest selling, while a low score could be a buying signal. Traders often set Z-score thresholds (like ±2) to automate entry and exit decisions. Statistical arbitrage application in cryptocurrency markets Implementing stat arb to cryptocurrency markets often requires sophisticated algorithms, robust computing power, and real-time data that enables traders to execute trades rapidly and accurately. And, let’s face it, by “traders” we mean “bots”. Here’s what it takes to successfully execute arbitrage statistic strategies. Essential data tools and sources Spotting arbitrage opportunities in crypto requires sharp tools and precise data. Services like CoinAPI’s Market Data API deliver real-time and historical data from multiple exchanges (more than 350!) right at your fingertips, covering everything from price fluctuations to order book details. Other resources might be invaluable for cross-verifying data and ensuring you’re not missing a beat. Check all crypto pairs available through the Market Data API Effective data utilization While real-time price monitoring might be essential for keeping up with the fast-paced crypto markets across various exchanges, historical data analysis helps you understand market behavior over time. Backtest your arbitrage strategy against historical data to measure effectiveness, identify the typical frequency and duration of arbitrage opportunities, and evaluate potential returns against associated risks. Also, order book insights are critical for evaluating liquidity and potential slippage before you make a move. Systematic approach to selecting crypto pairs When choosing crypto pairs, pay attention to these 3 factors: Correlation analysis: Start by identifying pairs that historically move in tandem. These are your best bets for mean reversion strategies. Volume and liquidity evaluation: Make sure these pairs have enough volume and liquidity for efficient trading without excessive slippage. Spread monitoring: Keep a constant watch on the price spreads between these pairs or across exchanges to pinpoint profitable opportunities. Successful statistical arbitrage strategies in crypto Here are some effective arbitrage strategies with examples: Pair trading in crypto Pair trading in the cryptocurrency market involves selecting two cryptocurrencies that have historically shown a strong correlation or cointegration, such as Bitcoin (BTC) and Ethereum (ETH), or Litecoin (LTC) and Ripple (XRP). These pairs are chosen because their prices tend to move in tandem over time, providing opportunities for statistical arbitrage when their price relationship diverges. Example: Strategy formulation: Identify the historical relationship between BTC and ETH using statistical techniques like correlation and cointegration tests. Develop a trading rule based on the Z-score of the price spread between BTC and ETH. For instance, if the Z-score exceeds +2, short BTC and long ETH, anticipating the spread will revert to the mean. Conversely, if the Z-score falls below -2, long BTC and short ETH (investors who sell short believe the price of the stock will decrease in value and, opposite, long securities are expected to rise). Backtesting results: Collect historical price data for BTC and ETH. Calculate the Z-score of the price spread and simulate trades based on the established trading rules. Analyze the backtest results to evaluate the strategy’s profitability, considering factors like average return per trade, win rate, and maximum drawdown. Risk Management Techniques: Position sizing – this technique involves calculating the appropriate trade size based on the entry price, stop-loss level, available capital, and the percentage of an account you’re willing to risk. Stop-loss orders: Implement stop-loss orders to limit losses if the price spread moves against the trade beyond a predefined threshold. Diversification: Trade multiple pairs to spread risk across different assets and reduce the impact of adverse movements in any single pair. Triangular arbitrage Triangular arbitrage involves exploiting price discrepancies between three different cryptocurrency pairs. The concept relies on the fact that the exchange rates between three currencies should be consistent; otherwise, arbitrage opportunities arise. Opportunity for arbitrage: 400 USD in price difference (200 USD between exchange A and B and another 200 USD for the spread between ETH and BTC equivalent to USD) Example: execution on multiple exchanges Step-by-step execution: Identify three cryptocurrency (or cryptocurrency/fiat) pairs that involve three different assets, e.g., BTC/ETH, ETH/USD, and BTC/USD. Calculate the implied exchange rate for BTC/ETH using the rates from ETH/USD and BTC/USD pairs. If the actual exchange rate for BTC/ETH deviates from the implied rate, execute the following trades: Convert BTC to ETH using the BTC/ETH pair. Convert ETH to USD using the ETH/USD pair. Convert USD back to BTC using the BTC/USD pair. The sequence of these trades should result in a net profit if the initial deviation is significant enough. Analyzing Profitability and Risks Profitability analysis: Calculate the net profit by considering the transaction fees and slippage associated with each trade. Ensure the price discrepancies are sufficient to cover these costs. Risk analysis: Execution risk: The nature of crypto markets can lead to sudden changes in prices before all trades are executed, potentially erasing profits. Liquidity risk: Insufficient liquidity in any of the pairs can lead to partial fills or slippage, impacting profitability. Transaction costs: High transaction fees on some exchanges can significantly reduce the net profit from arbitrage trades. Market making with statistical arbitrage Market making involves continuously providing buy and sell orders for a cryptocurrency, thereby offering liquidity to the market. By capturing the bid-ask spread, market makers earn profits. When combined with statistical arbitrage, market making can become more strategic by leveraging statistical models to predict price movements and optimize order placements. Example: algorithm development and Implementation Algorithm development: Develop a market-making algorithm that places buy and sell orders at a certain percentage above and below the current market price. Integrate statistical models to predict short-term price movements and adjust order placements dynamically to capture favorable spreads. Implementation: Deploy the algorithm on a trading platform with access to multiple exchanges. Continuously monitor market conditions and adjust the algorithm parameters to maintain optimal performance. Performance metrics and risk control Performance metrics: Spread capture: Measure the average bid-ask spread captured by the algorithm. Trade Volume: Track the total trading volume facilitated by the market-making algorithm. Profitability: Calculate the net profit after accounting for transaction fees and other costs. Risk control: Inventory management: Implement rules to manage the inventory of cryptocurrencies to avoid overexposure to market movements. Volatility adjustments: Adjust the spread and order sizes based on market volatility to reduce the risk of adverse price movements. Continuous monitoring: Set up real-time monitoring and alerts to quickly respond to market changes or unexpected behaviors in the algorithm. Summary Statistical arbitrage is all about using clever math to find and exploit those little pricing hiccups in the market, betting that prices will snap back to normal. However, it’s worth remembering that in the world of stat arb, good risk management isn’t just a nice-to-have; it’s your lifeline. It’s about being smart with how much you bet (position sizing), setting limits to cut losses (stop-loss orders), and keeping a constant eye on how your strategies are performing. This is especially key when it comes to crypto markets, where prices can swing wildly at the drop of a hat. Connect and trade on multiple crypto exchanges using advanced trading techniques like statistical arbitrage. Choose EMS Trading API! Stay up-to-date with the latest CoinApi News.SendI Agree to CoinApi’s Privacy Policy*Recent ArticlesEMS Trading APIHow to improve your high-frequency trading strategies in crypto?In crypto trading, High-Frequency Trading operates similarly to traditional markets but with some unique characteristics due to the...Market Data APIWhy is aggregated crypto data better?Some time ago we wrote blog posts about crypto data filtering and crypto data standardization – now it’s time to tell you more about...Market Data APIWhat are Meme Coins? Top 25 Funniest Examples and PricesLet’s have some fun! Because after all, who said that investing and entertainment shouldn’t come in pairs?...Market Data APICrypto data filteringAt 9:00 AM, with a cup of coffee in hand, you sit at your desk ready to trade crypto. Faced with an overwhelming amount of market data and...EMS Trading API3 Core Statistical Arbitrage Strategies in CryptoStatistical arbitrage, often abbreviated as “stat arb,” is a quantitative trading strategy that seeks to exploit inefficiencies...EMS Trading APIEMS Trading API vs Single Exchange Access – What’s better?Choosing the right trading tools is crucial for optimizing your strategy. This blog post delves into Execution Management Systems (EMS),...Market Data APIThe Role of Latency in Cryptocurrency DataLatency impacts everything from trade execution speed to market data accuracy in the cryptocurrency world. Learn why low latency is...Market Data APICryptocurrency Exchange RatesIn the world of cryptocurrencies, exchange rates are dynamic and influenced by various market factors. This post explains the concept of...Market Data APIHow to get Historical and Real-Time Crypto Data From Multiple Exchanges?With the rise of cryptocurrencies, there is a growing question: how to get historical and real-time crypto data from multiple...Crypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/blog/3-statistical-arbitrage-strategies-in-crypto)"
652,blog how to get historical and real time crypto data,"blog how to get historical and real time crypto data. CoinAPI Blog - How to get Historical and Real-Time Crypto Data From Multiple Exchanges? Introducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inMarket Data APIHow to get Historical and Real-Time Crypto Data From Multiple Exchanges?To say that the cryptocurrency market is booming is like saying nothing at all. Just ten years ago, there were around 50 different cryptocurrencies in circulation – now there are more than 13,000. Users can trade them on more than 600 crypto exchanges (according to Forbes). Only the largest of these, Binance, reached 170 million registered users worldwide in 2023. The Binance’s daily trading volume is $22,573,063,014. The total market cap of all cryptocurrencies is $1.32 trillion and still growing. Why does crypto data collection matter? It’s therefore not surprising that more and more digital products related to cryptocurrency trading are emerging on the market: wallets, crypto trading bots, portfolio management solutions, crypto tax and accounting solutions, and more. Businesses want to provide their users with the most accurate insights so they can make informed decisions. Cryptocurrency markets have also become the subject of academic research and analysis. Hence, the question arises: how to get historical and real-time crypto data from multiple exchanges? As is usually the case, the answer depends on your needs and the purpose of the data collection. Data availability in crypto Some data is easiest to find at the source, i.e. directly on a cryptocurrency exchange. So, if you need the current price of Bitcoin on Kraken, all you need to do is check directly on the platform. That was the easy part. The tricky one starts when you need aggregated historical data. It gets even more challenging when you explore multiple exchanges for different cryptocurrencies. And yet another challenge is sourcing crypto data in real time. How to get historical and real-time crypto data? There are three well-established methods to acquire complex crypto data. Below we outline which one to choose under the particular circumstances. Method 1: Official APIs Most cryptocurrency trading platforms provide official APIs, which give access to historical and current data about prices, trading volumes, and other relevant details. These APIs are typically well-documented and offer a dependable method for directly obtaining data from the exchanges. Advantages include direct access to both real-time and historical data, often available for free up to a specified usage limit, and are both reliable and secure. However, this solution is only sufficient if you need data from one or at most two exchanges. Well, and if you have your software, and developer skills. Integration with an exchange and its maintenance can be complex and demands a lot of engineering hours. Moreover, rate limits can restrict the amount of data you can fetch at once. And there is one more point to consider. By obtaining data from several exchanges, there is a risk that the data will be non-standardized, i.e. difficult to compare. Read more: Crypto data standardization Pros of official apis Historical data Real-time data Helpful documentation Security Cons of official apis Long integration time High integration costs Non-standardized data Method 2: Flat files This solution is most often chosen by universities and analysts who don’t want to integrate via APIs. Flat files are a type of structured data file that groups certain relevant historical information and stores it in CSV format. This is the easiest way to get the data, as you simply enter what specific information you need and what period it should be from. You then proceed to payment and receive the file. An example of a tool that provides flat files is Cryptotick. It allows you to access tick-by-tick data, which is essential for backtesting trading strategies and understanding past market conditions. Pros of flat files Quick and easy No need for integration No need for developer hours Well-organized data Wide array of data types Cons of flat files No real-time data Method 3: Market Data API In method one, we described connecting to exchanges via APIs, which is time-consuming when integrating with several platforms. Fortunately, you can use Market Data API instead. It’s a platform from a third-party provider like CoinAPI that‘s already connected to hundreds of crypto exchanges. To access them all at once, you only need one API connection! Read the full guide on CoinAPI’s cryptocurrency data API Market Data API offers historical and real-time data from multiple exchanges. It provides quotes, trades, indexes, order books, and the ability to track many cryptocurrencies’ prices in one place. The data is standardized, which means it’s in a consistent format across different exchanges, making it easier to use and analyze. Another advantage is that you don’t have to spend developer hours on integration and maintaining connections. CoinAPI connects to exchanges via REST APIs, Websockets or the FIX protocol, regardless of which one the exchange supports. It’s also responsible for high-level maintenance and ensuring a minimum latency in the transfer of real-time data. Pros of flat files Easy integration Access to multiple crypto exchanges Historical data Real-time data Helpful documentation Data standardization Cons of flat files Choosing an unproven provider may result in downtime and risk of data breaches Obtaining crypto data without specific software Even if you don’t have any specific software, you can still access an API connection. You can use simple tools like cURL or Postman, which are used to send requests to an API and receive responses. These tools are simple and don’t require any specific software development skills. With cURL, you can send a request directly from your command line. Here’s a basic example of how you might use cURL to send a request to our API: curl -H ""X-CoinAPI-Key: YOUR_API_KEY"" https://rest.coinapi.io/v1/exchangerate/BTC/USD In this example, replace “YOUR_API_KEY” with your actual API key. This request would return the current exchange rate between Bitcoin and US dollars. If you prefer a graphical interface, Postman is a great tool. You can input the URL, headers, and other information about your request, and it will display the response for you. Remember, to use our API, you’ll need an API key, which you can get for free. Summary Collecting historical and real-time crypto data can be a complex task due to the vast number of sources and the dynamic nature of the data. However, CoinAPI provides efficient solutions for both in the form of flat files and API. Check again the pros and cons of each solution and choose the right one for you. And if you need assistance in making your decision, we are happy to help – contact us. Stay up-to-date with the latest CoinApi News.SendI Agree to CoinApi’s Privacy Policy*Recent ArticlesEMS Trading APIHow to improve your high-frequency trading strategies in crypto?In crypto trading, High-Frequency Trading operates similarly to traditional markets but with some unique characteristics due to the...Market Data APIWhy is aggregated crypto data better?Some time ago we wrote blog posts about crypto data filtering and crypto data standardization – now it’s time to tell you more about...Market Data APIWhat are Meme Coins? Top 25 Funniest Examples and PricesLet’s have some fun! Because after all, who said that investing and entertainment shouldn’t come in pairs?...Market Data APICrypto data filteringAt 9:00 AM, with a cup of coffee in hand, you sit at your desk ready to trade crypto. Faced with an overwhelming amount of market data and...EMS Trading API3 Core Statistical Arbitrage Strategies in CryptoStatistical arbitrage, often abbreviated as “stat arb,” is a quantitative trading strategy that seeks to exploit inefficiencies...EMS Trading APIEMS Trading API vs Single Exchange Access – What’s better?Choosing the right trading tools is crucial for optimizing your strategy. This blog post delves into Execution Management Systems (EMS),...Market Data APIThe Role of Latency in Cryptocurrency DataLatency impacts everything from trade execution speed to market data accuracy in the cryptocurrency world. Learn why low latency is...Market Data APICryptocurrency Exchange RatesIn the world of cryptocurrencies, exchange rates are dynamic and influenced by various market factors. This post explains the concept of...Market Data APIHow to get Historical and Real-Time Crypto Data From Multiple Exchanges?With the rise of cryptocurrencies, there is a growing question: how to get historical and real-time crypto data from multiple...Crypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/blog/how-to-get-historical-and-real-time-crypto-data)"
653,blog why is aggregated crypto data better,"blog why is aggregated crypto data better. CoinAPI Blog - Why is aggregated crypto data better? Introducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inMarket Data APIWhy is aggregated crypto data better?Some time ago we wrote blog posts about crypto data filtering and crypto data standardization – now it’s time to tell you more about crypto data aggregation. A great process that allows traders to have a better overview of the crypto market and make even better decisions and trades. What is it exactly? What are its pros and cons? How’s CoinAPI’s Market Data API dealing with it? Let’s dig into it! What is data aggregation? It’s gathering and combining data from different sources to create a comprehensive dataset. This technique is crucial in analyzing large amounts of data, providing a clear and easy-to-understand overview that can be used for decision-making and reporting. How does data aggregation work? It starts with gathering data from various sources, such as databases and APIs. Then, this data is cleaned to make sure it’s accurate and consistent, and any errors or duplicates are removed (we talked about it while discussing data filtering and standardization). After that, the data from different sources is combined into one dataset, standardized for easy analysis, and summarized to provide valuable insights. Why is aggregated data better than single-source data? Makes analysis easier: Summarized data helps identify trends, patterns, and anomalies across many data sources = it’s less likely to be false. Improves decision-making: Aggregated data provides a complete view, aiding informed decisions. It allows you to see the overview of the whole market. A single data source could give out wrong data. Using aggregated data is safer for most. Enhances reporting: Aggregated data is perfect for reports and dashboards, giving stakeholders a clear overview of key metrics. Increases efficiency: Managing a single, consolidated dataset is more efficient than dealing with multiple disparate sources. Crypto data aggregation In cryptocurrency trading, data aggregation involves collecting and standardizing data from various exchanges. This is vital for traders and investors who rely on precise and comprehensive data to make informed decisions. Let us show you how is crypto data aggregated using our Market Data API as an example. CoinAPI’s Market Data API aggregation process 1. Data Collection: Our Market Data API connects to multiple cryptocurrency exchanges to collect market data. The raw market data is continuously ingested, including trades, quotes, and order book updates, from these exchanges in real time. 2. Data Normalization: The API converts raw data into a single, standardized format. This involves mapping different data structures and terminologies to a common schema. Then it removes inconsistencies, duplicates, or errors to ensure accuracy and reliability. 3. Timestamp Alignment: Market Data API aligns timestamps from different exchanges to a common time standard (e.g., UTC) for accurate comparison and aggregation. 4. Data Aggregation: The API computes aggregated metrics like average prices and total volumes. After that, it generates Open, High, Low, Close, and Volume (OHLCV) data for different time intervals. Some of the data types our Market Data API provides are: -Trades: Individual transactions on the exchange. -Order Books: Current buy and sell orders. -OHLCV: Data showing the open, high, low, and close prices, and volume for a given period. -Exchange Rates: Rates between different asset pairs. 5. Data Storage: We store aggregated and normalized data in a structured database for efficient retrieval. We don’t forget about historical data which is maintained as a comprehensive historical database to support backtesting and analysis. 6. Data Distribution: Market Data API provides access to aggregated data through various API endpoints (RESTful, WebSocket, FIX). We offer real-time streaming of market data for live updates, as well. 💡 Batch Downloads: Our Market Data API allows batch downloads of historical data for extensive analysis. 7. Quality Assurance: We constantly monitor data collection and aggregation processes to ensure data quality. Of course, we implemented robust error handling and recovery mechanisms to prevent any issues. Pros and cons of data aggregation Pros Consistency: Aggregating data from multiple sources and normalizing it ensures consistency and reliability. Error reduction: Data cleaning processes remove inconsistencies, duplicates, and errors, leading to higher-quality data. Wide coverage: Aggregating data from various exchanges provides a more comprehensive view of the market, capturing a broader range of trading activities. Detailed insights: High-resolution data (e.g., tick-by-tick) offers detailed insights into market trends and behaviors. Time-saving: Aggregated data saves users the time and effort required to collect and process data from multiple sources. Simplified integration: Standardized data formats and protocols make it easier to integrate aggregated data into existing systems and workflows. Custom metrics: Users can define custom aggregation metrics and time intervals, allowing for tailored analysis and insights. Historical data: Access to comprehensive historical data supports backtesting, trend analysis, and other research activities. Live data: Real-time streaming of aggregated data ensures that users have access to the most up-to-date market information. Immediate action: Real-time data enables immediate decision-making and action, which is crucial for trading and other time-sensitive applications. Cons Data integration: Aggregating data from multiple sources can be complex, requiring sophisticated data integration and normalization processes. Technical challenges: Ensuring data quality, consistency, and synchronization across different sources can be technically challenging. Processing time: The process of aggregating and normalizing data can introduce some latency, which may affect the timeliness of the data. Real-time constraints: While real-time streaming is available, the initial aggregation process may still introduce slight delays. Infrastructure: Maintaining the infrastructure required for data aggregation, storage, and distribution can be costly. Subscription fees: Accessing high-quality aggregated data from providers like CoinAPI may involve subscription fees. Volume: Aggregating data from multiple sources can result in large volumes of data, which may be overwhelming for some users. Filtering: Users may need to implement filtering mechanisms to extract relevant information from the aggregated data. Reliability: Users are dependent on the reliability and accuracy of the data provided by the aggregation service. Vendor lock-in: Switching providers can be challenging due to differences in data formats, protocols, and integration processes. Learn more about our Market Data API’s features and benefits on our website or simply have a short call with our sales team! Stay up-to-date with the latest CoinApi News.SendI Agree to CoinApi’s Privacy Policy*Recent ArticlesEMS Trading APIHow to improve your high-frequency trading strategies in crypto?In crypto trading, High-Frequency Trading operates similarly to traditional markets but with some unique characteristics due to the...Market Data APIWhy is aggregated crypto data better?Some time ago we wrote blog posts about crypto data filtering and crypto data standardization – now it’s time to tell you more about...Market Data APIWhat are Meme Coins? Top 25 Funniest Examples and PricesLet’s have some fun! Because after all, who said that investing and entertainment shouldn’t come in pairs?...Market Data APICrypto data filteringAt 9:00 AM, with a cup of coffee in hand, you sit at your desk ready to trade crypto. Faced with an overwhelming amount of market data and...EMS Trading API3 Core Statistical Arbitrage Strategies in CryptoStatistical arbitrage, often abbreviated as “stat arb,” is a quantitative trading strategy that seeks to exploit inefficiencies...EMS Trading APIEMS Trading API vs Single Exchange Access – What’s better?Choosing the right trading tools is crucial for optimizing your strategy. This blog post delves into Execution Management Systems (EMS),...Market Data APIThe Role of Latency in Cryptocurrency DataLatency impacts everything from trade execution speed to market data accuracy in the cryptocurrency world. Learn why low latency is...Market Data APICryptocurrency Exchange RatesIn the world of cryptocurrencies, exchange rates are dynamic and influenced by various market factors. This post explains the concept of...Market Data APIHow to get Historical and Real-Time Crypto Data From Multiple Exchanges?With the rise of cryptocurrencies, there is a growing question: how to get historical and real-time crypto data from multiple...Crypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/blog/why-is-aggregated-crypto-data-better)"
654,case study coinapi crypto tax calculation bitcoin tax,"case study coinapi crypto tax calculation bitcoin tax. Exploring the Crucial Role of CoinAPI in Streamlining Crypto Tax Calculations and Enhancing Data Accuracy for Bitcoin.tax - CoinAPI.ioIntroducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inCoinAPI powers crypto tax calculation serviceLearn How Bitcoin.tax Utilizes the Crypto Tax APIto Power Their Crypto Tax Calculation ServiceAbout Bitcoin.taxBitcoin.tax, formerly known as BitcoinTaxes, was established in 2014 as the pioneer cryptocurrency income and tax calculation service. It gained popularity among the growing crypto population who wanted to ensure that they were filing their tax returns accurately. In addition to serving individual users, the platform also caters to tax professionals and firms who offer crypto tax services to their clients using its software. We recently spoke to Colin Mackie, the CEO of Bitcoin.tax, to understand why integrating with a crypto tax API is crucial for running accurate crypto tax calculations.""CoinAPI does what a good crypto API is supposed to do: quickly and easily provide live data on any cryptocurrency and the trading volume of each of them. We use CoinAPI to power our tax calculation,""explains Bitcoin.tax CEO Colin MackieThe Importance of Cryptocurrency Tax Software and CoinAPI IntegrationCrypto taxes are gaining significance among investors and traders due to the growing popularity of cryptocurrencies. It has become essential for anyone involved in the cryptocurrency market to understand crypto taxes, especially with the rise of Bitcoin, Ethereum, and other digital currencies. Although crypto taxes can be complicated, they can be managed with the right software. The emergence of digital currency has sparked an interesting debate among investors and governments worldwide regarding how crypto taxes should be handled. As more people invest in digital currency, the need to properly calculate taxes has become increasingly important.Calculating taxes related to cryptocurrencies is a complex process, and different countries have different regulations. Hence, cryptocurrency tax experts are in high demand to help investors manage their crypto tax-related obligations. Bitcoin.tax is one such company that provides such services, and we recently interviewed its CEO Colin Mackie. He explained why integration with CoinAPI is crucial for tax and accounting companies.""Individuals trading in digital currencies are required to pay taxes, and for this to be done efficiently, they need software that can precisely calculate their capital gains and losses. Crypto tax software streamlines this process, easily integrating with various crypto exchanges and wallets and rapidly producing tax reports. Bitcoin.tax unquestionably stands out as the most useful tax tool for digital currencies. It not only monitors crypto portfolios but also creates accurate tax reports, offering compatibility with numerous wallets and exchanges. Moreover, Bitcoin.tax is user-friendly, making it a suitable choice for both novice and seasoned traders,"" stated Colin Mackie, the CEO of Bitcoin.tax.The challengeBitcoin.tax requires precise spot and historical pricing details from various cryptocurrency markets for different exchanges to calculate taxes accurately. For this, they need extensive and accurate pricing information to generate the correct values for filing taxes. CoinAPI offers historical price data gathered from commonly used exchanges and a real-time feed of trades occurring on those exchanges. By linking with the API, Bitcoin.tax can identify taxable transactions, calculate gains, losses, and income to create multiple crypto tax reports, which can help investors in filing with their country's tax agencies quickly and efficiently.""Our partnership with CoinAPI is focused on delivering the most dependable historical and current cryptocurrency data for tax computation. Given the different regulations in each jurisdiction, preparing tax filings can be demanding, particularly when calculating profits from trading cryptocurrencies. Bitcoin.tax facilitates the creation of crypto tax reports for traders effortlessly. This alliance is timely, considering the growth of our user base and their increasing demands for their evolving trading platforms,"" expressed Colin Mackie, CEO and Founder of Bitcoin.tax.Here are the challenges Bitcoin.tax facedNo single source of historical and real-time cryptocurrency price dataTo get the latest updates on cryptocurrency prices, developers and traders need to use a mix of various Crypto APIs and Market Data APIs. There is no one-stop solution for this. Bitcoin.tax was searching for an API that offers access to a range of data sources, including cryptocurrency exchanges.Lack of real-time streamlined dataBusinesses face a significant challenge when it comes to obtaining up-to-date and organized data. As companies shift from conventional data solutions to more rapid and efficient ones, the demand for precise market data is only increasing. Fortunately, there are resources available, such as Crypto API and Market Data API, which can provide a comprehensive array of real-time data to assist businesses in making more informed decisions.The manual process of getting data from multiple sourcesGetting data from multiple sources through a manual process can be quite laborious and time-consuming. It demands a lot of skill and dedication to gather information from various sources. For example, to obtain market data, one needs to explore different websites and market data providers manually to find the relevant data. Similarly, to get crypto tax data, one has to browse through various crypto exchanges to locate the appropriate data.The solutionBitcoin.tax has chosen CoinAPI as its go-to source for cryptocurrency data. This is because CoinAPI has a proven track record of being a reliable source of tax information over the years. By utilizing CoinAPI's API, Bitcoin.tax can now perform tax calculations for all major cryptocurrencies. This market data API allows tax and accounting software to seamlessly communicate with each other, leading to improved efficiency, automation of tasks, and better staff retention. Many tax and accounting firms use up to 40 applications, which can be difficult to manage. CoinAPI simplifies this process.ResultsBitcoin.tax chose to use CoinAPI because of its reliability in providing accurate cryptocurrency data through an API, which is crucial for precise tax calculations.""Having access to a broad spectrum of crypto data is truly transformative,"" shared Colin Mackie. ""The API is incredibly user-friendly, making it effortless to gather the necessary data.""Bitcoin.tax has recently launched a new feature that allows their customers to receive personalized tax calculations according to their individual investments. For this purpose, Bitcoin.tax has relied on CoinAPI, which provides accurate data and has been a reliable and cost-effective choice for the company for quite some time. This has helped them in their investigations of various strategies related to digital currency trading.Here's why Bitcoin.tax uses CoinAPI's API to run crypto tax calculationsGet access to historical and real-time streamlined dataCoinAPI is a platform that offers historical price data from the most frequently used exchanges. Additionally, it provides a live stream of trades occurring on those exchanges.Getting spot time dataCoinAPI is a useful tool that offers spot pricing information for various exchanges. The API is designed to help developers quickly access and integrate market data into their applications. This feature is particularly essential for crypto tax companies that require the latest pricing information to make accurate tax calculations.Saving time in getting dataThe integration of tax and accounting applications through market data APIs can offer multiple benefits to organizations. With up to 40 programs being used, managing them can become a tedious task. However, APIs and integrations can help in avoiding errors and saving time on repetitive data input jobs. This not only enhances the consumer experience but also reduces costs for the organization. By automating tasks and improving staff retention, market data APIs can significantly increase efficiency.Making integration quick and simpleAn API integration platform can help teams to swiftly and effortlessly connect various technologies, and even showcase current integrations as APIs or microservices to introduce new applications to the market. The use of APIs comes with the added benefit of automating previously impossible business processes, as well as creating smooth integrations between cloud services, and generating automated reports and dashboards. APIs also allow you to establish connections between multiple services, thereby closing loops.Providing multiple price sourcesOur Market Data API provides you with real-time and historical market data for a range of asset classes, such as stocks, futures, options, commodities, and currencies. No more dealing with the hassle of manual data entry or juggling multiple sources. This is an ideal solution for tax and accounting software that requires consolidated financial data from a variety of sources. The Market Data API grants you access to the latest market news, price quotes, and other financial data from top exchanges and vendors.The most accurate crypto pricing thanks to access to crypto tax API to run crypto tax calculationIt is crucial for tax and accounting firms to prioritize data quality to avoid costly mistakes and ensure accurate tax calculations. Reliable and consistent crypto market data is essential to determine the correct tax amount based on the information gathered. Therefore, the data used for such calculations must be dependable, relevant, complete, and accurate.Data standardization and mappingTax companies require accurate cryptocurrency names and mappings to ensure data normalization. It is crucial to standardize data collection using CoinAPI to obtain a complete and precise crypto data picture that can be practically applied. CoinAPI has its database, which is also utilized for exchange rate calculations.“By working with CoinAPI, Bitcoin.tax was able to gain access to the desired exchanges' APIs, and once the procedure is complete, all the data is imported automatically with no user input required,” said CEO and founder Bitcoin.tax Colin MackieCrypto API made simple: Try now or speak to our sales teamStart for FreeGet in Touch×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/case-study/coinapi-crypto-tax-calculation-bitcoin-tax)"
655,get free api key?product id=ems api,"get free api key?product id=ems api. Contact with us!Introducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inHow can we help you today?Please select a category from the options below so that we can provide you with prompt assistance.Contact SalesGet Free API KeyContact DetailsName*Email*WebsiteWhat products are you interested in?Tell us about your project or integration.By completing and submitting this form, I agree to receive marketing emails.You can unsubscribe or update your preferences at any time. Your personal data will be processed in accordance with the Privacy Policy.×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/get-free-api-key?product_id=ems-api)"
656,get free api key?product id=market data api,"get free api key?product id=market data api. Contact with us!Introducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inHow can we help you today?Please select a category from the options below so that we can provide you with prompt assistance.Contact SalesGet Free API KeyContact DetailsName*Email*WebsiteWhat products are you interested in?Tell us about your project or integration.By completing and submitting this form, I agree to receive marketing emails.You can unsubscribe or update your preferences at any time. Your personal data will be processed in accordance with the Privacy Policy.×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/get-free-api-key?product_id=market-data-api)"
657,resources download ebook,resources download ebook. ResourcesIntroducing EMS Trading API  EMS Trading API- Unlimited trading accounts in just one place.Learn moreToggle navigationGet a free API keyProductsProductsMarket Data APIInstant crypto dataEMS Trading APIMulti-exchange accessCryptoTickMarket data in flat filesNode as a ServiceBlockchain infrastructureOn-Chain APIMultichain raw dataHelp CenterRequest contact from SalesKnowledge Base and Support PortalAPI DocsPricingSupportCustomersUse casesCrypto walletsAnalitycsCrypto index providersCrypto taxes and accountingInvestmentPortfolio managementCrypto custodyCrypto miningBrokersCrypto bot tradingResearch in universitiesCase studiesShow allEmpowering traders with real-time data Read StoryPowering Cryptocurrency Simulation Tools and Contest Read StoryElevating crypto alerting app capabilities with CoinAPI Read StoryAll Case StudiesBlogLog inResourcesVarious teaching materials will be posted on this website.E-book: 12 things to check when choosing a crypto data providerAre you looking for a cryptocurrency market data provider? Accurate and fast data can be such a game-changer. Check out our e-book on what aspects to consider while choosing a crypto market data provider.Contact DetailsFirst Name*Last Name*Business email*Company website*Job title*×Get a free API keyEMAILNAMETITLECOMPANY SIZE1-1010-5050-250250-10001000+CANCELGET A FREE API KEY ProductsMarket Data APIEMS Trading APICryptoTickNode as a Service (Soon)On-Chain API (Soon)CoinAPI.ioCoinAPI.ioHomeAPI DocsBlogHelpHelpContact salesContact supportHow-to GuidesFAQMetadata ExplorerDevelopersDevelopersHelper LibrariesAPI DocumentationStatus PageLegalLegalTerms of serviceAcceptable Usage PolicyPrivacy PolicyJoin our newsletterCopyright 2023 COINAPI LTD or its affiliates. All rights reserved.(https://coinapi.io/resources/download-ebook)
658,com ,"com .     CryptoTick - Home page       Toggle navigation   Start my order FAQ Register Log in        history data from all      cryptocurrency exchanges      in single place     CryptoTick is a place where you can easily download highest quality history market data from cryptocurrency markets Start my order          key features of our data            Backtesting       ready      We are additionally timestamping data using the same synchronized clock for all exchanges when we first receive it, which gives the possibility of significantly more accurate backtesting of algorithmic trading strategies.  Redundancy Our geographically dispersed infrastructure eliminates data errors and increasing amount of the updates we archive. Data collected from multiple locations is consolidated into the single stream available to download on our site.        Survivorship       bias-free      In early developing markets, avoiding survivorship bias is essential. To prevent the issue, you can download data from closed exchanges or delisted symbols in our platform.        Processed       data      In addition to the raw exchange data, we are providing various types of processed data like OHLCV time series created from active market data (transactions).  selected exchanges   surbitcoin   poloniex   chbtc   chilebit.net   jubi.com   bitstamp   btcchina.com   virwox   bter.com   btctrade.com   kcoin   quadrigacx   gatecoin   gdax   huobi   bitfinex   bitmarket   deribit   kraken   btcx     surbitcoin   poloniex   chbtc   chilebit.net   jubi.com   bitstamp   btcchina.com   virwox   bter.com   btctrade.com   kcoin   quadrigacx   gatecoin   gdax   huobi   bitfinex   bitmarket   deribit   kraken   btcx   our service in numbers  0 TB total history market data available 100 exchanges listed  10 unique assets available 0 market symbols listed    easy 3 step process  Make an order by adding to cart the data you need.  Get instant quote for your order and if everything is correct then make a payment.  Your data is immediately available for download via HTTP.   ready to moveit forward? Let's create an account in our service or view files we have available for download. Start my order Register account  want more? If you are interested in access to the data via the API or real-time streaming protocol like WebSocket or FIX, then take a look at our another product offering available through CoinAPI.io website. CoinAPI.io    × Contact Us   EMAIL  NAME   TITLE  COMPANY SIZE 1-10 10-50 50-250 250-1000 1000+   MESSAGE  CANCEL Send Message    Product Product Features Start my order Account Account Register Log in Help Help FAQ Support center Status Page Legal Legal Customer Agreement Privacy Policy   Copyright 2018 MARMOT SOLUTIONS LTD or its affiliates. All rights reserved.   (https://cryptotick.com/)"
