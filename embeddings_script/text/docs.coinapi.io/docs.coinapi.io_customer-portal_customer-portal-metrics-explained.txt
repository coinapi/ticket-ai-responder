




Metrics tab explained | CoinAPI.io Documentation









Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationAPI limits and billingHow-to guidesMarket Data APIEMS APIFAQCustomer PortalMetrics tab explainedChangelogCustomer PortalMetrics tab explainedOn this pageMetrics tab explainedThis section is dedicated to provide you with a comprehensive understanding of the Metrics Tab within the customer portal.
In this section, we will delve into the various metric parameters,
offering detailed explanations and corresponding descriptions to better understand your historical usage.What is Usage Metric?​Usage metric is record that we log when from our perspective usage of our products occured.
We will name here few examples of the usage:Performing API calls, connections, subscriptions or other operations against our APIReceiving or sending data to us in various forms (flat files, streaming, API calls)Having active API Keys or defined accountsMetric parameters​Each metric can contain any amount of parameters and a single value. Parameters are used to identify where the usage occured.
For example we will use parameters to separate the usage by API Key, Protocol or the Product that was accessed. Below we will list complete list of the parameters that can occur:ParameterDescriptionAPIKeyAPI Key that initiated specific usage metricDataCenterLocation where the usage metric was created (e.g. AWS-EU-EAST-1 etc)DataSourceIdentification of the specific data source which was related to usage metric (e.g. BINANCE, COINBASE, ETHEREUM-MAINNET etc.)OperationNameThe ID which identifies the operations within the ServiceName and ProtocolName, usually Data Type (DTO) otherwise id of the operation like method in the JSON-PRC calls.  (e.g. QUOTES_SYMBOL_HISTORY, eth_call)ProtocolNameThe name of the protocol that was used to generate the metric (e.g. REST, WebSocket, FIX, S3)ServiceNameThe name of the product (e.g. MarketData)Grouping data​In the customer portal you can group the metrics by any parameter to inspect the usage in that dimension.
For example by selecting metric COINAPI_DATA_MSGS_SENT and grouping by ProtocolName you can inspect how much bytes we delivered to your application by every protocol in requested time period.Metrics​MetricParametersUnitValue RepresentationCOINAPI_DATA_MSGS_SENTAPIKey DataSource OperationName ProtocolName ServiceNameEntitiesAmount of the data points/entities/messages sent by the API to the client.COINAPI_DATA_BYTES_SENTAPIKey DataSource OperationName ProtocolName ServiceNameBytesNumber of bytes sent by the API to the client.COINAPI_DATA_MSGS_RECEIVEDAPIKey DataSource OperationName ProtocolName ServiceNameEntitiesAmount of the data points/entities/messages received by the API from the customer.COINAPI_DATA_BYTES_RECEIVEDAPIKey DataSource OperationName ProtocolName ServiceNameBytesNumber of bytes received by the API from the customer.COINAPI_CALLS_RECEIVEDAPIKey DataSource OperationName ProtocolName ServiceNameCallsNumber of API calls received from client by the API.COINAPI_CALLS_SENTAPIKey DataSource OperationName ProtocolName ServiceNameCallsNumber of API calls delivered from API to client.COINAPI_REST_CREDITSAPIKey ServiceNameCreditsNumber of credits used by the API calls. This is useful for the Market Data REST API where each API Call can be counted as more than single credit.COINAPI_REST_APICALLSAPIKey ServiceNameCalls(Deprecated) Number of REST API calls used, regardless of the credits used for each call. Please migrato the COINAPI_CALLS_SENTCOINAPI_APICALLS_COUNTAPIKey OperationName ProtocolName ServiceNameCalls(Deprecated)  Number of API calls used. Please migrate to the COINAPI_CALLS_SENTCOINAPI_APIKEY_DAYSAPIKeyAPI Key DaysCouting the number of the API Keys for the customer. We will report for each API Key active single unit for each day.COINAPI_NAAS_UNITSAPIKey DataSource OperationName ProtocolName ServiceNameCreditsNumber of credits used by the Node As A Service products.COINAPI_JWT_VALIDATION_COUNTAPIKeyOccurencesNumber of occurences where we needed to fully validate JWT Secret.COINAPI_JWT_CACHE_HITAPIKeyOccurencesNumber of occurences where we do not needed to fully validate JWT Secret.COINAPI_CONNECTION_SECONDSAPIKey DataSource OperationName ProtocolName ServiceNameConnection SecondsNumber of connection-seconds where the connection was established with the API.COINAPI_APICALLS_RESPONSE_MILLISECONDSAPIKey DataSource OperationName ProtocolName ServiceNameMillisecondsNumber of milliseconds that we spent generating the response to the API call for the customer.EMSX_EXCHANGE_RUNTIME_SECONDSAPIKey DataSource OperationName ProtocolName ServiceNameAccount SecondsNumber of account-seconds counted from the accounts managed by the EMS API.*_USDSame as for the source metricUSD CentsMetrics that we are using to convert overage or paying metrics to the USD value that will be added to the next invoice. For example the COINAPI_DATA_BYTES_SENT metric can generate USD overages by posting to the COINAPI_DATA_BYTES_SENT_USD metric.By understanding the Metrics Tab and its parameters, you can make informed decisions to utilize your usage better.Was this section helpful?12345PreviousCustomer PortalNextChangelogWhat is Usage Metric?Metric parametersGrouping dataMetricsCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved.



(https://docs.coinapi.io/customer-portal/customer-portal-metrics-explained)