




Market Data API | CoinAPI.io Documentation









Skip to main contentGitHubSearchGet a free API KeyWelcomeAuthenticationHow-to guidesMarket Data APIREST APIWebSocket APIFIX APIS3 APIJSON RPCEMS APIFAQChangelogMarket Data APIOn this pageMarket Data - Starter Guide Welcome to the CoinAPI developer documentation.
This document should contain all the information required to properly implement applications using our API.3 main interfaces can be used to access CoinAPI:APICommunicationDescriptionRESTfulRequest-responseStateless API provides the widest range of data, not capable of streaming, only pooling.WebSocketPublish-subscribeStateful API providing streaming of real-time market data.FIXPublish-subscribeStateful API providing streaming of real-time market data, widely adopted by the finance industry.SDK​Our Software Development Kit (SDK) is available on GitHub at https://github.com/coinapi/coinapi-sdk.
If possible then we are strongly recommending using our tested libraries available on GitHub, rather than creating new ones.
However, if you decide to create your implementation or to change the existing one, then we encourage you to create a Pull Request to our main repository with the proposed changes,
we will able to include your code in our official repository for use by other users, effectively creating collaboration.In the repository, you can find libraries or examples for languages or environments like:PythonRMatlabC#C++.NETJavaRubyGoJavaScriptTypeScriptNode.jsPHPHaskellObjective-CSwiftSecurity​The use of encryption is optional, and the decision to use it is on you. On the encrypted endpoints, we are using protocols that are considered the best security practices.tipYou should assume that we are always providing certificates signed by the Trusted Certification Authority.Standards and conventions​This section represents used standards and conventions across all documents and API's.infoThe keywords "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and "OPTIONAL" in this
document are to be interpreted as described in RFC 2119.Variables naming​All variables are named using the Snake case (or snake_case) naming convention.
This means that words are separated by a single underscore _ character, no spaces are used, and letters are lowercase.Asset codes​ISO 4217 currency code standard is used for fiat money identifications.
Cryptocurrency assets are identified using codes used by the general public or adopted by the majority of exchanges.Exchange codes​Exchange on our platform is identified by the specific exchange API and the matching engine behind it. When the example exchange has multiple separate APIs, e.g., for different products SPOT, OPTIONS, or to cover other regions, we will expose these symbols from these respective APIs on different exchange identifiers.  Below are examples of BINANCE (multiple APIs, multiple regions) and DERIBIT (single API, single region). A full listing of exchanges can be queried using the Market Data REST API.BINANCE Exchange IdsWebsiteDescriptionBINANCEhttps://www.binance.com/BinanceBINANCEDEXhttps://www.binance.org/Binance DEXBINANCEFTShttps://www.binance.com/Binance Futures (USDT/dapi)BINANCEFTSChttps://www.binance.com/Binance Futures (Coin/fapi)BINANCEFTSCUAThttps://www.binance.com/Binance Futures Testnet (Coin/fapi)BINANCEFTSUAThttps://www.binance.com/Binance Futures Testnet (USDT/dapi)BINANCEJEhttps://www.binance.je/Binance JerseyBINANCEJEXhttps://www.jex.com/enBinance JEXBINANCEKRhttps://www.binance.kr/Binance KoreaBINANCEOPTVhttps://www.binance.com/Binance Options Vanilla (vapi)BINANCEOPTVUAThttps://www.binance.com/Binance Options Vanilla Testnet (vapi)BINANCEUAThttps://www.binance.com/Binance TestnetBINANCEUGhttps://www.binance.co.ug/Binance UgandaBINANCEUShttps://www.binance.us/Binance USDERIBIT Exchange IdsWebsiteDescriptionDERIBIThttps://www.deribit.com/DeribitNumbers precision​Numbers in our platform can have a maximum of 19 digits overall, but no more than 9 decimal places. In cases when the number represents aggregate value then we allow 38 digits overall, but still no more than 9 decimal places.Time​For all input and output time values ISO 8601 standard is used.Format specifierDescriptionyyyyThe year is a four-digit number.MMThe month, from 01 through 12.ddThe day of the month, from 01 through 31.HHThe hour, using a 24-hour clock from 00 to 23.mmThe minute, from 00 through 59.ssThe second, from 00 through 59.fffThe milliseconds in a date and time value.fffffffThe ten-millionths of a second in a date and time value.Input time values are parsed using the following formats as far as possible:yyyy-MM-ddTHH:mm:ss.fffffffyyyy-MM-ddTHH:mm:ss.fffyyyy-MM-ddTHH:mm:ssyyyy-MM-ddTHH:mmyyyy-MM-ddTHHyyyy-MM-ddyyyyMMddTHHmmssfffffffyyyyMMddTHHmmssfffyyyyMMddTHHmmssyyyyMMddTHHmmyyyyMMddTHHyyyyMMddinfoWhen time zone information is not supplied, we will assume the UTC zone.Output time values are formatted using the following patterns:yyyy-MM-ddTHH:mm:ss.fffffffZyyyy-MM-ddinfoAll time values we provide are UTC zone. Do not assume otherwise.Was this section helpful?12345PreviousRetrieve and analyze crypto order book data using a cryptocurrency APINextREST APISDKSecurityStandards and conventionsVariables namingAsset codesExchange codesNumbers precisionTimeCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved.




(https://docs.coinapi.io/market-data#time)