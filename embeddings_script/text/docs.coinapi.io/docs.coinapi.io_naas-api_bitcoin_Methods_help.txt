




help | CoinAPI.io Documentation









Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodshelpOn this pagehelpOverview​The 'help' method allows you to list all available commands or get detailed help on a specified command in the CoinAPI Bitcoin API. It is a versatile tool for developers to understand and navigate through the various functionalities of the API.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \  --method POST \  --timeout=0 \  --header 'Content-Type: application/json' \  --header 'accept: application/json' \  --header 'X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY' \  --body-data '{"jsonrpc":"2.0","id":1,"method":"help","params": [ ]}' \   'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, "https://bitcoin-mainnet.node.coinapi.io");request.Headers.Add("accept", "application/json");request.Headers.Add("X-CoinAPI-Key", "73034021-THIS-IS-SAMPLE-KEY");var content = new StringContent("{\"jsonrpc\":\"2.0\",\"id\":1,\"method\":\"help\",\"params\": [ ]}", null, "application/json");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [  'Content-Type' => 'application/json',  'accept' => 'application/json',  'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{  "jsonrpc": "2.0",  "id": 1,  "method": "help",  "params": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import http.clientimport jsonconn = http.client.HTTPSConnection("mainnet-bitcoin.node.coinapi.io")payload = json.dumps({  "jsonrpc": "2.0",  "id": 1,  "method": "help",  "params": []})headers = {  'Content-Type': 'application/json',  'accept': 'application/json',  'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}conn.request("POST", "/", payload, headers)res = conn.getresponse()data = res.read()print(data.decode("utf-8"))var settings = {  "url": "https://bitcoin-mainnet.node.coinapi.io",  "method": "POST",  "timeout": 0,  "headers": {    "Content-Type": "application/json",    "accept": "application/json",    "X-CoinAPI-Key": "73034021-THIS-IS-SAMPLE-KEY"  },  "data": JSON.stringify({    "jsonrpc": "2.0",    "id": 1,    "method": "help",    "params": []  }),};$.ajax(settings).done(function (response) {console.log(response);});package mainimport (  "fmt"  "strings"  "net/http"  "io/ioutil")func main() {  url := "https://bitcoin-mainnet.node.coinapi.io"  method := "POST"  payload := strings.NewReader(`{"jsonrpc":"2.0","id":1,"method":"help","params": [ ]}`)  client := &http.Client {  }  req, err := http.NewRequest(method, url, payload)  if err != nil {    fmt.Println(err)    return  }  req.Header.Add("Content-Type", "application/json")  req.Header.Add("accept", "application/json")  req.Header.Add("X-CoinAPI-Key", "73034021-THIS-IS-SAMPLE-KEY")  res, err := client.Do(req)  if err != nil {    fmt.Println(err)    return  }  defer res.Body.Close()  body, err := ioutil.ReadAll(res.Body)  if err != nil {    fmt.Println(err)    return  }  fmt.Println(string(body))}require "uri"require "json"require "net/http"url = URI("https://bitcoin-mainnet.node.coinapi.io")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request["Content-Type"] = "application/json"request["accept"] = "application/json"request["X-CoinAPI-Key"] = "73034021-THIS-IS-SAMPLE-KEY"request.body = JSON.dump({  "jsonrpc": "2.0",  "id": 1,  "method": "help",  "params": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder()  .build();MediaType mediaType = MediaType.parse("application/json");RequestBody body = RequestBody.create(mediaType, "{\"jsonrpc\":\"2.0\",\"id\":1,\"method\":\"help\",\"params\": [ ]}");Request request = new Request.Builder()  .url("https://bitcoin-mainnet.node.coinapi.io")  .method("POST", body)  .addHeader("Content-Type", "application/json")  .addHeader("accept", "application/json")  .addHeader("X-CoinAPI-Key", "73034021-THIS-IS-SAMPLE-KEY")  .build();Response response = client.newCall(request).execute();Request Parameters​command_name (string, optional): The name of the command to get help on. If omitted, the API will return a list of all available commands. The default value is "all commands".Response​{  "result": "string",  "error": null,  "id": 1}The response will contain a list of all commands or detailed information about the specified command. The exact structure of the response may vary depending on the command queried.Was this section helpful?12345PreviousgettxoutsetinfoNextimportAddressOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved.



(https://docs.coinapi.io/naas-api/bitcoin/Methods/help)