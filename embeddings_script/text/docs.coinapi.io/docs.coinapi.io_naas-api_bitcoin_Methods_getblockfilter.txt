




getblockfilter | CoinAPI.io Documentation









Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodsgetblockfilterOn this pagegetblockfilterOverview​The 'getblockfilter' method allows you to retrieve a BIP 157 content filter for a specific block in the Bitcoin blockchain.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \  --method POST \  --timeout=0 \  --header 'Content-Type: application/json' \  --header 'accept: application/json' \  --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \  --body-data '{"jsonrpc":"2.0","id":1,"method":"getblockfilter","params": [ ]}' \   'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, "https://bitcoin-mainnet.node.coinapi.io");request.Headers.Add("x-coinapi-key", "73034021-THIS-IS-SAMPLE-KEY");request.Headers.Add("accept", "application/json");var content = new StringContent("{\"jsonrpc\":\"2.0\",\"method\":\"getblockfilter\",\"params\": [],\"id\":1}", null, "application/json");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [  'x-coinapi-key' => '73034021-THIS-IS-SAMPLE-KEY',  'Content-Type' => 'application/json',  'accept' => 'application/json'];$body = '{  "jsonrpc": "2.0",  "method": "getblockfilter",  "params": [],  "id": 1}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = "https://bitcoin-mainnet.node.coinapi.io"payload = json.dumps({  "jsonrpc": "2.0",  "method": "getblockfilter",  "params": [],  "id": 1})headers = {  'x-coinapi-key': '73034021-THIS-IS-SAMPLE-KEY',  'Content-Type': 'application/json',  'accept': 'application/json'}response = requests.request("POST", url, headers=headers, data=payload)print(response.text)var settings = {  "url": "https://bitcoin-mainnet.node.coinapi.io",  "method": "POST",  "timeout": 0,  "headers": {    "x-coinapi-key": "4303fb63-adec-42dc-b571-74bc2f2a5167",    "Content-Type": "application/json",    "accept": "application/json"  },  "data": JSON.stringify({    "jsonrpc": "2.0",    "method": "getblockfilter",    "params": [],    "id": 1  }),};$.ajax(settings).done(function (response) {  console.log(response);});package mainimport (  "fmt"  "strings"  "net/http"  "io/ioutil")func main() {  url := "https://bitcoin-mainnet.node.coinapi.io"  method := "POST"  payload := strings.NewReader(`{"jsonrpc":"2.0","method":"getblockfilter","params": [],"id":1}`)  client := &http.Client {  }  req, err := http.NewRequest(method, url, payload)  if err != nil {    fmt.Println(err)    return  }  req.Header.Add("x-coinapi-key", "73034021-THIS-IS-SAMPLE-KEY")  req.Header.Add("Content-Type", "application/json")  req.Header.Add("accept", "application/json")  res, err := client.Do(req)  if err != nil {    fmt.Println(err)    return  }  defer res.Body.Close()  body, err := ioutil.ReadAll(res.Body)  if err != nil {    fmt.Println(err)    return  }  fmt.Println(string(body))}require "uri"require "json"require "net/http"url = URI("https://bitcoin-mainnet.node.coinapi.io")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request["x-coinapi-key"] = "73034021-THIS-IS-SAMPLE-KEY"request["Content-Type"] = "application/json"request["accept"] = "application/json"request.body = JSON.dump({  "jsonrpc": "2.0",  "method": "getblockfilter",  "params": [],  "id": 1})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder().build();MediaType mediaType = MediaType.parse("application/json");RequestBody body = RequestBody.create(mediaType, "{\r\n  \"jsonrpc\": \"2.0\",\r\n  \"id\": \"1\",\r\n  \"method\": \"getblockfilter\",\r\n  \"params\": []\r\n}\r\n");Request request = new Request.Builder()  .url("https://bitcoin-mainnet.node.coinapi.io")  .method("POST", body)  .addHeader("Content-Type", "application/json")  .addHeader("accept", "application/json")  .addHeader("X-CoinAPI-Key", "73034021-THIS-IS-SAMPLE-KEY")  .build();Response response = client.newCall(request).execute();Request Parameters​blockhash (string): The hash of the block for which you want to retrieve the filter.filtertype (string, optional, default=basic): The type name of the filter. You can specify the filter type as per your requirement.Response​{    "result": null,    "error": {        "code": -1,        "message": "getblockfilter \"blockhash\" ( \"filtertype\" )\n\nRetrieve a BIP 157 content filter for a particular block.\n\nArguments:\n1. blockhash     (string, required) The hash of the block\n2. filtertype    (string, optional, default=\"basic\") The type name of the filter\n\nResult:\n{                      (json object)\n  \"filter\" : \"hex\",    (string) the hex-encoded filter data\n  \"header\" : \"hex\"     (string) the hex-encoded filter header\n}\n\nExamples:\n> bitcoin-cli getblockfilter \"00000000c937983704a73af28acdec37b049d214adbda81d7e2a3dd146f6ed09\" \"basic\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\": \"curltest\", \"method\": \"getblockfilter\", \"params\": [\"00000000c937983704a73af28acdec37b049d214adbda81d7e2a3dd146f6ed09\", \"basic\"]}' -H 'content-type: text/plain;' http://127.0.0.1:8332/\n"    },    "id": 1}Was this section helpful?12345PreviousgetblockcountNextgetblockhashOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved.



(https://docs.coinapi.io/naas-api/bitcoin/Methods/getblockfilter)