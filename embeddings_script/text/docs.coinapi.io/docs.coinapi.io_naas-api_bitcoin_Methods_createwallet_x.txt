




createwallet | CoinAPI.io Documentation









Skip to main contentMarket DataEMSFlat FilesNAASGeneralGitHubSearchGet a free API KeyNaaS APIAuthenticationAPI limits and billingBitcoinMethodsabandontransactionabortrescanaddnodeanalyzepsbtbumpfeecombinepsbtcombineRawTransactioncreatemultisigcreatepsbtcreaterawtransactioncreatewalletdecodeRawTransactiondecodePSBTDecodescriptderiveaddressesdisconnectnodedumpprivkeyestimatesmartfeefinalizepsbtfundrawtransactiongenerateBlockgeneratetoaddressgeneratetodescriptorgetaddressesbylabelgetbalancegetbalancesgetbestblockhashgetblockgetblockchaininfogetblockcountgetblockfiltergetblockhashgetblockheadergetblockstatsgetblocktemplategetchaintipsgetchaintxstatsgetconnectioncountgetdifficultygetindexinfogetmemoryinfogetmempoolancestorsgetmempooldescendantsgetmempoolentrygetmempoolinfogetmininginfogetnettotalsgetnetworkhashpsgetnetworkinfogetNewAddressgetnodeaddressesgetpeerinfogetrawchangeaddressgetrawmempoolgetrawtransactiongetreceivedbyaddressgetreceivedbylabelgetrpcinfogettransactiongettxoutgettxoutproofgettxoutsetinfohelpimportAddressimport_descriptorsimportmultiimportprivkeyimportprunedfundsimportpubkeyimportwalletkeypoolrefilllistReceivedByAddresslistaddressgroupingslistbannedlistlabelslistlockunspentlistsinceblocklisttransactionsEthereumBitcoinMethodscreatewalletOn this pagecreatewalletOverview​The 'createwallet' creates and loads a new wallet.Request​shellcsharpphppythonjavascriptgorubyjavawget --no-check-certificate --quiet \  --method POST \  --timeout=0 \  --header 'Content-Type: application/json' \  --header 'accept: application/json' \  --header 'X-CoinAPI-Key: 4303fb63-adec-42dc-b571-74bc2f2a5167' \  --body-data '{"jsonrpc":"2.0","id":1,"method":"createwallet","params": [ ]}' \   'https://bitcoin-mainnet.node.coinapi.io'var client = new HttpClient();var request = new HttpRequestMessage(HttpMethod.Post, "https://bitcoin-mainnet.node.coinapi.io");request.Headers.Add("accept", "application/json");request.Headers.Add("X-CoinAPI-Key", "73034021-THIS-IS-SAMPLE-KEY");var content = new StringContent("{\r\n  \"jsonrpc\": \"1.0\",\r\n  \"id\": \"1\",\r\n  \"method\": \"createwallet\",\r\n  \"params\": []\r\n}\r\n", null, "application/json");request.Content = content;var response = await client.SendAsync(request);response.EnsureSuccessStatusCode();Console.WriteLine(await response.Content.ReadAsStringAsync());<?php$client = new Client();$headers = [  'Content-Type' => 'application/json',  'accept' => 'application/json',  'X-CoinAPI-Key' => '73034021-THIS-IS-SAMPLE-KEY'];$body = '{  "jsonrpc": "1.0",  "id": "1",  "method": "createwallet",  "params": []}';$request = new Request('POST', 'https://bitcoin-mainnet.node.coinapi.io', $headers, $body);$res = $client->sendAsync($request)->wait();echo $res->getBody();?>import requestsimport jsonurl = "https://bitcoin-mainnet.node.coinapi.io"payload = json.dumps({  "jsonrpc": "1.0",  "id": "1",  "method": "createwallet",  "params": []})headers = {  'Content-Type': 'application/json',  'accept': 'application/json',  'X-CoinAPI-Key': '73034021-THIS-IS-SAMPLE-KEY'}response = requests.request("POST", url, headers=headers, data=payload)print(response.text)var settings = {  "url": "https://bitcoin-mainnet.node.coinapi.io",  "method": "POST",  "timeout": 0,  "headers": {    "Content-Type": "application/json",    "accept": "application/json",    "X-CoinAPI-Key": "73034021-THIS-IS-SAMPLE-KEY"  },  "data": JSON.stringify({    "jsonrpc": "1.0",    "id": "1",    "method": "createwallet",    "params": []  }),};$.ajax(settings).done(function (response) {  console.log(response);});package mainimport (  "fmt"  "strings"  "net/http"  "io/ioutil")func main() {url := "https://bitcoin-mainnet.node.coinapi.io"method := "POST"payload := strings.NewReader(`{`+""+`  "jsonrpc": "1.0",`+""+`  "id": "1",`+""+`  "method": "createwallet",`+""+`  "params": []`+""+`}`+""+``)client := &http.Client {}req, err := http.NewRequest(method, url, payload)if err != nil {fmt.Println(err)return}req.Header.Add("Content-Type", "application/json")req.Header.Add("accept", "application/json")req.Header.Add("X-CoinAPI-Key", "73034021-THIS-IS-SAMPLE-KEY")res, err := client.Do(req)if err != nil {fmt.Println(err)return}defer res.Body.Close()body, err := ioutil.ReadAll(res.Body)if err != nil {fmt.Println(err)return}fmt.Println(string(body))}require "uri"require "json"require "net/http"url = URI("https://bitcoin-mainnet.node.coinapi.io")https = Net::HTTP.new(url.host, url.port)https.use_ssl = truerequest = Net::HTTP::Post.new(url)request["Content-Type"] = "application/json"request["accept"] = "application/json"request["X-CoinAPI-Key"] = "73034021-THIS-IS-SAMPLE-KEY"request.body = JSON.dump({  "jsonrpc": "1.0",  "id": "1",  "method": "createwallet",  "params": []})response = https.request(request)puts response.read_bodyOkHttpClient client = new OkHttpClient().newBuilder().build();MediaType mediaType = MediaType.parse("application/json");RequestBody body = RequestBody.create(mediaType, "{\r\n  \"jsonrpc\": \"1.0\",\r\n  \"id\": \"1\",\r\n  \"method\": \"createwallet\",\r\n  \"params\": []\r\n}\r\n");Request request = new Request.Builder()  .url("https://bitcoin-mainnet.node.coinapi.io")  .method("POST", body)  .addHeader("Content-Type", "application/json")  .addHeader("accept", "application/json")  .addHeader("X-CoinAPI-Key", "73034021-THIS-IS-SAMPLE-KEY")  .build();Response response = client.newCall(request).execute();Request Parameters​wallet_name (string, required): The name for the new wallet. If this is a path, the wallet will be created at the path location.disable_private_keys (boolean, optional, default=false): Disable the possibility of private keys (only watchonlys are possible in this mode).blank (boolean, optional, default=false): Create a blank wallet. A blank wallet has no keys or HD seed. One can be set using sethdseed.passphrase (string): Encrypt the wallet with this passphrase.avoid_reuse (boolean, optional, default=false): Keep track of coin reuse, and treat dirty and clean coins differently with privacy considerations in mind.descriptors (boolean, optional, default=false): Create a native descriptor wallet. The wallet will use descriptors internally to handle address creationload_on_startup (boolean, optional, default=null): Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.Response​Was this section helpful?12345PreviouscreaterawtransactionNextdecodeRawTransactionOverviewRequestRequest ParametersResponseCopyright © 2024 COINAPI LTD or its affiliates. All rights reserved.



(https://docs.coinapi.io/naas-api/bitcoin/Methods/createwallet_x)